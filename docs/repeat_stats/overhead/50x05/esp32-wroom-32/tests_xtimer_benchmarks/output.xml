<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:01:46.002" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.562" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:01:46.571" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:01:47.539" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:01:46.561" endtime="20201115 22:01:47.540"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.542" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:01:47.541" endtime="20201115 22:01:47.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.559" endtime="20201115 22:01:47.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.546" endtime="20201115 22:01:47.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.544" endtime="20201115 22:01:47.729"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.742" endtime="20201115 22:01:47.763"></status>
</kw>
<msg timestamp="20201115 22:01:47.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.741" endtime="20201115 22:01:47.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.766" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.765" endtime="20201115 22:01:47.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.770" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:47.767" endtime="20201115 22:01:47.770"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:47.738" endtime="20201115 22:01:47.771"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:47.736" endtime="20201115 22:01:47.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.735" endtime="20201115 22:01:47.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:47.775" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:47.775" endtime="20201115 22:01:47.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.772" endtime="20201115 22:01:47.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.734" endtime="20201115 22:01:47.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.733" endtime="20201115 22:01:47.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.777" endtime="20201115 22:01:47.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.732" endtime="20201115 22:01:47.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.780" endtime="20201115 22:01:47.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.730" endtime="20201115 22:01:47.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.557" endtime="20201115 22:01:47.782"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.788" endtime="20201115 22:01:47.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.787" endtime="20201115 22:01:47.808"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.823" endtime="20201115 22:01:47.841"></status>
</kw>
<msg timestamp="20201115 22:01:47.842" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.820" endtime="20201115 22:01:47.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.844" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.843" endtime="20201115 22:01:47.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.847" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:47.845" endtime="20201115 22:01:47.848"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:47.818" endtime="20201115 22:01:47.848"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:47.815" endtime="20201115 22:01:47.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.814" endtime="20201115 22:01:47.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:47.853" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:47.852" endtime="20201115 22:01:47.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.850" endtime="20201115 22:01:47.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.813" endtime="20201115 22:01:47.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.812" endtime="20201115 22:01:47.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.855" endtime="20201115 22:01:47.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.811" endtime="20201115 22:01:47.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.809" endtime="20201115 22:01:47.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.786" endtime="20201115 22:01:47.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.865" endtime="20201115 22:01:47.877"></status>
</kw>
<msg timestamp="20201115 22:01:47.878" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.863" endtime="20201115 22:01:47.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.880" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.879" endtime="20201115 22:01:47.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.881" endtime="20201115 22:01:47.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.860" endtime="20201115 22:01:47.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.858" endtime="20201115 22:01:47.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.888" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:01:47.887" endtime="20201115 22:01:47.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.890" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:01:47.889" endtime="20201115 22:01:47.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.885" endtime="20201115 22:01:47.891"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:47.783" endtime="20201115 22:01:47.892" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:01:46.111" endtime="20201115 22:01:47.895"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.949" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:01:47.957" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:01:48.962" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:01:47.948" endtime="20201115 22:01:48.964"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.968" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:01:48.966" endtime="20201115 22:01:48.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.947" endtime="20201115 22:01:48.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.973" endtime="20201115 22:01:49.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.972" endtime="20201115 22:01:49.194"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.206" endtime="20201115 22:01:49.227"></status>
</kw>
<msg timestamp="20201115 22:01:49.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.205" endtime="20201115 22:01:49.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.229" endtime="20201115 22:01:49.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.233" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:49.231" endtime="20201115 22:01:49.234"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:49.202" endtime="20201115 22:01:49.234"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:49.200" endtime="20201115 22:01:49.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.199" endtime="20201115 22:01:49.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:49.239" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:49.238" endtime="20201115 22:01:49.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.236" endtime="20201115 22:01:49.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.198" endtime="20201115 22:01:49.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.198" endtime="20201115 22:01:49.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.241" endtime="20201115 22:01:49.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.196" endtime="20201115 22:01:49.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.243" endtime="20201115 22:01:49.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.195" endtime="20201115 22:01:49.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.945" endtime="20201115 22:01:49.246"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.253" endtime="20201115 22:01:49.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.250" endtime="20201115 22:01:49.273"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.285" endtime="20201115 22:01:49.302"></status>
</kw>
<msg timestamp="20201115 22:01:49.303" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.284" endtime="20201115 22:01:49.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.306" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.304" endtime="20201115 22:01:49.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.308" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:49.307" endtime="20201115 22:01:49.309"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:49.281" endtime="20201115 22:01:49.309"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:49.279" endtime="20201115 22:01:49.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.278" endtime="20201115 22:01:49.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:49.314" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:49.313" endtime="20201115 22:01:49.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.311" endtime="20201115 22:01:49.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.277" endtime="20201115 22:01:49.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.276" endtime="20201115 22:01:49.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.316" endtime="20201115 22:01:49.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.275" endtime="20201115 22:01:49.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.273" endtime="20201115 22:01:49.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.249" endtime="20201115 22:01:49.318"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:01:49.321" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.328" endtime="20201115 22:01:49.344"></status>
</kw>
<msg timestamp="20201115 22:01:49.345" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.327" endtime="20201115 22:01:49.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.347" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.346" endtime="20201115 22:01:49.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.348" endtime="20201115 22:01:49.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.324" endtime="20201115 22:01:49.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.323" endtime="20201115 22:01:49.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.357" endtime="20201115 22:01:49.627"></status>
</kw>
<msg timestamp="20201115 22:01:49.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065789681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065795097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.355" endtime="20201115 22:01:49.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065789681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065795097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.630" endtime="20201115 22:01:49.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.635" endtime="20201115 22:01:49.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.353" endtime="20201115 22:01:49.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.351" endtime="20201115 22:01:49.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.641" level="INFO">${RESULT} = [{'time': 0.065795097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415999999994203e-06, 'source_diff': 5.415999999994203e-06}, {'time': 0.065803111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:49.639" endtime="20201115 22:01:49.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.650" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:49.642" endtime="20201115 22:01:49.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.654" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:49.653" endtime="20201115 22:01:49.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.656" level="INFO">VALUE: [5.415999999994203e-06, 4.02800000000314e-06, 3.1529999999918568e-06, 5.2499999999983116e-06, 6.2090000000070145e-06, 5.041999999996771e-06, 3.1530000000057345e-06, 6.0139999999986316e-06, 2.597000000006955e-06, 5.971999999992983e-06, 4.79200000000346e-06, 5.041999999996771e-06, 2.7769999999954775e-06, 4.041999999995771e-06, 6.29200000000496e-06, 2.833000000007635e-06, 2.4589999999963252e-06, 5.347000000002766e-06, 3.5550000000023063e-06, 3.042000000008649e-06, 3.9170000000060545e-06, 4.902000000001072e-06, 5.736000000006181e-06, 3.847000000001266e-06, 4.291999999989082e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.655" endtime="20201115 22:01:49.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.651" endtime="20201115 22:01:49.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.660" endtime="20201115 22:01:49.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.663" endtime="20201115 22:01:49.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.661" endtime="20201115 22:01:49.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.658" endtime="20201115 22:01:49.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.321" endtime="20201115 22:01:49.684"></status>
</kw>
<msg timestamp="20201115 22:01:49.684" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.692" endtime="20201115 22:01:49.706"></status>
</kw>
<msg timestamp="20201115 22:01:49.706" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.690" endtime="20201115 22:01:49.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.708" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.707" endtime="20201115 22:01:49.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.709" endtime="20201115 22:01:49.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.687" endtime="20201115 22:01:49.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.686" endtime="20201115 22:01:49.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.718" endtime="20201115 22:01:49.988"></status>
</kw>
<msg timestamp="20201115 22:01:49.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017683056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.717" endtime="20201115 22:01:49.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017683056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.991" endtime="20201115 22:01:49.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.996" endtime="20201115 22:01:49.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.714" endtime="20201115 22:01:49.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.713" endtime="20201115 22:01:49.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.002" level="INFO">${RESULT} = [{'time': 0.017683056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.017691347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.000" endtime="20201115 22:01:50.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.011" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:50.004" endtime="20201115 22:01:50.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.015" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:50.014" endtime="20201115 22:01:50.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.017" level="INFO">VALUE: [5.222999999998645e-06, 2.4999999999990308e-06, 3.222000000000641e-06, 4.05600000000228e-06, 3.6529999999992957e-06, 3.0419999999982406e-06, 5.290999999997548e-06, 5.486000000002461e-06, 5.236000000002211e-06, 3.167000000001835e-06, 5.444000000000282e-06, 5.694000000000532e-06, 6.276999999998978e-06, 2.4160000000016113e-06, 6.2229999999996455e-06, 3.4730000000003647e-06, 4.541999999999741e-06, 5.457999999999852e-06, 5.11200000000156e-06, 6.042000000001241e-06, 3.916999999999116e-06, 5.055000000000337e-06, 5.305000000000587e-06, 6.055999999997341e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.016" endtime="20201115 22:01:50.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.012" endtime="20201115 22:01:50.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.020" endtime="20201115 22:01:50.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.024" endtime="20201115 22:01:50.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.022" endtime="20201115 22:01:50.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.019" endtime="20201115 22:01:50.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.684" endtime="20201115 22:01:50.044"></status>
</kw>
<msg timestamp="20201115 22:01:50.044" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.052" endtime="20201115 22:01:50.067"></status>
</kw>
<msg timestamp="20201115 22:01:50.068" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.051" endtime="20201115 22:01:50.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.070" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.069" endtime="20201115 22:01:50.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.071" endtime="20201115 22:01:50.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.048" endtime="20201115 22:01:50.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.046" endtime="20201115 22:01:50.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.081" endtime="20201115 22:01:50.349"></status>
</kw>
<msg timestamp="20201115 22:01:50.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017852278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017857306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.079" endtime="20201115 22:01:50.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017852278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017857306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.352" endtime="20201115 22:01:50.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.357" endtime="20201115 22:01:50.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.076" endtime="20201115 22:01:50.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.075" endtime="20201115 22:01:50.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.363" level="INFO">${RESULT} = [{'time': 0.017857306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017865639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.360" endtime="20201115 22:01:50.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.378" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:50.370" endtime="20201115 22:01:50.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.382" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:50.381" endtime="20201115 22:01:50.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.384" level="INFO">VALUE: [5.028000000000671e-06, 4.277999999999921e-06, 5.471999999999422e-06, 5.415999999997673e-06, 6.2229999999996455e-06, 4.040999999999767e-06, 4.222000000001641e-06, 5.417000000000616e-06, 5.055999999999811e-06, 5.042000000000241e-06, 4.917000000000116e-06, 5.221999999999172e-06, 6.0279999999982015e-06, 5.971999999999922e-06, 4.722000000002141e-06, 5.917000000001116e-06, 2.54200000000121e-06, 3.4859999999969915e-06, 6.236999999999215e-06, 4.096999999998047e-06, 4.750000000001281e-06, 5.860999999999367e-06, 3.181000000001405e-06, 2.665999999998392e-06, 4.027999999999671e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.383" endtime="20201115 22:01:50.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.379" endtime="20201115 22:01:50.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.387" endtime="20201115 22:01:50.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.391" endtime="20201115 22:01:50.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.389" endtime="20201115 22:01:50.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.386" endtime="20201115 22:01:50.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.045" endtime="20201115 22:01:50.412"></status>
</kw>
<msg timestamp="20201115 22:01:50.412" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.419" endtime="20201115 22:01:50.434"></status>
</kw>
<msg timestamp="20201115 22:01:50.434" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.418" endtime="20201115 22:01:50.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.437" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.435" endtime="20201115 22:01:50.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.438" endtime="20201115 22:01:50.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.415" endtime="20201115 22:01:50.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.414" endtime="20201115 22:01:50.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.447" endtime="20201115 22:01:50.711"></status>
</kw>
<msg timestamp="20201115 22:01:50.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017355903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01736025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:50.445" endtime="20201115 22:01:50.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017355903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01736025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:50.714" endtime="20201115 22:01:50.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.719" endtime="20201115 22:01:50.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.443" endtime="20201115 22:01:50.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.441" endtime="20201115 22:01:50.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.725" level="INFO">${RESULT} = [{'time': 0.01736025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.017369639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:50.722" endtime="20201115 22:01:50.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.734" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:50.726" endtime="20201115 22:01:50.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.738" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:50.737" endtime="20201115 22:01:50.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.741" level="INFO">VALUE: [4.347000000001766e-06, 6.1529999999983265e-06, 5.569999999999881e-06, 4.291999999999491e-06, 3.222000000000641e-06, 2.790999999998517e-06, 4.707999999999102e-06, 5.041000000000767e-06, 5.361000000002336e-06, 4.846999999998797e-06, 5.971999999999922e-06, 5.902000000002072e-06, 4.165999999999892e-06, 2.55600000000078e-06, 3.6529999999992957e-06, 6.083000000000477e-06, 2.417000000001085e-06, 3.111000000000086e-06, 5.903000000001546e-06, 2.860999999999836e-06, 4.666999999999866e-06, 2.9719999999969215e-06, 5.596999999999547e-06, 5.431000000000186e-06, 2.5139999999986007e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.740" endtime="20201115 22:01:50.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.735" endtime="20201115 22:01:50.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.744" endtime="20201115 22:01:50.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.747" endtime="20201115 22:01:50.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.746" endtime="20201115 22:01:50.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.742" endtime="20201115 22:01:50.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.412" endtime="20201115 22:01:50.768"></status>
</kw>
<msg timestamp="20201115 22:01:50.768" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.776" endtime="20201115 22:01:50.790"></status>
</kw>
<msg timestamp="20201115 22:01:50.791" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.774" endtime="20201115 22:01:50.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.793" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.792" endtime="20201115 22:01:50.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.794" endtime="20201115 22:01:50.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.772" endtime="20201115 22:01:50.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.770" endtime="20201115 22:01:50.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.803" endtime="20201115 22:01:51.068"></status>
</kw>
<msg timestamp="20201115 22:01:51.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0174165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017419833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:50.802" endtime="20201115 22:01:51.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0174165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017419833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:51.071" endtime="20201115 22:01:51.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.077" endtime="20201115 22:01:51.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.799" endtime="20201115 22:01:51.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.797" endtime="20201115 22:01:51.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.083" level="INFO">${RESULT} = [{'time': 0.017419833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.017428875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:51.080" endtime="20201115 22:01:51.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.094" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:51.084" endtime="20201115 22:01:51.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.098" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:51.097" endtime="20201115 22:01:51.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.100" level="INFO">VALUE: [3.3329999999977267e-06, 4.985999999998492e-06, 5.987000000002435e-06, 3.040999999998767e-06, 5.499999999998562e-06, 5.402000000001572e-06, 5.332999999999727e-06, 3.722000000001141e-06, 4.736000000001711e-06, 5.653000000001296e-06, 5.166000000000892e-06, 3.750000000000281e-06, 2.6669999999978655e-06, 4.291000000000017e-06, 5.444000000000282e-06, 5.735999999999242e-06, 3.3480000000002397e-06, 5.723000000002615e-06, 3.500000000000031e-06, 2.667000000001335e-06, 3.0829999999974766e-06, 5.694000000000532e-06, 5.805000000001087e-06, 2.681000000000905e-06, 4.666000000000392e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.099" endtime="20201115 22:01:51.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.094" endtime="20201115 22:01:51.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.103" endtime="20201115 22:01:51.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.106" endtime="20201115 22:01:51.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.105" endtime="20201115 22:01:51.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.102" endtime="20201115 22:01:51.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.769" endtime="20201115 22:01:51.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.319" endtime="20201115 22:01:51.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.132" endtime="20201115 22:01:51.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.130" endtime="20201115 22:01:51.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.129" endtime="20201115 22:01:51.153"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:49.246" endtime="20201115 22:01:51.153" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.161" endtime="20201115 22:01:51.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.160" endtime="20201115 22:01:51.181"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.194" endtime="20201115 22:01:51.211"></status>
</kw>
<msg timestamp="20201115 22:01:51.212" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.193" endtime="20201115 22:01:51.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.214" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.213" endtime="20201115 22:01:51.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.217" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:51.215" endtime="20201115 22:01:51.217"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:51.190" endtime="20201115 22:01:51.218"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:51.187" endtime="20201115 22:01:51.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.186" endtime="20201115 22:01:51.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:51.223" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:51.222" endtime="20201115 22:01:51.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.220" endtime="20201115 22:01:51.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.185" endtime="20201115 22:01:51.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.185" endtime="20201115 22:01:51.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.225" endtime="20201115 22:01:51.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.183" endtime="20201115 22:01:51.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.182" endtime="20201115 22:01:51.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.158" endtime="20201115 22:01:51.227"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:01:51.230" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.239" endtime="20201115 22:01:51.253"></status>
</kw>
<msg timestamp="20201115 22:01:51.254" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.237" endtime="20201115 22:01:51.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.256" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.255" endtime="20201115 22:01:51.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.257" endtime="20201115 22:01:51.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.233" endtime="20201115 22:01:51.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.232" endtime="20201115 22:01:51.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.266" endtime="20201115 22:01:51.556"></status>
</kw>
<msg timestamp="20201115 22:01:51.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066932431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066938639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.265" endtime="20201115 22:01:51.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066932431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066938639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.560" endtime="20201115 22:01:51.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.568" endtime="20201115 22:01:51.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.262" endtime="20201115 22:01:51.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.261" endtime="20201115 22:01:51.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.575" level="INFO">${RESULT} = [{'time': 0.066938639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.207999999993663e-06, 'source_diff': 6.207999999993663e-06}, {'time': 0.066943125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:51.571" endtime="20201115 22:01:51.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.588" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:51.576" endtime="20201115 22:01:51.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.593" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:51.592" endtime="20201115 22:01:51.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.595" level="INFO">VALUE: [6.207999999993663e-06, 1.9030000000114233e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.8470000000131437e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8890000000049145e-06, 1.846999999999266e-06, 1.8889999999910367e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.8890000000049145e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000122835e-06, 1.8890000000049145e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.9029999999975455e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8339999999922307e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.8479999999987395e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.9170000000040543e-06, 1.8340000000061085e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8610000000057747e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.594" endtime="20201115 22:01:51.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.589" endtime="20201115 22:01:51.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.598" endtime="20201115 22:01:51.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.602" endtime="20201115 22:01:51.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.600" endtime="20201115 22:01:51.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.597" endtime="20201115 22:01:51.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.230" endtime="20201115 22:01:51.623"></status>
</kw>
<msg timestamp="20201115 22:01:51.623" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.630" endtime="20201115 22:01:51.646"></status>
</kw>
<msg timestamp="20201115 22:01:51.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.629" endtime="20201115 22:01:51.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.649" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.648" endtime="20201115 22:01:51.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.650" endtime="20201115 22:01:51.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.626" endtime="20201115 22:01:51.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.625" endtime="20201115 22:01:51.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.659" endtime="20201115 22:01:51.948"></status>
</kw>
<msg timestamp="20201115 22:01:51.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018695431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018697347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.658" endtime="20201115 22:01:51.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018695431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018697347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.952" endtime="20201115 22:01:51.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.960" endtime="20201115 22:01:51.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.655" endtime="20201115 22:01:51.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.653" endtime="20201115 22:01:51.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.967" level="INFO">${RESULT} = [{'time': 0.018697347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018705167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:51.963" endtime="20201115 22:01:51.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.980" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:51.968" endtime="20201115 22:01:51.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.984" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:51.983" endtime="20201115 22:01:51.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.987" level="INFO">VALUE: [1.9160000000011113e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.8339999999991696e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.957999999999821e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8619999999983095e-06, 1.8479999999987395e-06, 1.862000000001779e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.985" endtime="20201115 22:01:51.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.981" endtime="20201115 22:01:51.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.990" endtime="20201115 22:01:51.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.994" endtime="20201115 22:01:52.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.992" endtime="20201115 22:01:52.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.989" endtime="20201115 22:01:52.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.623" endtime="20201115 22:01:52.014"></status>
</kw>
<msg timestamp="20201115 22:01:52.015" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.022" endtime="20201115 22:01:52.038"></status>
</kw>
<msg timestamp="20201115 22:01:52.038" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.021" endtime="20201115 22:01:52.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.041" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.039" endtime="20201115 22:01:52.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.042" endtime="20201115 22:01:52.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.018" endtime="20201115 22:01:52.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.016" endtime="20201115 22:01:52.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.052" endtime="20201115 22:01:52.339"></status>
</kw>
<msg timestamp="20201115 22:01:52.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017936153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017938014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.050" endtime="20201115 22:01:52.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017936153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017938014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.343" endtime="20201115 22:01:52.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.352" endtime="20201115 22:01:52.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.046" endtime="20201115 22:01:52.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.045" endtime="20201115 22:01:52.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.358" level="INFO">${RESULT} = [{'time': 0.017938014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.017943458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:52.355" endtime="20201115 22:01:52.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.372" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:52.359" endtime="20201115 22:01:52.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.376" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:52.375" endtime="20201115 22:01:52.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.378" level="INFO">VALUE: [1.8609999999988358e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.834000000002639e-06, 1.8609999999988358e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.7910000000009862e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.917000000000585e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.377" endtime="20201115 22:01:52.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.373" endtime="20201115 22:01:52.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.382" endtime="20201115 22:01:52.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.385" endtime="20201115 22:01:52.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.384" endtime="20201115 22:01:52.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.380" endtime="20201115 22:01:52.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.015" endtime="20201115 22:01:52.406"></status>
</kw>
<msg timestamp="20201115 22:01:52.406" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.414" endtime="20201115 22:01:52.429"></status>
</kw>
<msg timestamp="20201115 22:01:52.430" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.412" endtime="20201115 22:01:52.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.432" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.431" endtime="20201115 22:01:52.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.433" endtime="20201115 22:01:52.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.410" endtime="20201115 22:01:52.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.408" endtime="20201115 22:01:52.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.443" endtime="20201115 22:01:52.731"></status>
</kw>
<msg timestamp="20201115 22:01:52.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017840319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017842236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.441" endtime="20201115 22:01:52.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017840319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017842236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.736" endtime="20201115 22:01:52.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.744" endtime="20201115 22:01:52.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.438" endtime="20201115 22:01:52.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.436" endtime="20201115 22:01:52.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.751" level="INFO">${RESULT} = [{'time': 0.017842236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.017846125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.747" endtime="20201115 22:01:52.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.765" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:52.752" endtime="20201115 22:01:52.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.769" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:52.768" endtime="20201115 22:01:52.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.772" level="INFO">VALUE: [1.917000000000585e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.915999999997642e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.901999999998072e-06, 1.846999999999266e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.770" endtime="20201115 22:01:52.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.766" endtime="20201115 22:01:52.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.775" endtime="20201115 22:01:52.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.778" endtime="20201115 22:01:52.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.777" endtime="20201115 22:01:52.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.773" endtime="20201115 22:01:52.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.407" endtime="20201115 22:01:52.799"></status>
</kw>
<msg timestamp="20201115 22:01:52.799" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.807" endtime="20201115 22:01:52.822"></status>
</kw>
<msg timestamp="20201115 22:01:52.822" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.805" endtime="20201115 22:01:52.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.825" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.823" endtime="20201115 22:01:52.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.826" endtime="20201115 22:01:52.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.803" endtime="20201115 22:01:52.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.801" endtime="20201115 22:01:52.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.835" endtime="20201115 22:01:53.124"></status>
</kw>
<msg timestamp="20201115 22:01:53.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017803583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017805458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.833" endtime="20201115 22:01:53.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017803583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017805458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.128" endtime="20201115 22:01:53.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.137" endtime="20201115 22:01:53.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.831" endtime="20201115 22:01:53.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.829" endtime="20201115 22:01:53.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.143" level="INFO">${RESULT} = [{'time': 0.017805458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.017809944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:53.140" endtime="20201115 22:01:53.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.157" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:53.144" endtime="20201115 22:01:53.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.161" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:53.160" endtime="20201115 22:01:53.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.164" level="INFO">VALUE: [1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8189999999966566e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.901999999998072e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.162" endtime="20201115 22:01:53.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.158" endtime="20201115 22:01:53.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.167" endtime="20201115 22:01:53.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.170" endtime="20201115 22:01:53.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.169" endtime="20201115 22:01:53.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.165" endtime="20201115 22:01:53.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.800" endtime="20201115 22:01:53.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.229" endtime="20201115 22:01:53.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.196" endtime="20201115 22:01:53.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.195" endtime="20201115 22:01:53.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.193" endtime="20201115 22:01:53.216"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:51.155" endtime="20201115 22:01:53.217" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.226" endtime="20201115 22:01:53.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.224" endtime="20201115 22:01:53.246"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.259" endtime="20201115 22:01:53.277"></status>
</kw>
<msg timestamp="20201115 22:01:53.278" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.257" endtime="20201115 22:01:53.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.280" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.279" endtime="20201115 22:01:53.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.283" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:53.282" endtime="20201115 22:01:53.284"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:53.254" endtime="20201115 22:01:53.284"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:53.252" endtime="20201115 22:01:53.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.251" endtime="20201115 22:01:53.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:53.289" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:53.288" endtime="20201115 22:01:53.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.286" endtime="20201115 22:01:53.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.250" endtime="20201115 22:01:53.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.249" endtime="20201115 22:01:53.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.291" endtime="20201115 22:01:53.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.248" endtime="20201115 22:01:53.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.246" endtime="20201115 22:01:53.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.223" endtime="20201115 22:01:53.293"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.297" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.306" endtime="20201115 22:01:53.320"></status>
</kw>
<msg timestamp="20201115 22:01:53.321" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.305" endtime="20201115 22:01:53.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.322" endtime="20201115 22:01:53.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.324" endtime="20201115 22:01:53.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.302" endtime="20201115 22:01:53.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.300" endtime="20201115 22:01:53.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.333" endtime="20201115 22:01:53.620"></status>
</kw>
<msg timestamp="20201115 22:01:53.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070719389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070745319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.332" endtime="20201115 22:01:53.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070719389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070745319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.625" endtime="20201115 22:01:53.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.633" endtime="20201115 22:01:53.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.329" endtime="20201115 22:01:53.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.327" endtime="20201115 22:01:53.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.639" level="INFO">${RESULT} = [{'time': 0.070745319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5930000000007336e-05, 'source_diff': 2.5930000000007336e-05}, {'time': 0.070822736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:53.636" endtime="20201115 22:01:53.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.653" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:53.640" endtime="20201115 22:01:53.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.657" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:53.656" endtime="20201115 22:01:53.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.660" level="INFO">VALUE: [2.5930000000007336e-05, 7.930000000003212e-06, 7.931000000002686e-06, 7.943999999995843e-06, 7.943999999995843e-06, 7.943999999995843e-06, 7.930000000003212e-06, 7.958000000002352e-06, 8.014000000000632e-06, 7.944999999995317e-06, 7.902000000004072e-06, 7.916999999996177e-06, 7.943999999995843e-06, 7.875000000004406e-06, 7.930999999988808e-06, 7.945000000009195e-06, 7.944999999995317e-06, 8.027000000007667e-06, 7.971999999994983e-06, 7.943999999995843e-06, 7.959000000001826e-06, 7.944000000009721e-06, 7.972000000008861e-06, 7.944999999995317e-06, 7.971999999994983e-06, 7.971999999994983e-06, 7.959000000001826e-06, 7.959000000001826e-06, 7.931000000002686e-06, 7.972000000008861e-06, 7.889000000010915e-06, 7.958000000002352e-06, 7.944000000009721e-06, 7.959000000001826e-06, 7.958000000002352e-06, 7.944000000009721e-06, 7.931000000002686e-06, 7.915999999996703e-06, 7.958000000002352e-06, 7.931000000002686e-06, 7.958000000002352e-06, 7.903000000003546e-06, 7.931000000002686e-06, 7.930999999988808e-06, 7.943999999995843e-06, 7.958000000002352e-06, 7.986000000001492e-06, 7.971999999994983e-06, 7.943999999995843e-06, 7.958000000002352e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.658" endtime="20201115 22:01:53.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.654" endtime="20201115 22:01:53.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.663" endtime="20201115 22:01:53.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.666" endtime="20201115 22:01:53.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.665" endtime="20201115 22:01:53.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.661" endtime="20201115 22:01:53.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.298" endtime="20201115 22:01:53.687"></status>
</kw>
<msg timestamp="20201115 22:01:53.687" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.696" endtime="20201115 22:01:53.711"></status>
</kw>
<msg timestamp="20201115 22:01:53.711" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.695" endtime="20201115 22:01:53.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.714" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.712" endtime="20201115 22:01:53.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.715" endtime="20201115 22:01:53.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.692" endtime="20201115 22:01:53.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.690" endtime="20201115 22:01:53.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.723" endtime="20201115 22:01:54.010"></status>
</kw>
<msg timestamp="20201115 22:01:54.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.722" endtime="20201115 22:01:54.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.014" endtime="20201115 22:01:54.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.022" endtime="20201115 22:01:54.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.719" endtime="20201115 22:01:54.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.718" endtime="20201115 22:01:54.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.029" level="INFO">${RESULT} = [{'time': 0.020366583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.430000000000243e-06, 'source_diff': 8.430000000000243e-06}, {'time': 0.02044325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:54.026" endtime="20201115 22:01:54.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.042" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:54.030" endtime="20201115 22:01:54.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.047" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:54.046" endtime="20201115 22:01:54.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.049" level="INFO">VALUE: [8.430000000000243e-06, 7.957999999998883e-06, 7.971999999998453e-06, 7.943999999999313e-06, 7.929999999999743e-06, 7.958999999998356e-06, 7.930999999999216e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.930999999999216e-06, 7.958999999998356e-06, 7.930999999999216e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.943999999999313e-06, 7.945000000002256e-06, 7.944000000002782e-06, 7.971999999998453e-06, 7.944999999998786e-06, 7.945000000002256e-06, 8.014000000000632e-06, 7.903000000000077e-06, 7.903000000000077e-06, 7.930999999999216e-06, 7.903000000000077e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.971999999998453e-06, 7.973000000001396e-06, 7.929999999999743e-06, 7.943999999999313e-06, 7.971999999998453e-06, 7.945000000002256e-06, 7.929999999999743e-06, 7.945000000002256e-06, 7.957999999998883e-06, 7.973000000001396e-06, 7.860999999997897e-06, 7.971999999998453e-06, 7.916000000000173e-06, 7.943999999999313e-06, 7.861999999997371e-06, 7.957999999998883e-06, 7.944000000002782e-06, 7.972000000001922e-06, 7.945000000002256e-06, 7.944999999998786e-06, 7.972000000001922e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.048" endtime="20201115 22:01:54.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.043" endtime="20201115 22:01:54.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.053" endtime="20201115 22:01:54.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.056" endtime="20201115 22:01:54.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.055" endtime="20201115 22:01:54.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.051" endtime="20201115 22:01:54.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.688" endtime="20201115 22:01:54.077"></status>
</kw>
<msg timestamp="20201115 22:01:54.077" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.086" endtime="20201115 22:01:54.100"></status>
</kw>
<msg timestamp="20201115 22:01:54.100" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.084" endtime="20201115 22:01:54.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.101" endtime="20201115 22:01:54.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.104" endtime="20201115 22:01:54.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.082" endtime="20201115 22:01:54.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.080" endtime="20201115 22:01:54.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.113" endtime="20201115 22:01:54.401"></status>
</kw>
<msg timestamp="20201115 22:01:54.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.111" endtime="20201115 22:01:54.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.405" endtime="20201115 22:01:54.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.413" endtime="20201115 22:01:54.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.108" endtime="20201115 22:01:54.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.107" endtime="20201115 22:01:54.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.420" level="INFO">${RESULT} = [{'time': 0.019665528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.01974, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201115 22:01:54.416" endtime="20201115 22:01:54.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.433" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:54.421" endtime="20201115 22:01:54.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.437" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:54.436" endtime="20201115 22:01:54.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.440" level="INFO">VALUE: [8.472000000002422e-06, 7.930999999999216e-06, 7.943999999999313e-06, 7.889000000000507e-06, 7.902000000000603e-06, 7.945000000002256e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.930999999999216e-06, 7.943999999999313e-06, 7.945000000002256e-06, 7.957999999998883e-06, 7.889000000000507e-06, 7.944999999998786e-06, 7.929999999999743e-06, 7.943999999999313e-06, 7.971999999998453e-06, 7.971999999998453e-06, 7.944999999998786e-06, 7.944999999998786e-06, 8.000000000001062e-06, 7.943999999999313e-06, 7.971999999998453e-06, 7.944000000002782e-06, 7.958000000002352e-06, 7.945000000002256e-06, 7.944999999998786e-06, 7.944000000002782e-06, 7.943999999999313e-06, 7.943999999999313e-06, 7.971999999998453e-06, 7.930999999999216e-06, 7.930000000003212e-06, 7.903000000000077e-06, 7.985999999998022e-06, 7.930999999999216e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.971999999998453e-06, 7.943999999999313e-06, 7.943999999999313e-06, 7.958000000002352e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.958000000002352e-06, 7.945000000002256e-06, 7.943999999999313e-06, 7.999999999997592e-06, 7.930999999999216e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.438" endtime="20201115 22:01:54.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.434" endtime="20201115 22:01:54.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.443" endtime="20201115 22:01:54.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.447" endtime="20201115 22:01:54.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.445" endtime="20201115 22:01:54.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.442" endtime="20201115 22:01:54.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.078" endtime="20201115 22:01:54.467"></status>
</kw>
<msg timestamp="20201115 22:01:54.467" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.476" endtime="20201115 22:01:54.490"></status>
</kw>
<msg timestamp="20201115 22:01:54.490" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.475" endtime="20201115 22:01:54.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.493" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.491" endtime="20201115 22:01:54.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.494" endtime="20201115 22:01:54.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.472" endtime="20201115 22:01:54.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.470" endtime="20201115 22:01:54.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.503" endtime="20201115 22:01:54.790"></status>
</kw>
<msg timestamp="20201115 22:01:54.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019677472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.501" endtime="20201115 22:01:54.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019677472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.794" endtime="20201115 22:01:54.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.802" endtime="20201115 22:01:54.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.499" endtime="20201115 22:01:54.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.497" endtime="20201115 22:01:54.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.809" level="INFO">${RESULT} = [{'time': 0.019685931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.019762972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.805" endtime="20201115 22:01:54.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.822" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:54.810" endtime="20201115 22:01:54.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.827" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:54.826" endtime="20201115 22:01:54.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.829" level="INFO">VALUE: [8.458999999998856e-06, 7.929999999999743e-06, 7.986000000001492e-06, 7.971999999998453e-06, 7.958000000002352e-06, 7.957999999998883e-06, 7.916999999999647e-06, 7.945000000002256e-06, 7.903000000000077e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.943999999999313e-06, 7.929999999999743e-06, 7.929999999999743e-06, 7.944000000002782e-06, 7.944999999998786e-06, 7.971999999998453e-06, 7.972000000001922e-06, 7.958000000002352e-06, 7.916999999999647e-06, 7.958000000002352e-06, 7.958000000002352e-06, 7.903000000000077e-06, 7.959000000001826e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.929999999999743e-06, 7.958000000002352e-06, 7.944999999998786e-06, 7.916999999999647e-06, 7.945000000002256e-06, 7.943999999999313e-06, 7.971999999998453e-06, 7.930999999999216e-06, 7.944000000002782e-06, 7.957999999998883e-06, 8.000000000001062e-06, 7.958000000002352e-06, 7.986000000001492e-06, 7.958000000002352e-06, 7.945000000002256e-06, 7.929999999999743e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.973000000001396e-06, 7.957999999998883e-06, 7.929999999999743e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.828" endtime="20201115 22:01:54.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.823" endtime="20201115 22:01:54.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.833" endtime="20201115 22:01:54.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.836" endtime="20201115 22:01:54.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.834" endtime="20201115 22:01:54.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.831" endtime="20201115 22:01:54.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.468" endtime="20201115 22:01:54.857"></status>
</kw>
<msg timestamp="20201115 22:01:54.857" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.866" endtime="20201115 22:01:54.879"></status>
</kw>
<msg timestamp="20201115 22:01:54.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.864" endtime="20201115 22:01:54.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.881" endtime="20201115 22:01:54.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.883" endtime="20201115 22:01:54.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.862" endtime="20201115 22:01:54.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.859" endtime="20201115 22:01:54.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.892" endtime="20201115 22:01:55.180"></status>
</kw>
<msg timestamp="20201115 22:01:55.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.890" endtime="20201115 22:01:55.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.184" endtime="20201115 22:01:55.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.193" endtime="20201115 22:01:55.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.888" endtime="20201115 22:01:55.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.886" endtime="20201115 22:01:55.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.199" level="INFO">${RESULT} = [{'time': 0.019782764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.019857861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.196" endtime="20201115 22:01:55.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.213" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:55.200" endtime="20201115 22:01:55.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.218" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:55.217" endtime="20201115 22:01:55.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.220" level="INFO">VALUE: [8.472000000002422e-06, 7.875000000000937e-06, 7.958000000002352e-06, 7.972000000001922e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.931000000002686e-06, 7.957999999998883e-06, 7.958999999998356e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.943999999999313e-06, 7.943999999999313e-06, 7.972999999997926e-06, 7.943999999999313e-06, 7.986000000001492e-06, 7.973000000001396e-06, 7.944999999998786e-06, 7.945000000002256e-06, 7.930999999999216e-06, 7.943999999999313e-06, 7.944999999998786e-06, 7.972000000001922e-06, 7.986000000001492e-06, 8.028000000000202e-06, 7.943999999999313e-06, 7.958999999998356e-06, 7.971999999998453e-06, 7.943999999999313e-06, 7.958000000002352e-06, 7.930000000003212e-06, 7.957999999998883e-06, 7.971999999998453e-06, 7.957999999998883e-06, 7.943999999999313e-06, 7.944000000002782e-06, 7.889000000000507e-06, 7.945000000002256e-06, 7.959000000001826e-06, 8.000000000001062e-06, 7.945000000002256e-06, 7.972999999997926e-06, 7.943999999999313e-06, 7.959000000001826e-06, 7.971999999998453e-06, 7.931000000002686e-06, 8.014000000000632e-06, 7.958000000002352e-06, 7.958999999998356e-06, 7.957999999998883e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.219" endtime="20201115 22:01:55.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.214" endtime="20201115 22:01:55.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.224" endtime="20201115 22:01:55.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.227" endtime="20201115 22:01:55.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.226" endtime="20201115 22:01:55.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.222" endtime="20201115 22:01:55.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.857" endtime="20201115 22:01:55.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.296" endtime="20201115 22:01:55.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.295" endtime="20201115 22:01:55.248"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.251" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.260" endtime="20201115 22:01:55.274"></status>
</kw>
<msg timestamp="20201115 22:01:55.275" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.258" endtime="20201115 22:01:55.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.277" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.276" endtime="20201115 22:01:55.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.279" endtime="20201115 22:01:55.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.255" endtime="20201115 22:01:55.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.253" endtime="20201115 22:01:55.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.289" endtime="20201115 22:01:55.575"></status>
</kw>
<msg timestamp="20201115 22:01:55.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022936486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022941167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.287" endtime="20201115 22:01:55.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022936486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022941167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.580" endtime="20201115 22:01:55.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.588" endtime="20201115 22:01:55.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.284" endtime="20201115 22:01:55.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.282" endtime="20201115 22:01:55.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.594" level="INFO">${RESULT} = [{'time': 0.022941167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.023020097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.591" endtime="20201115 22:01:55.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.608" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:55.595" endtime="20201115 22:01:55.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.612" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:55.611" endtime="20201115 22:01:55.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.621" level="INFO">VALUE: [4.680999999999436e-06, 4.679999999999962e-06, 4.735999999998242e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.651999999997353e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.7089999999985754e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.722000000002141e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.722000000002141e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.610999999998117e-06, 4.596999999998547e-06, 4.750000000001281e-06, 4.625000000001156e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.721999999998672e-06, 4.735999999998242e-06, 4.679999999999962e-06, 4.652000000000822e-06, 4.6949999999990055e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.613" endtime="20201115 22:01:55.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.608" endtime="20201115 22:01:55.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.624" endtime="20201115 22:01:55.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.627" endtime="20201115 22:01:55.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.626" endtime="20201115 22:01:55.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.622" endtime="20201115 22:01:55.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.251" endtime="20201115 22:01:55.648"></status>
</kw>
<msg timestamp="20201115 22:01:55.648" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.657" endtime="20201115 22:01:55.672"></status>
</kw>
<msg timestamp="20201115 22:01:55.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.656" endtime="20201115 22:01:55.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.675" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.674" endtime="20201115 22:01:55.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.676" endtime="20201115 22:01:55.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.653" endtime="20201115 22:01:55.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.651" endtime="20201115 22:01:55.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.685" endtime="20201115 22:01:55.972"></status>
</kw>
<msg timestamp="20201115 22:01:55.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.683" endtime="20201115 22:01:55.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.976" endtime="20201115 22:01:55.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.985" endtime="20201115 22:01:55.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.681" endtime="20201115 22:01:55.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.679" endtime="20201115 22:01:55.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.991" level="INFO">${RESULT} = [{'time': 0.019713181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.019793569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:55.988" endtime="20201115 22:01:55.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.004" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:55.992" endtime="20201115 22:01:56.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.009" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:56.008" endtime="20201115 22:01:56.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.012" level="INFO">VALUE: [4.6949999999990055e-06, 4.679999999999962e-06, 4.735999999998242e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.625000000001156e-06, 4.652000000000822e-06, 4.707999999999102e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.665999999996923e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.681000000002905e-06, 4.653000000000296e-06, 4.695000000002475e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.7089999999985754e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.681000000002905e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.736000000001711e-06, 4.666999999999866e-06, 4.707999999999102e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.695000000002475e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.010" endtime="20201115 22:01:56.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.006" endtime="20201115 22:01:56.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.015" endtime="20201115 22:01:56.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.018" endtime="20201115 22:01:56.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.017" endtime="20201115 22:01:56.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.013" endtime="20201115 22:01:56.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.649" endtime="20201115 22:01:56.039"></status>
</kw>
<msg timestamp="20201115 22:01:56.039" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.048" endtime="20201115 22:01:56.062"></status>
</kw>
<msg timestamp="20201115 22:01:56.063" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.046" endtime="20201115 22:01:56.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.065" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.064" endtime="20201115 22:01:56.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.066" endtime="20201115 22:01:56.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.044" endtime="20201115 22:01:56.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.042" endtime="20201115 22:01:56.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.075" endtime="20201115 22:01:56.362"></status>
</kw>
<msg timestamp="20201115 22:01:56.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.074" endtime="20201115 22:01:56.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.366" endtime="20201115 22:01:56.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.374" endtime="20201115 22:01:56.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.071" endtime="20201115 22:01:56.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.069" endtime="20201115 22:01:56.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.381" level="INFO">${RESULT} = [{'time': 0.019689306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.019769403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.378" endtime="20201115 22:01:56.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.395" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:56.382" endtime="20201115 22:01:56.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.399" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:56.398" endtime="20201115 22:01:56.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.402" level="INFO">VALUE: [4.666999999999866e-06, 4.666999999999866e-06, 4.721999999998672e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.61200000000106e-06, 4.625000000001156e-06, 4.721999999998672e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.736000000001711e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.652000000000822e-06, 4.6949999999990055e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.736000000001711e-06, 4.680999999999436e-06, 4.666999999999866e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.400" endtime="20201115 22:01:56.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.396" endtime="20201115 22:01:56.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.405" endtime="20201115 22:01:56.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.408" endtime="20201115 22:01:56.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.407" endtime="20201115 22:01:56.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.403" endtime="20201115 22:01:56.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.040" endtime="20201115 22:01:56.429"></status>
</kw>
<msg timestamp="20201115 22:01:56.429" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.438" endtime="20201115 22:01:56.451"></status>
</kw>
<msg timestamp="20201115 22:01:56.452" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.436" endtime="20201115 22:01:56.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.453" endtime="20201115 22:01:56.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.455" endtime="20201115 22:01:56.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.434" endtime="20201115 22:01:56.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.432" endtime="20201115 22:01:56.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.464" endtime="20201115 22:01:56.750"></status>
</kw>
<msg timestamp="20201115 22:01:56.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.463" endtime="20201115 22:01:56.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.754" endtime="20201115 22:01:56.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.763" endtime="20201115 22:01:56.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.460" endtime="20201115 22:01:56.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.458" endtime="20201115 22:01:56.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.769" level="INFO">${RESULT} = [{'time': 0.019628319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680000000003431e-06, 'source_diff': 4.680000000003431e-06}, {'time': 0.019710792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.766" endtime="20201115 22:01:56.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.783" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:56.770" endtime="20201115 22:01:56.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.787" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:56.786" endtime="20201115 22:01:56.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.789" level="INFO">VALUE: [4.680000000003431e-06, 4.666999999999866e-06, 4.651999999997353e-06, 4.665999999996923e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.651999999997353e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.681000000002905e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.721999999998672e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.665999999996923e-06, 4.6949999999990055e-06, 4.680999999999436e-06, 4.6949999999990055e-06, 4.694000000003001e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.681000000002905e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.681000000002905e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.695000000002475e-06, 4.597000000002016e-06, 4.722000000002141e-06, 4.679999999999962e-06, 4.722000000002141e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.679999999999962e-06, 4.639000000000726e-06, 4.610999999998117e-06, 4.764000000000851e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.788" endtime="20201115 22:01:56.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.783" endtime="20201115 22:01:56.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.793" endtime="20201115 22:01:56.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.796" endtime="20201115 22:01:56.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.794" endtime="20201115 22:01:56.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.791" endtime="20201115 22:01:56.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.430" endtime="20201115 22:01:56.816"></status>
</kw>
<msg timestamp="20201115 22:01:56.817" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.825" endtime="20201115 22:01:56.839"></status>
</kw>
<msg timestamp="20201115 22:01:56.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.824" endtime="20201115 22:01:56.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.842" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.841" endtime="20201115 22:01:56.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.843" endtime="20201115 22:01:56.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.821" endtime="20201115 22:01:56.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.819" endtime="20201115 22:01:56.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.852" endtime="20201115 22:01:57.138"></status>
</kw>
<msg timestamp="20201115 22:01:57.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.850" endtime="20201115 22:01:57.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.142" endtime="20201115 22:01:57.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.150" endtime="20201115 22:01:57.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.848" endtime="20201115 22:01:57.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.846" endtime="20201115 22:01:57.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.157" level="INFO">${RESULT} = [{'time': 0.019715611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.019796778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.154" endtime="20201115 22:01:57.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.171" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:57.158" endtime="20201115 22:01:57.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.176" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:57.175" endtime="20201115 22:01:57.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.178" level="INFO">VALUE: [4.679999999999962e-06, 4.680999999999436e-06, 4.651999999997353e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.736000000001711e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.666000000000392e-06, 4.681000000002905e-06, 4.653000000000296e-06, 4.667000000003335e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.665999999996923e-06, 4.666000000000392e-06, 4.61200000000106e-06, 4.708000000002571e-06, 4.708000000002571e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.625000000001156e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.681000000002905e-06, 4.625000000001156e-06, 4.680999999999436e-06, 4.6249999999976865e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.625000000001156e-06]</msg>
<status status="PASS" starttime="20201115 22:01:57.177" endtime="20201115 22:01:57.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.172" endtime="20201115 22:01:57.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.181" endtime="20201115 22:01:57.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.185" endtime="20201115 22:01:57.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.183" endtime="20201115 22:01:57.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.180" endtime="20201115 22:01:57.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.817" endtime="20201115 22:01:57.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.249" endtime="20201115 22:01:57.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.249" endtime="20201115 22:01:57.206"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.208" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.217" endtime="20201115 22:01:57.231"></status>
</kw>
<msg timestamp="20201115 22:01:57.231" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.215" endtime="20201115 22:01:57.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.233" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.232" endtime="20201115 22:01:57.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.235" endtime="20201115 22:01:57.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.213" endtime="20201115 22:01:57.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.211" endtime="20201115 22:01:57.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.244" endtime="20201115 22:01:57.532"></status>
</kw>
<msg timestamp="20201115 22:01:57.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.242" endtime="20201115 22:01:57.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.536" endtime="20201115 22:01:57.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.544" endtime="20201115 22:01:57.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.240" endtime="20201115 22:01:57.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.238" endtime="20201115 22:01:57.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.551" level="INFO">${RESULT} = [{'time': 0.022128528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.022212681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.548" endtime="20201115 22:01:57.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.564" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:57.552" endtime="20201115 22:01:57.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.569" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:57.568" endtime="20201115 22:01:57.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.571" level="INFO">VALUE: [5.292000000000491e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.306000000000061e-06, 5.278000000000921e-06, 5.290999999997548e-06, 5.305000000000587e-06, 5.291000000001017e-06, 5.276999999997978e-06, 5.304999999997118e-06, 5.347000000002766e-06, 5.292000000000491e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.276999999997978e-06, 5.278000000000921e-06, 5.277999999997451e-06, 5.292000000000491e-06, 5.306000000000061e-06, 5.2499999999983116e-06, 5.291000000001017e-06, 5.291000000001017e-06, 5.250000000001781e-06, 5.292000000000491e-06, 5.235999999998742e-06, 5.291000000001017e-06, 5.278000000000921e-06, 5.277999999997451e-06, 5.277999999997451e-06, 5.277000000001447e-06, 5.2499999999983116e-06, 5.276999999997978e-06, 5.278000000000921e-06, 5.276999999997978e-06, 5.304999999997118e-06, 5.332999999999727e-06, 5.292000000000491e-06, 5.291000000001017e-06, 5.292000000000491e-06, 5.250000000001781e-06, 5.291000000001017e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.291000000001017e-06, 5.277000000001447e-06, 5.2639999999978815e-06, 5.2499999999983116e-06]</msg>
<status status="PASS" starttime="20201115 22:01:57.570" endtime="20201115 22:01:57.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.565" endtime="20201115 22:01:57.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.574" endtime="20201115 22:01:57.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.578" endtime="20201115 22:01:57.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.576" endtime="20201115 22:01:57.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.573" endtime="20201115 22:01:57.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.208" endtime="20201115 22:01:57.598"></status>
</kw>
<msg timestamp="20201115 22:01:57.598" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.607" endtime="20201115 22:01:57.621"></status>
</kw>
<msg timestamp="20201115 22:01:57.621" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.606" endtime="20201115 22:01:57.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.624" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.622" endtime="20201115 22:01:57.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.625" endtime="20201115 22:01:57.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.603" endtime="20201115 22:01:57.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.601" endtime="20201115 22:01:57.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.634" endtime="20201115 22:01:57.920"></status>
</kw>
<msg timestamp="20201115 22:01:57.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.633" endtime="20201115 22:01:57.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.924" endtime="20201115 22:01:57.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.932" endtime="20201115 22:01:57.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.630" endtime="20201115 22:01:57.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.628" endtime="20201115 22:01:57.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.939" level="INFO">${RESULT} = [{'time': 0.019700986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.019787889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.936" endtime="20201115 22:01:57.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.952" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:57.940" endtime="20201115 22:01:57.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.957" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:57.956" endtime="20201115 22:01:57.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.959" level="INFO">VALUE: [5.292000000000491e-06, 5.2639999999978815e-06, 5.277999999997451e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.276999999997978e-06, 5.319999999999631e-06, 5.292000000000491e-06, 5.291000000001017e-06, 5.277999999997451e-06, 5.290999999997548e-06, 5.291000000001017e-06, 5.305000000000587e-06, 5.278000000000921e-06, 5.276999999997978e-06, 5.292000000000491e-06, 5.262999999998408e-06, 5.306000000000061e-06, 5.346999999999297e-06, 5.305000000000587e-06, 5.291000000001017e-06, 5.278000000000921e-06, 5.291000000001017e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.2499999999983116e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.346999999999297e-06, 5.292000000000491e-06, 5.291999999997021e-06, 5.264000000001351e-06, 5.292000000000491e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.291000000001017e-06, 5.292000000000491e-06, 5.278000000000921e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.277999999997451e-06, 5.250000000001781e-06, 5.291999999997021e-06, 5.278000000000921e-06, 5.291000000001017e-06, 5.305000000000587e-06, 5.292000000000491e-06, 5.278000000000921e-06]</msg>
<status status="PASS" starttime="20201115 22:01:57.958" endtime="20201115 22:01:57.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.953" endtime="20201115 22:01:57.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.962" endtime="20201115 22:01:57.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.966" endtime="20201115 22:01:57.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.964" endtime="20201115 22:01:57.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.961" endtime="20201115 22:01:57.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.599" endtime="20201115 22:01:57.986"></status>
</kw>
<msg timestamp="20201115 22:01:57.987" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.996" endtime="20201115 22:01:58.010"></status>
</kw>
<msg timestamp="20201115 22:01:58.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.994" endtime="20201115 22:01:58.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.013" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.011" endtime="20201115 22:01:58.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.014" endtime="20201115 22:01:58.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.991" endtime="20201115 22:01:58.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.989" endtime="20201115 22:01:58.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.023" endtime="20201115 22:01:58.312"></status>
</kw>
<msg timestamp="20201115 22:01:58.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020213792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:58.021" endtime="20201115 22:01:58.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020213792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:58.316" endtime="20201115 22:01:58.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.325" endtime="20201115 22:01:58.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.019" endtime="20201115 22:01:58.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.017" endtime="20201115 22:01:58.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.332" level="INFO">${RESULT} = [{'time': 0.020213792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.020301514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:58.328" endtime="20201115 22:01:58.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.346" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:58.333" endtime="20201115 22:01:58.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.351" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:58.350" endtime="20201115 22:01:58.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.354" level="INFO">VALUE: [5.292000000000491e-06, 5.292000000000491e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.291999999997021e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.332999999999727e-06, 5.291000000001017e-06, 5.291999999997021e-06, 5.292000000000491e-06, 5.2639999999978815e-06, 5.277000000001447e-06, 5.2499999999983116e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.361000000002336e-06, 5.264000000001351e-06, 5.276999999997978e-06, 5.222999999998645e-06, 5.332999999999727e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.305000000000587e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.304999999997118e-06, 5.278000000000921e-06, 5.277000000001447e-06, 5.292000000000491e-06, 5.305000000000587e-06, 5.374999999998437e-06, 5.305000000000587e-06, 5.305000000000587e-06, 5.306000000000061e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.305000000000587e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.319000000000157e-06]</msg>
<status status="PASS" starttime="20201115 22:01:58.352" endtime="20201115 22:01:58.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.347" endtime="20201115 22:01:58.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.357" endtime="20201115 22:01:58.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.361" endtime="20201115 22:01:58.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.359" endtime="20201115 22:01:58.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.355" endtime="20201115 22:01:58.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.987" endtime="20201115 22:01:58.381"></status>
</kw>
<msg timestamp="20201115 22:01:58.382" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.391" endtime="20201115 22:01:58.405"></status>
</kw>
<msg timestamp="20201115 22:01:58.406" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.390" endtime="20201115 22:01:58.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.408" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.407" endtime="20201115 22:01:58.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.409" endtime="20201115 22:01:58.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.387" endtime="20201115 22:01:58.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.385" endtime="20201115 22:01:58.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.419" endtime="20201115 22:01:58.706"></status>
</kw>
<msg timestamp="20201115 22:01:58.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020828597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020833875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.417" endtime="20201115 22:01:58.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020828597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020833875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.711" endtime="20201115 22:01:58.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.719" endtime="20201115 22:01:58.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.414" endtime="20201115 22:01:58.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.413" endtime="20201115 22:01:58.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.726" level="INFO">${RESULT} = [{'time': 0.020833875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.020917847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:58.723" endtime="20201115 22:01:58.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.740" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:58.727" endtime="20201115 22:01:58.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.746" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:58.744" endtime="20201115 22:01:58.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.748" level="INFO">VALUE: [5.278000000000921e-06, 5.278000000000921e-06, 5.277000000001447e-06, 5.306000000000061e-06, 5.277000000001447e-06, 5.291999999997021e-06, 5.2499999999983116e-06, 5.292000000000491e-06, 5.264000000001351e-06, 5.278000000000921e-06, 5.305000000000587e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.292000000000491e-06, 5.278000000000921e-06, 5.276999999997978e-06, 5.305000000000587e-06, 5.347000000002766e-06, 5.292000000000491e-06, 5.221999999999172e-06, 5.306000000000061e-06, 5.278000000000921e-06, 5.3339999999992005e-06, 5.277000000001447e-06, 5.292000000000491e-06, 5.290999999997548e-06, 5.250000000001781e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.2499999999983116e-06, 5.347000000002766e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.291000000001017e-06, 5.278000000000921e-06, 5.305000000000587e-06, 5.291000000001017e-06, 5.305000000000587e-06, 5.277999999997451e-06, 5.292000000000491e-06, 5.263000000001877e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.306000000000061e-06, 5.277999999997451e-06, 5.291999999997021e-06, 5.291000000001017e-06, 5.222999999998645e-06]</msg>
<status status="PASS" starttime="20201115 22:01:58.747" endtime="20201115 22:01:58.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.741" endtime="20201115 22:01:58.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.751" endtime="20201115 22:01:58.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.755" endtime="20201115 22:01:58.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.754" endtime="20201115 22:01:58.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.750" endtime="20201115 22:01:58.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.383" endtime="20201115 22:01:58.776"></status>
</kw>
<msg timestamp="20201115 22:01:58.776" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.786" endtime="20201115 22:01:58.800"></status>
</kw>
<msg timestamp="20201115 22:01:58.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.784" endtime="20201115 22:01:58.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.803" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.802" endtime="20201115 22:01:58.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.804" endtime="20201115 22:01:58.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.781" endtime="20201115 22:01:58.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.779" endtime="20201115 22:01:58.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.814" endtime="20201115 22:01:59.102"></status>
</kw>
<msg timestamp="20201115 22:01:59.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020372319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.812" endtime="20201115 22:01:59.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020372319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.106" endtime="20201115 22:01:59.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.115" endtime="20201115 22:01:59.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.810" endtime="20201115 22:01:59.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.808" endtime="20201115 22:01:59.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.122" level="INFO">${RESULT} = [{'time': 0.020372319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.020457583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:59.118" endtime="20201115 22:01:59.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.135" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:59.123" endtime="20201115 22:01:59.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.139" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:59.138" endtime="20201115 22:01:59.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.142" level="INFO">VALUE: [5.305000000000587e-06, 5.277000000001447e-06, 5.222000000002641e-06, 5.292000000000491e-06, 5.291000000001017e-06, 5.2639999999978815e-06, 5.306000000000061e-06, 5.305000000000587e-06, 5.319000000000157e-06, 5.319000000000157e-06, 5.291000000001017e-06, 5.292000000000491e-06, 5.2499999999983116e-06, 5.292000000000491e-06, 5.264000000001351e-06, 5.291999999997021e-06, 5.277999999997451e-06, 5.222999999998645e-06, 5.264000000001351e-06, 5.292000000000491e-06, 5.278000000000921e-06, 5.277999999997451e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.304999999997118e-06, 5.276999999997978e-06, 5.292000000000491e-06, 5.250000000001781e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.332999999999727e-06, 5.3339999999992005e-06, 5.277999999997451e-06, 5.306000000000061e-06, 5.207999999999602e-06, 5.292000000000491e-06, 5.292000000000491e-06, 5.347000000002766e-06, 5.291000000001017e-06, 5.291000000001017e-06, 5.2639999999978815e-06, 5.236000000002211e-06, 5.278000000000921e-06, 5.292000000000491e-06, 5.235999999998742e-06, 5.292000000000491e-06, 5.277999999997451e-06]</msg>
<status status="PASS" starttime="20201115 22:01:59.140" endtime="20201115 22:01:59.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.136" endtime="20201115 22:01:59.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.145" endtime="20201115 22:01:59.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.149" endtime="20201115 22:01:59.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.147" endtime="20201115 22:01:59.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.144" endtime="20201115 22:01:59.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.777" endtime="20201115 22:01:59.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.207" endtime="20201115 22:01:59.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.206" endtime="20201115 22:01:59.170"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.172" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.181" endtime="20201115 22:01:59.196"></status>
</kw>
<msg timestamp="20201115 22:01:59.196" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.180" endtime="20201115 22:01:59.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.198" endtime="20201115 22:01:59.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.200" endtime="20201115 22:01:59.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.177" endtime="20201115 22:01:59.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.175" endtime="20201115 22:01:59.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.210" endtime="20201115 22:01:59.497"></status>
</kw>
<msg timestamp="20201115 22:01:59.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.208" endtime="20201115 22:01:59.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.501" endtime="20201115 22:01:59.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.509" endtime="20201115 22:01:59.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.205" endtime="20201115 22:01:59.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.204" endtime="20201115 22:01:59.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.516" level="INFO">${RESULT} = [{'time': 0.022426847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.022519806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:59.512" endtime="20201115 22:01:59.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.529" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:59.517" endtime="20201115 22:01:59.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.534" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:59.533" endtime="20201115 22:01:59.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.537" level="INFO">VALUE: [5.9029999999980765e-06, 5.917000000001116e-06, 5.9729999999993955e-06, 5.889000000001976e-06, 5.902000000002072e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.846999999999797e-06, 5.860999999999367e-06, 5.903000000001546e-06, 5.846999999999797e-06, 5.889000000001976e-06, 5.901999999998603e-06, 5.917000000001116e-06, 5.8889999999985065e-06, 5.930999999997216e-06, 5.8889999999985065e-06, 5.916000000001642e-06, 5.9029999999980765e-06, 5.917000000001116e-06, 5.917000000001116e-06, 5.8889999999985065e-06, 5.931000000000686e-06, 5.916000000001642e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.887999999999033e-06, 5.888000000002502e-06, 5.915999999998173e-06, 5.8889999999985065e-06, 5.889000000001976e-06, 5.8889999999985065e-06, 5.915999999998173e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.861000000002836e-06, 5.8889999999985065e-06, 5.8889999999985065e-06, 5.915999999998173e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.875000000002406e-06, 5.9029999999980765e-06, 5.8889999999985065e-06, 5.917000000001116e-06, 5.958000000000352e-06, 5.903000000001546e-06, 5.916000000001642e-06, 5.888000000002502e-06]</msg>
<status status="PASS" starttime="20201115 22:01:59.535" endtime="20201115 22:01:59.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.530" endtime="20201115 22:01:59.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.540" endtime="20201115 22:01:59.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.543" endtime="20201115 22:01:59.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.542" endtime="20201115 22:01:59.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.538" endtime="20201115 22:01:59.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.173" endtime="20201115 22:01:59.564"></status>
</kw>
<msg timestamp="20201115 22:01:59.564" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.577" endtime="20201115 22:01:59.595"></status>
</kw>
<msg timestamp="20201115 22:01:59.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.574" endtime="20201115 22:01:59.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.598" endtime="20201115 22:01:59.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.603" endtime="20201115 22:01:59.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.569" endtime="20201115 22:01:59.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.567" endtime="20201115 22:01:59.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.622" endtime="20201115 22:01:59.916"></status>
</kw>
<msg timestamp="20201115 22:01:59.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025136347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.619" endtime="20201115 22:01:59.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025130458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025136347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.920" endtime="20201115 22:01:59.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.928" endtime="20201115 22:01:59.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.614" endtime="20201115 22:01:59.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.610" endtime="20201115 22:01:59.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.935" level="INFO">${RESULT} = [{'time': 0.025136347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.025226236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:59.932" endtime="20201115 22:01:59.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.949" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:59.936" endtime="20201115 22:01:59.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.954" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:59.953" endtime="20201115 22:01:59.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.956" level="INFO">VALUE: [5.8889999999985065e-06, 5.846999999999797e-06, 5.9029999999980765e-06, 5.8479999999992704e-06, 5.875000000002406e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.833000000000227e-06, 5.915999999998173e-06, 5.874999999998937e-06, 5.889000000001976e-06, 5.8889999999985065e-06, 5.9029999999980765e-06, 5.833000000000227e-06, 5.889000000001976e-06, 5.944000000000782e-06, 5.903000000001546e-06, 5.9029999999980765e-06, 5.903000000001546e-06, 5.887999999999033e-06, 5.8889999999985065e-06, 5.8889999999985065e-06, 5.889000000001976e-06, 5.874999999998937e-06, 5.901999999998603e-06, 5.944000000000782e-06, 5.917000000001116e-06, 5.887999999999033e-06, 5.916000000001642e-06, 5.9029999999980765e-06, 5.9029999999980765e-06, 5.916999999997646e-06, 5.903000000001546e-06, 5.8889999999985065e-06, 5.9029999999980765e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.8889999999985065e-06, 5.889000000001976e-06, 5.86199999999884e-06, 5.917000000001116e-06, 5.929999999997743e-06, 5.9029999999980765e-06, 5.901999999998603e-06, 5.903000000001546e-06, 5.860999999999367e-06, 5.971999999999922e-06, 5.930000000001212e-06, 5.9029999999980765e-06, 5.875000000002406e-06]</msg>
<status status="PASS" starttime="20201115 22:01:59.955" endtime="20201115 22:01:59.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.950" endtime="20201115 22:01:59.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.959" endtime="20201115 22:01:59.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.963" endtime="20201115 22:01:59.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.961" endtime="20201115 22:01:59.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.958" endtime="20201115 22:01:59.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.565" endtime="20201115 22:01:59.983"></status>
</kw>
<msg timestamp="20201115 22:01:59.984" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.993" endtime="20201115 22:02:00.007"></status>
</kw>
<msg timestamp="20201115 22:02:00.008" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.991" endtime="20201115 22:02:00.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.009" endtime="20201115 22:02:00.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.012" endtime="20201115 22:02:00.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.988" endtime="20201115 22:02:00.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.986" endtime="20201115 22:02:00.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.021" endtime="20201115 22:02:00.309"></status>
</kw>
<msg timestamp="20201115 22:02:00.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019967986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019973931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.019" endtime="20201115 22:02:00.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019967986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019973931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.313" endtime="20201115 22:02:00.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.321" endtime="20201115 22:02:00.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.016" endtime="20201115 22:02:00.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.015" endtime="20201115 22:02:00.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.328" level="INFO">${RESULT} = [{'time': 0.019973931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.020063958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:00.324" endtime="20201115 22:02:00.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.341" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:00.329" endtime="20201115 22:02:00.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.346" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:00.345" endtime="20201115 22:02:00.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.348" level="INFO">VALUE: [5.945000000000256e-06, 5.901999999998603e-06, 5.9029999999980765e-06, 5.8889999999985065e-06, 5.889000000001976e-06, 5.874999999998937e-06, 5.9029999999980765e-06, 5.889000000001976e-06, 5.915999999998173e-06, 5.874999999998937e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.875000000002406e-06, 5.903000000001546e-06, 5.9589999999998255e-06, 5.931000000000686e-06, 5.874999999998937e-06, 5.861000000002836e-06, 5.902000000002072e-06, 5.8889999999985065e-06, 5.9029999999980765e-06, 5.9029999999980765e-06, 5.9029999999980765e-06, 5.889000000001976e-06, 5.901999999998603e-06, 5.8889999999985065e-06, 5.874999999998937e-06, 5.9729999999993955e-06, 5.9029999999980765e-06, 5.8889999999985065e-06, 5.8889999999985065e-06, 5.916000000001642e-06, 5.889000000001976e-06, 5.8329999999967574e-06, 5.8889999999985065e-06, 5.9029999999980765e-06, 5.889000000001976e-06, 5.971999999999922e-06, 5.901999999998603e-06, 5.917000000001116e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.874999999998937e-06, 5.917000000001116e-06, 5.8889999999985065e-06, 5.916999999997646e-06, 5.903000000001546e-06]</msg>
<status status="PASS" starttime="20201115 22:02:00.347" endtime="20201115 22:02:00.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.342" endtime="20201115 22:02:00.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.351" endtime="20201115 22:02:00.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.355" endtime="20201115 22:02:00.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.353" endtime="20201115 22:02:00.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.350" endtime="20201115 22:02:00.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.984" endtime="20201115 22:02:00.375"></status>
</kw>
<msg timestamp="20201115 22:02:00.376" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.390" endtime="20201115 22:02:00.407"></status>
</kw>
<msg timestamp="20201115 22:02:00.408" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.386" endtime="20201115 22:02:00.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.413" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.410" endtime="20201115 22:02:00.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.415" endtime="20201115 22:02:00.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.381" endtime="20201115 22:02:00.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.378" endtime="20201115 22:02:00.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.434" endtime="20201115 22:02:00.728"></status>
</kw>
<msg timestamp="20201115 22:02:00.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026524472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026530375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.431" endtime="20201115 22:02:00.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026524472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026530375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.732" endtime="20201115 22:02:00.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.801" endtime="20201115 22:02:00.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.425" endtime="20201115 22:02:00.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.422" endtime="20201115 22:02:00.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.808" level="INFO">${RESULT} = [{'time': 0.026530375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.026621278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:00.804" endtime="20201115 22:02:00.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.821" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:00.808" endtime="20201115 22:02:00.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.825" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:00.824" endtime="20201115 22:02:00.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.828" level="INFO">VALUE: [5.9029999999980765e-06, 5.875000000002406e-06, 5.9029999999980765e-06, 5.889000000001976e-06, 5.917000000001116e-06, 5.916999999997646e-06, 5.8889999999985065e-06, 5.901999999998603e-06, 5.901999999998603e-06, 5.901999999998603e-06, 5.8889999999985065e-06, 5.958000000000352e-06, 5.8479999999992704e-06, 5.916000000001642e-06, 5.8889999999985065e-06, 5.874999999998937e-06, 5.903000000001546e-06, 5.901999999998603e-06, 5.9589999999998255e-06, 5.903000000001546e-06, 5.9029999999980765e-06, 5.889000000001976e-06, 5.915999999998173e-06, 5.916000000001642e-06, 5.9729999999993955e-06, 5.820000000000131e-06, 5.9729999999993955e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.833000000000227e-06, 5.903000000001546e-06, 5.916000000001642e-06, 5.8889999999985065e-06, 5.9029999999980765e-06, 5.9029999999980765e-06, 5.875000000002406e-06, 5.889000000001976e-06, 5.887999999999033e-06, 5.846999999999797e-06, 5.930000000001212e-06, 5.8889999999985065e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.9029999999980765e-06, 5.931000000000686e-06, 5.916000000001642e-06, 5.901999999998603e-06, 5.903000000001546e-06, 5.9029999999980765e-06, 5.889000000001976e-06]</msg>
<status status="PASS" starttime="20201115 22:02:00.826" endtime="20201115 22:02:00.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.822" endtime="20201115 22:02:00.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.831" endtime="20201115 22:02:00.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.834" endtime="20201115 22:02:00.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.833" endtime="20201115 22:02:00.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.829" endtime="20201115 22:02:00.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.376" endtime="20201115 22:02:00.855"></status>
</kw>
<msg timestamp="20201115 22:02:00.855" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.864" endtime="20201115 22:02:00.879"></status>
</kw>
<msg timestamp="20201115 22:02:00.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.863" endtime="20201115 22:02:00.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.881" endtime="20201115 22:02:00.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.883" endtime="20201115 22:02:00.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.860" endtime="20201115 22:02:00.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.858" endtime="20201115 22:02:00.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.892" endtime="20201115 22:02:01.178"></status>
</kw>
<msg timestamp="20201115 22:02:01.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.890" endtime="20201115 22:02:01.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.183" endtime="20201115 22:02:01.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.192" endtime="20201115 22:02:01.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.888" endtime="20201115 22:02:01.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.886" endtime="20201115 22:02:01.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.206" level="INFO">${RESULT} = [{'time': 0.019835847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.019926097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.199" endtime="20201115 22:02:01.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.237" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:01.208" endtime="20201115 22:02:01.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.247" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:01.244" endtime="20201115 22:02:01.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.252" level="INFO">VALUE: [5.8889999999985065e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.84800000000274e-06, 5.888000000002502e-06, 5.9439999999973125e-06, 5.915999999998173e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.930000000001212e-06, 5.903000000001546e-06, 5.931000000000686e-06, 5.860999999999367e-06, 5.902000000002072e-06, 5.874999999998937e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.901999999998603e-06, 5.9029999999980765e-06, 5.8889999999985065e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.9029999999980765e-06, 5.874999999998937e-06, 5.915999999998173e-06, 5.887999999999033e-06, 5.9029999999980765e-06, 5.903000000001546e-06, 5.8889999999985065e-06, 5.875000000002406e-06, 5.9029999999980765e-06, 5.915999999998173e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.945000000000256e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.874999999998937e-06, 5.915999999998173e-06, 5.860999999999367e-06, 5.902000000002072e-06, 5.874999999998937e-06, 5.930000000001212e-06, 5.8889999999985065e-06, 5.903000000001546e-06, 5.902000000002072e-06]</msg>
<status status="PASS" starttime="20201115 22:02:01.249" endtime="20201115 22:02:01.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.239" endtime="20201115 22:02:01.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.259" endtime="20201115 22:02:01.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.266" endtime="20201115 22:02:01.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.263" endtime="20201115 22:02:01.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.255" endtime="20201115 22:02:01.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.856" endtime="20201115 22:02:01.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.171" endtime="20201115 22:02:01.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.170" endtime="20201115 22:02:01.291"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.293" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.302" endtime="20201115 22:02:01.317"></status>
</kw>
<msg timestamp="20201115 22:02:01.317" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.301" endtime="20201115 22:02:01.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.320" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.318" endtime="20201115 22:02:01.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.321" endtime="20201115 22:02:01.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.298" endtime="20201115 22:02:01.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.296" endtime="20201115 22:02:01.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.330" endtime="20201115 22:02:01.620"></status>
</kw>
<msg timestamp="20201115 22:02:01.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025850792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025857319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.329" endtime="20201115 22:02:01.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025850792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025857319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.624" endtime="20201115 22:02:01.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.633" endtime="20201115 22:02:01.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.326" endtime="20201115 22:02:01.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.324" endtime="20201115 22:02:01.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.639" level="INFO">${RESULT} = [{'time': 0.025857319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.025954903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:01.636" endtime="20201115 22:02:01.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.653" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:01.641" endtime="20201115 22:02:01.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.658" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:01.657" endtime="20201115 22:02:01.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.660" level="INFO">VALUE: [6.526999999999228e-06, 6.500000000003031e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.500000000003031e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.528000000002171e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.512999999999658e-06, 6.4729999999998955e-06, 6.512999999999658e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.500000000003031e-06, 6.513999999999132e-06, 6.526999999999228e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.556000000001311e-06, 6.485999999999992e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.4729999999998955e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.512999999999658e-06, 6.514000000002601e-06, 6.430000000001712e-06, 6.514000000002601e-06, 6.514000000002601e-06, 6.526999999999228e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.513999999999132e-06]</msg>
<status status="PASS" starttime="20201115 22:02:01.659" endtime="20201115 22:02:01.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.654" endtime="20201115 22:02:01.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.663" endtime="20201115 22:02:01.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.667" endtime="20201115 22:02:01.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.665" endtime="20201115 22:02:01.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.662" endtime="20201115 22:02:01.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.294" endtime="20201115 22:02:01.687"></status>
</kw>
<msg timestamp="20201115 22:02:01.688" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.697" endtime="20201115 22:02:01.712"></status>
</kw>
<msg timestamp="20201115 22:02:01.713" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.695" endtime="20201115 22:02:01.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.716" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.714" endtime="20201115 22:02:01.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.717" endtime="20201115 22:02:01.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.693" endtime="20201115 22:02:01.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.690" endtime="20201115 22:02:01.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.726" endtime="20201115 22:02:02.016"></status>
</kw>
<msg timestamp="20201115 22:02:02.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020031625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.724" endtime="20201115 22:02:02.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020031625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.026" endtime="20201115 22:02:02.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.044" endtime="20201115 22:02:02.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.722" endtime="20201115 22:02:02.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.720" endtime="20201115 22:02:02.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.059" level="INFO">${RESULT} = [{'time': 0.020031625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.020130694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:02.052" endtime="20201115 22:02:02.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.089" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:02.061" endtime="20201115 22:02:02.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.098" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:02.096" endtime="20201115 22:02:02.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.103" level="INFO">VALUE: [6.528000000002171e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.584000000000451e-06, 6.513999999999132e-06, 6.584000000000451e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.4579999999973825e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.4729999999998955e-06, 6.513999999999132e-06, 6.4579999999973825e-06, 6.542000000001741e-06, 6.512999999999658e-06, 6.514000000002601e-06, 6.527000000002697e-06, 6.540999999998798e-06, 6.526999999999228e-06, 6.499999999999562e-06, 6.458000000000852e-06, 6.542000000001741e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.528000000002171e-06, 6.485999999999992e-06, 6.5829999999975075e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.512999999999658e-06, 6.513999999999132e-06, 6.445000000000756e-06, 6.513999999999132e-06, 6.514000000002601e-06]</msg>
<status status="PASS" starttime="20201115 22:02:02.101" endtime="20201115 22:02:02.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.091" endtime="20201115 22:02:02.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.106" endtime="20201115 22:02:02.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.109" endtime="20201115 22:02:02.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.108" endtime="20201115 22:02:02.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.104" endtime="20201115 22:02:02.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.688" endtime="20201115 22:02:02.130"></status>
</kw>
<msg timestamp="20201115 22:02:02.130" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.140" endtime="20201115 22:02:02.155"></status>
</kw>
<msg timestamp="20201115 22:02:02.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.137" endtime="20201115 22:02:02.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.157" endtime="20201115 22:02:02.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.159" endtime="20201115 22:02:02.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.135" endtime="20201115 22:02:02.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.133" endtime="20201115 22:02:02.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.168" endtime="20201115 22:02:02.466"></status>
</kw>
<msg timestamp="20201115 22:02:02.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020549875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.167" endtime="20201115 22:02:02.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020549875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.470" endtime="20201115 22:02:02.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.478" endtime="20201115 22:02:02.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.164" endtime="20201115 22:02:02.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.162" endtime="20201115 22:02:02.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.485" level="INFO">${RESULT} = [{'time': 0.020549875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.020646722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:02.481" endtime="20201115 22:02:02.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.498" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:02.486" endtime="20201115 22:02:02.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.502" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:02.501" endtime="20201115 22:02:02.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.505" level="INFO">VALUE: [6.513999999999132e-06, 6.513999999999132e-06, 6.5969999999970774e-06, 6.514000000002601e-06, 6.458000000000852e-06, 6.526999999999228e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.555999999997841e-06, 6.499999999999562e-06, 6.528000000002171e-06, 6.5279999999987015e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.472000000000422e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.527000000002697e-06, 6.513999999999132e-06, 6.500000000003031e-06, 6.5279999999987015e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.526999999999228e-06, 6.444000000001282e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.513999999999132e-06]</msg>
<status status="PASS" starttime="20201115 22:02:02.504" endtime="20201115 22:02:02.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.499" endtime="20201115 22:02:02.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.508" endtime="20201115 22:02:02.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.511" endtime="20201115 22:02:02.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.510" endtime="20201115 22:02:02.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.506" endtime="20201115 22:02:02.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.131" endtime="20201115 22:02:02.532"></status>
</kw>
<msg timestamp="20201115 22:02:02.533" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.542" endtime="20201115 22:02:02.556"></status>
</kw>
<msg timestamp="20201115 22:02:02.557" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.540" endtime="20201115 22:02:02.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.558" endtime="20201115 22:02:02.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.560" endtime="20201115 22:02:02.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.537" endtime="20201115 22:02:02.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.535" endtime="20201115 22:02:02.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.570" endtime="20201115 22:02:02.864"></status>
</kw>
<msg timestamp="20201115 22:02:02.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.568" endtime="20201115 22:02:02.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.874" endtime="20201115 22:02:02.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.892" endtime="20201115 22:02:02.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.565" endtime="20201115 22:02:02.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.564" endtime="20201115 22:02:02.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.906" level="INFO">${RESULT} = [{'time': 0.020169444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.527000000002697e-06, 'source_diff': 6.527000000002697e-06}, {'time': 0.020265708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:02.898" endtime="20201115 22:02:02.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.922" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:02.908" endtime="20201115 22:02:02.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.927" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:02.926" endtime="20201115 22:02:02.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.929" level="INFO">VALUE: [6.527000000002697e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.541000000002267e-06, 6.5829999999975075e-06, 6.499999999999562e-06, 6.472000000000422e-06, 6.556000000001311e-06, 6.513999999999132e-06, 6.528000000002171e-06, 6.513999999999132e-06, 6.500000000003031e-06, 6.597000000000547e-06, 6.513999999999132e-06, 6.528000000002171e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.500000000003031e-06, 6.459000000000326e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.513999999999132e-06, 6.542000000001741e-06, 6.568999999997938e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.528000000002171e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.514000000002601e-06, 6.569000000001407e-06, 6.500000000003031e-06, 6.568999999997938e-06, 6.5279999999987015e-06, 6.514000000002601e-06, 6.568999999997938e-06, 6.541999999998271e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.500000000003031e-06, 6.499999999999562e-06]</msg>
<status status="PASS" starttime="20201115 22:02:02.928" endtime="20201115 22:02:02.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.923" endtime="20201115 22:02:02.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.932" endtime="20201115 22:02:02.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.936" endtime="20201115 22:02:02.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.934" endtime="20201115 22:02:02.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.930" endtime="20201115 22:02:02.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.533" endtime="20201115 22:02:02.957"></status>
</kw>
<msg timestamp="20201115 22:02:02.957" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.966" endtime="20201115 22:02:02.981"></status>
</kw>
<msg timestamp="20201115 22:02:02.981" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.964" endtime="20201115 22:02:02.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.983" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.982" endtime="20201115 22:02:02.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.984" endtime="20201115 22:02:02.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.961" endtime="20201115 22:02:02.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.959" endtime="20201115 22:02:02.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.993" endtime="20201115 22:02:03.286"></status>
</kw>
<msg timestamp="20201115 22:02:03.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.992" endtime="20201115 22:02:03.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.290" endtime="20201115 22:02:03.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.298" endtime="20201115 22:02:03.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.989" endtime="20201115 22:02:03.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.988" endtime="20201115 22:02:03.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.305" level="INFO">${RESULT} = [{'time': 0.019884833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.514000000002601e-06, 'source_diff': 6.514000000002601e-06}, {'time': 0.019983986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:03.301" endtime="20201115 22:02:03.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.318" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:03.306" endtime="20201115 22:02:03.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.323" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:03.322" endtime="20201115 22:02:03.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.325" level="INFO">VALUE: [6.514000000002601e-06, 6.513999999999132e-06, 6.555000000001837e-06, 6.512999999999658e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.512999999999658e-06, 6.528000000002171e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.458999999996856e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.542000000001741e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.471999999996952e-06, 6.499999999999562e-06, 6.500000000003031e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.471999999996952e-06, 6.513999999999132e-06, 6.554999999998368e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.500000000003031e-06, 6.570000000000881e-06, 6.584000000000451e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.459000000000326e-06, 6.512999999999658e-06, 6.528000000002171e-06, 6.513999999999132e-06, 6.4729999999998955e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.528000000002171e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.526999999999228e-06]</msg>
<status status="PASS" starttime="20201115 22:02:03.324" endtime="20201115 22:02:03.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.319" endtime="20201115 22:02:03.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.329" endtime="20201115 22:02:03.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.332" endtime="20201115 22:02:03.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.331" endtime="20201115 22:02:03.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.327" endtime="20201115 22:02:03.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.957" endtime="20201115 22:02:03.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.292" endtime="20201115 22:02:03.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.292" endtime="20201115 22:02:03.353"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.355" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.364" endtime="20201115 22:02:03.380"></status>
</kw>
<msg timestamp="20201115 22:02:03.380" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.363" endtime="20201115 22:02:03.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.381" endtime="20201115 22:02:03.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.384" endtime="20201115 22:02:03.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.360" endtime="20201115 22:02:03.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.358" endtime="20201115 22:02:03.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.392" endtime="20201115 22:02:03.679"></status>
</kw>
<msg timestamp="20201115 22:02:03.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.391" endtime="20201115 22:02:03.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.683" endtime="20201115 22:02:03.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.691" endtime="20201115 22:02:03.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.388" endtime="20201115 22:02:03.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.387" endtime="20201115 22:02:03.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.698" level="INFO">${RESULT} = [{'time': 0.022103875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.022208833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:03.694" endtime="20201115 22:02:03.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.711" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:03.698" endtime="20201115 22:02:03.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.715" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:03.714" endtime="20201115 22:02:03.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.718" level="INFO">VALUE: [7.138999999999757e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.153000000002796e-06, 7.125000000000187e-06, 7.110999999997147e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.0969999999975775e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.124999999996717e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.068999999998438e-06, 7.125000000000187e-06, 7.139000000003226e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.054999999998868e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.1120000000000905e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.1120000000000905e-06, 7.054999999998868e-06, 7.110999999997147e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.069000000001907e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.208000000001602e-06, 7.165999999999423e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.151999999999853e-06, 7.138999999999757e-06]</msg>
<status status="PASS" starttime="20201115 22:02:03.716" endtime="20201115 22:02:03.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.712" endtime="20201115 22:02:03.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.721" endtime="20201115 22:02:03.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.725" endtime="20201115 22:02:03.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.723" endtime="20201115 22:02:03.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.720" endtime="20201115 22:02:03.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.356" endtime="20201115 22:02:03.745"></status>
</kw>
<msg timestamp="20201115 22:02:03.746" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.755" endtime="20201115 22:02:03.770"></status>
</kw>
<msg timestamp="20201115 22:02:03.770" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.753" endtime="20201115 22:02:03.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.771" endtime="20201115 22:02:03.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.774" endtime="20201115 22:02:03.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.750" endtime="20201115 22:02:03.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.748" endtime="20201115 22:02:03.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.783" endtime="20201115 22:02:04.070"></status>
</kw>
<msg timestamp="20201115 22:02:04.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.781" endtime="20201115 22:02:04.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.074" endtime="20201115 22:02:04.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.083" endtime="20201115 22:02:04.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.778" endtime="20201115 22:02:04.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.777" endtime="20201115 22:02:04.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.089" level="INFO">${RESULT} = [{'time': 0.019862681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.019966625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:04.086" endtime="20201115 22:02:04.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.102" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:04.090" endtime="20201115 22:02:04.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.107" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:04.106" endtime="20201115 22:02:04.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.110" level="INFO">VALUE: [7.125000000000187e-06, 7.139000000003226e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.165999999999423e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.138000000000283e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.0829999999980076e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.139000000003226e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.139000000003226e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.138000000000283e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.139000000003226e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.068999999998438e-06, 7.110999999997147e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.138000000000283e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.181000000001936e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.125000000000187e-06]</msg>
<status status="PASS" starttime="20201115 22:02:04.108" endtime="20201115 22:02:04.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.104" endtime="20201115 22:02:04.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.113" endtime="20201115 22:02:04.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.116" endtime="20201115 22:02:04.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.115" endtime="20201115 22:02:04.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.111" endtime="20201115 22:02:04.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.746" endtime="20201115 22:02:04.137"></status>
</kw>
<msg timestamp="20201115 22:02:04.137" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.146" endtime="20201115 22:02:04.161"></status>
</kw>
<msg timestamp="20201115 22:02:04.162" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.144" endtime="20201115 22:02:04.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.164" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.163" endtime="20201115 22:02:04.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.165" endtime="20201115 22:02:04.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.142" endtime="20201115 22:02:04.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.140" endtime="20201115 22:02:04.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.174" endtime="20201115 22:02:04.460"></status>
</kw>
<msg timestamp="20201115 22:02:04.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019845889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.173" endtime="20201115 22:02:04.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019845889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.464" endtime="20201115 22:02:04.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.473" endtime="20201115 22:02:04.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.170" endtime="20201115 22:02:04.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.168" endtime="20201115 22:02:04.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.479" level="INFO">${RESULT} = [{'time': 0.019845889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.019950764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:04.476" endtime="20201115 22:02:04.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.493" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:04.481" endtime="20201115 22:02:04.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.497" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:04.496" endtime="20201115 22:02:04.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.500" level="INFO">VALUE: [7.125000000000187e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.056000000001811e-06, 7.138999999999757e-06, 7.110999999997147e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.084000000000951e-06, 7.069000000001907e-06, 7.125000000000187e-06, 7.083000000001477e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.068999999998438e-06, 7.125000000000187e-06, 7.138000000000283e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.138000000000283e-06, 7.124999999996717e-06, 7.125000000000187e-06, 7.069000000001907e-06, 7.138999999999757e-06, 7.2079999999981326e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.1120000000000905e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.111000000000617e-06]</msg>
<status status="PASS" starttime="20201115 22:02:04.498" endtime="20201115 22:02:04.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.494" endtime="20201115 22:02:04.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.503" endtime="20201115 22:02:04.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.506" endtime="20201115 22:02:04.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.505" endtime="20201115 22:02:04.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.501" endtime="20201115 22:02:04.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.137" endtime="20201115 22:02:04.527"></status>
</kw>
<msg timestamp="20201115 22:02:04.527" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.536" endtime="20201115 22:02:04.552"></status>
</kw>
<msg timestamp="20201115 22:02:04.552" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.534" endtime="20201115 22:02:04.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.554" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.553" endtime="20201115 22:02:04.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.555" endtime="20201115 22:02:04.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.532" endtime="20201115 22:02:04.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.530" endtime="20201115 22:02:04.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.564" endtime="20201115 22:02:04.851"></status>
</kw>
<msg timestamp="20201115 22:02:04.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019741486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.563" endtime="20201115 22:02:04.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019741486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.855" endtime="20201115 22:02:04.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.864" endtime="20201115 22:02:04.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.560" endtime="20201115 22:02:04.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.559" endtime="20201115 22:02:04.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.871" level="INFO">${RESULT} = [{'time': 0.019741486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.019846611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:04.867" endtime="20201115 22:02:04.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.884" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:04.872" endtime="20201115 22:02:04.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.888" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:04.887" endtime="20201115 22:02:04.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.891" level="INFO">VALUE: [7.138999999999757e-06, 7.1529999999993266e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.151999999999853e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.195000000001506e-06, 7.125000000000187e-06, 7.139000000003226e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.138000000000283e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.151999999999853e-06, 7.0980000000005206e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.138000000000283e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.110999999997147e-06]</msg>
<status status="PASS" starttime="20201115 22:02:04.890" endtime="20201115 22:02:04.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.885" endtime="20201115 22:02:04.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.894" endtime="20201115 22:02:04.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.897" endtime="20201115 22:02:04.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.896" endtime="20201115 22:02:04.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.892" endtime="20201115 22:02:04.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.528" endtime="20201115 22:02:04.918"></status>
</kw>
<msg timestamp="20201115 22:02:04.918" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.927" endtime="20201115 22:02:04.943"></status>
</kw>
<msg timestamp="20201115 22:02:04.943" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.926" endtime="20201115 22:02:04.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.946" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.944" endtime="20201115 22:02:04.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.947" endtime="20201115 22:02:04.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.923" endtime="20201115 22:02:04.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.921" endtime="20201115 22:02:04.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.956" endtime="20201115 22:02:05.242"></status>
</kw>
<msg timestamp="20201115 22:02:05.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.954" endtime="20201115 22:02:05.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.246" endtime="20201115 22:02:05.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.255" endtime="20201115 22:02:05.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.952" endtime="20201115 22:02:05.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.950" endtime="20201115 22:02:05.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.261" level="INFO">${RESULT} = [{'time': 0.019951417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.020057014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:05.258" endtime="20201115 22:02:05.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.275" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:05.262" endtime="20201115 22:02:05.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.279" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:05.278" endtime="20201115 22:02:05.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.282" level="INFO">VALUE: [7.125000000000187e-06, 7.125000000000187e-06, 7.110999999997147e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.1529999999993266e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.151999999999853e-06, 7.0969999999975775e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.1669999999988965e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.1529999999993266e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.1529999999993266e-06, 7.0969999999975775e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.068999999998438e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.138000000000283e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.1120000000000905e-06, 7.0980000000005206e-06, 7.083000000001477e-06, 7.125000000000187e-06, 7.138000000000283e-06, 7.111000000000617e-06, 7.111000000000617e-06]</msg>
<status status="PASS" starttime="20201115 22:02:05.280" endtime="20201115 22:02:05.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.276" endtime="20201115 22:02:05.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.285" endtime="20201115 22:02:05.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.288" endtime="20201115 22:02:05.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.287" endtime="20201115 22:02:05.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.283" endtime="20201115 22:02:05.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.919" endtime="20201115 22:02:05.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.354" endtime="20201115 22:02:05.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.354" endtime="20201115 22:02:05.309"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.312" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.320" endtime="20201115 22:02:05.336"></status>
</kw>
<msg timestamp="20201115 22:02:05.336" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.319" endtime="20201115 22:02:05.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.339" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.337" endtime="20201115 22:02:05.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.340" endtime="20201115 22:02:05.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.316" endtime="20201115 22:02:05.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.314" endtime="20201115 22:02:05.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.349" endtime="20201115 22:02:05.636"></status>
</kw>
<msg timestamp="20201115 22:02:05.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.348" endtime="20201115 22:02:05.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.641" endtime="20201115 22:02:05.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.648" endtime="20201115 22:02:05.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.345" endtime="20201115 22:02:05.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.343" endtime="20201115 22:02:05.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.655" level="INFO">${RESULT} = [{'time': 0.022461778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.022576125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:05.652" endtime="20201115 22:02:05.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.668" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:05.656" endtime="20201115 22:02:05.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.673" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:05.672" endtime="20201115 22:02:05.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.675" level="INFO">VALUE: [7.750000000000812e-06, 7.735999999997772e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.721999999998203e-06, 7.693999999999063e-06, 7.764000000000382e-06, 7.763999999996912e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.749999999997342e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.806000000002561e-06, 7.721999999998203e-06, 7.750000000000812e-06, 7.709000000001576e-06, 7.749999999997342e-06, 7.749999999997342e-06, 7.805999999999091e-06, 7.763000000000908e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.735999999997772e-06, 7.750000000000812e-06, 7.763999999996912e-06, 7.722000000001672e-06, 7.763000000000908e-06, 7.750000000000812e-06, 7.804999999999618e-06, 7.680999999998966e-06, 7.736000000001242e-06, 7.763000000000908e-06, 7.736000000001242e-06, 7.737000000000716e-06, 7.749999999997342e-06, 7.665999999999923e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.721999999998203e-06, 7.736000000001242e-06, 7.735999999997772e-06, 7.737000000000716e-06]</msg>
<status status="PASS" starttime="20201115 22:02:05.674" endtime="20201115 22:02:05.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.669" endtime="20201115 22:02:05.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.678" endtime="20201115 22:02:05.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.682" endtime="20201115 22:02:05.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.680" endtime="20201115 22:02:05.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.677" endtime="20201115 22:02:05.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.312" endtime="20201115 22:02:05.702"></status>
</kw>
<msg timestamp="20201115 22:02:05.703" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.711" endtime="20201115 22:02:05.727"></status>
</kw>
<msg timestamp="20201115 22:02:05.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.710" endtime="20201115 22:02:05.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.729" endtime="20201115 22:02:05.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.732" endtime="20201115 22:02:05.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.707" endtime="20201115 22:02:05.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.705" endtime="20201115 22:02:05.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.741" endtime="20201115 22:02:06.026"></status>
</kw>
<msg timestamp="20201115 22:02:06.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.739" endtime="20201115 22:02:06.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.030" endtime="20201115 22:02:06.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.038" endtime="20201115 22:02:06.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.736" endtime="20201115 22:02:06.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.735" endtime="20201115 22:02:06.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.045" level="INFO">${RESULT} = [{'time': 0.019708556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.019822833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.042" endtime="20201115 22:02:06.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.058" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:06.046" endtime="20201115 22:02:06.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.063" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:06.062" endtime="20201115 22:02:06.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.065" level="INFO">VALUE: [7.749999999997342e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.708999999998106e-06, 7.735999999997772e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.735999999997772e-06, 7.750000000000812e-06, 7.804999999999618e-06, 7.777999999999952e-06, 7.763999999996912e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.652000000000353e-06, 7.735999999997772e-06, 7.723000000001146e-06, 7.694999999998536e-06, 7.805999999999091e-06, 7.736000000001242e-06, 7.722999999997676e-06, 7.680999999998966e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.805999999999091e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.736999999997246e-06, 7.749999999997342e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.721999999998203e-06, 7.736000000001242e-06, 7.709000000001576e-06, 7.707999999998633e-06, 7.750000000000812e-06, 7.736999999997246e-06, 7.736000000001242e-06, 7.735999999997772e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.722000000001672e-06, 7.749999999997342e-06, 7.749999999997342e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.736000000001242e-06]</msg>
<status status="PASS" starttime="20201115 22:02:06.064" endtime="20201115 22:02:06.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.059" endtime="20201115 22:02:06.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.068" endtime="20201115 22:02:06.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.072" endtime="20201115 22:02:06.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.070" endtime="20201115 22:02:06.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.067" endtime="20201115 22:02:06.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.703" endtime="20201115 22:02:06.092"></status>
</kw>
<msg timestamp="20201115 22:02:06.092" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.108" endtime="20201115 22:02:06.124"></status>
</kw>
<msg timestamp="20201115 22:02:06.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.100" endtime="20201115 22:02:06.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.127" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.125" endtime="20201115 22:02:06.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.128" endtime="20201115 22:02:06.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.097" endtime="20201115 22:02:06.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.095" endtime="20201115 22:02:06.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.137" endtime="20201115 22:02:06.423"></status>
</kw>
<msg timestamp="20201115 22:02:06.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026257833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026265583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.135" endtime="20201115 22:02:06.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026257833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026265583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.427" endtime="20201115 22:02:06.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.435" endtime="20201115 22:02:06.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.133" endtime="20201115 22:02:06.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.131" endtime="20201115 22:02:06.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.442" level="INFO">${RESULT} = [{'time': 0.026265583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.026376917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.439" endtime="20201115 22:02:06.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.455" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:06.443" endtime="20201115 22:02:06.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.460" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:06.459" endtime="20201115 22:02:06.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.462" level="INFO">VALUE: [7.749999999997342e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.735999999997772e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.735999999997772e-06, 7.736000000001242e-06, 7.749999999997342e-06, 7.750000000000812e-06, 7.722000000001672e-06, 7.737000000000716e-06, 7.805999999999091e-06, 7.666999999999397e-06, 7.721999999998203e-06, 7.749999999997342e-06, 7.723000000001146e-06, 7.819999999998661e-06, 7.736000000001242e-06, 7.791000000000048e-06, 7.722000000001672e-06, 7.693999999999063e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.737000000000716e-06, 7.736000000001242e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.776999999997009e-06, 7.722000000001672e-06, 7.736999999997246e-06, 7.735999999997772e-06, 7.750000000000812e-06, 7.708000000002102e-06, 7.736000000001242e-06, 7.666999999999397e-06, 7.763999999996912e-06, 7.750000000000812e-06, 7.749999999997342e-06, 7.735999999997772e-06, 7.805999999999091e-06, 7.665999999996453e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.709000000001576e-06, 7.736000000001242e-06]</msg>
<status status="PASS" starttime="20201115 22:02:06.461" endtime="20201115 22:02:06.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.456" endtime="20201115 22:02:06.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.466" endtime="20201115 22:02:06.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.469" endtime="20201115 22:02:06.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.467" endtime="20201115 22:02:06.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.464" endtime="20201115 22:02:06.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.093" endtime="20201115 22:02:06.490"></status>
</kw>
<msg timestamp="20201115 22:02:06.490" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.499" endtime="20201115 22:02:06.515"></status>
</kw>
<msg timestamp="20201115 22:02:06.516" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.497" endtime="20201115 22:02:06.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.518" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.517" endtime="20201115 22:02:06.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.519" endtime="20201115 22:02:06.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.495" endtime="20201115 22:02:06.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.493" endtime="20201115 22:02:06.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.528" endtime="20201115 22:02:06.815"></status>
</kw>
<msg timestamp="20201115 22:02:06.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.527" endtime="20201115 22:02:06.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.819" endtime="20201115 22:02:06.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.827" endtime="20201115 22:02:06.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.524" endtime="20201115 22:02:06.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.522" endtime="20201115 22:02:06.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.834" level="INFO">${RESULT} = [{'time': 0.020212361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.020324319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.830" endtime="20201115 22:02:06.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.847" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:06.834" endtime="20201115 22:02:06.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.851" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:06.850" endtime="20201115 22:02:06.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.854" level="INFO">VALUE: [7.750000000000812e-06, 7.722000000001672e-06, 7.735999999997772e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.749999999997342e-06, 7.749999999997342e-06, 7.723000000001146e-06, 7.750000000000812e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.749999999997342e-06, 7.805999999999091e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.694999999998536e-06, 7.764000000000382e-06, 7.735999999997772e-06, 7.736000000001242e-06, 7.749999999997342e-06, 7.777000000000478e-06, 7.735999999997772e-06, 7.721999999998203e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.681000000002436e-06, 7.735999999997772e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.721999999998203e-06, 7.750000000000812e-06, 7.695000000002006e-06, 7.735999999997772e-06, 7.735999999997772e-06, 7.737000000000716e-06, 7.735999999997772e-06, 7.735999999997772e-06, 7.750000000000812e-06, 7.735999999997772e-06]</msg>
<status status="PASS" starttime="20201115 22:02:06.852" endtime="20201115 22:02:06.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.848" endtime="20201115 22:02:06.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.857" endtime="20201115 22:02:06.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.861" endtime="20201115 22:02:06.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.859" endtime="20201115 22:02:06.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.855" endtime="20201115 22:02:06.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.491" endtime="20201115 22:02:06.881"></status>
</kw>
<msg timestamp="20201115 22:02:06.882" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.890" endtime="20201115 22:02:06.905"></status>
</kw>
<msg timestamp="20201115 22:02:06.906" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.889" endtime="20201115 22:02:06.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.908" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.907" endtime="20201115 22:02:06.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.909" endtime="20201115 22:02:06.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.886" endtime="20201115 22:02:06.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.884" endtime="20201115 22:02:06.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.918" endtime="20201115 22:02:07.206"></status>
</kw>
<msg timestamp="20201115 22:02:07.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.917" endtime="20201115 22:02:07.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.210" endtime="20201115 22:02:07.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.218" endtime="20201115 22:02:07.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.914" endtime="20201115 22:02:07.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.913" endtime="20201115 22:02:07.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.225" level="INFO">${RESULT} = [{'time': 0.019816694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.019928333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:07.222" endtime="20201115 22:02:07.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.238" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:07.226" endtime="20201115 22:02:07.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.243" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:07.242" endtime="20201115 22:02:07.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.245" level="INFO">VALUE: [7.750000000000812e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.693999999999063e-06, 7.736999999997246e-06, 7.722000000001672e-06, 7.805999999999091e-06, 7.735999999997772e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.694999999998536e-06, 7.721999999998203e-06, 7.818999999999188e-06, 7.736000000001242e-06, 7.737000000000716e-06, 7.736000000001242e-06, 7.709000000001576e-06, 7.749999999997342e-06, 7.723000000001146e-06, 7.736000000001242e-06, 7.721999999998203e-06, 7.764000000000382e-06, 7.791999999999522e-06, 7.750000000000812e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.735999999997772e-06, 7.791000000000048e-06, 7.736000000001242e-06, 7.791999999999522e-06, 7.777000000000478e-06, 7.721999999998203e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.749999999997342e-06, 7.736000000001242e-06, 7.791000000000048e-06, 7.791999999999522e-06, 7.737000000000716e-06, 7.735999999997772e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.791999999999522e-06, 7.750000000000812e-06, 7.764000000000382e-06]</msg>
<status status="PASS" starttime="20201115 22:02:07.244" endtime="20201115 22:02:07.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.239" endtime="20201115 22:02:07.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.249" endtime="20201115 22:02:07.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.252" endtime="20201115 22:02:07.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.251" endtime="20201115 22:02:07.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.247" endtime="20201115 22:02:07.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.882" endtime="20201115 22:02:07.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.311" endtime="20201115 22:02:07.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.310" endtime="20201115 22:02:07.273"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.276" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.284" endtime="20201115 22:02:07.301"></status>
</kw>
<msg timestamp="20201115 22:02:07.301" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.283" endtime="20201115 22:02:07.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.304" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.302" endtime="20201115 22:02:07.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.305" endtime="20201115 22:02:07.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.280" endtime="20201115 22:02:07.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.278" endtime="20201115 22:02:07.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.314" endtime="20201115 22:02:07.600"></status>
</kw>
<msg timestamp="20201115 22:02:07.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.312" endtime="20201115 22:02:07.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.604" endtime="20201115 22:02:07.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.612" endtime="20201115 22:02:07.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.310" endtime="20201115 22:02:07.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.308" endtime="20201115 22:02:07.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.619" level="INFO">${RESULT} = [{'time': 0.022356514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.022477, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:07.616" endtime="20201115 22:02:07.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.633" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:07.620" endtime="20201115 22:02:07.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.637" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:07.636" endtime="20201115 22:02:07.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.640" level="INFO">VALUE: [8.347000000002297e-06, 8.305999999999591e-06, 8.347000000002297e-06, 8.403000000000577e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.347999999998301e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.332999999999258e-06, 8.347000000002297e-06, 8.360999999998397e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.361000000001867e-06, 8.361000000001867e-06, 8.361000000001867e-06, 8.292000000000022e-06, 8.34800000000177e-06, 8.401999999997634e-06, 8.332999999999258e-06, 8.34800000000177e-06, 8.346999999998828e-06, 8.347999999998301e-06, 8.361000000001867e-06, 8.361000000001867e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.292000000000022e-06, 8.332999999999258e-06, 8.361999999997871e-06, 8.292000000000022e-06, 8.34800000000177e-06, 8.346999999998828e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.347999999998301e-06, 8.347000000002297e-06, 8.375000000001437e-06, 8.3340000000022e-06, 8.346999999998828e-06, 8.333999999998731e-06, 8.361000000001867e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.318999999999688e-06]</msg>
<status status="PASS" starttime="20201115 22:02:07.638" endtime="20201115 22:02:07.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.633" endtime="20201115 22:02:07.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.643" endtime="20201115 22:02:07.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.646" endtime="20201115 22:02:07.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.645" endtime="20201115 22:02:07.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.642" endtime="20201115 22:02:07.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.276" endtime="20201115 22:02:07.667"></status>
</kw>
<msg timestamp="20201115 22:02:07.667" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.676" endtime="20201115 22:02:07.692"></status>
</kw>
<msg timestamp="20201115 22:02:07.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.675" endtime="20201115 22:02:07.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.695" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.694" endtime="20201115 22:02:07.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.696" endtime="20201115 22:02:07.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.672" endtime="20201115 22:02:07.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.670" endtime="20201115 22:02:07.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.705" endtime="20201115 22:02:07.991"></status>
</kw>
<msg timestamp="20201115 22:02:07.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.704" endtime="20201115 22:02:07.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.995" endtime="20201115 22:02:08.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.004" endtime="20201115 22:02:08.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.701" endtime="20201115 22:02:08.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.699" endtime="20201115 22:02:08.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.010" level="INFO">${RESULT} = [{'time': 0.019988125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.020109417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:08.007" endtime="20201115 22:02:08.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.023" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:08.011" endtime="20201115 22:02:08.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.028" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:08.027" endtime="20201115 22:02:08.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.031" level="INFO">VALUE: [8.346999999998828e-06, 8.375000000001437e-06, 8.360999999998397e-06, 8.3340000000022e-06, 8.430000000000243e-06, 8.34800000000177e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.346999999998828e-06, 8.333999999998731e-06, 8.319999999999161e-06, 8.346999999998828e-06, 8.416000000000673e-06, 8.346999999998828e-06, 8.3340000000022e-06, 8.389000000001007e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.375000000001437e-06, 8.3340000000022e-06, 8.332999999999258e-06, 8.32000000000263e-06, 8.402000000001103e-06, 8.346999999998828e-06, 8.319000000003157e-06, 8.374999999997967e-06, 8.333999999998731e-06, 8.388000000001533e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.319999999999161e-06, 8.347000000002297e-06, 8.360999999998397e-06, 8.389000000001007e-06, 8.305999999999591e-06, 8.347999999998301e-06, 8.347000000002297e-06, 8.403000000000577e-06, 8.347999999998301e-06, 8.360999999998397e-06, 8.375000000001437e-06, 8.430999999999716e-06, 8.430999999999716e-06, 8.388999999997537e-06, 8.347999999998301e-06, 8.347000000002297e-06, 8.34800000000177e-06, 8.375000000001437e-06, 8.360999999998397e-06]</msg>
<status status="PASS" starttime="20201115 22:02:08.030" endtime="20201115 22:02:08.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.025" endtime="20201115 22:02:08.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.034" endtime="20201115 22:02:08.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.037" endtime="20201115 22:02:08.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.036" endtime="20201115 22:02:08.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.032" endtime="20201115 22:02:08.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.668" endtime="20201115 22:02:08.058"></status>
</kw>
<msg timestamp="20201115 22:02:08.058" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.067" endtime="20201115 22:02:08.082"></status>
</kw>
<msg timestamp="20201115 22:02:08.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.065" endtime="20201115 22:02:08.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.084" endtime="20201115 22:02:08.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.086" endtime="20201115 22:02:08.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.063" endtime="20201115 22:02:08.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.061" endtime="20201115 22:02:08.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.095" endtime="20201115 22:02:08.382"></status>
</kw>
<msg timestamp="20201115 22:02:08.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019727694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.094" endtime="20201115 22:02:08.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019727694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.387" endtime="20201115 22:02:08.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.395" endtime="20201115 22:02:08.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.091" endtime="20201115 22:02:08.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.090" endtime="20201115 22:02:08.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.401" level="INFO">${RESULT} = [{'time': 0.019727694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019850167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:08.398" endtime="20201115 22:02:08.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.415" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:08.403" endtime="20201115 22:02:08.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.419" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:08.418" endtime="20201115 22:02:08.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.422" level="INFO">VALUE: [8.361000000001867e-06, 8.347999999998301e-06, 8.319999999999161e-06, 8.347000000002297e-06, 8.360999999998397e-06, 8.361000000001867e-06, 8.3340000000022e-06, 8.346999999998828e-06, 8.36200000000134e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.389000000001007e-06, 8.333000000002727e-06, 8.346999999998828e-06, 8.388999999997537e-06, 8.36200000000134e-06, 8.360999999998397e-06, 8.389000000001007e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.36200000000134e-06, 8.346999999998828e-06, 8.333000000002727e-06, 8.305999999999591e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.375000000001437e-06, 8.318999999999688e-06, 8.318999999999688e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.360999999998397e-06, 8.333000000002727e-06, 8.360999999998397e-06, 8.292000000000022e-06, 8.332999999999258e-06, 8.3340000000022e-06, 8.347000000002297e-06, 8.36200000000134e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.34800000000177e-06, 8.347000000002297e-06]</msg>
<status status="PASS" starttime="20201115 22:02:08.420" endtime="20201115 22:02:08.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.416" endtime="20201115 22:02:08.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.425" endtime="20201115 22:02:08.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.428" endtime="20201115 22:02:08.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.427" endtime="20201115 22:02:08.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.423" endtime="20201115 22:02:08.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.059" endtime="20201115 22:02:08.449"></status>
</kw>
<msg timestamp="20201115 22:02:08.449" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.458" endtime="20201115 22:02:08.474"></status>
</kw>
<msg timestamp="20201115 22:02:08.474" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.457" endtime="20201115 22:02:08.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.477" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.475" endtime="20201115 22:02:08.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.478" endtime="20201115 22:02:08.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.454" endtime="20201115 22:02:08.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.452" endtime="20201115 22:02:08.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.487" endtime="20201115 22:02:08.775"></status>
</kw>
<msg timestamp="20201115 22:02:08.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019909542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.486" endtime="20201115 22:02:08.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019909542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.779" endtime="20201115 22:02:08.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.787" endtime="20201115 22:02:08.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.483" endtime="20201115 22:02:08.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.481" endtime="20201115 22:02:08.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.794" level="INFO">${RESULT} = [{'time': 0.019909542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.020031375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:08.791" endtime="20201115 22:02:08.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.807" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:08.795" endtime="20201115 22:02:08.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.812" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:08.811" endtime="20201115 22:02:08.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.814" level="INFO">VALUE: [8.360999999998397e-06, 8.361000000001867e-06, 8.34800000000177e-06, 8.417000000000147e-06, 8.332999999999258e-06, 8.347000000002297e-06, 8.360999999998397e-06, 8.34800000000177e-06, 8.346999999998828e-06, 8.264000000000882e-06, 8.402000000001103e-06, 8.347999999998301e-06, 8.346999999998828e-06, 8.305000000000118e-06, 8.3340000000022e-06, 8.375000000001437e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.333999999998731e-06, 8.401999999997634e-06, 8.292000000000022e-06, 8.347999999998301e-06, 8.332999999999258e-06, 8.347000000002297e-06, 8.3340000000022e-06, 8.360999999998397e-06, 8.292000000000022e-06, 8.375000000001437e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.34800000000177e-06, 8.430999999999716e-06, 8.346999999998828e-06, 8.318999999999688e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.361000000001867e-06, 8.333999999998731e-06, 8.375000000001437e-06, 8.34800000000177e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.278000000000452e-06, 8.332999999999258e-06, 8.375000000001437e-06, 8.361000000001867e-06, 8.332999999999258e-06]</msg>
<status status="PASS" starttime="20201115 22:02:08.813" endtime="20201115 22:02:08.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.808" endtime="20201115 22:02:08.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.817" endtime="20201115 22:02:08.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.821" endtime="20201115 22:02:08.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.819" endtime="20201115 22:02:08.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.816" endtime="20201115 22:02:08.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.450" endtime="20201115 22:02:08.841"></status>
</kw>
<msg timestamp="20201115 22:02:08.842" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.850" endtime="20201115 22:02:08.867"></status>
</kw>
<msg timestamp="20201115 22:02:08.867" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.849" endtime="20201115 22:02:08.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.870" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.868" endtime="20201115 22:02:08.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.871" endtime="20201115 22:02:08.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.846" endtime="20201115 22:02:08.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.844" endtime="20201115 22:02:08.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.880" endtime="20201115 22:02:09.166"></status>
</kw>
<msg timestamp="20201115 22:02:09.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.878" endtime="20201115 22:02:09.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.170" endtime="20201115 22:02:09.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.179" endtime="20201115 22:02:09.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.876" endtime="20201115 22:02:09.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.874" endtime="20201115 22:02:09.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.185" level="INFO">${RESULT} = [{'time': 0.019942514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.020065347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:09.182" endtime="20201115 22:02:09.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.199" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:09.186" endtime="20201115 22:02:09.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.203" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:09.202" endtime="20201115 22:02:09.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.205" level="INFO">VALUE: [8.375000000001437e-06, 8.305000000000118e-06, 8.333000000002727e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.374999999997967e-06, 8.319000000003157e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.361000000001867e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.417000000000147e-06, 8.332999999999258e-06, 8.333000000002727e-06, 8.346999999998828e-06, 8.333999999998731e-06, 8.332999999999258e-06, 8.361000000001867e-06, 8.347000000002297e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.318999999999688e-06, 8.347999999998301e-06, 8.278000000000452e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.36200000000134e-06, 8.346999999998828e-06, 8.347000000002297e-06, 8.346999999998828e-06, 8.305000000000118e-06, 8.360999999998397e-06, 8.346999999998828e-06, 8.361999999997871e-06, 8.347000000002297e-06, 8.360999999998397e-06, 8.347000000002297e-06, 8.375000000001437e-06, 8.374999999997967e-06, 8.375000000001437e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.417000000000147e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.332999999999258e-06]</msg>
<status status="PASS" starttime="20201115 22:02:09.204" endtime="20201115 22:02:09.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.199" endtime="20201115 22:02:09.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.209" endtime="20201115 22:02:09.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.212" endtime="20201115 22:02:09.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.210" endtime="20201115 22:02:09.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.207" endtime="20201115 22:02:09.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.842" endtime="20201115 22:02:09.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.274" endtime="20201115 22:02:09.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.274" endtime="20201115 22:02:09.233"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.235" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.244" endtime="20201115 22:02:09.261"></status>
</kw>
<msg timestamp="20201115 22:02:09.261" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.242" endtime="20201115 22:02:09.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.264" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.262" endtime="20201115 22:02:09.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.265" endtime="20201115 22:02:09.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.240" endtime="20201115 22:02:09.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.238" endtime="20201115 22:02:09.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.274" endtime="20201115 22:02:09.561"></status>
</kw>
<msg timestamp="20201115 22:02:09.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.273" endtime="20201115 22:02:09.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.565" endtime="20201115 22:02:09.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.573" endtime="20201115 22:02:09.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.270" endtime="20201115 22:02:09.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.268" endtime="20201115 22:02:09.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.580" level="INFO">${RESULT} = [{'time': 0.022068611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.0222005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:09.577" endtime="20201115 22:02:09.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.593" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:09.581" endtime="20201115 22:02:09.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.598" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:09.597" endtime="20201115 22:02:09.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.600" level="INFO">VALUE: [8.957999999999883e-06, 8.903000000001077e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.945000000003256e-06, 8.944000000000313e-06, 8.972000000002922e-06, 8.959000000002826e-06, 8.972000000002922e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.930000000000743e-06, 8.957999999999883e-06, 8.902999999997607e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.903000000001077e-06, 8.986000000002492e-06, 8.957999999999883e-06, 8.973000000002396e-06, 9.000000000002062e-06, 8.971999999999453e-06, 8.875000000001937e-06, 8.971999999999453e-06, 8.944000000000313e-06, 8.916000000001173e-06, 8.973000000002396e-06, 8.944000000000313e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.958999999999356e-06, 8.944000000000313e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.999999999998592e-06, 8.972999999998926e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.958999999999356e-06, 8.959000000002826e-06, 8.971999999999453e-06, 8.944000000000313e-06, 8.986000000002492e-06]</msg>
<status status="PASS" starttime="20201115 22:02:09.599" endtime="20201115 22:02:09.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.594" endtime="20201115 22:02:09.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.603" endtime="20201115 22:02:09.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.607" endtime="20201115 22:02:09.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.605" endtime="20201115 22:02:09.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.602" endtime="20201115 22:02:09.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.236" endtime="20201115 22:02:09.627"></status>
</kw>
<msg timestamp="20201115 22:02:09.628" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.637" endtime="20201115 22:02:09.653"></status>
</kw>
<msg timestamp="20201115 22:02:09.654" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.635" endtime="20201115 22:02:09.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.656" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.655" endtime="20201115 22:02:09.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.658" endtime="20201115 22:02:09.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.633" endtime="20201115 22:02:09.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.630" endtime="20201115 22:02:09.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.667" endtime="20201115 22:02:09.954"></status>
</kw>
<msg timestamp="20201115 22:02:09.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019958458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.665" endtime="20201115 22:02:09.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019958458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.958" endtime="20201115 22:02:09.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.966" endtime="20201115 22:02:09.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.663" endtime="20201115 22:02:09.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.661" endtime="20201115 22:02:09.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.972" level="INFO">${RESULT} = [{'time': 0.019967361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.903000000001077e-06, 'source_diff': 8.903000000001077e-06}, {'time': 0.020099375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:09.969" endtime="20201115 22:02:09.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.986" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:09.973" endtime="20201115 22:02:09.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.990" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:09.989" endtime="20201115 22:02:09.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.993" level="INFO">VALUE: [8.903000000001077e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.944000000000313e-06, 8.986000000002492e-06, 8.917000000000647e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.930000000000743e-06, 8.985999999999023e-06, 8.958999999999356e-06, 8.958999999999356e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.959000000002826e-06, 8.972999999998926e-06, 8.958999999999356e-06, 8.986000000002492e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.973000000002396e-06, 8.957999999999883e-06, 8.917000000000647e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.973000000002396e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.972000000002922e-06, 8.972999999998926e-06, 8.944999999999786e-06, 8.971999999999453e-06, 9.013999999998162e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.931000000000217e-06, 8.971999999999453e-06, 8.971999999999453e-06]</msg>
<status status="PASS" starttime="20201115 22:02:09.991" endtime="20201115 22:02:09.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.987" endtime="20201115 22:02:09.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.996" endtime="20201115 22:02:09.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.999" endtime="20201115 22:02:10.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.998" endtime="20201115 22:02:10.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.994" endtime="20201115 22:02:10.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.628" endtime="20201115 22:02:10.020"></status>
</kw>
<msg timestamp="20201115 22:02:10.020" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.029" endtime="20201115 22:02:10.046"></status>
</kw>
<msg timestamp="20201115 22:02:10.047" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.028" endtime="20201115 22:02:10.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.049" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.048" endtime="20201115 22:02:10.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.050" endtime="20201115 22:02:10.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.025" endtime="20201115 22:02:10.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.023" endtime="20201115 22:02:10.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.060" endtime="20201115 22:02:10.346"></status>
</kw>
<msg timestamp="20201115 22:02:10.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020424153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.058" endtime="20201115 22:02:10.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020424153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.350" endtime="20201115 22:02:10.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.358" endtime="20201115 22:02:10.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.056" endtime="20201115 22:02:10.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.054" endtime="20201115 22:02:10.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.365" level="INFO">${RESULT} = [{'time': 0.020433125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.020561819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:10.362" endtime="20201115 22:02:10.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.379" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:10.366" endtime="20201115 22:02:10.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.384" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:10.383" endtime="20201115 22:02:10.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.386" level="INFO">VALUE: [8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.958999999999356e-06, 8.958999999999356e-06, 8.972999999998926e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.944000000000313e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.987000000001966e-06, 8.889000000001507e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.944999999999786e-06, 8.958999999999356e-06, 8.958999999999356e-06, 8.944000000000313e-06, 8.957999999999883e-06, 8.930000000000743e-06, 8.917000000000647e-06, 8.958999999999356e-06, 8.986000000002492e-06, 8.985999999999023e-06, 8.944000000000313e-06, 8.971999999999453e-06, 8.958999999999356e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.930000000000743e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.917000000000647e-06]</msg>
<status status="PASS" starttime="20201115 22:02:10.385" endtime="20201115 22:02:10.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.380" endtime="20201115 22:02:10.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.389" endtime="20201115 22:02:10.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.392" endtime="20201115 22:02:10.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.391" endtime="20201115 22:02:10.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.387" endtime="20201115 22:02:10.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.021" endtime="20201115 22:02:10.413"></status>
</kw>
<msg timestamp="20201115 22:02:10.413" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.423" endtime="20201115 22:02:10.439"></status>
</kw>
<msg timestamp="20201115 22:02:10.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.421" endtime="20201115 22:02:10.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.441" endtime="20201115 22:02:10.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.443" endtime="20201115 22:02:10.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.418" endtime="20201115 22:02:10.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.416" endtime="20201115 22:02:10.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.452" endtime="20201115 22:02:10.738"></status>
</kw>
<msg timestamp="20201115 22:02:10.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.450" endtime="20201115 22:02:10.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.743" endtime="20201115 22:02:10.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.751" endtime="20201115 22:02:10.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.448" endtime="20201115 22:02:10.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.446" endtime="20201115 22:02:10.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.757" level="INFO">${RESULT} = [{'time': 0.020243903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958999999999356e-06, 'source_diff': 8.958999999999356e-06}, {'time': 0.020374583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:10.754" endtime="20201115 22:02:10.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.770" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:10.758" endtime="20201115 22:02:10.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.775" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:10.774" endtime="20201115 22:02:10.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.777" level="INFO">VALUE: [8.958999999999356e-06, 8.944000000000313e-06, 8.986999999998496e-06, 8.972999999998926e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.929999999997273e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.986000000002492e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.958999999999356e-06, 8.944000000000313e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.972000000002922e-06, 8.931000000000217e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.944000000000313e-06, 8.971999999999453e-06, 8.986999999998496e-06, 8.999999999998592e-06, 8.986000000002492e-06, 9.013999999998162e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.943999999996843e-06, 8.944999999999786e-06, 8.971999999999453e-06, 8.957999999999883e-06, 9.000000000002062e-06, 8.916999999997177e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.875000000001937e-06, 8.985999999999023e-06, 8.958000000003352e-06, 8.957999999999883e-06, 8.902000000001603e-06, 8.987000000001966e-06, 8.958999999999356e-06]</msg>
<status status="PASS" starttime="20201115 22:02:10.776" endtime="20201115 22:02:10.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.771" endtime="20201115 22:02:10.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.780" endtime="20201115 22:02:10.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.784" endtime="20201115 22:02:10.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.782" endtime="20201115 22:02:10.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.779" endtime="20201115 22:02:10.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.414" endtime="20201115 22:02:10.805"></status>
</kw>
<msg timestamp="20201115 22:02:10.805" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.814" endtime="20201115 22:02:10.831"></status>
</kw>
<msg timestamp="20201115 22:02:10.831" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.813" endtime="20201115 22:02:10.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.834" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.832" endtime="20201115 22:02:10.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.835" endtime="20201115 22:02:10.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.810" endtime="20201115 22:02:10.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.808" endtime="20201115 22:02:10.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.844" endtime="20201115 22:02:11.130"></status>
</kw>
<msg timestamp="20201115 22:02:11.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.842" endtime="20201115 22:02:11.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.134" endtime="20201115 22:02:11.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.142" endtime="20201115 22:02:11.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.840" endtime="20201115 22:02:11.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.838" endtime="20201115 22:02:11.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.149" level="INFO">${RESULT} = [{'time': 0.019838417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958999999999356e-06, 'source_diff': 8.958999999999356e-06}, {'time': 0.019969444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:11.145" endtime="20201115 22:02:11.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.162" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:11.150" endtime="20201115 22:02:11.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.166" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:11.166" endtime="20201115 22:02:11.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.169" level="INFO">VALUE: [8.958999999999356e-06, 8.957999999999883e-06, 8.874999999998467e-06, 8.944999999999786e-06, 8.972999999998926e-06, 8.944000000000313e-06, 8.902999999997607e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.986999999998496e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.972000000002922e-06, 9.000000000002062e-06, 8.972999999998926e-06, 8.943999999996843e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.944999999999786e-06, 8.971999999999453e-06, 8.945000000003256e-06, 8.999999999998592e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.972999999998926e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.943999999996843e-06, 8.985999999999023e-06, 8.888999999998037e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.930000000000743e-06, 8.958999999999356e-06, 8.944999999999786e-06, 8.971999999999453e-06, 8.943999999996843e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.917000000000647e-06, 8.957999999999883e-06]</msg>
<status status="PASS" starttime="20201115 22:02:11.168" endtime="20201115 22:02:11.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.163" endtime="20201115 22:02:11.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.176" endtime="20201115 22:02:11.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.180" endtime="20201115 22:02:11.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.178" endtime="20201115 22:02:11.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.175" endtime="20201115 22:02:11.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.806" endtime="20201115 22:02:11.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.234" endtime="20201115 22:02:11.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.233" endtime="20201115 22:02:11.201"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.203" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.212" endtime="20201115 22:02:11.229"></status>
</kw>
<msg timestamp="20201115 22:02:11.229" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.210" endtime="20201115 22:02:11.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.230" endtime="20201115 22:02:11.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.233" endtime="20201115 22:02:11.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.208" endtime="20201115 22:02:11.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.205" endtime="20201115 22:02:11.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.242" endtime="20201115 22:02:11.528"></status>
</kw>
<msg timestamp="20201115 22:02:11.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.240" endtime="20201115 22:02:11.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.532" endtime="20201115 22:02:11.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.541" endtime="20201115 22:02:11.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.237" endtime="20201115 22:02:11.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.236" endtime="20201115 22:02:11.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.547" level="INFO">${RESULT} = [{'time': 0.022224222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.540999999998329e-06, 'source_diff': 9.540999999998329e-06}, {'time': 0.022364264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:11.544" endtime="20201115 22:02:11.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.560" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:11.548" endtime="20201115 22:02:11.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.565" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:11.564" endtime="20201115 22:02:11.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.568" level="INFO">VALUE: [9.540999999998329e-06, 9.638999999998787e-06, 9.610999999999648e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.556000000000842e-06, 9.527999999998232e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.554999999997899e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.556000000000842e-06, 9.568999999997468e-06, 9.582999999997038e-06, 9.610999999999648e-06, 9.583999999999981e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.610999999999648e-06, 9.583000000000508e-06, 9.513999999998662e-06, 9.555000000001368e-06, 9.556000000000842e-06, 9.583999999999981e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.583999999999981e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.568999999997468e-06, 9.568999999997468e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.610999999999648e-06, 9.568999999997468e-06, 9.513999999998662e-06, 9.570000000000412e-06]</msg>
<status status="PASS" starttime="20201115 22:02:11.566" endtime="20201115 22:02:11.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.561" endtime="20201115 22:02:11.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.571" endtime="20201115 22:02:11.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.574" endtime="20201115 22:02:11.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.573" endtime="20201115 22:02:11.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.569" endtime="20201115 22:02:11.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.204" endtime="20201115 22:02:11.595"></status>
</kw>
<msg timestamp="20201115 22:02:11.595" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.604" endtime="20201115 22:02:11.621"></status>
</kw>
<msg timestamp="20201115 22:02:11.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.603" endtime="20201115 22:02:11.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.624" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.623" endtime="20201115 22:02:11.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.625" endtime="20201115 22:02:11.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.600" endtime="20201115 22:02:11.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.598" endtime="20201115 22:02:11.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.634" endtime="20201115 22:02:11.922"></status>
</kw>
<msg timestamp="20201115 22:02:11.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.633" endtime="20201115 22:02:11.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.926" endtime="20201115 22:02:11.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.935" endtime="20201115 22:02:11.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.630" endtime="20201115 22:02:11.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.628" endtime="20201115 22:02:11.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.941" level="INFO">${RESULT} = [{'time': 0.019914792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.020056389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:11.938" endtime="20201115 22:02:11.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.955" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:11.942" endtime="20201115 22:02:11.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.960" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:11.958" endtime="20201115 22:02:11.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.962" level="INFO">VALUE: [9.514000000002132e-06, 9.570000000000412e-06, 9.582999999997038e-06, 9.556000000000842e-06, 9.610999999999648e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.556000000000842e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.570000000000412e-06, 9.624999999999218e-06, 9.569000000000938e-06, 9.569999999996942e-06, 9.540999999998329e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.555000000001368e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.610999999999648e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.637999999999314e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.570000000000412e-06, 9.610999999999648e-06, 9.583000000000508e-06, 9.582999999997038e-06, 9.624999999999218e-06, 9.556000000000842e-06, 9.569000000000938e-06, 9.554999999997899e-06, 9.555000000001368e-06, 9.569000000000938e-06, 9.569999999996942e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.569999999996942e-06, 9.583999999999981e-06, 9.569999999996942e-06, 9.514000000002132e-06, 9.583000000000508e-06, 9.555000000001368e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.570000000000412e-06]</msg>
<status status="PASS" starttime="20201115 22:02:11.961" endtime="20201115 22:02:11.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.956" endtime="20201115 22:02:11.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.966" endtime="20201115 22:02:11.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.971" endtime="20201115 22:02:11.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.969" endtime="20201115 22:02:11.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.964" endtime="20201115 22:02:11.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.596" endtime="20201115 22:02:11.992"></status>
</kw>
<msg timestamp="20201115 22:02:11.992" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.001" endtime="20201115 22:02:12.018"></status>
</kw>
<msg timestamp="20201115 22:02:12.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.999" endtime="20201115 22:02:12.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.019" endtime="20201115 22:02:12.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.022" endtime="20201115 22:02:12.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.996" endtime="20201115 22:02:12.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.994" endtime="20201115 22:02:12.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.031" endtime="20201115 22:02:12.317"></status>
</kw>
<msg timestamp="20201115 22:02:12.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020038444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020048028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.029" endtime="20201115 22:02:12.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020038444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020048028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.322" endtime="20201115 22:02:12.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.330" endtime="20201115 22:02:12.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.027" endtime="20201115 22:02:12.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.025" endtime="20201115 22:02:12.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.337" level="INFO">${RESULT} = [{'time': 0.020048028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.02018875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:12.333" endtime="20201115 22:02:12.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.352" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:12.338" endtime="20201115 22:02:12.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.357" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:12.356" endtime="20201115 22:02:12.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.359" level="INFO">VALUE: [9.583999999999981e-06, 9.568999999997468e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.555999999997372e-06, 9.583999999999981e-06, 9.570000000000412e-06, 9.582999999997038e-06, 9.554999999997899e-06, 9.555000000001368e-06, 9.542000000001272e-06, 9.568999999997468e-06, 9.514000000002132e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.527999999998232e-06, 9.556000000000842e-06, 9.514000000002132e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.485999999999523e-06, 9.554999999997899e-06, 9.555000000001368e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.639000000002257e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.556000000000842e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.569999999996942e-06, 9.570000000000412e-06, 9.597999999999551e-06, 9.583000000000508e-06, 9.568999999997468e-06, 9.582999999997038e-06, 9.583999999999981e-06, 9.597999999999551e-06, 9.556000000000842e-06, 9.597999999999551e-06, 9.556000000000842e-06, 9.583999999999981e-06, 9.583999999999981e-06, 9.583000000000508e-06]</msg>
<status status="PASS" starttime="20201115 22:02:12.358" endtime="20201115 22:02:12.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.353" endtime="20201115 22:02:12.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.363" endtime="20201115 22:02:12.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.366" endtime="20201115 22:02:12.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.365" endtime="20201115 22:02:12.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.361" endtime="20201115 22:02:12.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.992" endtime="20201115 22:02:12.387"></status>
</kw>
<msg timestamp="20201115 22:02:12.387" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.397" endtime="20201115 22:02:12.415"></status>
</kw>
<msg timestamp="20201115 22:02:12.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.395" endtime="20201115 22:02:12.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.416" endtime="20201115 22:02:12.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.419" endtime="20201115 22:02:12.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.392" endtime="20201115 22:02:12.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.390" endtime="20201115 22:02:12.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.428" endtime="20201115 22:02:12.716"></status>
</kw>
<msg timestamp="20201115 22:02:12.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021274764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.427" endtime="20201115 22:02:12.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021274764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.720" endtime="20201115 22:02:12.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.729" endtime="20201115 22:02:12.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.424" endtime="20201115 22:02:12.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.422" endtime="20201115 22:02:12.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.736" level="INFO">${RESULT} = [{'time': 0.021274764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.02141375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:12.732" endtime="20201115 22:02:12.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.751" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:12.737" endtime="20201115 22:02:12.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.755" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:12.754" endtime="20201115 22:02:12.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.758" level="INFO">VALUE: [9.583000000000508e-06, 9.597000000000078e-06, 9.611999999999121e-06, 9.568999999997468e-06, 9.568999999997468e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.499999999999093e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.555000000001368e-06, 9.583999999999981e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.59800000000302e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.556000000000842e-06, 9.569000000000938e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.556000000000842e-06, 9.526999999998759e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.582999999997038e-06, 9.597000000000078e-06, 9.597999999999551e-06, 9.583000000000508e-06, 9.611000000003117e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.528000000001702e-06, 9.570000000000412e-06, 9.583999999999981e-06, 9.568999999997468e-06, 9.513999999998662e-06, 9.582999999997038e-06, 9.597000000000078e-06, 9.540999999998329e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.555000000001368e-06, 9.583000000000508e-06, 9.569999999996942e-06, 9.485999999999523e-06, 9.569000000000938e-06]</msg>
<status status="PASS" starttime="20201115 22:02:12.756" endtime="20201115 22:02:12.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.752" endtime="20201115 22:02:12.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.761" endtime="20201115 22:02:12.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.765" endtime="20201115 22:02:12.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.763" endtime="20201115 22:02:12.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.759" endtime="20201115 22:02:12.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.388" endtime="20201115 22:02:12.786"></status>
</kw>
<msg timestamp="20201115 22:02:12.786" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.795" endtime="20201115 22:02:12.812"></status>
</kw>
<msg timestamp="20201115 22:02:12.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.793" endtime="20201115 22:02:12.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.814" endtime="20201115 22:02:12.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.816" endtime="20201115 22:02:12.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.791" endtime="20201115 22:02:12.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.788" endtime="20201115 22:02:12.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.826" endtime="20201115 22:02:13.113"></status>
</kw>
<msg timestamp="20201115 22:02:13.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020517931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:12.824" endtime="20201115 22:02:13.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020517931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:13.118" endtime="20201115 22:02:13.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.126" endtime="20201115 22:02:13.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.821" endtime="20201115 22:02:13.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.820" endtime="20201115 22:02:13.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.133" level="INFO">${RESULT} = [{'time': 0.0205275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.020666028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:13.129" endtime="20201115 22:02:13.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.148" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:13.134" endtime="20201115 22:02:13.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.152" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:13.151" endtime="20201115 22:02:13.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.155" level="INFO">VALUE: [9.569000000000938e-06, 9.583999999999981e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.638999999998787e-06, 9.568999999997468e-06, 9.568999999997468e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.583000000000508e-06, 9.487000000002466e-06, 9.570000000000412e-06, 9.555000000001368e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.526999999998759e-06, 9.556000000000842e-06, 9.570000000000412e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.541000000001798e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.583999999999981e-06, 9.499999999999093e-06, 9.597999999999551e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.582999999997038e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.555999999997372e-06, 9.555999999997372e-06, 9.59800000000302e-06]</msg>
<status status="PASS" starttime="20201115 22:02:13.154" endtime="20201115 22:02:13.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.149" endtime="20201115 22:02:13.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.158" endtime="20201115 22:02:13.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.162" endtime="20201115 22:02:13.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.160" endtime="20201115 22:02:13.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.156" endtime="20201115 22:02:13.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.786" endtime="20201115 22:02:13.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.202" endtime="20201115 22:02:13.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.201" endtime="20201115 22:02:13.183"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.185" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.195" endtime="20201115 22:02:13.212"></status>
</kw>
<msg timestamp="20201115 22:02:13.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.193" endtime="20201115 22:02:13.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.216" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.214" endtime="20201115 22:02:13.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.217" endtime="20201115 22:02:13.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.190" endtime="20201115 22:02:13.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.188" endtime="20201115 22:02:13.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.227" endtime="20201115 22:02:13.515"></status>
</kw>
<msg timestamp="20201115 22:02:13.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023177, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:13.225" endtime="20201115 22:02:13.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023177, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:13.520" endtime="20201115 22:02:13.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.528" endtime="20201115 22:02:13.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.222" endtime="20201115 22:02:13.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.220" endtime="20201115 22:02:13.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.535" level="INFO">${RESULT} = [{'time': 0.023177, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.023325333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:13.532" endtime="20201115 22:02:13.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.550" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:13.536" endtime="20201115 22:02:13.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.555" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:13.553" endtime="20201115 22:02:13.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.557" level="INFO">VALUE: [1.0180999999997997e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0180000000001993e-05, 1.0236000000000273e-05, 1.0181000000001467e-05, 1.0194000000001563e-05, 1.0179999999998524e-05, 1.0194999999997567e-05, 1.0166999999998427e-05, 1.0195000000001037e-05, 1.0207999999997663e-05, 1.0195000000001037e-05, 1.0194000000001563e-05, 1.0195000000001037e-05, 1.0179999999998524e-05, 1.0181000000001467e-05, 1.0181000000001467e-05, 1.0138999999999287e-05, 1.0180000000001993e-05, 1.0236000000000273e-05, 1.0179999999998524e-05, 1.0195000000001037e-05, 1.0179999999998524e-05, 1.0194000000001563e-05, 1.0195000000001037e-05, 1.0236000000000273e-05, 1.0167000000001897e-05, 1.0195000000001037e-05, 1.0193999999998093e-05, 1.0194000000001563e-05, 1.0193999999998093e-05, 1.0180999999997997e-05, 1.0209000000000606e-05, 1.0194000000001563e-05, 1.0194999999997567e-05, 1.0180000000001993e-05, 1.0181000000001467e-05, 1.0249999999999843e-05, 1.0180999999997997e-05, 1.0193999999998093e-05, 1.0181000000001467e-05, 1.0181000000001467e-05, 1.0195000000001037e-05, 1.0181000000001467e-05, 1.0193999999998093e-05, 1.0208000000001133e-05, 1.0180999999997997e-05, 1.0208000000001133e-05, 1.0208000000001133e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.556" endtime="20201115 22:02:13.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.551" endtime="20201115 22:02:13.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.560" endtime="20201115 22:02:13.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.564" endtime="20201115 22:02:13.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.562" endtime="20201115 22:02:13.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.559" endtime="20201115 22:02:13.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.186" endtime="20201115 22:02:13.585"></status>
</kw>
<msg timestamp="20201115 22:02:13.585" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.594" endtime="20201115 22:02:13.611"></status>
</kw>
<msg timestamp="20201115 22:02:13.612" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.593" endtime="20201115 22:02:13.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.613" endtime="20201115 22:02:13.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.616" endtime="20201115 22:02:13.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.590" endtime="20201115 22:02:13.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.588" endtime="20201115 22:02:13.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.625" endtime="20201115 22:02:13.912"></status>
</kw>
<msg timestamp="20201115 22:02:13.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020504431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.624" endtime="20201115 22:02:13.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020504431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.916" endtime="20201115 22:02:13.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.924" endtime="20201115 22:02:13.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.621" endtime="20201115 22:02:13.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.619" endtime="20201115 22:02:13.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.931" level="INFO">${RESULT} = [{'time': 0.020514611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.020663056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:13.928" endtime="20201115 22:02:13.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.946" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:13.932" endtime="20201115 22:02:13.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.951" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:13.950" endtime="20201115 22:02:13.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.953" level="INFO">VALUE: [1.0179999999998524e-05, 1.0209000000000606e-05, 1.0195000000001037e-05, 1.0209000000000606e-05, 1.0194000000001563e-05, 1.0194999999997567e-05, 1.0181000000001467e-05, 1.0138999999999287e-05, 1.0165999999998954e-05, 1.0181000000001467e-05, 1.0180999999997997e-05, 1.0263999999999412e-05, 1.0236000000000273e-05, 1.0166000000002423e-05, 1.0194000000001563e-05, 1.0193999999998093e-05, 1.0166999999998427e-05, 1.0208999999997137e-05, 1.0236000000000273e-05, 1.0179999999998524e-05, 1.0194000000001563e-05, 1.0207999999997663e-05, 1.0181000000001467e-05, 1.0167000000001897e-05, 1.0125000000003187e-05, 1.0181000000001467e-05, 1.0193999999998093e-05, 1.0124999999999718e-05, 1.0195000000001037e-05, 1.0195000000001037e-05, 1.0195000000001037e-05, 1.0167000000001897e-05, 1.0193999999998093e-05, 1.0207999999997663e-05, 1.0124999999999718e-05, 1.0207999999997663e-05, 1.0208999999997137e-05, 1.0152999999998857e-05, 1.0180000000001993e-05, 1.0195000000001037e-05, 1.0195000000001037e-05, 1.0179999999998524e-05, 1.0194000000001563e-05, 1.0194999999997567e-05, 1.0181000000001467e-05, 1.0194999999997567e-05, 1.0179999999998524e-05, 1.0195000000001037e-05, 1.0181000000001467e-05, 1.0222000000000703e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.952" endtime="20201115 22:02:13.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.947" endtime="20201115 22:02:13.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.957" endtime="20201115 22:02:13.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.960" endtime="20201115 22:02:13.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.959" endtime="20201115 22:02:13.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.955" endtime="20201115 22:02:13.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.586" endtime="20201115 22:02:13.981"></status>
</kw>
<msg timestamp="20201115 22:02:13.981" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.991" endtime="20201115 22:02:14.009"></status>
</kw>
<msg timestamp="20201115 22:02:14.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.989" endtime="20201115 22:02:14.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.012" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.011" endtime="20201115 22:02:14.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.014" endtime="20201115 22:02:14.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.986" endtime="20201115 22:02:14.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.984" endtime="20201115 22:02:14.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.023" endtime="20201115 22:02:14.311"></status>
</kw>
<msg timestamp="20201115 22:02:14.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021332528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.021" endtime="20201115 22:02:14.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021332528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.315" endtime="20201115 22:02:14.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.323" endtime="20201115 22:02:14.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.019" endtime="20201115 22:02:14.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.017" endtime="20201115 22:02:14.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.330" level="INFO">${RESULT} = [{'time': 0.021342694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.021490819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.327" endtime="20201115 22:02:14.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.345" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:14.331" endtime="20201115 22:02:14.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.350" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:14.349" endtime="20201115 22:02:14.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.352" level="INFO">VALUE: [1.0165999999998954e-05, 1.0180000000001993e-05, 1.0195000000001037e-05, 1.0195000000001037e-05, 1.0166000000002423e-05, 1.0181000000001467e-05, 1.0194000000001563e-05, 1.0180000000001993e-05, 1.0166999999998427e-05, 1.0193999999998093e-05, 1.0194000000001563e-05, 1.0180999999997997e-05, 1.0167000000001897e-05, 1.0097000000000578e-05, 1.0181000000001467e-05, 1.0180000000001993e-05, 1.0207999999997663e-05, 1.0181000000001467e-05, 1.0194000000001563e-05, 1.0166999999998427e-05, 1.0236000000000273e-05, 1.0194999999997567e-05, 1.0193999999998093e-05, 1.0181000000001467e-05, 1.0208000000001133e-05, 1.0166999999998427e-05, 1.0222000000000703e-05, 1.0181000000001467e-05, 1.0180000000001993e-05, 1.0222000000000703e-05, 1.0166999999998427e-05, 1.0180000000001993e-05, 1.0194000000001563e-05, 1.0179999999998524e-05, 1.0181000000001467e-05, 1.0193999999998093e-05, 1.0181000000001467e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0181000000001467e-05, 1.0167000000001897e-05, 1.0180000000001993e-05, 1.0181000000001467e-05, 1.0195000000001037e-05, 1.0222000000000703e-05, 1.0181000000001467e-05, 1.0180999999997997e-05, 1.0193999999998093e-05, 1.0194000000001563e-05, 1.0194999999997567e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.351" endtime="20201115 22:02:14.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.346" endtime="20201115 22:02:14.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.356" endtime="20201115 22:02:14.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.359" endtime="20201115 22:02:14.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.358" endtime="20201115 22:02:14.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.354" endtime="20201115 22:02:14.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.982" endtime="20201115 22:02:14.380"></status>
</kw>
<msg timestamp="20201115 22:02:14.381" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.390" endtime="20201115 22:02:14.408"></status>
</kw>
<msg timestamp="20201115 22:02:14.409" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.388" endtime="20201115 22:02:14.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.411" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.410" endtime="20201115 22:02:14.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.412" endtime="20201115 22:02:14.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.386" endtime="20201115 22:02:14.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.383" endtime="20201115 22:02:14.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.422" endtime="20201115 22:02:14.708"></status>
</kw>
<msg timestamp="20201115 22:02:14.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020994097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021004292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.420" endtime="20201115 22:02:14.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020994097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021004292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.713" endtime="20201115 22:02:14.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.721" endtime="20201115 22:02:14.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.418" endtime="20201115 22:02:14.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.416" endtime="20201115 22:02:14.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.728" level="INFO">${RESULT} = [{'time': 0.021004292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.021152833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.725" endtime="20201115 22:02:14.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.742" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:14.729" endtime="20201115 22:02:14.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.748" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:14.747" endtime="20201115 22:02:14.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.750" level="INFO">VALUE: [1.0195000000001037e-05, 1.0193999999998093e-05, 1.0166999999998427e-05, 1.0180999999997997e-05, 1.0222000000000703e-05, 1.0181000000001467e-05, 1.0194000000001563e-05, 1.0180000000001993e-05, 1.0152999999998857e-05, 1.0194000000001563e-05, 1.0181000000001467e-05, 1.0195000000001037e-05, 1.0181000000001467e-05, 1.0194000000001563e-05, 1.0179999999998524e-05, 1.0180999999997997e-05, 1.0179999999998524e-05, 1.0180999999997997e-05, 1.0209000000000606e-05, 1.0193999999998093e-05, 1.0195000000001037e-05, 1.0208999999997137e-05, 1.0208000000001133e-05, 1.0193999999998093e-05, 1.0194999999997567e-05, 1.0193999999998093e-05, 1.0249999999999843e-05, 1.0208999999997137e-05, 1.0181000000001467e-05, 1.0194999999997567e-05, 1.0181000000001467e-05, 1.0180000000001993e-05, 1.0167000000001897e-05, 1.0208000000001133e-05, 1.0179999999998524e-05, 1.0179999999998524e-05, 1.0207999999997663e-05, 1.0179999999998524e-05, 1.0236000000000273e-05, 1.0193999999998093e-05, 1.0236000000000273e-05, 1.0181000000001467e-05, 1.0194000000001563e-05, 1.0194000000001563e-05, 1.0236000000000273e-05, 1.0165999999998954e-05, 1.0209000000000606e-05, 1.0181000000001467e-05, 1.0179999999998524e-05, 1.0195000000001037e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.749" endtime="20201115 22:02:14.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.744" endtime="20201115 22:02:14.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.753" endtime="20201115 22:02:14.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.757" endtime="20201115 22:02:14.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.756" endtime="20201115 22:02:14.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.752" endtime="20201115 22:02:14.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.381" endtime="20201115 22:02:14.778"></status>
</kw>
<msg timestamp="20201115 22:02:14.778" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.788" endtime="20201115 22:02:14.806"></status>
</kw>
<msg timestamp="20201115 22:02:14.806" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.786" endtime="20201115 22:02:14.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.808" endtime="20201115 22:02:14.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.810" endtime="20201115 22:02:14.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.783" endtime="20201115 22:02:14.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.781" endtime="20201115 22:02:14.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.820" endtime="20201115 22:02:15.108"></status>
</kw>
<msg timestamp="20201115 22:02:15.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020601722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020611917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.818" endtime="20201115 22:02:15.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020601722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020611917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.113" endtime="20201115 22:02:15.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.121" endtime="20201115 22:02:15.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.815" endtime="20201115 22:02:15.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.814" endtime="20201115 22:02:15.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.128" level="INFO">${RESULT} = [{'time': 0.020611917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.020761903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.124" endtime="20201115 22:02:15.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.142" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:15.129" endtime="20201115 22:02:15.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.147" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:15.146" endtime="20201115 22:02:15.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.150" level="INFO">VALUE: [1.0195000000001037e-05, 1.0181000000001467e-05, 1.0209000000000606e-05, 1.0194000000001563e-05, 1.0207999999997663e-05, 1.0194999999997567e-05, 1.0222000000000703e-05, 1.0194000000001563e-05, 1.0208999999997137e-05, 1.0167000000001897e-05, 1.0193999999998093e-05, 1.0249999999999843e-05, 1.0179999999998524e-05, 1.0151999999999384e-05, 1.0195000000001037e-05, 1.0194999999997567e-05, 1.0193999999998093e-05, 1.0166999999998427e-05, 1.0181000000001467e-05, 1.0195000000001037e-05, 1.0193999999998093e-05, 1.0166999999998427e-05, 1.0152999999998857e-05, 1.0180000000001993e-05, 1.0167000000001897e-05, 1.0181000000001467e-05, 1.0181000000001467e-05, 1.0195000000001037e-05, 1.0195000000001037e-05, 1.0194999999997567e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0166999999998427e-05, 1.0180999999997997e-05, 1.0180000000001993e-05, 1.0193999999998093e-05, 1.0181000000001467e-05, 1.0208999999997137e-05, 1.0194999999997567e-05, 1.0236999999999746e-05, 1.0181000000001467e-05, 1.0194999999997567e-05, 1.0195000000001037e-05, 1.0179999999998524e-05, 1.0180999999997997e-05, 1.0209000000000606e-05, 1.0193999999998093e-05, 1.0236000000000273e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.149" endtime="20201115 22:02:15.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.144" endtime="20201115 22:02:15.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.154" endtime="20201115 22:02:15.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.157" endtime="20201115 22:02:15.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.156" endtime="20201115 22:02:15.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.152" endtime="20201115 22:02:15.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.779" endtime="20201115 22:02:15.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.184" endtime="20201115 22:02:15.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.183" endtime="20201115 22:02:15.179"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.181" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.190" endtime="20201115 22:02:15.209"></status>
</kw>
<msg timestamp="20201115 22:02:15.209" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.188" endtime="20201115 22:02:15.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.212" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.210" endtime="20201115 22:02:15.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.213" endtime="20201115 22:02:15.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.186" endtime="20201115 22:02:15.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.184" endtime="20201115 22:02:15.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.222" endtime="20201115 22:02:15.510"></status>
</kw>
<msg timestamp="20201115 22:02:15.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023047958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.221" endtime="20201115 22:02:15.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023047958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.514" endtime="20201115 22:02:15.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.522" endtime="20201115 22:02:15.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.218" endtime="20201115 22:02:15.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.216" endtime="20201115 22:02:15.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.529" level="INFO">${RESULT} = [{'time': 0.023047958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0804999999999149e-05, 'source_diff': 1.0804999999999149e-05}, {'time': 0.023207306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.526" endtime="20201115 22:02:15.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.544" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:15.530" endtime="20201115 22:02:15.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.549" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:15.548" endtime="20201115 22:02:15.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.552" level="INFO">VALUE: [1.0804999999999149e-05, 1.0791999999999052e-05, 1.0805999999998622e-05, 1.0820000000001662e-05, 1.0818999999998719e-05, 1.0805999999998622e-05, 1.0805999999998622e-05, 1.0792000000002522e-05, 1.0818999999998719e-05, 1.0805000000002618e-05, 1.0792000000002522e-05, 1.0806000000002092e-05, 1.0777000000000009e-05, 1.0792000000002522e-05, 1.0818999999998719e-05, 1.0791999999999052e-05, 1.0792000000002522e-05, 1.0819999999998192e-05, 1.0820000000001662e-05, 1.0806000000002092e-05, 1.0818999999998719e-05, 1.0792000000002522e-05, 1.0832999999998288e-05, 1.0805999999998622e-05, 1.0790999999999579e-05, 1.0818999999998719e-05, 1.0806000000002092e-05, 1.0791999999999052e-05, 1.0763999999999913e-05, 1.0790999999999579e-05, 1.0791999999999052e-05, 1.0819000000002188e-05, 1.0791999999999052e-05, 1.0806000000002092e-05, 1.0860999999997428e-05, 1.0806000000002092e-05, 1.0804999999999149e-05, 1.0790999999999579e-05, 1.0820000000001662e-05, 1.0805999999998622e-05, 1.0806000000002092e-05, 1.0806000000002092e-05, 1.0791999999999052e-05, 1.0790999999999579e-05, 1.0792000000002522e-05, 1.0791999999999052e-05, 1.0847000000001328e-05, 1.0777999999999482e-05, 1.0791999999999052e-05, 1.0805999999998622e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.550" endtime="20201115 22:02:15.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.545" endtime="20201115 22:02:15.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.555" endtime="20201115 22:02:15.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.559" endtime="20201115 22:02:15.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.557" endtime="20201115 22:02:15.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.554" endtime="20201115 22:02:15.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.181" endtime="20201115 22:02:15.580"></status>
</kw>
<msg timestamp="20201115 22:02:15.580" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.589" endtime="20201115 22:02:15.608"></status>
</kw>
<msg timestamp="20201115 22:02:15.608" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.587" endtime="20201115 22:02:15.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.611" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.609" endtime="20201115 22:02:15.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.612" endtime="20201115 22:02:15.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.585" endtime="20201115 22:02:15.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.583" endtime="20201115 22:02:15.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.621" endtime="20201115 22:02:15.909"></status>
</kw>
<msg timestamp="20201115 22:02:15.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020636694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020647528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.620" endtime="20201115 22:02:15.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020636694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020647528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.913" endtime="20201115 22:02:15.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.922" endtime="20201115 22:02:15.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.617" endtime="20201115 22:02:15.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.615" endtime="20201115 22:02:15.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.928" level="INFO">${RESULT} = [{'time': 0.020647528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0833999999997762e-05, 'source_diff': 1.0833999999997762e-05}, {'time': 0.020809806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.925" endtime="20201115 22:02:15.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.943" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:15.929" endtime="20201115 22:02:15.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.948" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:15.947" endtime="20201115 22:02:15.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.951" level="INFO">VALUE: [1.0833999999997762e-05, 1.0805999999998622e-05, 1.0791999999999052e-05, 1.0819000000002188e-05, 1.0790999999999579e-05, 1.0790999999999579e-05, 1.0804999999999149e-05, 1.0791999999999052e-05, 1.0791999999999052e-05, 1.0806000000002092e-05, 1.0818999999998719e-05, 1.0804999999999149e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0818999999998719e-05, 1.0819000000002188e-05, 1.0791000000003048e-05, 1.0804999999999149e-05, 1.0819000000002188e-05, 1.0777999999999482e-05, 1.0791999999999052e-05, 1.0790999999999579e-05, 1.0790999999999579e-05, 1.0790999999999579e-05, 1.0777000000000009e-05, 1.0805999999998622e-05, 1.0791999999999052e-05, 1.0805999999998622e-05, 1.0792000000002522e-05, 1.0832999999998288e-05, 1.0790999999999579e-05, 1.0834000000001232e-05, 1.0805999999998622e-05, 1.0791999999999052e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0778000000002952e-05, 1.0790999999999579e-05, 1.0805999999998622e-05, 1.0819999999998192e-05, 1.0804999999999149e-05, 1.0832999999998288e-05, 1.0791999999999052e-05, 1.0805999999998622e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0820000000001662e-05, 1.0806000000002092e-05, 1.0721999999997733e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.950" endtime="20201115 22:02:15.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.945" endtime="20201115 22:02:15.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.954" endtime="20201115 22:02:15.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.958" endtime="20201115 22:02:15.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.956" endtime="20201115 22:02:15.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.953" endtime="20201115 22:02:15.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.581" endtime="20201115 22:02:15.979"></status>
</kw>
<msg timestamp="20201115 22:02:15.979" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.988" endtime="20201115 22:02:16.007"></status>
</kw>
<msg timestamp="20201115 22:02:16.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.986" endtime="20201115 22:02:16.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.008" endtime="20201115 22:02:16.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.011" endtime="20201115 22:02:16.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.984" endtime="20201115 22:02:16.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.982" endtime="20201115 22:02:16.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.020" endtime="20201115 22:02:16.307"></status>
</kw>
<msg timestamp="20201115 22:02:16.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:16.019" endtime="20201115 22:02:16.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:16.312" endtime="20201115 22:02:16.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.320" endtime="20201115 22:02:16.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.016" endtime="20201115 22:02:16.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.014" endtime="20201115 22:02:16.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.332" level="INFO">${RESULT} = [{'time': 0.020644, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0860999999997428e-05, 'source_diff': 1.0860999999997428e-05}, {'time': 0.020806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201115 22:02:16.323" endtime="20201115 22:02:16.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.347" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:16.333" endtime="20201115 22:02:16.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.351" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:16.350" endtime="20201115 22:02:16.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.354" level="INFO">VALUE: [1.0860999999997428e-05, 1.0806000000002092e-05, 1.0792000000002522e-05, 1.0791000000003048e-05, 1.0861000000000898e-05, 1.0806000000002092e-05, 1.0805999999998622e-05, 1.0777999999999482e-05, 1.0805999999998622e-05, 1.0806000000002092e-05, 1.0804999999999149e-05, 1.0777000000000009e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0791999999999052e-05, 1.0777999999999482e-05, 1.0804999999999149e-05, 1.0790999999999579e-05, 1.0804999999999149e-05, 1.0792000000002522e-05, 1.0777999999999482e-05, 1.0805000000002618e-05, 1.0790999999999579e-05, 1.0791000000003048e-05, 1.0804999999999149e-05, 1.0778000000002952e-05, 1.0777999999999482e-05, 1.0834000000001232e-05, 1.0804999999999149e-05, 1.0834000000001232e-05, 1.0805999999998622e-05, 1.0805999999998622e-05, 1.0792000000002522e-05, 1.0832999999998288e-05, 1.0777000000000009e-05, 1.0804999999999149e-05, 1.0804999999999149e-05, 1.0777999999999482e-05, 1.0791999999999052e-05, 1.0790999999999579e-05, 1.0819999999998192e-05, 1.0750000000000343e-05, 1.0791999999999052e-05, 1.0735999999997303e-05, 1.0804999999999149e-05, 1.0806000000002092e-05, 1.0819000000002188e-05, 1.0805000000002618e-05, 1.0805999999998622e-05, 1.0820000000001662e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.353" endtime="20201115 22:02:16.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.348" endtime="20201115 22:02:16.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.357" endtime="20201115 22:02:16.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.361" endtime="20201115 22:02:16.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.359" endtime="20201115 22:02:16.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.356" endtime="20201115 22:02:16.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.979" endtime="20201115 22:02:16.382"></status>
</kw>
<msg timestamp="20201115 22:02:16.382" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.391" endtime="20201115 22:02:16.409"></status>
</kw>
<msg timestamp="20201115 22:02:16.410" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.390" endtime="20201115 22:02:16.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.413" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.411" endtime="20201115 22:02:16.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.414" endtime="20201115 22:02:16.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.387" endtime="20201115 22:02:16.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.385" endtime="20201115 22:02:16.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.423" endtime="20201115 22:02:16.712"></status>
</kw>
<msg timestamp="20201115 22:02:16.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020565194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020576, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:16.421" endtime="20201115 22:02:16.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020565194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020576, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:16.716" endtime="20201115 22:02:16.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.725" endtime="20201115 22:02:16.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.419" endtime="20201115 22:02:16.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.417" endtime="20201115 22:02:16.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.732" level="INFO">${RESULT} = [{'time': 0.020576, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.020737292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:16.728" endtime="20201115 22:02:16.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.746" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:16.733" endtime="20201115 22:02:16.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.751" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:16.750" endtime="20201115 22:02:16.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.753" level="INFO">VALUE: [1.0806000000002092e-05, 1.0792000000002522e-05, 1.0804999999999149e-05, 1.0790999999999579e-05, 1.0806000000002092e-05, 1.0790999999999579e-05, 1.0806000000002092e-05, 1.0777999999999482e-05, 1.0790999999999579e-05, 1.0790999999999579e-05, 1.0777999999999482e-05, 1.0805999999998622e-05, 1.0792000000002522e-05, 1.0818999999998719e-05, 1.0790999999999579e-05, 1.0818999999998719e-05, 1.0804999999999149e-05, 1.0778000000002952e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0804999999999149e-05, 1.0777999999999482e-05, 1.0790999999999579e-05, 1.0805999999998622e-05, 1.0791999999999052e-05, 1.0777999999999482e-05, 1.0806000000002092e-05, 1.0819000000002188e-05, 1.0818999999998719e-05, 1.0790999999999579e-05, 1.0791999999999052e-05, 1.0805999999998622e-05, 1.0804999999999149e-05, 1.0848000000000801e-05, 1.0805000000002618e-05, 1.0848000000000801e-05, 1.0804999999999149e-05, 1.0791999999999052e-05, 1.0818999999998719e-05, 1.0805000000002618e-05, 1.0804999999999149e-05, 1.0777999999999482e-05, 1.0778000000002952e-05, 1.0818999999998719e-05, 1.0862000000000371e-05, 1.0750000000000343e-05, 1.0791999999999052e-05, 1.0791999999999052e-05, 1.0806000000002092e-05, 1.0790999999999579e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.752" endtime="20201115 22:02:16.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.747" endtime="20201115 22:02:16.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.756" endtime="20201115 22:02:16.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.760" endtime="20201115 22:02:16.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.758" endtime="20201115 22:02:16.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.755" endtime="20201115 22:02:16.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.383" endtime="20201115 22:02:16.780"></status>
</kw>
<msg timestamp="20201115 22:02:16.781" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.789" endtime="20201115 22:02:16.807"></status>
</kw>
<msg timestamp="20201115 22:02:16.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.788" endtime="20201115 22:02:16.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.809" endtime="20201115 22:02:16.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.811" endtime="20201115 22:02:16.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.785" endtime="20201115 22:02:16.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.783" endtime="20201115 22:02:16.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.820" endtime="20201115 22:02:17.119"></status>
</kw>
<msg timestamp="20201115 22:02:17.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.818" endtime="20201115 22:02:17.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.129" endtime="20201115 22:02:17.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.144" endtime="20201115 22:02:17.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.816" endtime="20201115 22:02:17.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.814" endtime="20201115 22:02:17.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.151" level="INFO">${RESULT} = [{'time': 0.019875028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0819999999998192e-05, 'source_diff': 1.0819999999998192e-05}, {'time': 0.020035556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:17.147" endtime="20201115 22:02:17.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.164" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:17.152" endtime="20201115 22:02:17.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.169" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:17.168" endtime="20201115 22:02:17.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.171" level="INFO">VALUE: [1.0819999999998192e-05, 1.0791999999999052e-05, 1.0819000000002188e-05, 1.0806000000002092e-05, 1.0791000000003048e-05, 1.0805000000002618e-05, 1.0805999999998622e-05, 1.0750000000000343e-05, 1.0792000000002522e-05, 1.0792000000002522e-05, 1.0792000000002522e-05, 1.0778000000002952e-05, 1.0861000000000898e-05, 1.0804999999999149e-05, 1.0848000000000801e-05, 1.0819999999998192e-05, 1.0861000000000898e-05, 1.0804999999999149e-05, 1.0806000000002092e-05, 1.0777999999999482e-05, 1.0791999999999052e-05, 1.0791999999999052e-05, 1.0791999999999052e-05, 1.0805999999998622e-05, 1.0777999999999482e-05, 1.0736000000000773e-05, 1.0791999999999052e-05, 1.0763999999999913e-05, 1.0804999999999149e-05, 1.0790999999999579e-05, 1.0804999999999149e-05, 1.0806000000002092e-05, 1.0805999999998622e-05, 1.0763999999999913e-05, 1.0819999999998192e-05, 1.0791999999999052e-05, 1.0846999999997858e-05, 1.0777999999999482e-05, 1.0804999999999149e-05, 1.0777999999999482e-05, 1.0805999999998622e-05, 1.0790999999999579e-05, 1.0777000000000009e-05, 1.0777999999999482e-05, 1.0791999999999052e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.0791000000003048e-05, 1.0791999999999052e-05, 1.0805999999998622e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.170" endtime="20201115 22:02:17.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.165" endtime="20201115 22:02:17.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.174" endtime="20201115 22:02:17.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.178" endtime="20201115 22:02:17.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.176" endtime="20201115 22:02:17.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.173" endtime="20201115 22:02:17.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.781" endtime="20201115 22:02:17.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.180" endtime="20201115 22:02:17.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.179" endtime="20201115 22:02:17.199"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.201" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.210" endtime="20201115 22:02:17.229"></status>
</kw>
<msg timestamp="20201115 22:02:17.229" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.208" endtime="20201115 22:02:17.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.230" endtime="20201115 22:02:17.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.233" endtime="20201115 22:02:17.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.205" endtime="20201115 22:02:17.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.203" endtime="20201115 22:02:17.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.242" endtime="20201115 22:02:17.529"></status>
</kw>
<msg timestamp="20201115 22:02:17.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022428722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.241" endtime="20201115 22:02:17.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022428722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.533" endtime="20201115 22:02:17.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.541" endtime="20201115 22:02:17.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.238" endtime="20201115 22:02:17.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.236" endtime="20201115 22:02:17.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.548" level="INFO">${RESULT} = [{'time': 0.022428722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1416000000000204e-05, 'source_diff': 1.1416000000000204e-05}, {'time': 0.022600014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:17.545" endtime="20201115 22:02:17.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.561" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:17.549" endtime="20201115 22:02:17.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.566" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:17.565" endtime="20201115 22:02:17.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.568" level="INFO">VALUE: [1.1416000000000204e-05, 1.1347000000001828e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1430999999999247e-05, 1.1348000000001301e-05, 1.1429999999999774e-05, 1.1430999999999247e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.1416000000000204e-05, 1.1333999999998262e-05, 1.1429999999999774e-05, 1.1387999999997594e-05, 1.1430999999999247e-05, 1.1416999999999677e-05, 1.1430999999999247e-05, 1.1416999999999677e-05, 1.1430999999999247e-05, 1.1402000000000634e-05, 1.1403000000000107e-05, 1.1444999999998817e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1415999999996734e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1388000000001064e-05, 1.1403000000000107e-05, 1.1416000000000204e-05, 1.1431000000002717e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1417000000003147e-05, 1.1402000000000634e-05, 1.1416000000000204e-05, 1.1389000000000538e-05, 1.1388000000001064e-05, 1.1403000000000107e-05, 1.1403000000000107e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.567" endtime="20201115 22:02:17.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.562" endtime="20201115 22:02:17.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.572" endtime="20201115 22:02:17.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.575" endtime="20201115 22:02:17.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.573" endtime="20201115 22:02:17.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.570" endtime="20201115 22:02:17.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.201" endtime="20201115 22:02:17.596"></status>
</kw>
<msg timestamp="20201115 22:02:17.596" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.605" endtime="20201115 22:02:17.624"></status>
</kw>
<msg timestamp="20201115 22:02:17.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.603" endtime="20201115 22:02:17.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.627" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.626" endtime="20201115 22:02:17.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.628" endtime="20201115 22:02:17.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.601" endtime="20201115 22:02:17.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.598" endtime="20201115 22:02:17.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.637" endtime="20201115 22:02:17.924"></status>
</kw>
<msg timestamp="20201115 22:02:17.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020018097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020029472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.636" endtime="20201115 22:02:17.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020018097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020029472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.928" endtime="20201115 22:02:17.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.936" endtime="20201115 22:02:17.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.633" endtime="20201115 22:02:17.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.631" endtime="20201115 22:02:17.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.943" level="INFO">${RESULT} = [{'time': 0.020029472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.020202625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:17.940" endtime="20201115 22:02:17.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.956" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:17.944" endtime="20201115 22:02:17.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.961" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:17.960" endtime="20201115 22:02:17.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.963" level="INFO">VALUE: [1.1375000000000968e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1416000000000204e-05, 1.1430999999999247e-05, 1.1444000000002813e-05, 1.1416000000000204e-05, 1.1457999999998913e-05, 1.1319999999998692e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.1457999999998913e-05, 1.1402000000000634e-05, 1.1403000000000107e-05, 1.1416000000000204e-05, 1.1402000000000634e-05, 1.1429999999999774e-05, 1.1444999999998817e-05, 1.1416000000000204e-05, 1.1429999999999774e-05, 1.1430999999999247e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1430000000003243e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1457999999998913e-05, 1.1416000000000204e-05, 1.1416000000000204e-05, 1.1360999999997928e-05, 1.1430999999999247e-05, 1.1429999999999774e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1444999999998817e-05, 1.1319000000002688e-05, 1.1444000000002813e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.1375000000000968e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1401999999997164e-05, 1.1416000000000204e-05, 1.1429999999999774e-05, 1.1388999999997068e-05, 1.1361000000001398e-05, 1.1416999999999677e-05, 1.1471999999998483e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.962" endtime="20201115 22:02:17.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.957" endtime="20201115 22:02:17.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.966" endtime="20201115 22:02:17.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.970" endtime="20201115 22:02:17.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.968" endtime="20201115 22:02:17.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.965" endtime="20201115 22:02:17.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.596" endtime="20201115 22:02:17.991"></status>
</kw>
<msg timestamp="20201115 22:02:17.991" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.000" endtime="20201115 22:02:18.019"></status>
</kw>
<msg timestamp="20201115 22:02:18.020" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.999" endtime="20201115 22:02:18.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.021" endtime="20201115 22:02:18.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.023" endtime="20201115 22:02:18.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.996" endtime="20201115 22:02:18.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.993" endtime="20201115 22:02:18.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.032" endtime="20201115 22:02:18.321"></status>
</kw>
<msg timestamp="20201115 22:02:18.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020747806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020759222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.031" endtime="20201115 22:02:18.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020747806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020759222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.325" endtime="20201115 22:02:18.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.333" endtime="20201115 22:02:18.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.028" endtime="20201115 22:02:18.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.026" endtime="20201115 22:02:18.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.340" level="INFO">${RESULT} = [{'time': 0.020759222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1416000000000204e-05, 'source_diff': 1.1416000000000204e-05}, {'time': 0.020930444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:18.336" endtime="20201115 22:02:18.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.353" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:18.341" endtime="20201115 22:02:18.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.358" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:18.357" endtime="20201115 22:02:18.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.360" level="INFO">VALUE: [1.1416000000000204e-05, 1.1402000000000634e-05, 1.1374999999997498e-05, 1.1402000000000634e-05, 1.1402000000000634e-05, 1.1361000000001398e-05, 1.1403000000000107e-05, 1.1402000000000634e-05, 1.1403000000000107e-05, 1.1429999999999774e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1430999999999247e-05, 1.1389000000000538e-05, 1.1388000000001064e-05, 1.1403000000000107e-05, 1.1430999999999247e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1430999999999247e-05, 1.1416000000000204e-05, 1.1429999999999774e-05, 1.1403000000000107e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1417000000003147e-05, 1.1403000000000107e-05, 1.1416000000000204e-05, 1.1430999999999247e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1459000000001857e-05, 1.1457999999998913e-05, 1.1374999999997498e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1402000000000634e-05, 1.1429999999999774e-05, 1.1403000000000107e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.359" endtime="20201115 22:02:18.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.354" endtime="20201115 22:02:18.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.363" endtime="20201115 22:02:18.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.367" endtime="20201115 22:02:18.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.365" endtime="20201115 22:02:18.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.361" endtime="20201115 22:02:18.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.991" endtime="20201115 22:02:18.388"></status>
</kw>
<msg timestamp="20201115 22:02:18.388" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.397" endtime="20201115 22:02:18.416"></status>
</kw>
<msg timestamp="20201115 22:02:18.416" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.395" endtime="20201115 22:02:18.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.419" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.417" endtime="20201115 22:02:18.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.420" endtime="20201115 22:02:18.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.393" endtime="20201115 22:02:18.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.391" endtime="20201115 22:02:18.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.428" endtime="20201115 22:02:18.716"></status>
</kw>
<msg timestamp="20201115 22:02:18.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.427" endtime="20201115 22:02:18.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.720" endtime="20201115 22:02:18.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.728" endtime="20201115 22:02:18.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.424" endtime="20201115 22:02:18.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.423" endtime="20201115 22:02:18.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.735" level="INFO">${RESULT} = [{'time': 0.020330736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.020504597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:18.731" endtime="20201115 22:02:18.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.748" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:18.736" endtime="20201115 22:02:18.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.753" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:18.752" endtime="20201115 22:02:18.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.755" level="INFO">VALUE: [1.1403000000000107e-05, 1.1416000000000204e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1430999999999247e-05, 1.1403000000000107e-05, 1.1417000000003147e-05, 1.1416000000000204e-05, 1.1500000000001093e-05, 1.1375000000000968e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1402999999996638e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1416000000000204e-05, 1.1388000000001064e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1401999999997164e-05, 1.1361000000001398e-05, 1.1334000000001732e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1416000000000204e-05, 1.1430999999999247e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1457999999998913e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1430000000003243e-05, 1.1431000000002717e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1402000000000634e-05, 1.1431000000002717e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.754" endtime="20201115 22:02:18.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.749" endtime="20201115 22:02:18.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.759" endtime="20201115 22:02:18.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.762" endtime="20201115 22:02:18.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.760" endtime="20201115 22:02:18.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.757" endtime="20201115 22:02:18.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.388" endtime="20201115 22:02:18.783"></status>
</kw>
<msg timestamp="20201115 22:02:18.783" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.792" endtime="20201115 22:02:18.810"></status>
</kw>
<msg timestamp="20201115 22:02:18.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.790" endtime="20201115 22:02:18.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.811" endtime="20201115 22:02:18.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.814" endtime="20201115 22:02:18.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.787" endtime="20201115 22:02:18.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.785" endtime="20201115 22:02:18.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.823" endtime="20201115 22:02:19.109"></status>
</kw>
<msg timestamp="20201115 22:02:19.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019848625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.821" endtime="20201115 22:02:19.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019848625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.113" endtime="20201115 22:02:19.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.121" endtime="20201115 22:02:19.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.818" endtime="20201115 22:02:19.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.817" endtime="20201115 22:02:19.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.128" level="INFO">${RESULT} = [{'time': 0.019848625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1417000000003147e-05, 'source_diff': 1.1417000000003147e-05}, {'time': 0.020019681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:19.124" endtime="20201115 22:02:19.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.141" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:19.129" endtime="20201115 22:02:19.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.146" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:19.145" endtime="20201115 22:02:19.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.149" level="INFO">VALUE: [1.1417000000003147e-05, 1.1445000000002287e-05, 1.1403000000000107e-05, 1.1472000000001953e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1444999999998817e-05, 1.1389000000000538e-05, 1.1388999999997068e-05, 1.1416000000000204e-05, 1.1319999999998692e-05, 1.1444999999998817e-05, 1.1416000000000204e-05, 1.1430999999999247e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1375000000000968e-05, 1.1361000000001398e-05, 1.1445000000002287e-05, 1.1389000000000538e-05, 1.1431000000002717e-05, 1.1458999999998387e-05, 1.1403000000000107e-05, 1.1388999999997068e-05, 1.1362000000000871e-05, 1.1361000000001398e-05, 1.1387999999997594e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.1416000000000204e-05, 1.1416999999999677e-05, 1.1402000000000634e-05, 1.1416000000000204e-05, 1.1444999999998817e-05, 1.1457999999998913e-05, 1.1375000000000968e-05, 1.1430999999999247e-05, 1.1416000000000204e-05, 1.1457999999998913e-05, 1.1458000000002383e-05, 1.1416000000000204e-05, 1.1416000000000204e-05, 1.1430999999999247e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1416999999999677e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.147" endtime="20201115 22:02:19.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.142" endtime="20201115 22:02:19.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.153" endtime="20201115 22:02:19.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.156" endtime="20201115 22:02:19.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.155" endtime="20201115 22:02:19.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.151" endtime="20201115 22:02:19.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.783" endtime="20201115 22:02:19.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.200" endtime="20201115 22:02:19.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.199" endtime="20201115 22:02:19.177"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.180" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.188" endtime="20201115 22:02:19.207"></status>
</kw>
<msg timestamp="20201115 22:02:19.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.187" endtime="20201115 22:02:19.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.209" endtime="20201115 22:02:19.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.211" endtime="20201115 22:02:19.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.184" endtime="20201115 22:02:19.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.182" endtime="20201115 22:02:19.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.220" endtime="20201115 22:02:19.507"></status>
</kw>
<msg timestamp="20201115 22:02:19.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.219" endtime="20201115 22:02:19.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.511" endtime="20201115 22:02:19.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.520" endtime="20201115 22:02:19.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.216" endtime="20201115 22:02:19.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.215" endtime="20201115 22:02:19.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.526" level="INFO">${RESULT} = [{'time': 0.022260819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2027000000001259e-05, 'source_diff': 1.2027000000001259e-05}, {'time': 0.022443764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:19.523" endtime="20201115 22:02:19.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.540" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:19.527" endtime="20201115 22:02:19.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.544" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:19.543" endtime="20201115 22:02:19.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.547" level="INFO">VALUE: [1.2027000000001259e-05, 1.2014000000001163e-05, 1.1971999999998983e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2082999999999539e-05, 1.2068999999999969e-05, 1.1957999999999414e-05, 1.2028000000000733e-05, 1.2013999999997693e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2000000000001593e-05, 1.2028000000000733e-05, 1.2041999999996833e-05, 1.2041000000000829e-05, 1.2027999999997263e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.204099999999736e-05, 1.2027000000001259e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.1999999999998123e-05, 1.1971999999998983e-05, 1.1986000000002023e-05, 1.2028000000000733e-05, 1.2027000000001259e-05, 1.2027999999997263e-05, 1.2014000000001163e-05, 1.204099999999736e-05, 1.1999999999998123e-05, 1.2027999999997263e-05, 1.2055999999999872e-05, 1.2041000000000829e-05, 1.1999999999998123e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2027000000001259e-05, 1.2042000000000302e-05, 1.2013999999997693e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2069999999999442e-05, 1.2014000000001163e-05, 1.202699999999779e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.546" endtime="20201115 22:02:19.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.541" endtime="20201115 22:02:19.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.551" endtime="20201115 22:02:19.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.554" endtime="20201115 22:02:19.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.553" endtime="20201115 22:02:19.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.549" endtime="20201115 22:02:19.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.180" endtime="20201115 22:02:19.575"></status>
</kw>
<msg timestamp="20201115 22:02:19.575" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.584" endtime="20201115 22:02:19.603"></status>
</kw>
<msg timestamp="20201115 22:02:19.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.582" endtime="20201115 22:02:19.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.604" endtime="20201115 22:02:19.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.607" endtime="20201115 22:02:19.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.580" endtime="20201115 22:02:19.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.578" endtime="20201115 22:02:19.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.616" endtime="20201115 22:02:19.903"></status>
</kw>
<msg timestamp="20201115 22:02:19.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.614" endtime="20201115 22:02:19.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.907" endtime="20201115 22:02:19.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.915" endtime="20201115 22:02:19.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.612" endtime="20201115 22:02:19.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.610" endtime="20201115 22:02:19.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.922" level="INFO">${RESULT} = [{'time': 0.020017097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.020200944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:19.919" endtime="20201115 22:02:19.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.935" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:19.923" endtime="20201115 22:02:19.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.940" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:19.939" endtime="20201115 22:02:19.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.943" level="INFO">VALUE: [1.2028000000000733e-05, 1.204099999999736e-05, 1.2027999999997263e-05, 1.2027000000001259e-05, 1.1985999999998553e-05, 1.2028000000000733e-05, 1.2027000000001259e-05, 1.2027999999997263e-05, 1.2028000000000733e-05, 1.2000000000001593e-05, 1.2028000000000733e-05, 1.2055999999999872e-05, 1.2027999999997263e-05, 1.1972000000002453e-05, 1.2042000000000302e-05, 1.2042000000000302e-05, 1.2041000000000829e-05, 1.2013000000001689e-05, 1.2055000000000399e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2097000000002578e-05, 1.2068999999999969e-05, 1.2028000000000733e-05, 1.202699999999779e-05, 1.1957999999999414e-05, 1.2027999999997263e-05, 1.2014000000001163e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.2068999999999969e-05, 1.2028000000000733e-05, 1.1999999999998123e-05, 1.2082999999999539e-05, 1.1999999999998123e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2096999999999108e-05, 1.2041000000000829e-05, 1.201299999999822e-05, 1.2041000000000829e-05, 1.2000000000001593e-05, 1.202699999999779e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2042000000000302e-05, 1.1985999999998553e-05, 1.2082999999999539e-05, 1.2028000000000733e-05, 1.2028000000000733e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.941" endtime="20201115 22:02:19.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.936" endtime="20201115 22:02:19.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.946" endtime="20201115 22:02:19.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.949" endtime="20201115 22:02:19.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.948" endtime="20201115 22:02:19.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.944" endtime="20201115 22:02:19.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.576" endtime="20201115 22:02:19.970"></status>
</kw>
<msg timestamp="20201115 22:02:19.970" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.979" endtime="20201115 22:02:19.998"></status>
</kw>
<msg timestamp="20201115 22:02:19.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.977" endtime="20201115 22:02:19.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.000" endtime="20201115 22:02:20.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.002" endtime="20201115 22:02:20.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.975" endtime="20201115 22:02:20.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.973" endtime="20201115 22:02:20.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.011" endtime="20201115 22:02:20.298"></status>
</kw>
<msg timestamp="20201115 22:02:20.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.010" endtime="20201115 22:02:20.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.302" endtime="20201115 22:02:20.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.310" endtime="20201115 22:02:20.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.007" endtime="20201115 22:02:20.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.005" endtime="20201115 22:02:20.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.317" level="INFO">${RESULT} = [{'time': 0.020005861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.020190431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:20.313" endtime="20201115 22:02:20.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.330" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:20.318" endtime="20201115 22:02:20.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.335" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:20.334" endtime="20201115 22:02:20.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.337" level="INFO">VALUE: [1.2028000000000733e-05, 1.2027999999997263e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.1972999999998457e-05, 1.2027999999997263e-05, 1.2027000000001259e-05, 1.1957999999999414e-05, 1.1985999999998553e-05, 1.2014000000001163e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2000000000001593e-05, 1.2055999999999872e-05, 1.2014000000001163e-05, 1.2082999999999539e-05, 1.2014000000001163e-05, 1.2000000000001593e-05, 1.2013999999997693e-05, 1.2013999999997693e-05, 1.2068999999999969e-05, 1.2013999999997693e-05, 1.2028000000000733e-05, 1.2027999999997263e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2041000000000829e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.1971999999998983e-05, 1.202699999999779e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2013999999997693e-05, 1.2014000000001163e-05, 1.2027999999997263e-05, 1.2082999999999539e-05, 1.2000000000001593e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.2055999999999872e-05, 1.2027000000001259e-05, 1.1985999999998553e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2027999999997263e-05, 1.2028000000000733e-05, 1.2027000000001259e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.336" endtime="20201115 22:02:20.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.331" endtime="20201115 22:02:20.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.340" endtime="20201115 22:02:20.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.344" endtime="20201115 22:02:20.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.342" endtime="20201115 22:02:20.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.339" endtime="20201115 22:02:20.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.971" endtime="20201115 22:02:20.364"></status>
</kw>
<msg timestamp="20201115 22:02:20.365" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.373" endtime="20201115 22:02:20.392"></status>
</kw>
<msg timestamp="20201115 22:02:20.393" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.372" endtime="20201115 22:02:20.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.395" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.394" endtime="20201115 22:02:20.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.396" endtime="20201115 22:02:20.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.369" endtime="20201115 22:02:20.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.367" endtime="20201115 22:02:20.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.405" endtime="20201115 22:02:20.691"></status>
</kw>
<msg timestamp="20201115 22:02:20.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.404" endtime="20201115 22:02:20.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.695" endtime="20201115 22:02:20.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.704" endtime="20201115 22:02:20.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.401" endtime="20201115 22:02:20.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.399" endtime="20201115 22:02:20.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.711" level="INFO">${RESULT} = [{'time': 0.020018028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2042000000000302e-05, 'source_diff': 1.2042000000000302e-05}, {'time': 0.020201111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:20.707" endtime="20201115 22:02:20.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.724" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:20.711" endtime="20201115 22:02:20.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.728" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:20.727" endtime="20201115 22:02:20.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.731" level="INFO">VALUE: [1.2042000000000302e-05, 1.2042000000000302e-05, 1.1957999999999414e-05, 1.201299999999822e-05, 1.2042000000000302e-05, 1.2013999999997693e-05, 1.2041000000000829e-05, 1.2027000000001259e-05, 1.2027000000001259e-05, 1.2055000000000399e-05, 1.2028000000000733e-05, 1.1971999999998983e-05, 1.2028000000000733e-05, 1.2027999999997263e-05, 1.2027000000001259e-05, 1.1958000000002883e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2041000000000829e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2042000000000302e-05, 1.1985999999998553e-05, 1.1944999999999317e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2055999999999872e-05, 1.2042000000000302e-05, 1.202699999999779e-05, 1.2028000000000733e-05, 1.1971999999998983e-05, 1.2014000000001163e-05, 1.1999999999998123e-05, 1.2028000000000733e-05, 1.2013999999997693e-05, 1.2028000000000733e-05, 1.2027999999997263e-05, 1.1972000000002453e-05, 1.2027000000001259e-05, 1.202699999999779e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2041000000000829e-05, 1.2028000000000733e-05, 1.2013999999997693e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2014000000001163e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.729" endtime="20201115 22:02:20.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.725" endtime="20201115 22:02:20.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.734" endtime="20201115 22:02:20.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.737" endtime="20201115 22:02:20.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.736" endtime="20201115 22:02:20.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.732" endtime="20201115 22:02:20.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.365" endtime="20201115 22:02:20.758"></status>
</kw>
<msg timestamp="20201115 22:02:20.758" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.767" endtime="20201115 22:02:20.786"></status>
</kw>
<msg timestamp="20201115 22:02:20.787" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.765" endtime="20201115 22:02:20.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.788" endtime="20201115 22:02:20.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.790" endtime="20201115 22:02:20.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.763" endtime="20201115 22:02:20.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.761" endtime="20201115 22:02:20.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.799" endtime="20201115 22:02:21.086"></status>
</kw>
<msg timestamp="20201115 22:02:21.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019920222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01993225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:20.798" endtime="20201115 22:02:21.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019920222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01993225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:21.091" endtime="20201115 22:02:21.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.099" endtime="20201115 22:02:21.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.795" endtime="20201115 22:02:21.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.793" endtime="20201115 22:02:21.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.106" level="INFO">${RESULT} = [{'time': 0.01993225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2027999999997263e-05, 'source_diff': 1.2027999999997263e-05}, {'time': 0.020116958, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:21.102" endtime="20201115 22:02:21.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.119" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:21.106" endtime="20201115 22:02:21.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.123" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:21.122" endtime="20201115 22:02:21.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.126" level="INFO">VALUE: [1.2027999999997263e-05, 1.2027000000001259e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2041000000000829e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.2027999999997263e-05, 1.2096999999999108e-05, 1.2055000000000399e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2014000000001163e-05, 1.2042000000000302e-05, 1.1985999999998553e-05, 1.1971999999998983e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2027000000001259e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2027000000001259e-05, 1.2000000000001593e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.1973000000001927e-05, 1.2041000000000829e-05, 1.1999999999998123e-05, 1.2068999999999969e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2027000000001259e-05, 1.2028000000000733e-05, 1.2027999999997263e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.2013999999997693e-05, 1.2028000000000733e-05, 1.2055000000000399e-05, 1.204099999999736e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2041000000000829e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.2013999999997693e-05, 1.2027999999997263e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.124" endtime="20201115 22:02:21.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.120" endtime="20201115 22:02:21.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.129" endtime="20201115 22:02:21.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.132" endtime="20201115 22:02:21.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.131" endtime="20201115 22:02:21.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.127" endtime="20201115 22:02:21.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.759" endtime="20201115 22:02:21.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.178" endtime="20201115 22:02:21.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.178" endtime="20201115 22:02:21.153"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.156" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.164" endtime="20201115 22:02:21.184"></status>
</kw>
<msg timestamp="20201115 22:02:21.184" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.163" endtime="20201115 22:02:21.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.187" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.185" endtime="20201115 22:02:21.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.188" endtime="20201115 22:02:21.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.160" endtime="20201115 22:02:21.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.158" endtime="20201115 22:02:21.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.197" endtime="20201115 22:02:21.485"></status>
</kw>
<msg timestamp="20201115 22:02:21.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.196" endtime="20201115 22:02:21.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.489" endtime="20201115 22:02:21.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.497" endtime="20201115 22:02:21.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.193" endtime="20201115 22:02:21.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.192" endtime="20201115 22:02:21.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.504" level="INFO">${RESULT} = [{'time': 0.022426236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2638999999998318e-05, 'source_diff': 1.2638999999998318e-05}, {'time': 0.022622653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:21.500" endtime="20201115 22:02:21.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.517" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:21.505" endtime="20201115 22:02:21.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.522" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:21.521" endtime="20201115 22:02:21.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.524" level="INFO">VALUE: [1.2638999999998318e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2596999999999609e-05, 1.2638999999998318e-05, 1.2651999999998415e-05, 1.2652999999997888e-05, 1.2611000000002648e-05, 1.2611000000002648e-05, 1.2569000000000469e-05, 1.2638999999998318e-05, 1.2653000000001358e-05, 1.2597999999999082e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2637999999998845e-05, 1.2652999999997888e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2638000000002314e-05, 1.2638999999998318e-05, 1.2666999999997458e-05, 1.2653000000001358e-05, 1.2638999999998318e-05, 1.2638999999998318e-05, 1.2596999999999609e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2637999999998845e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2624999999998748e-05, 1.2679999999997554e-05, 1.2708000000000164e-05, 1.2569000000000469e-05, 1.2638999999998318e-05, 1.2681000000000497e-05, 1.2583000000000039e-05, 1.2652000000001884e-05, 1.2611000000002648e-05, 1.2639000000001788e-05, 1.2638999999994849e-05, 1.2639000000001788e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.523" endtime="20201115 22:02:21.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.518" endtime="20201115 22:02:21.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.528" endtime="20201115 22:02:21.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.532" endtime="20201115 22:02:21.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.530" endtime="20201115 22:02:21.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.526" endtime="20201115 22:02:21.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.156" endtime="20201115 22:02:21.553"></status>
</kw>
<msg timestamp="20201115 22:02:21.553" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.562" endtime="20201115 22:02:21.582"></status>
</kw>
<msg timestamp="20201115 22:02:21.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.560" endtime="20201115 22:02:21.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.588" endtime="20201115 22:02:21.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.591" endtime="20201115 22:02:21.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.557" endtime="20201115 22:02:21.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.555" endtime="20201115 22:02:21.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.600" endtime="20201115 22:02:21.886"></status>
</kw>
<msg timestamp="20201115 22:02:21.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020181333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.598" endtime="20201115 22:02:21.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020181333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.891" endtime="20201115 22:02:21.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.898" endtime="20201115 22:02:21.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.596" endtime="20201115 22:02:21.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.594" endtime="20201115 22:02:21.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.905" level="INFO">${RESULT} = [{'time': 0.020193972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2639000000001788e-05, 'source_diff': 1.2639000000001788e-05}, {'time': 0.020391514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:21.902" endtime="20201115 22:02:21.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.919" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:21.906" endtime="20201115 22:02:21.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.923" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:21.922" endtime="20201115 22:02:21.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.926" level="INFO">VALUE: [1.2639000000001788e-05, 1.2624999999998748e-05, 1.2637999999998845e-05, 1.2721999999999734e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2625000000002218e-05, 1.2638999999998318e-05, 1.2625000000002218e-05, 1.2612000000002122e-05, 1.2666000000001454e-05, 1.2708000000000164e-05, 1.2652999999997888e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2653000000001358e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2638999999998318e-05, 1.2652999999997888e-05, 1.2638999999998318e-05, 1.2651999999998415e-05, 1.2652999999997888e-05, 1.2652999999997888e-05, 1.2625000000002218e-05, 1.2651999999998415e-05, 1.2708999999999637e-05, 1.2681000000000497e-05, 1.2651999999998415e-05, 1.2625000000002218e-05, 1.2625000000002218e-05, 1.2665999999997984e-05, 1.2637999999998845e-05, 1.2611000000002648e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.924" endtime="20201115 22:02:21.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.920" endtime="20201115 22:02:21.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.929" endtime="20201115 22:02:21.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.932" endtime="20201115 22:02:21.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.931" endtime="20201115 22:02:21.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.927" endtime="20201115 22:02:21.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.553" endtime="20201115 22:02:21.953"></status>
</kw>
<msg timestamp="20201115 22:02:21.953" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.962" endtime="20201115 22:02:21.982"></status>
</kw>
<msg timestamp="20201115 22:02:21.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.961" endtime="20201115 22:02:21.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.985" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.984" endtime="20201115 22:02:21.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.986" endtime="20201115 22:02:21.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.958" endtime="20201115 22:02:21.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.956" endtime="20201115 22:02:21.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.995" endtime="20201115 22:02:22.282"></status>
</kw>
<msg timestamp="20201115 22:02:22.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020600653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020613292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.993" endtime="20201115 22:02:22.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020600653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020613292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.286" endtime="20201115 22:02:22.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.294" endtime="20201115 22:02:22.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.991" endtime="20201115 22:02:22.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.989" endtime="20201115 22:02:22.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.300" level="INFO">${RESULT} = [{'time': 0.020613292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2638999999998318e-05, 'source_diff': 1.2638999999998318e-05}, {'time': 0.020809958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:22.297" endtime="20201115 22:02:22.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.314" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:22.301" endtime="20201115 22:02:22.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.318" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:22.317" endtime="20201115 22:02:22.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.321" level="INFO">VALUE: [1.2638999999998318e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2652999999997888e-05, 1.2610999999999178e-05, 1.2651999999998415e-05, 1.2611000000002648e-05, 1.2638999999998318e-05, 1.2638000000002314e-05, 1.2638999999998318e-05, 1.2721999999999734e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2598000000002552e-05, 1.2624999999998748e-05, 1.2651999999998415e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2569000000000469e-05, 1.2638999999998318e-05, 1.2596999999999609e-05, 1.2639000000001788e-05, 1.2666000000001454e-05, 1.2610999999999178e-05, 1.2637999999998845e-05, 1.2651999999998415e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2611000000002648e-05, 1.2665999999997984e-05, 1.2624999999998748e-05, 1.2708000000000164e-05, 1.2639000000001788e-05, 1.2708999999999637e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2680000000001024e-05, 1.2638999999998318e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2667000000000928e-05, 1.2637999999998845e-05, 1.2639000000001788e-05, 1.2653000000001358e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2624999999998748e-05, 1.2638999999998318e-05, 1.2555000000000899e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.320" endtime="20201115 22:02:22.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.315" endtime="20201115 22:02:22.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.324" endtime="20201115 22:02:22.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.328" endtime="20201115 22:02:22.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.326" endtime="20201115 22:02:22.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.322" endtime="20201115 22:02:22.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.954" endtime="20201115 22:02:22.349"></status>
</kw>
<msg timestamp="20201115 22:02:22.349" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.358" endtime="20201115 22:02:22.377"></status>
</kw>
<msg timestamp="20201115 22:02:22.378" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.356" endtime="20201115 22:02:22.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.380" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.379" endtime="20201115 22:02:22.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.381" endtime="20201115 22:02:22.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.354" endtime="20201115 22:02:22.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.352" endtime="20201115 22:02:22.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.390" endtime="20201115 22:02:22.676"></status>
</kw>
<msg timestamp="20201115 22:02:22.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020365194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020377847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.389" endtime="20201115 22:02:22.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020365194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020377847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.681" endtime="20201115 22:02:22.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.689" endtime="20201115 22:02:22.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.386" endtime="20201115 22:02:22.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.384" endtime="20201115 22:02:22.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.695" level="INFO">${RESULT} = [{'time': 0.020377847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2653000000001358e-05, 'source_diff': 1.2653000000001358e-05}, {'time': 0.020575958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:22.692" endtime="20201115 22:02:22.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.709" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:22.696" endtime="20201115 22:02:22.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.713" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:22.712" endtime="20201115 22:02:22.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.716" level="INFO">VALUE: [1.2653000000001358e-05, 1.2638999999998318e-05, 1.2583999999999512e-05, 1.2638999999998318e-05, 1.2611000000002648e-05, 1.2612000000002122e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2651999999998415e-05, 1.2651999999998415e-05, 1.2624999999998748e-05, 1.2652999999997888e-05, 1.2693999999997124e-05, 1.2652999999997888e-05, 1.2652999999997888e-05, 1.2625000000002218e-05, 1.2638999999998318e-05, 1.2637999999998845e-05, 1.2638999999998318e-05, 1.2653000000001358e-05, 1.2681000000000497e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2639000000001788e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2651999999998415e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2667000000000928e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2652000000001884e-05, 1.2638999999998318e-05, 1.2653000000001358e-05, 1.2637999999998845e-05, 1.2653000000001358e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2569000000000469e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.714" endtime="20201115 22:02:22.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.710" endtime="20201115 22:02:22.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.719" endtime="20201115 22:02:22.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.723" endtime="20201115 22:02:22.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.721" endtime="20201115 22:02:22.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.718" endtime="20201115 22:02:22.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.349" endtime="20201115 22:02:22.743"></status>
</kw>
<msg timestamp="20201115 22:02:22.744" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.752" endtime="20201115 22:02:22.773"></status>
</kw>
<msg timestamp="20201115 22:02:22.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.751" endtime="20201115 22:02:22.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.775" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.774" endtime="20201115 22:02:22.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.776" endtime="20201115 22:02:22.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.748" endtime="20201115 22:02:22.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.746" endtime="20201115 22:02:22.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.785" endtime="20201115 22:02:23.073"></status>
</kw>
<msg timestamp="20201115 22:02:23.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020058403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.784" endtime="20201115 22:02:23.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020058403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.077" endtime="20201115 22:02:23.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.085" endtime="20201115 22:02:23.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.781" endtime="20201115 22:02:23.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.780" endtime="20201115 22:02:23.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.092" level="INFO">${RESULT} = [{'time': 0.020058403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2624999999998748e-05, 'source_diff': 1.2624999999998748e-05}, {'time': 0.020256319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:23.088" endtime="20201115 22:02:23.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.105" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:23.093" endtime="20201115 22:02:23.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.110" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:23.108" endtime="20201115 22:02:23.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.112" level="INFO">VALUE: [1.2624999999998748e-05, 1.2610999999999178e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2583000000000039e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2666000000001454e-05, 1.2625000000002218e-05, 1.2652999999997888e-05, 1.2638000000002314e-05, 1.2667000000000928e-05, 1.2624999999998748e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2625000000002218e-05, 1.2596999999999609e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2652999999997888e-05, 1.2638000000002314e-05, 1.2639000000001788e-05, 1.2694000000000594e-05, 1.2638000000002314e-05, 1.2680000000001024e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2569999999999942e-05, 1.2653000000001358e-05, 1.2596999999999609e-05, 1.2624999999998748e-05, 1.2667000000000928e-05, 1.2681000000000497e-05, 1.2653000000001358e-05, 1.2611000000002648e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2624999999998748e-05, 1.2610999999999178e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.111" endtime="20201115 22:02:23.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.106" endtime="20201115 22:02:23.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.116" endtime="20201115 22:02:23.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.119" endtime="20201115 22:02:23.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.117" endtime="20201115 22:02:23.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.114" endtime="20201115 22:02:23.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.744" endtime="20201115 22:02:23.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.155" endtime="20201115 22:02:23.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.154" endtime="20201115 22:02:23.140"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.142" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.151" endtime="20201115 22:02:23.171"></status>
</kw>
<msg timestamp="20201115 22:02:23.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.149" endtime="20201115 22:02:23.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.173" endtime="20201115 22:02:23.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.175" endtime="20201115 22:02:23.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.147" endtime="20201115 22:02:23.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.145" endtime="20201115 22:02:23.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.184" endtime="20201115 22:02:23.470"></status>
</kw>
<msg timestamp="20201115 22:02:23.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022343903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.183" endtime="20201115 22:02:23.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022343903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.474" endtime="20201115 22:02:23.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.482" endtime="20201115 22:02:23.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.180" endtime="20201115 22:02:23.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.178" endtime="20201115 22:02:23.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.488" level="INFO">${RESULT} = [{'time': 0.022343903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3249999999999373e-05, 'source_diff': 1.3249999999999373e-05}, {'time': 0.022554028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:23.485" endtime="20201115 22:02:23.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.502" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:23.489" endtime="20201115 22:02:23.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.506" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:23.505" endtime="20201115 22:02:23.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.509" level="INFO">VALUE: [1.3249999999999373e-05, 1.3209000000000137e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3180999999997528e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3264000000002413e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.329099999999861e-05, 1.3292000000001553e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3264000000002413e-05, 1.3249999999999373e-05, 1.3292000000001553e-05, 1.3235999999999803e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3250000000002843e-05, 1.3250000000002843e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3292000000001553e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.326299999999947e-05, 1.3250000000002843e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3264000000005882e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.326299999999947e-05, 1.326299999999947e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.507" endtime="20201115 22:02:23.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.503" endtime="20201115 22:02:23.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.513" endtime="20201115 22:02:23.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.516" endtime="20201115 22:02:23.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.514" endtime="20201115 22:02:23.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.511" endtime="20201115 22:02:23.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.143" endtime="20201115 22:02:23.536"></status>
</kw>
<msg timestamp="20201115 22:02:23.537" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.546" endtime="20201115 22:02:23.566"></status>
</kw>
<msg timestamp="20201115 22:02:23.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.544" endtime="20201115 22:02:23.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.567" endtime="20201115 22:02:23.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.570" endtime="20201115 22:02:23.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.541" endtime="20201115 22:02:23.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.539" endtime="20201115 22:02:23.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.579" endtime="20201115 22:02:23.865"></status>
</kw>
<msg timestamp="20201115 22:02:23.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.577" endtime="20201115 22:02:23.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.869" endtime="20201115 22:02:23.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.877" endtime="20201115 22:02:23.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.575" endtime="20201115 22:02:23.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.573" endtime="20201115 22:02:23.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.884" level="INFO">${RESULT} = [{'time': 0.020083097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3250000000002843e-05, 'source_diff': 1.3250000000002843e-05}, {'time': 0.020291736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:23.881" endtime="20201115 22:02:23.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.897" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:23.885" endtime="20201115 22:02:23.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.902" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:23.901" endtime="20201115 22:02:23.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.905" level="INFO">VALUE: [1.3250000000002843e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3306000000001122e-05, 1.3249999999999373e-05, 1.327699999999904e-05, 1.3263999999998943e-05, 1.3166999999997958e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3250000000002843e-05, 1.3264000000002413e-05, 1.3235999999999803e-05, 1.3278000000001983e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3278000000001983e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3208000000000664e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3250000000002843e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.329099999999861e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3264000000002413e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3291999999998083e-05, 1.3277000000002509e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3208000000000664e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.903" endtime="20201115 22:02:23.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.899" endtime="20201115 22:02:23.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.908" endtime="20201115 22:02:23.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.912" endtime="20201115 22:02:23.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.910" endtime="20201115 22:02:23.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.906" endtime="20201115 22:02:23.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.537" endtime="20201115 22:02:23.932"></status>
</kw>
<msg timestamp="20201115 22:02:23.932" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.941" endtime="20201115 22:02:23.962"></status>
</kw>
<msg timestamp="20201115 22:02:23.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.940" endtime="20201115 22:02:23.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.964" endtime="20201115 22:02:23.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.966" endtime="20201115 22:02:23.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.937" endtime="20201115 22:02:23.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.935" endtime="20201115 22:02:23.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.975" endtime="20201115 22:02:24.261"></status>
</kw>
<msg timestamp="20201115 22:02:24.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019983875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.974" endtime="20201115 22:02:24.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019983875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.265" endtime="20201115 22:02:24.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.273" endtime="20201115 22:02:24.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.971" endtime="20201115 22:02:24.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.969" endtime="20201115 22:02:24.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.281" level="INFO">${RESULT} = [{'time': 0.019997167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3291999999998083e-05, 'source_diff': 1.3291999999998083e-05}, {'time': 0.020205167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:24.277" endtime="20201115 22:02:24.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.294" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:24.281" endtime="20201115 22:02:24.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.298" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:24.297" endtime="20201115 22:02:24.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.301" level="INFO">VALUE: [1.3291999999998083e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3194000000001094e-05, 1.3264000000002413e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3193999999997624e-05, 1.329099999999861e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3181000000000997e-05, 1.3320000000000692e-05, 1.3306000000001122e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3250000000002843e-05, 1.3249999999999373e-05, 1.3222999999999707e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3306000000001122e-05, 1.3249999999999373e-05, 1.3264000000002413e-05, 1.3263999999998943e-05, 1.3264000000002413e-05, 1.3249999999999373e-05, 1.3179999999998054e-05, 1.3249999999999373e-05, 1.3250000000002843e-05, 1.3250000000002843e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3264000000002413e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3249999999999373e-05]</msg>
<status status="PASS" starttime="20201115 22:02:24.299" endtime="20201115 22:02:24.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.295" endtime="20201115 22:02:24.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.304" endtime="20201115 22:02:24.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.307" endtime="20201115 22:02:24.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.306" endtime="20201115 22:02:24.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.302" endtime="20201115 22:02:24.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.933" endtime="20201115 22:02:24.328"></status>
</kw>
<msg timestamp="20201115 22:02:24.328" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.337" endtime="20201115 22:02:24.357"></status>
</kw>
<msg timestamp="20201115 22:02:24.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.335" endtime="20201115 22:02:24.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.361" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.359" endtime="20201115 22:02:24.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.362" endtime="20201115 22:02:24.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.333" endtime="20201115 22:02:24.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.331" endtime="20201115 22:02:24.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.371" endtime="20201115 22:02:24.658"></status>
</kw>
<msg timestamp="20201115 22:02:24.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.369" endtime="20201115 22:02:24.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.662" endtime="20201115 22:02:24.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.671" endtime="20201115 22:02:24.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.366" endtime="20201115 22:02:24.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.365" endtime="20201115 22:02:24.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.677" level="INFO">${RESULT} = [{'time': 0.019936694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3291000000002079e-05, 'source_diff': 1.3291000000002079e-05}, {'time': 0.020145875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:24.674" endtime="20201115 22:02:24.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.691" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:24.678" endtime="20201115 22:02:24.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.695" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:24.694" endtime="20201115 22:02:24.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.698" level="INFO">VALUE: [1.3291000000002079e-05, 1.3292000000001553e-05, 1.3208000000000664e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3250000000002843e-05, 1.3264000000002413e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3278000000001983e-05, 1.3264000000002413e-05, 1.3263999999998943e-05, 1.3236999999999277e-05, 1.3291999999998083e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3264000000002413e-05, 1.3278000000001983e-05, 1.3306000000001122e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3264000000002413e-05, 1.3249999999999373e-05, 1.326299999999947e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3236000000003273e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3236999999999277e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.331899999999775e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3250000000002843e-05, 1.3249999999999373e-05, 1.3292000000001553e-05]</msg>
<status status="PASS" starttime="20201115 22:02:24.696" endtime="20201115 22:02:24.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.692" endtime="20201115 22:02:24.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.701" endtime="20201115 22:02:24.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.704" endtime="20201115 22:02:24.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.703" endtime="20201115 22:02:24.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.699" endtime="20201115 22:02:24.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.329" endtime="20201115 22:02:24.725"></status>
</kw>
<msg timestamp="20201115 22:02:24.725" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.734" endtime="20201115 22:02:24.754"></status>
</kw>
<msg timestamp="20201115 22:02:24.754" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.732" endtime="20201115 22:02:24.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.756" endtime="20201115 22:02:24.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.758" endtime="20201115 22:02:24.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.730" endtime="20201115 22:02:24.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.728" endtime="20201115 22:02:24.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.767" endtime="20201115 22:02:25.053"></status>
</kw>
<msg timestamp="20201115 22:02:25.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.765" endtime="20201115 22:02:25.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.057" endtime="20201115 22:02:25.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.066" endtime="20201115 22:02:25.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.763" endtime="20201115 22:02:25.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.761" endtime="20201115 22:02:25.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.072" level="INFO">${RESULT} = [{'time': 0.019967069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3249999999999373e-05, 'source_diff': 1.3249999999999373e-05}, {'time': 0.020176681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.069" endtime="20201115 22:02:25.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.086" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:25.073" endtime="20201115 22:02:25.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.090" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:25.089" endtime="20201115 22:02:25.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.093" level="INFO">VALUE: [1.3249999999999373e-05, 1.3166999999997958e-05, 1.3166999999997958e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3250000000002843e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3264000000002413e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.329099999999861e-05, 1.3249999999999373e-05, 1.3236999999999277e-05, 1.3264000000002413e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3264000000002413e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3195000000000567e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3209000000000137e-05, 1.3264000000002413e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3320000000000692e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.3305000000001649e-05, 1.3277999999998513e-05, 1.3250000000002843e-05, 1.327699999999904e-05, 1.326299999999947e-05, 1.3249999999999373e-05, 1.3292000000001553e-05, 1.3264000000002413e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3236000000003273e-05, 1.3236000000003273e-05, 1.326299999999947e-05, 1.3249999999999373e-05, 1.3291000000002079e-05, 1.3249999999999373e-05, 1.3250000000002843e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.091" endtime="20201115 22:02:25.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.087" endtime="20201115 22:02:25.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.096" endtime="20201115 22:02:25.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.099" endtime="20201115 22:02:25.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.098" endtime="20201115 22:02:25.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.094" endtime="20201115 22:02:25.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.726" endtime="20201115 22:02:25.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.141" endtime="20201115 22:02:25.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.140" endtime="20201115 22:02:25.120"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.122" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.131" endtime="20201115 22:02:25.153"></status>
</kw>
<msg timestamp="20201115 22:02:25.153" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.130" endtime="20201115 22:02:25.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.154" endtime="20201115 22:02:25.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.157" endtime="20201115 22:02:25.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.127" endtime="20201115 22:02:25.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.125" endtime="20201115 22:02:25.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.166" endtime="20201115 22:02:25.453"></status>
</kw>
<msg timestamp="20201115 22:02:25.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.165" endtime="20201115 22:02:25.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.457" endtime="20201115 22:02:25.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.465" endtime="20201115 22:02:25.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.162" endtime="20201115 22:02:25.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.161" endtime="20201115 22:02:25.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.472" level="INFO">${RESULT} = [{'time': 0.022425097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.022648278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.468" endtime="20201115 22:02:25.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.485" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:25.473" endtime="20201115 22:02:25.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.490" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:25.489" endtime="20201115 22:02:25.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.492" level="INFO">VALUE: [1.3874999999999998e-05, 1.3847000000000859e-05, 1.3917000000002178e-05, 1.3874999999999998e-05, 1.3819999999997723e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3848000000000332e-05, 1.3861999999999902e-05, 1.3861000000000429e-05, 1.381899999999825e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.384699999999739e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3861999999999902e-05, 1.3848000000000332e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.3860999999996959e-05, 1.3847000000000859e-05, 1.384699999999739e-05, 1.3847000000000859e-05, 1.3847000000000859e-05, 1.3805000000002149e-05, 1.3860999999996959e-05, 1.3847000000000859e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3861999999999902e-05, 1.3916999999998708e-05, 1.3861000000000429e-05, 1.3888000000000095e-05, 1.3901999999999665e-05, 1.3860999999996959e-05, 1.3833000000004758e-05, 1.3874999999996529e-05, 1.3860999999996959e-05, 1.3875000000003468e-05, 1.3860999999996959e-05, 1.3875000000003468e-05, 1.380499999999868e-05, 1.3860999999996959e-05, 1.3861000000003898e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.491" endtime="20201115 22:02:25.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.486" endtime="20201115 22:02:25.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.495" endtime="20201115 22:02:25.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.498" endtime="20201115 22:02:25.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.497" endtime="20201115 22:02:25.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.493" endtime="20201115 22:02:25.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.123" endtime="20201115 22:02:25.519"></status>
</kw>
<msg timestamp="20201115 22:02:25.519" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.528" endtime="20201115 22:02:25.550"></status>
</kw>
<msg timestamp="20201115 22:02:25.550" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.527" endtime="20201115 22:02:25.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.553" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.551" endtime="20201115 22:02:25.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.554" endtime="20201115 22:02:25.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.524" endtime="20201115 22:02:25.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.522" endtime="20201115 22:02:25.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.563" endtime="20201115 22:02:25.849"></status>
</kw>
<msg timestamp="20201115 22:02:25.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019989569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.562" endtime="20201115 22:02:25.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019989569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.853" endtime="20201115 22:02:25.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.861" endtime="20201115 22:02:25.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.559" endtime="20201115 22:02:25.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.557" endtime="20201115 22:02:25.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.868" level="INFO">${RESULT} = [{'time': 0.020003444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.020227278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.865" endtime="20201115 22:02:25.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.881" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:25.869" endtime="20201115 22:02:25.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.886" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:25.885" endtime="20201115 22:02:25.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.888" level="INFO">VALUE: [1.3874999999999998e-05, 1.3861000000000429e-05, 1.3806000000001623e-05, 1.383299999999782e-05, 1.3861000000000429e-05, 1.383299999999782e-05, 1.3833000000001289e-05, 1.3861999999999902e-05, 1.3848000000000332e-05, 1.3915999999999235e-05, 1.3848000000000332e-05, 1.3929999999998804e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.3916999999998708e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3792000000002053e-05, 1.3874999999999998e-05, 1.3791999999998583e-05, 1.3860999999996959e-05, 1.3874999999999998e-05, 1.3848000000000332e-05, 1.3848000000000332e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3931000000001748e-05, 1.384699999999739e-05, 1.3874999999999998e-05, 1.3929999999998804e-05, 1.3847000000000859e-05, 1.3861999999999902e-05, 1.3902999999999138e-05, 1.3861000000000429e-05, 1.3917000000002178e-05, 1.3848000000000332e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3930000000002274e-05, 1.3847000000000859e-05, 1.3915999999999235e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3861000000000429e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.887" endtime="20201115 22:02:25.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.882" endtime="20201115 22:02:25.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.891" endtime="20201115 22:02:25.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.895" endtime="20201115 22:02:25.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.893" endtime="20201115 22:02:25.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.890" endtime="20201115 22:02:25.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.520" endtime="20201115 22:02:25.915"></status>
</kw>
<msg timestamp="20201115 22:02:25.915" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.925" endtime="20201115 22:02:25.946"></status>
</kw>
<msg timestamp="20201115 22:02:25.946" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.923" endtime="20201115 22:02:25.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.949" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.948" endtime="20201115 22:02:25.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.950" endtime="20201115 22:02:25.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.921" endtime="20201115 22:02:25.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.918" endtime="20201115 22:02:25.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.959" endtime="20201115 22:02:26.247"></status>
</kw>
<msg timestamp="20201115 22:02:26.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020519694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.957" endtime="20201115 22:02:26.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020519694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.251" endtime="20201115 22:02:26.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.259" endtime="20201115 22:02:26.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.955" endtime="20201115 22:02:26.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.953" endtime="20201115 22:02:26.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.266" level="INFO">${RESULT} = [{'time': 0.020519694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3902000000003134e-05, 'source_diff': 1.3902000000003134e-05}, {'time': 0.020744583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:26.263" endtime="20201115 22:02:26.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.279" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:26.267" endtime="20201115 22:02:26.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.284" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:26.283" endtime="20201115 22:02:26.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.286" level="INFO">VALUE: [1.3902000000003134e-05, 1.3861000000000429e-05, 1.3847000000000859e-05, 1.3903000000002608e-05, 1.3833000000001289e-05, 1.3888999999999568e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3848000000000332e-05, 1.3861000000000429e-05, 1.3888999999999568e-05, 1.3848000000000332e-05, 1.3847000000000859e-05, 1.3860999999996959e-05, 1.3929999999998804e-05, 1.3847000000000859e-05, 1.384699999999739e-05, 1.3819000000001719e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3848000000000332e-05, 1.3861999999999902e-05, 1.3861000000000429e-05, 1.3861999999999902e-05, 1.3847000000000859e-05, 1.3848000000000332e-05, 1.3874999999999998e-05, 1.3860999999996959e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3820000000001192e-05, 1.3874999999999998e-05, 1.379099999999911e-05, 1.384699999999739e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3861999999999902e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3848000000000332e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3888999999999568e-05, 1.3820000000001192e-05, 1.3861000000000429e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3847000000004328e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.285" endtime="20201115 22:02:26.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.280" endtime="20201115 22:02:26.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.289" endtime="20201115 22:02:26.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.293" endtime="20201115 22:02:26.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.291" endtime="20201115 22:02:26.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.288" endtime="20201115 22:02:26.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.916" endtime="20201115 22:02:26.314"></status>
</kw>
<msg timestamp="20201115 22:02:26.314" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.323" endtime="20201115 22:02:26.344"></status>
</kw>
<msg timestamp="20201115 22:02:26.345" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.321" endtime="20201115 22:02:26.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.347" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.346" endtime="20201115 22:02:26.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.348" endtime="20201115 22:02:26.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.319" endtime="20201115 22:02:26.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.317" endtime="20201115 22:02:26.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.357" endtime="20201115 22:02:26.644"></status>
</kw>
<msg timestamp="20201115 22:02:26.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019992278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.356" endtime="20201115 22:02:26.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019992278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.648" endtime="20201115 22:02:26.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.656" endtime="20201115 22:02:26.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.353" endtime="20201115 22:02:26.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.351" endtime="20201115 22:02:26.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.663" level="INFO">${RESULT} = [{'time': 0.019992278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3930999999998278e-05, 'source_diff': 1.3930999999998278e-05}, {'time': 0.020215347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:26.660" endtime="20201115 22:02:26.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.677" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:26.664" endtime="20201115 22:02:26.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.681" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:26.680" endtime="20201115 22:02:26.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.683" level="INFO">VALUE: [1.3930999999998278e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.380499999999868e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.384699999999739e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3901999999999665e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3860999999996959e-05, 1.3874999999999998e-05, 1.3861999999999902e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3860999999996959e-05, 1.3874999999999998e-05, 1.384699999999739e-05, 1.3889000000003038e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3848000000000332e-05, 1.3833000000001289e-05, 1.3915999999999235e-05, 1.3903000000002608e-05, 1.3874999999999998e-05, 1.3820000000001192e-05, 1.3929999999998804e-05, 1.3888999999999568e-05, 1.3889000000003038e-05, 1.3861000000000429e-05, 1.3903000000002608e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.682" endtime="20201115 22:02:26.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.677" endtime="20201115 22:02:26.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.691" endtime="20201115 22:02:26.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.694" endtime="20201115 22:02:26.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.693" endtime="20201115 22:02:26.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.689" endtime="20201115 22:02:26.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.315" endtime="20201115 22:02:26.715"></status>
</kw>
<msg timestamp="20201115 22:02:26.715" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.724" endtime="20201115 22:02:26.745"></status>
</kw>
<msg timestamp="20201115 22:02:26.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.722" endtime="20201115 22:02:26.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.747" endtime="20201115 22:02:26.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.749" endtime="20201115 22:02:26.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.720" endtime="20201115 22:02:26.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.718" endtime="20201115 22:02:26.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.758" endtime="20201115 22:02:27.048"></status>
</kw>
<msg timestamp="20201115 22:02:27.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020022236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020036097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.757" endtime="20201115 22:02:27.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020022236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020036097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.057" endtime="20201115 22:02:27.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.075" endtime="20201115 22:02:27.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.754" endtime="20201115 22:02:27.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.752" endtime="20201115 22:02:27.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.089" level="INFO">${RESULT} = [{'time': 0.020036097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.020260486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:27.082" endtime="20201115 22:02:27.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.119" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:27.091" endtime="20201115 22:02:27.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.128" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:27.126" endtime="20201115 22:02:27.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.134" level="INFO">VALUE: [1.3861000000000429e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3930999999998278e-05, 1.3861000000000429e-05, 1.3944000000001844e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3916999999998708e-05, 1.3833000000001289e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3917000000002178e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3848000000000332e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.3791000000002579e-05, 1.3929999999998804e-05, 1.3847000000000859e-05, 1.384699999999739e-05, 1.3861000000000429e-05, 1.3888999999999568e-05, 1.3847000000000859e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.381899999999825e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.3861000000000429e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.131" endtime="20201115 22:02:27.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.121" endtime="20201115 22:02:27.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.137" endtime="20201115 22:02:27.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.141" endtime="20201115 22:02:27.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.139" endtime="20201115 22:02:27.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.136" endtime="20201115 22:02:27.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.716" endtime="20201115 22:02:27.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.121" endtime="20201115 22:02:27.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.121" endtime="20201115 22:02:27.162"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.164" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.173" endtime="20201115 22:02:27.194"></status>
</kw>
<msg timestamp="20201115 22:02:27.195" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.171" endtime="20201115 22:02:27.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.196" endtime="20201115 22:02:27.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.198" endtime="20201115 22:02:27.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.169" endtime="20201115 22:02:27.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.167" endtime="20201115 22:02:27.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.207" endtime="20201115 22:02:27.493"></status>
</kw>
<msg timestamp="20201115 22:02:27.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.206" endtime="20201115 22:02:27.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.497" endtime="20201115 22:02:27.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.505" endtime="20201115 22:02:27.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.203" endtime="20201115 22:02:27.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.201" endtime="20201115 22:02:27.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.512" level="INFO">${RESULT} = [{'time': 0.022561667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4473000000000957e-05, 'source_diff': 1.4473000000000957e-05}, {'time': 0.022797639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:27.508" endtime="20201115 22:02:27.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.525" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:27.513" endtime="20201115 22:02:27.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.530" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:27.529" endtime="20201115 22:02:27.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.533" level="INFO">VALUE: [1.4473000000000957e-05, 1.4458000000001914e-05, 1.4486000000001054e-05, 1.4457999999998444e-05, 1.4458000000001914e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4486999999997058e-05, 1.4444999999998348e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4500000000000624e-05, 1.4486000000001054e-05, 1.4458000000001914e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.4514000000000193e-05, 1.4487000000000527e-05, 1.452700000000029e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4458000000001914e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4457999999998444e-05, 1.4473000000000957e-05, 1.4472000000001484e-05, 1.4457999999998444e-05, 1.4444000000002344e-05, 1.4457999999998444e-05, 1.4472000000001484e-05, 1.4443999999998874e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4500000000000624e-05, 1.4471999999994545e-05, 1.4500000000000624e-05, 1.4443999999995405e-05, 1.4472000000001484e-05, 1.4458000000001914e-05, 1.4459000000001387e-05, 1.4472000000001484e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4402999999996169e-05, 1.4500000000000624e-05, 1.4472000000001484e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.531" endtime="20201115 22:02:27.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.526" endtime="20201115 22:02:27.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.536" endtime="20201115 22:02:27.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.539" endtime="20201115 22:02:27.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.538" endtime="20201115 22:02:27.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.534" endtime="20201115 22:02:27.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.165" endtime="20201115 22:02:27.560"></status>
</kw>
<msg timestamp="20201115 22:02:27.560" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.569" endtime="20201115 22:02:27.591"></status>
</kw>
<msg timestamp="20201115 22:02:27.591" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.568" endtime="20201115 22:02:27.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.594" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.592" endtime="20201115 22:02:27.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.595" endtime="20201115 22:02:27.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.565" endtime="20201115 22:02:27.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.563" endtime="20201115 22:02:27.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.604" endtime="20201115 22:02:27.891"></status>
</kw>
<msg timestamp="20201115 22:02:27.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020237125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020251597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.602" endtime="20201115 22:02:27.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020237125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020251597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.895" endtime="20201115 22:02:27.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.903" endtime="20201115 22:02:27.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.600" endtime="20201115 22:02:27.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.598" endtime="20201115 22:02:27.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.910" level="INFO">${RESULT} = [{'time': 0.020251597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4471999999998014e-05, 'source_diff': 1.4471999999998014e-05}, {'time': 0.020490583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:27.906" endtime="20201115 22:02:27.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.967" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:27.911" endtime="20201115 22:02:27.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.972" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:27.971" endtime="20201115 22:02:27.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.974" level="INFO">VALUE: [1.4471999999998014e-05, 1.4443999999998874e-05, 1.4500000000000624e-05, 1.4541999999999333e-05, 1.4487000000000527e-05, 1.4459000000001387e-05, 1.4486000000001054e-05, 1.4473000000000957e-05, 1.4486999999997058e-05, 1.4458000000001914e-05, 1.4471999999998014e-05, 1.4457999999998444e-05, 1.4486000000001054e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4457999999998444e-05, 1.4443999999998874e-05, 1.4555000000002899e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4459000000001387e-05, 1.4486000000001054e-05, 1.4458000000001914e-05, 1.4499999999997154e-05, 1.4486000000001054e-05, 1.4443999999998874e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.4486000000001054e-05, 1.4471999999998014e-05, 1.4486000000001054e-05, 1.4485999999997584e-05, 1.4459000000001387e-05, 1.4472999999997488e-05, 1.4472000000001484e-05, 1.4485999999997584e-05, 1.4458999999997918e-05, 1.4473000000000957e-05, 1.4472000000001484e-05, 1.4486000000001054e-05, 1.4459000000001387e-05, 1.4472000000001484e-05, 1.4500000000000624e-05, 1.4473000000000957e-05, 1.4485999999997584e-05, 1.4472000000001484e-05, 1.4415999999999735e-05, 1.4473000000000957e-05, 1.4473000000000957e-05, 1.4471999999994545e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.973" endtime="20201115 22:02:27.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.968" endtime="20201115 22:02:27.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.977" endtime="20201115 22:02:27.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.980" endtime="20201115 22:02:28.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.979" endtime="20201115 22:02:28.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.975" endtime="20201115 22:02:28.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.561" endtime="20201115 22:02:28.001"></status>
</kw>
<msg timestamp="20201115 22:02:28.001" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.011" endtime="20201115 22:02:28.033"></status>
</kw>
<msg timestamp="20201115 22:02:28.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.009" endtime="20201115 22:02:28.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.034" endtime="20201115 22:02:28.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.037" endtime="20201115 22:02:28.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.006" endtime="20201115 22:02:28.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.004" endtime="20201115 22:02:28.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.045" endtime="20201115 22:02:28.330"></status>
</kw>
<msg timestamp="20201115 22:02:28.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020744819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020759306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.044" endtime="20201115 22:02:28.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020744819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020759306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.335" endtime="20201115 22:02:28.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.343" endtime="20201115 22:02:28.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.041" endtime="20201115 22:02:28.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.040" endtime="20201115 22:02:28.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.350" level="INFO">${RESULT} = [{'time': 0.020759306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4487000000000527e-05, 'source_diff': 1.4487000000000527e-05}, {'time': 0.020998708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:28.346" endtime="20201115 22:02:28.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.363" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:28.351" endtime="20201115 22:02:28.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.368" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:28.367" endtime="20201115 22:02:28.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.370" level="INFO">VALUE: [1.4487000000000527e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4486999999997058e-05, 1.4472000000001484e-05, 1.4486000000001054e-05, 1.4471999999998014e-05, 1.4473000000000957e-05, 1.4458999999997918e-05, 1.4486000000001054e-05, 1.4486000000001054e-05, 1.4486000000001054e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4457999999998444e-05, 1.4472000000001484e-05, 1.4473000000000957e-05, 1.4472000000001484e-05, 1.4430999999998778e-05, 1.4473000000000957e-05, 1.4472999999997488e-05, 1.4458000000001914e-05, 1.4429999999999304e-05, 1.4458999999997918e-05, 1.4485999999997584e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.4430000000002774e-05, 1.4473000000000957e-05, 1.4471999999998014e-05, 1.4472999999997488e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4473000000000957e-05, 1.4473000000000957e-05, 1.4486000000001054e-05, 1.4485999999997584e-05, 1.4486000000001054e-05, 1.4472999999997488e-05, 1.4485999999997584e-05, 1.4500000000000624e-05, 1.4457999999998444e-05, 1.4458000000001914e-05, 1.4541999999999333e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4473000000000957e-05, 1.4457999999994975e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.369" endtime="20201115 22:02:28.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.364" endtime="20201115 22:02:28.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.373" endtime="20201115 22:02:28.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.377" endtime="20201115 22:02:28.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.375" endtime="20201115 22:02:28.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.372" endtime="20201115 22:02:28.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.002" endtime="20201115 22:02:28.397"></status>
</kw>
<msg timestamp="20201115 22:02:28.398" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.407" endtime="20201115 22:02:28.429"></status>
</kw>
<msg timestamp="20201115 22:02:28.430" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.405" endtime="20201115 22:02:28.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.431" endtime="20201115 22:02:28.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.433" endtime="20201115 22:02:28.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.402" endtime="20201115 22:02:28.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.400" endtime="20201115 22:02:28.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.442" endtime="20201115 22:02:28.727"></status>
</kw>
<msg timestamp="20201115 22:02:28.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020747194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020761667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.441" endtime="20201115 22:02:28.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020747194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020761667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.731" endtime="20201115 22:02:28.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.740" endtime="20201115 22:02:28.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.438" endtime="20201115 22:02:28.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.436" endtime="20201115 22:02:28.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.746" level="INFO">${RESULT} = [{'time': 0.020761667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4473000000000957e-05, 'source_diff': 1.4473000000000957e-05}, {'time': 0.021000722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:28.743" endtime="20201115 22:02:28.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.760" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:28.747" endtime="20201115 22:02:28.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.764" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:28.763" endtime="20201115 22:02:28.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.767" level="INFO">VALUE: [1.4473000000000957e-05, 1.4486000000001054e-05, 1.4500000000000624e-05, 1.4485999999997584e-05, 1.4473000000000957e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4473000000000957e-05, 1.4459000000001387e-05, 1.4500000000000624e-05, 1.4471999999998014e-05, 1.4457999999998444e-05, 1.4459000000001387e-05, 1.4485999999997584e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.4471999999998014e-05, 1.4417000000002678e-05, 1.4487000000000527e-05, 1.4472000000001484e-05, 1.4514000000000193e-05, 1.4486000000001054e-05, 1.4443999999998874e-05, 1.4457999999998444e-05, 1.4472000000001484e-05, 1.4514000000000193e-05, 1.4487000000000527e-05, 1.4500000000000624e-05, 1.4485999999997584e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.4486000000001054e-05, 1.4486000000001054e-05, 1.4514000000000193e-05, 1.4527999999999763e-05, 1.4458000000001914e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.4472000000001484e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4485999999994115e-05, 1.4486000000001054e-05, 1.4458000000001914e-05, 1.4473000000000957e-05, 1.451300000000072e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.765" endtime="20201115 22:02:28.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.761" endtime="20201115 22:02:28.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.770" endtime="20201115 22:02:28.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.774" endtime="20201115 22:02:28.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.772" endtime="20201115 22:02:28.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.768" endtime="20201115 22:02:28.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.398" endtime="20201115 22:02:28.794"></status>
</kw>
<msg timestamp="20201115 22:02:28.794" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.803" endtime="20201115 22:02:28.826"></status>
</kw>
<msg timestamp="20201115 22:02:28.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.802" endtime="20201115 22:02:28.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.827" endtime="20201115 22:02:28.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.830" endtime="20201115 22:02:28.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.799" endtime="20201115 22:02:28.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.797" endtime="20201115 22:02:28.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.838" endtime="20201115 22:02:29.125"></status>
</kw>
<msg timestamp="20201115 22:02:29.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020797778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020812264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.837" endtime="20201115 22:02:29.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020797778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020812264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.129" endtime="20201115 22:02:29.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.137" endtime="20201115 22:02:29.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.835" endtime="20201115 22:02:29.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.833" endtime="20201115 22:02:29.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.144" level="INFO">${RESULT} = [{'time': 0.020812264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.021052181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:29.141" endtime="20201115 22:02:29.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.158" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:29.145" endtime="20201115 22:02:29.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.162" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:29.161" endtime="20201115 22:02:29.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.165" level="INFO">VALUE: [1.4486000000001054e-05, 1.4541999999999333e-05, 1.452700000000029e-05, 1.4443999999998874e-05, 1.4457999999998444e-05, 1.4471999999998014e-05, 1.4473000000000957e-05, 1.4471999999998014e-05, 1.4457999999998444e-05, 1.4473000000000957e-05, 1.4485999999997584e-05, 1.4430999999998778e-05, 1.4471999999998014e-05, 1.4485999999997584e-05, 1.455499999999943e-05, 1.4458000000001914e-05, 1.4429999999999304e-05, 1.4472999999997488e-05, 1.4486000000001054e-05, 1.4458999999997918e-05, 1.4513999999996724e-05, 1.4486000000001054e-05, 1.4487000000000527e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4473000000000957e-05, 1.4486000000001054e-05, 1.4471999999998014e-05, 1.4416999999999208e-05, 1.4472999999997488e-05, 1.4485999999997584e-05, 1.4486000000001054e-05, 1.4486000000001054e-05, 1.4485999999997584e-05, 1.4472999999997488e-05, 1.4459000000001387e-05, 1.4457999999998444e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4486000000001054e-05, 1.4471999999998014e-05, 1.4444999999998348e-05, 1.4486000000001054e-05, 1.4472000000001484e-05, 1.4486000000001054e-05, 1.4459000000001387e-05, 1.4485999999994115e-05, 1.4458000000001914e-05, 1.4486000000001054e-05, 1.4472000000001484e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.163" endtime="20201115 22:02:29.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.159" endtime="20201115 22:02:29.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.168" endtime="20201115 22:02:29.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.171" endtime="20201115 22:02:29.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.170" endtime="20201115 22:02:29.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.166" endtime="20201115 22:02:29.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.795" endtime="20201115 22:02:29.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.163" endtime="20201115 22:02:29.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.162" endtime="20201115 22:02:29.192"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.195" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.203" endtime="20201115 22:02:29.227"></status>
</kw>
<msg timestamp="20201115 22:02:29.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.202" endtime="20201115 22:02:29.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.229" endtime="20201115 22:02:29.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.231" endtime="20201115 22:02:29.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.199" endtime="20201115 22:02:29.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.197" endtime="20201115 22:02:29.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.241" endtime="20201115 22:02:29.526"></status>
</kw>
<msg timestamp="20201115 22:02:29.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023023833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023038972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.239" endtime="20201115 22:02:29.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023023833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023038972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.531" endtime="20201115 22:02:29.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.539" endtime="20201115 22:02:29.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.236" endtime="20201115 22:02:29.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.235" endtime="20201115 22:02:29.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.546" level="INFO">${RESULT} = [{'time': 0.023038972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139000000000818e-05, 'source_diff': 1.5139000000000818e-05}, {'time': 0.023292333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:29.542" endtime="20201115 22:02:29.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.560" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:29.547" endtime="20201115 22:02:29.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.565" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:29.564" endtime="20201115 22:02:29.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.567" level="INFO">VALUE: [1.5139000000000818e-05, 1.509699999999864e-05, 1.5125000000001249e-05, 1.5083999999998543e-05, 1.5083000000002539e-05, 1.5014000000000693e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.50689999999995e-05, 1.505499999999993e-05, 1.5098000000001582e-05, 1.5084000000002012e-05, 1.5069999999998973e-05, 1.5083999999998543e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.50689999999995e-05, 1.50689999999995e-05, 1.5028000000000263e-05, 1.5083000000002539e-05, 1.5084000000002012e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.5097000000002109e-05, 1.5084000000002012e-05, 1.508299999999907e-05, 1.5111000000001679e-05, 1.509699999999864e-05, 1.509699999999864e-05, 1.5097999999998113e-05, 1.508299999999907e-05, 1.5097000000002109e-05, 1.5084000000002012e-05, 1.5055999999999403e-05, 1.5069999999998973e-05, 1.5124999999997779e-05, 1.5069999999998973e-05, 1.5111999999997683e-05, 1.509699999999864e-05, 1.508299999999907e-05, 1.5097999999998113e-05, 1.509699999999864e-05, 1.5097999999998113e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.5097999999998113e-05, 1.509699999999864e-05, 1.508299999999907e-05, 1.509699999999864e-05, 1.5083000000006008e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.566" endtime="20201115 22:02:29.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.561" endtime="20201115 22:02:29.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.570" endtime="20201115 22:02:29.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.574" endtime="20201115 22:02:29.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.572" endtime="20201115 22:02:29.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.569" endtime="20201115 22:02:29.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.195" endtime="20201115 22:02:29.594"></status>
</kw>
<msg timestamp="20201115 22:02:29.594" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.603" endtime="20201115 22:02:29.626"></status>
</kw>
<msg timestamp="20201115 22:02:29.627" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.602" endtime="20201115 22:02:29.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.628" endtime="20201115 22:02:29.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.631" endtime="20201115 22:02:29.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.599" endtime="20201115 22:02:29.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.597" endtime="20201115 22:02:29.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.641" endtime="20201115 22:02:29.927"></status>
</kw>
<msg timestamp="20201115 22:02:29.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.639" endtime="20201115 22:02:29.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.931" endtime="20201115 22:02:29.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.940" endtime="20201115 22:02:29.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.636" endtime="20201115 22:02:29.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.635" endtime="20201115 22:02:29.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.946" level="INFO">${RESULT} = [{'time': 0.019966181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5069999999998973e-05, 'source_diff': 1.5069999999998973e-05}, {'time': 0.020219278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:29.943" endtime="20201115 22:02:29.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.960" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:29.947" endtime="20201115 22:02:29.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.964" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:29.963" endtime="20201115 22:02:29.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.967" level="INFO">VALUE: [1.5069999999998973e-05, 1.509699999999864e-05, 1.509699999999864e-05, 1.509699999999864e-05, 1.5098000000001582e-05, 1.508299999999907e-05, 1.5083000000002539e-05, 1.5083000000002539e-05, 1.5069999999998973e-05, 1.505499999999993e-05, 1.5083999999998543e-05, 1.508299999999907e-05, 1.504100000000036e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.5069999999998973e-05, 1.5083999999998543e-05, 1.5084000000002012e-05, 1.508299999999907e-05, 1.504100000000036e-05, 1.5056000000002873e-05, 1.5097999999998113e-05, 1.5083000000002539e-05, 1.5083999999998543e-05, 1.5097000000002109e-05, 1.5083000000002539e-05, 1.508299999999907e-05, 1.5083000000002539e-05, 1.5083000000002539e-05, 1.505499999999993e-05, 1.508299999999907e-05, 1.509699999999864e-05, 1.5097000000002109e-05, 1.5083000000002539e-05, 1.5083000000002539e-05, 1.5083000000002539e-05, 1.5069999999998973e-05, 1.5125000000001249e-05, 1.508299999999907e-05, 1.509699999999864e-05, 1.5083999999998543e-05, 1.508299999999907e-05, 1.5097000000002109e-05, 1.5083999999998543e-05, 1.5083000000002539e-05, 1.5097999999998113e-05, 1.508299999999907e-05, 1.511099999999821e-05, 1.5041999999999833e-05, 1.508299999999907e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.965" endtime="20201115 22:02:29.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.961" endtime="20201115 22:02:29.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.970" endtime="20201115 22:02:29.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.973" endtime="20201115 22:02:29.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.972" endtime="20201115 22:02:29.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.968" endtime="20201115 22:02:29.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.595" endtime="20201115 22:02:29.994"></status>
</kw>
<msg timestamp="20201115 22:02:29.994" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.004" endtime="20201115 22:02:30.026"></status>
</kw>
<msg timestamp="20201115 22:02:30.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.002" endtime="20201115 22:02:30.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.028" endtime="20201115 22:02:30.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.030" endtime="20201115 22:02:30.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.999" endtime="20201115 22:02:30.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.997" endtime="20201115 22:02:30.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.040" endtime="20201115 22:02:30.326"></status>
</kw>
<msg timestamp="20201115 22:02:30.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020575, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:30.039" endtime="20201115 22:02:30.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020575, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:30.330" endtime="20201115 22:02:30.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.338" endtime="20201115 22:02:30.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.036" endtime="20201115 22:02:30.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.034" endtime="20201115 22:02:30.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.345" level="INFO">${RESULT} = [{'time': 0.020575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.508299999999907e-05, 'source_diff': 1.508299999999907e-05}, {'time': 0.020827389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:30.342" endtime="20201115 22:02:30.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.359" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:30.346" endtime="20201115 22:02:30.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.363" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:30.362" endtime="20201115 22:02:30.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.366" level="INFO">VALUE: [1.508299999999907e-05, 1.5083000000002539e-05, 1.5070000000002443e-05, 1.508299999999907e-05, 1.5083000000002539e-05, 1.5097999999998113e-05, 1.501300000000122e-05, 1.5097000000002109e-05, 1.5097000000002109e-05, 1.5137999999997875e-05, 1.5124999999997779e-05, 1.50689999999995e-05, 1.5097000000002109e-05, 1.508299999999907e-05, 1.5097000000002109e-05, 1.5125000000001249e-05, 1.511099999999821e-05, 1.509699999999864e-05, 1.5097000000002109e-05, 1.5097000000002109e-05, 1.5069999999998973e-05, 1.5097999999998113e-05, 1.504100000000036e-05, 1.5097000000002109e-05, 1.509699999999864e-05, 1.509699999999864e-05, 1.5083999999998543e-05, 1.511099999999821e-05, 1.5084000000002012e-05, 1.5084000000002012e-05, 1.5152000000000915e-05, 1.5098000000001582e-05, 1.509699999999864e-05, 1.5027999999996794e-05, 1.5097999999998113e-05, 1.509699999999864e-05, 1.5097999999998113e-05, 1.5098000000001582e-05, 1.5111000000001679e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.5055999999999403e-05, 1.5166999999999958e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.5097999999998113e-05, 1.508299999999907e-05, 1.511099999999821e-05, 1.508299999999907e-05, 1.509699999999864e-05]</msg>
<status status="PASS" starttime="20201115 22:02:30.364" endtime="20201115 22:02:30.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.360" endtime="20201115 22:02:30.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.369" endtime="20201115 22:02:30.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.372" endtime="20201115 22:02:30.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.371" endtime="20201115 22:02:30.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.367" endtime="20201115 22:02:30.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.995" endtime="20201115 22:02:30.393"></status>
</kw>
<msg timestamp="20201115 22:02:30.394" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.402" endtime="20201115 22:02:30.425"></status>
</kw>
<msg timestamp="20201115 22:02:30.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.401" endtime="20201115 22:02:30.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.427" endtime="20201115 22:02:30.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.429" endtime="20201115 22:02:30.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.398" endtime="20201115 22:02:30.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.396" endtime="20201115 22:02:30.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.439" endtime="20201115 22:02:30.729"></status>
</kw>
<msg timestamp="20201115 22:02:30.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020007861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.438" endtime="20201115 22:02:30.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020007861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.734" endtime="20201115 22:02:30.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.742" endtime="20201115 22:02:30.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.435" endtime="20201115 22:02:30.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.433" endtime="20201115 22:02:30.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.748" level="INFO">${RESULT} = [{'time': 0.020022944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5083000000002539e-05, 'source_diff': 1.5083000000002539e-05}, {'time': 0.020274736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:30.745" endtime="20201115 22:02:30.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.762" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:30.749" endtime="20201115 22:02:30.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.766" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:30.765" endtime="20201115 22:02:30.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.769" level="INFO">VALUE: [1.5083000000002539e-05, 1.5069000000002969e-05, 1.5083000000002539e-05, 1.509699999999864e-05, 1.5097000000002109e-05, 1.508299999999907e-05, 1.5083999999998543e-05, 1.5084000000002012e-05, 1.511099999999821e-05, 1.508299999999907e-05, 1.5097000000002109e-05, 1.5069999999998973e-05, 1.5083999999998543e-05, 1.508299999999907e-05, 1.5083000000002539e-05, 1.511099999999821e-05, 1.508299999999907e-05, 1.5042000000003303e-05, 1.508299999999907e-05, 1.5084000000002012e-05, 1.508299999999907e-05, 1.5111000000001679e-05, 1.5084000000002012e-05, 1.5083999999998543e-05, 1.509699999999864e-05, 1.504100000000036e-05, 1.509699999999864e-05, 1.50689999999995e-05, 1.5084000000002012e-05, 1.5153000000000388e-05, 1.505499999999993e-05, 1.5028000000000263e-05, 1.509699999999864e-05, 1.5083999999998543e-05, 1.5083999999998543e-05, 1.508299999999907e-05, 1.5083999999998543e-05, 1.5084000000002012e-05, 1.50689999999995e-05, 1.508299999999907e-05, 1.509699999999864e-05, 1.5097999999998113e-05, 1.511099999999821e-05, 1.509699999999864e-05, 1.5041999999999833e-05, 1.509699999999864e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.508299999999907e-05]</msg>
<status status="PASS" starttime="20201115 22:02:30.767" endtime="20201115 22:02:30.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.763" endtime="20201115 22:02:30.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.773" endtime="20201115 22:02:30.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.776" endtime="20201115 22:02:30.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.774" endtime="20201115 22:02:30.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.771" endtime="20201115 22:02:30.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.394" endtime="20201115 22:02:30.797"></status>
</kw>
<msg timestamp="20201115 22:02:30.797" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.806" endtime="20201115 22:02:30.828"></status>
</kw>
<msg timestamp="20201115 22:02:30.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.804" endtime="20201115 22:02:30.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.831" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.830" endtime="20201115 22:02:30.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.832" endtime="20201115 22:02:30.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.802" endtime="20201115 22:02:30.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.799" endtime="20201115 22:02:30.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.842" endtime="20201115 22:02:31.128"></status>
</kw>
<msg timestamp="20201115 22:02:31.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020013694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020028806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.841" endtime="20201115 22:02:31.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020013694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020028806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.132" endtime="20201115 22:02:31.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.141" endtime="20201115 22:02:31.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.838" endtime="20201115 22:02:31.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.836" endtime="20201115 22:02:31.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.147" level="INFO">${RESULT} = [{'time': 0.020028806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5112000000001152e-05, 'source_diff': 1.5112000000001152e-05}, {'time': 0.020280625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:31.144" endtime="20201115 22:02:31.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.162" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:31.148" endtime="20201115 22:02:31.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.166" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:31.165" endtime="20201115 22:02:31.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.169" level="INFO">VALUE: [1.5112000000001152e-05, 1.509699999999864e-05, 1.5111000000001679e-05, 1.5166999999999958e-05, 1.50689999999995e-05, 1.5098000000001582e-05, 1.5098000000001582e-05, 1.509699999999864e-05, 1.508299999999907e-05, 1.509699999999864e-05, 1.508299999999907e-05, 1.5139000000000818e-05, 1.508299999999907e-05, 1.5083999999998543e-05, 1.508299999999907e-05, 1.5166000000000485e-05, 1.5083000000002539e-05, 1.511099999999821e-05, 1.5069999999998973e-05, 1.5083999999998543e-05, 1.509699999999864e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.5097000000002109e-05, 1.509699999999864e-05, 1.5041999999999833e-05, 1.508299999999907e-05, 1.5153000000000388e-05, 1.5097000000002109e-05, 1.5124999999997779e-05, 1.5083999999998543e-05, 1.508299999999907e-05, 1.5083000000002539e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.5083000000002539e-05, 1.50689999999995e-05, 1.508299999999907e-05, 1.5084000000002012e-05, 1.50689999999995e-05, 1.5083000000002539e-05, 1.50689999999995e-05, 1.508299999999907e-05, 1.5083999999998543e-05, 1.5097000000002109e-05, 1.50689999999995e-05, 1.5055999999999403e-05, 1.509699999999864e-05, 1.5070000000005912e-05, 1.508299999999907e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.167" endtime="20201115 22:02:31.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.163" endtime="20201115 22:02:31.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.172" endtime="20201115 22:02:31.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.176" endtime="20201115 22:02:31.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.174" endtime="20201115 22:02:31.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.171" endtime="20201115 22:02:31.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.797" endtime="20201115 22:02:31.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.194" endtime="20201115 22:02:31.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.193" endtime="20201115 22:02:31.197"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.199" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.208" endtime="20201115 22:02:31.231"></status>
</kw>
<msg timestamp="20201115 22:02:31.231" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.206" endtime="20201115 22:02:31.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.232" endtime="20201115 22:02:31.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.235" endtime="20201115 22:02:31.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.204" endtime="20201115 22:02:31.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.201" endtime="20201115 22:02:31.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.244" endtime="20201115 22:02:31.530"></status>
</kw>
<msg timestamp="20201115 22:02:31.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.243" endtime="20201115 22:02:31.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.534" endtime="20201115 22:02:31.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.542" endtime="20201115 22:02:31.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.240" endtime="20201115 22:02:31.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.238" endtime="20201115 22:02:31.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.548" level="INFO">${RESULT} = [{'time': 0.022204931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5694999999999598e-05, 'source_diff': 1.5694999999999598e-05}, {'time': 0.022472792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:31.545" endtime="20201115 22:02:31.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.562" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:31.550" endtime="20201115 22:02:31.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.567" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:31.566" endtime="20201115 22:02:31.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.569" level="INFO">VALUE: [1.5694999999999598e-05, 1.5694999999999598e-05, 1.5681000000000028e-05, 1.5708999999999168e-05, 1.5680000000000555e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.5665999999997515e-05, 1.5735999999998834e-05, 1.5707999999999694e-05, 1.5681000000000028e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.5722000000002734e-05, 1.5694000000000125e-05, 1.5681000000000028e-05, 1.5721999999999264e-05, 1.5694999999999598e-05, 1.5694000000000125e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.5681000000000028e-05, 1.5694999999999598e-05, 1.5722000000002734e-05, 1.565300000000089e-05, 1.5680000000000555e-05, 1.5694000000000125e-05, 1.5693999999996655e-05, 1.5694000000000125e-05, 1.5695000000003068e-05, 1.5694000000000125e-05, 1.5708000000003164e-05, 1.5721999999999264e-05, 1.5764000000001444e-05, 1.5679999999997085e-05, 1.57089999999957e-05, 1.5695000000003068e-05, 1.568099999999656e-05, 1.5681000000003498e-05, 1.5709000000002638e-05, 1.57089999999957e-05, 1.5679999999997085e-05, 1.569499999999613e-05, 1.5750000000001874e-05, 1.57089999999957e-05, 1.57089999999957e-05, 1.5693999999996655e-05, 1.5693999999996655e-05, 1.5722000000002734e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.568" endtime="20201115 22:02:31.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.563" endtime="20201115 22:02:31.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.573" endtime="20201115 22:02:31.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.576" endtime="20201115 22:02:31.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.575" endtime="20201115 22:02:31.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.571" endtime="20201115 22:02:31.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.199" endtime="20201115 22:02:31.597"></status>
</kw>
<msg timestamp="20201115 22:02:31.597" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.606" endtime="20201115 22:02:31.629"></status>
</kw>
<msg timestamp="20201115 22:02:31.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.604" endtime="20201115 22:02:31.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.630" endtime="20201115 22:02:31.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.633" endtime="20201115 22:02:31.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.602" endtime="20201115 22:02:31.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.600" endtime="20201115 22:02:31.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.643" endtime="20201115 22:02:31.929"></status>
</kw>
<msg timestamp="20201115 22:02:31.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019963694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:31.641" endtime="20201115 22:02:31.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019963694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:31.933" endtime="20201115 22:02:31.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.941" endtime="20201115 22:02:31.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.638" endtime="20201115 22:02:31.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.637" endtime="20201115 22:02:31.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.948" level="INFO">${RESULT} = [{'time': 0.019963694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.020232875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:31.944" endtime="20201115 22:02:31.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.961" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:31.949" endtime="20201115 22:02:31.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.966" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:31.965" endtime="20201115 22:02:31.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.968" level="INFO">VALUE: [1.5694000000000125e-05, 1.565300000000089e-05, 1.5694000000000125e-05, 1.5694999999999598e-05, 1.5681000000000028e-05, 1.566700000000046e-05, 1.5694000000000125e-05, 1.5694999999999598e-05, 1.5694999999999598e-05, 1.5708999999999168e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5736000000002304e-05, 1.5681000000000028e-05, 1.5681000000000028e-05, 1.5694000000000125e-05, 1.5680000000000555e-05, 1.5750000000001874e-05, 1.5707999999999694e-05, 1.5680000000000555e-05, 1.5707999999999694e-05, 1.5708999999999168e-05, 1.566700000000046e-05, 1.565299999999742e-05, 1.565300000000089e-05, 1.5708000000003164e-05, 1.5680000000000555e-05, 1.565300000000089e-05, 1.5722000000002734e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.5695000000003068e-05, 1.5707999999999694e-05, 1.5681000000000028e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5708999999999168e-05, 1.562499999999828e-05, 1.5680000000000555e-05, 1.5694000000000125e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.5709000000002638e-05, 1.5708000000003164e-05, 1.5693999999996655e-05, 1.5693999999996655e-05, 1.5749999999994935e-05, 1.5709000000002638e-05, 1.576299999999503e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.967" endtime="20201115 22:02:31.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.962" endtime="20201115 22:02:31.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.972" endtime="20201115 22:02:31.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.975" endtime="20201115 22:02:31.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.974" endtime="20201115 22:02:31.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.970" endtime="20201115 22:02:31.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.598" endtime="20201115 22:02:31.996"></status>
</kw>
<msg timestamp="20201115 22:02:31.996" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.005" endtime="20201115 22:02:32.029"></status>
</kw>
<msg timestamp="20201115 22:02:32.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.003" endtime="20201115 22:02:32.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.032" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.031" endtime="20201115 22:02:32.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.033" endtime="20201115 22:02:32.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.001" endtime="20201115 22:02:32.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.999" endtime="20201115 22:02:32.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.043" endtime="20201115 22:02:32.328"></status>
</kw>
<msg timestamp="20201115 22:02:32.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020247306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.041" endtime="20201115 22:02:32.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020247306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.333" endtime="20201115 22:02:32.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.341" endtime="20201115 22:02:32.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.039" endtime="20201115 22:02:32.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.037" endtime="20201115 22:02:32.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.348" level="INFO">${RESULT} = [{'time': 0.020247306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5681000000000028e-05, 'source_diff': 1.5681000000000028e-05}, {'time': 0.020516861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:32.344" endtime="20201115 22:02:32.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.361" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:32.349" endtime="20201115 22:02:32.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.366" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:32.365" endtime="20201115 22:02:32.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.368" level="INFO">VALUE: [1.5681000000000028e-05, 1.5707999999999694e-05, 1.5694000000000125e-05, 1.5778000000001013e-05, 1.5694000000000125e-05, 1.5681000000000028e-05, 1.5709000000002638e-05, 1.5708999999999168e-05, 1.5695000000003068e-05, 1.5707999999999694e-05, 1.5694000000000125e-05, 1.563900000000132e-05, 1.5681000000000028e-05, 1.5723000000002207e-05, 1.5707999999999694e-05, 1.5695000000003068e-05, 1.5694999999999598e-05, 1.5708999999999168e-05, 1.5708000000003164e-05, 1.5693999999996655e-05, 1.566700000000046e-05, 1.5723000000002207e-05, 1.5694999999999598e-05, 1.5707999999999694e-05, 1.5694000000000125e-05, 1.566700000000046e-05, 1.5723000000002207e-05, 1.562499999999828e-05, 1.5680000000000555e-05, 1.5707999999999694e-05, 1.5735999999998834e-05, 1.5694000000000125e-05, 1.5694999999999598e-05, 1.5764000000001444e-05, 1.5707999999999694e-05, 1.5722000000002734e-05, 1.5708999999999168e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.5694000000000125e-05, 1.5694000000003594e-05, 1.5709000000002638e-05, 1.5736000000002304e-05, 1.5695000000003068e-05, 1.5722000000002734e-05, 1.5707999999996225e-05, 1.5764000000001444e-05, 1.5694000000003594e-05, 1.5708000000003164e-05]</msg>
<status status="PASS" starttime="20201115 22:02:32.367" endtime="20201115 22:02:32.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.362" endtime="20201115 22:02:32.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.372" endtime="20201115 22:02:32.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.375" endtime="20201115 22:02:32.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.373" endtime="20201115 22:02:32.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.370" endtime="20201115 22:02:32.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.997" endtime="20201115 22:02:32.396"></status>
</kw>
<msg timestamp="20201115 22:02:32.396" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.405" endtime="20201115 22:02:32.428"></status>
</kw>
<msg timestamp="20201115 22:02:32.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.403" endtime="20201115 22:02:32.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.430" endtime="20201115 22:02:32.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.432" endtime="20201115 22:02:32.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.401" endtime="20201115 22:02:32.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.399" endtime="20201115 22:02:32.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.442" endtime="20201115 22:02:32.728"></status>
</kw>
<msg timestamp="20201115 22:02:32.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019963611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.440" endtime="20201115 22:02:32.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019963611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.732" endtime="20201115 22:02:32.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.740" endtime="20201115 22:02:32.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.438" endtime="20201115 22:02:32.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.436" endtime="20201115 22:02:32.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.747" level="INFO">${RESULT} = [{'time': 0.019963611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.020230667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:32.744" endtime="20201115 22:02:32.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.761" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:32.748" endtime="20201115 22:02:32.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.766" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:32.765" endtime="20201115 22:02:32.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.768" level="INFO">VALUE: [1.5694000000000125e-05, 1.5694999999999598e-05, 1.5665999999997515e-05, 1.5680000000000555e-05, 1.5763999999997974e-05, 1.5707999999999694e-05, 1.5750000000001874e-05, 1.5708999999999168e-05, 1.5694999999999598e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.562500000000175e-05, 1.5694000000000125e-05, 1.5707999999999694e-05, 1.5708999999999168e-05, 1.5694999999999598e-05, 1.565300000000089e-05, 1.5680000000000555e-05, 1.5721999999999264e-05, 1.5681000000000028e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5680000000000555e-05, 1.5694000000000125e-05, 1.562499999999828e-05, 1.5735999999998834e-05, 1.5707999999999694e-05, 1.5694000000000125e-05, 1.5694999999999598e-05, 1.565300000000089e-05, 1.5694999999999598e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.5708999999999168e-05, 1.5694000000000125e-05, 1.5721999999999264e-05, 1.5777999999997544e-05, 1.5750000000001874e-05, 1.5721999999999264e-05, 1.5764000000001444e-05, 1.562500000000175e-05, 1.5681000000000028e-05, 1.5693999999996655e-05, 1.5708000000003164e-05, 1.5723000000002207e-05, 1.57089999999957e-05, 1.5708000000003164e-05, 1.5693999999996655e-05, 1.5653000000004358e-05]</msg>
<status status="PASS" starttime="20201115 22:02:32.767" endtime="20201115 22:02:32.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.762" endtime="20201115 22:02:32.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.771" endtime="20201115 22:02:32.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.775" endtime="20201115 22:02:32.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.773" endtime="20201115 22:02:32.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.770" endtime="20201115 22:02:32.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.396" endtime="20201115 22:02:32.796"></status>
</kw>
<msg timestamp="20201115 22:02:32.796" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.805" endtime="20201115 22:02:32.828"></status>
</kw>
<msg timestamp="20201115 22:02:32.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.803" endtime="20201115 22:02:32.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.831" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.830" endtime="20201115 22:02:32.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.832" endtime="20201115 22:02:32.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.801" endtime="20201115 22:02:32.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.798" endtime="20201115 22:02:32.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.842" endtime="20201115 22:02:33.127"></status>
</kw>
<msg timestamp="20201115 22:02:33.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019957375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019973097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.841" endtime="20201115 22:02:33.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019957375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019973097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.132" endtime="20201115 22:02:33.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.140" endtime="20201115 22:02:33.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.838" endtime="20201115 22:02:33.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.836" endtime="20201115 22:02:33.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.147" level="INFO">${RESULT} = [{'time': 0.019973097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5721999999999264e-05, 'source_diff': 1.5721999999999264e-05}, {'time': 0.020241972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:33.143" endtime="20201115 22:02:33.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.160" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:33.148" endtime="20201115 22:02:33.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.165" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:33.164" endtime="20201115 22:02:33.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.167" level="INFO">VALUE: [1.5721999999999264e-05, 1.5735999999998834e-05, 1.566700000000046e-05, 1.5709000000002638e-05, 1.5708999999999168e-05, 1.563900000000132e-05, 1.5694000000000125e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.5764000000001444e-05, 1.5722000000002734e-05, 1.5707999999999694e-05, 1.5694000000000125e-05, 1.5736000000002304e-05, 1.5680000000000555e-05, 1.5736999999998308e-05, 1.565300000000089e-05, 1.5694000000000125e-05, 1.5707999999999694e-05, 1.566700000000046e-05, 1.5707999999999694e-05, 1.5681000000000028e-05, 1.5694000000000125e-05, 1.5694000000000125e-05, 1.5708999999999168e-05, 1.5736000000002304e-05, 1.5721999999999264e-05, 1.5694999999999598e-05, 1.5709000000002638e-05, 1.565300000000089e-05, 1.5707999999999694e-05, 1.5708000000003164e-05, 1.5681000000000028e-05, 1.5694999999999598e-05, 1.5694000000000125e-05, 1.5722000000002734e-05, 1.5694000000000125e-05, 1.5721999999999264e-05, 1.566700000000046e-05, 1.5694000000000125e-05, 1.5694999999999598e-05, 1.5736000000002304e-05, 1.5709000000002638e-05, 1.5709000000002638e-05, 1.5736000000002304e-05, 1.5722000000002734e-05, 1.5693999999996655e-05, 1.5695000000003068e-05, 1.5680000000004024e-05, 1.569499999999613e-05]</msg>
<status status="PASS" starttime="20201115 22:02:33.166" endtime="20201115 22:02:33.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.161" endtime="20201115 22:02:33.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.170" endtime="20201115 22:02:33.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.174" endtime="20201115 22:02:33.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.172" endtime="20201115 22:02:33.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.169" endtime="20201115 22:02:33.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.796" endtime="20201115 22:02:33.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.198" endtime="20201115 22:02:33.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.197" endtime="20201115 22:02:33.195"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.197" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.206" endtime="20201115 22:02:33.230"></status>
</kw>
<msg timestamp="20201115 22:02:33.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.204" endtime="20201115 22:02:33.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.233" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.231" endtime="20201115 22:02:33.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.234" endtime="20201115 22:02:33.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.202" endtime="20201115 22:02:33.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.199" endtime="20201115 22:02:33.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.243" endtime="20201115 22:02:33.528"></status>
</kw>
<msg timestamp="20201115 22:02:33.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02234625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:33.242" endtime="20201115 22:02:33.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02234625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:33.532" endtime="20201115 22:02:33.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.541" endtime="20201115 22:02:33.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.239" endtime="20201115 22:02:33.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.237" endtime="20201115 22:02:33.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.547" level="INFO">${RESULT} = [{'time': 0.02234625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.631900000000075e-05, 'source_diff': 1.631900000000075e-05}, {'time': 0.022629681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:33.544" endtime="20201115 22:02:33.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.561" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:33.548" endtime="20201115 22:02:33.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.565" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:33.564" endtime="20201115 22:02:33.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.568" level="INFO">VALUE: [1.631900000000075e-05, 1.6320000000000223e-05, 1.634699999999989e-05, 1.6306000000000653e-05, 1.6263999999998474e-05, 1.6320000000000223e-05, 1.631900000000075e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.638900000000207e-05, 1.6306000000000653e-05, 1.630500000000118e-05, 1.6291999999997614e-05, 1.6277999999998044e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.6291999999997614e-05, 1.629099999999814e-05, 1.630499999999771e-05, 1.630500000000118e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.6291999999997614e-05, 1.631899999999728e-05, 1.6306000000000653e-05, 1.63889999999986e-05, 1.6306000000000653e-05, 1.6305999999997184e-05, 1.634699999999989e-05, 1.629100000000161e-05, 1.6306000000000653e-05, 1.6320000000000223e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.6306000000000653e-05, 1.630500000000118e-05, 1.6333999999999793e-05, 1.630500000000118e-05, 1.630499999999424e-05, 1.6319999999993284e-05, 1.629099999999467e-05, 1.6334000000006732e-05, 1.633300000000032e-05, 1.631899999999381e-05, 1.631900000000075e-05, 1.630500000000118e-05, 1.6292000000001083e-05, 1.6306000000000653e-05, 1.6292000000001083e-05, 1.6306000000000653e-05]</msg>
<status status="PASS" starttime="20201115 22:02:33.566" endtime="20201115 22:02:33.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.562" endtime="20201115 22:02:33.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.571" endtime="20201115 22:02:33.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.574" endtime="20201115 22:02:33.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.573" endtime="20201115 22:02:33.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.569" endtime="20201115 22:02:33.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.197" endtime="20201115 22:02:33.595"></status>
</kw>
<msg timestamp="20201115 22:02:33.595" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.604" endtime="20201115 22:02:33.629"></status>
</kw>
<msg timestamp="20201115 22:02:33.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.602" endtime="20201115 22:02:33.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.631" endtime="20201115 22:02:33.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.633" endtime="20201115 22:02:33.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.600" endtime="20201115 22:02:33.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.598" endtime="20201115 22:02:33.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.643" endtime="20201115 22:02:33.929"></status>
</kw>
<msg timestamp="20201115 22:02:33.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.641" endtime="20201115 22:02:33.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.933" endtime="20201115 22:02:33.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.941" endtime="20201115 22:02:33.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.639" endtime="20201115 22:02:33.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.637" endtime="20201115 22:02:33.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.948" level="INFO">${RESULT} = [{'time': 0.020017903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6320000000000223e-05, 'source_diff': 1.6320000000000223e-05}, {'time': 0.020303069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:33.944" endtime="20201115 22:02:33.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.961" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:33.949" endtime="20201115 22:02:33.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.966" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:33.965" endtime="20201115 22:02:33.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.968" level="INFO">VALUE: [1.6320000000000223e-05, 1.629100000000161e-05, 1.629100000000161e-05, 1.6334000000003263e-05, 1.6277999999998044e-05, 1.633300000000032e-05, 1.6305999999997184e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.6306000000000653e-05, 1.629099999999814e-05, 1.63750000000025e-05, 1.629099999999814e-05, 1.6306000000000653e-05, 1.636099999999946e-05, 1.6306000000000653e-05, 1.6306000000000653e-05, 1.636099999999946e-05, 1.6277999999998044e-05, 1.6306000000000653e-05, 1.6292000000001083e-05, 1.634699999999989e-05, 1.6320000000000223e-05, 1.6333999999999793e-05, 1.6347999999999363e-05, 1.633300000000032e-05, 1.6306000000000653e-05, 1.6249999999998904e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.630499999999771e-05, 1.6305999999997184e-05, 1.6249999999998904e-05, 1.6305999999997184e-05, 1.6306000000000653e-05, 1.630499999999771e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.6333999999999793e-05, 1.631900000000075e-05, 1.631900000000075e-05, 1.633300000000032e-05, 1.633300000000032e-05, 1.6305999999993714e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.630500000000118e-05, 1.629100000000161e-05, 1.6334000000006732e-05, 1.6278000000001513e-05]</msg>
<status status="PASS" starttime="20201115 22:02:33.967" endtime="20201115 22:02:33.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.962" endtime="20201115 22:02:33.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.971" endtime="20201115 22:02:33.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.975" endtime="20201115 22:02:33.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.973" endtime="20201115 22:02:33.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.970" endtime="20201115 22:02:33.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.596" endtime="20201115 22:02:33.995"></status>
</kw>
<msg timestamp="20201115 22:02:33.995" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.005" endtime="20201115 22:02:34.029"></status>
</kw>
<msg timestamp="20201115 22:02:34.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.003" endtime="20201115 22:02:34.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.032" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.030" endtime="20201115 22:02:34.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.033" endtime="20201115 22:02:34.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.001" endtime="20201115 22:02:34.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.998" endtime="20201115 22:02:34.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.043" endtime="20201115 22:02:34.328"></status>
</kw>
<msg timestamp="20201115 22:02:34.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.041" endtime="20201115 22:02:34.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.332" endtime="20201115 22:02:34.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.341" endtime="20201115 22:02:34.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.039" endtime="20201115 22:02:34.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.037" endtime="20201115 22:02:34.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.347" level="INFO">${RESULT} = [{'time': 0.020586778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6306000000000653e-05, 'source_diff': 1.6306000000000653e-05}, {'time': 0.020873639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:34.344" endtime="20201115 22:02:34.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.362" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:34.348" endtime="20201115 22:02:34.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.366" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:34.365" endtime="20201115 22:02:34.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.369" level="INFO">VALUE: [1.6306000000000653e-05, 1.6320000000000223e-05, 1.6319999999996754e-05, 1.631899999999728e-05, 1.6347999999999363e-05, 1.63750000000025e-05, 1.629099999999814e-05, 1.6305999999997184e-05, 1.633300000000032e-05, 1.631900000000075e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.6319999999996754e-05, 1.6305999999997184e-05, 1.6306000000000653e-05, 1.6278000000001513e-05, 1.6333999999999793e-05, 1.6306000000000653e-05, 1.629099999999814e-05, 1.630499999999771e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.6306000000000653e-05, 1.6320000000000223e-05, 1.630500000000118e-05, 1.6320000000000223e-05, 1.630499999999771e-05, 1.631900000000075e-05, 1.633300000000032e-05, 1.6250000000002374e-05, 1.630499999999771e-05, 1.637499999999903e-05, 1.631900000000075e-05, 1.631900000000075e-05, 1.634699999999989e-05, 1.6292000000001083e-05, 1.630499999999771e-05, 1.6320000000000223e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.633300000000032e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.631900000000075e-05, 1.627700000000204e-05, 1.631900000000075e-05, 1.630499999999424e-05, 1.6320000000000223e-05]</msg>
<status status="PASS" starttime="20201115 22:02:34.367" endtime="20201115 22:02:34.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.363" endtime="20201115 22:02:34.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.372" endtime="20201115 22:02:34.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.375" endtime="20201115 22:02:34.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.374" endtime="20201115 22:02:34.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.370" endtime="20201115 22:02:34.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.996" endtime="20201115 22:02:34.396"></status>
</kw>
<msg timestamp="20201115 22:02:34.396" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.405" endtime="20201115 22:02:34.429"></status>
</kw>
<msg timestamp="20201115 22:02:34.430" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.404" endtime="20201115 22:02:34.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.431" endtime="20201115 22:02:34.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.433" endtime="20201115 22:02:34.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.401" endtime="20201115 22:02:34.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.399" endtime="20201115 22:02:34.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.443" endtime="20201115 22:02:34.728"></status>
</kw>
<msg timestamp="20201115 22:02:34.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.442" endtime="20201115 22:02:34.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.733" endtime="20201115 22:02:34.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.741" endtime="20201115 22:02:34.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.439" endtime="20201115 22:02:34.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.437" endtime="20201115 22:02:34.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.747" level="INFO">${RESULT} = [{'time': 0.020078958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.633300000000032e-05, 'source_diff': 1.633300000000032e-05}, {'time': 0.020364, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:34.744" endtime="20201115 22:02:34.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.761" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:34.748" endtime="20201115 22:02:34.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.765" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:34.764" endtime="20201115 22:02:34.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.768" level="INFO">VALUE: [1.633300000000032e-05, 1.6292000000001083e-05, 1.637499999999903e-05, 1.6292000000001083e-05, 1.631900000000075e-05, 1.63750000000025e-05, 1.630500000000118e-05, 1.6334000000003263e-05, 1.630499999999771e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.633300000000032e-05, 1.637499999999903e-05, 1.6292000000001083e-05, 1.6291999999997614e-05, 1.633300000000032e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.630500000000118e-05, 1.6320000000000223e-05, 1.629100000000161e-05, 1.6320000000000223e-05, 1.6305999999997184e-05, 1.6249999999998904e-05, 1.630500000000118e-05, 1.6292000000001083e-05, 1.6305999999997184e-05, 1.6278000000001513e-05, 1.630499999999771e-05, 1.6319999999996754e-05, 1.6249999999998904e-05, 1.633300000000032e-05, 1.630500000000118e-05, 1.6306000000000653e-05, 1.6277999999998044e-05, 1.633300000000032e-05, 1.631899999999728e-05, 1.6292000000001083e-05, 1.630500000000118e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.6320000000000223e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.630500000000118e-05, 1.631900000000075e-05, 1.6277999999994575e-05, 1.6306000000000653e-05]</msg>
<status status="PASS" starttime="20201115 22:02:34.766" endtime="20201115 22:02:34.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.762" endtime="20201115 22:02:34.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.771" endtime="20201115 22:02:34.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.775" endtime="20201115 22:02:34.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.773" endtime="20201115 22:02:34.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.770" endtime="20201115 22:02:34.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.397" endtime="20201115 22:02:34.795"></status>
</kw>
<msg timestamp="20201115 22:02:34.795" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.804" endtime="20201115 22:02:34.828"></status>
</kw>
<msg timestamp="20201115 22:02:34.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.803" endtime="20201115 22:02:34.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.831" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.830" endtime="20201115 22:02:34.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.832" endtime="20201115 22:02:34.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.800" endtime="20201115 22:02:34.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.798" endtime="20201115 22:02:34.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.842" endtime="20201115 22:02:35.127"></status>
</kw>
<msg timestamp="20201115 22:02:35.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.841" endtime="20201115 22:02:35.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.131" endtime="20201115 22:02:35.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.140" endtime="20201115 22:02:35.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.838" endtime="20201115 22:02:35.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.836" endtime="20201115 22:02:35.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.146" level="INFO">${RESULT} = [{'time': 0.020150875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6305999999997184e-05, 'source_diff': 1.6305999999997184e-05}, {'time': 0.020434208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:35.143" endtime="20201115 22:02:35.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.160" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:35.147" endtime="20201115 22:02:35.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.164" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:35.163" endtime="20201115 22:02:35.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.167" level="INFO">VALUE: [1.6305999999997184e-05, 1.631899999999728e-05, 1.6333999999999793e-05, 1.6320000000000223e-05, 1.63889999999986e-05, 1.6320000000000223e-05, 1.629099999999814e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.631899999999728e-05, 1.6264000000001944e-05, 1.633300000000032e-05, 1.630500000000118e-05, 1.634699999999989e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.6305999999997184e-05, 1.636099999999946e-05, 1.629099999999814e-05, 1.634699999999989e-05, 1.6236000000002804e-05, 1.631900000000075e-05, 1.630499999999771e-05, 1.6333999999999793e-05, 1.6320000000000223e-05, 1.6305999999997184e-05, 1.6235999999999334e-05, 1.636099999999946e-05, 1.630499999999771e-05, 1.630500000000118e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.630500000000118e-05, 1.6291999999997614e-05, 1.6292000000001083e-05, 1.633300000000032e-05, 1.6306000000000653e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.6264000000001944e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.631900000000075e-05, 1.640299999999817e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.633300000000032e-05]</msg>
<status status="PASS" starttime="20201115 22:02:35.165" endtime="20201115 22:02:35.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.161" endtime="20201115 22:02:35.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.170" endtime="20201115 22:02:35.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.174" endtime="20201115 22:02:35.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.172" endtime="20201115 22:02:35.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.169" endtime="20201115 22:02:35.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.796" endtime="20201115 22:02:35.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.196" endtime="20201115 22:02:35.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.195" endtime="20201115 22:02:35.195"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.197" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.206" endtime="20201115 22:02:35.231"></status>
</kw>
<msg timestamp="20201115 22:02:35.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.204" endtime="20201115 22:02:35.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.233" endtime="20201115 22:02:35.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.235" endtime="20201115 22:02:35.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.202" endtime="20201115 22:02:35.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.199" endtime="20201115 22:02:35.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.244" endtime="20201115 22:02:35.531"></status>
</kw>
<msg timestamp="20201115 22:02:35.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.243" endtime="20201115 22:02:35.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.535" endtime="20201115 22:02:35.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.543" endtime="20201115 22:02:35.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.240" endtime="20201115 22:02:35.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.238" endtime="20201115 22:02:35.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.550" level="INFO">${RESULT} = [{'time': 0.022365972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6916000000002235e-05, 'source_diff': 1.6916000000002235e-05}, {'time': 0.022668972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:35.546" endtime="20201115 22:02:35.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.563" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:35.551" endtime="20201115 22:02:35.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.568" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:35.567" endtime="20201115 22:02:35.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.571" level="INFO">VALUE: [1.6916000000002235e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.6943999999997905e-05, 1.6971999999997045e-05, 1.68889999999991e-05, 1.691699999999824e-05, 1.6945000000000848e-05, 1.690299999999867e-05, 1.6930000000001805e-05, 1.6930000000001805e-05, 1.6930000000001805e-05, 1.6915999999998765e-05, 1.6915999999998765e-05, 1.690299999999867e-05, 1.6929999999998335e-05, 1.6915999999998765e-05, 1.693100000000128e-05, 1.690299999999867e-05, 1.6929999999998335e-05, 1.686099999999996e-05, 1.6972000000000514e-05, 1.6915999999998765e-05, 1.6915999999998765e-05, 1.691700000000171e-05, 1.6930000000001805e-05, 1.6929999999998335e-05, 1.690300000000214e-05, 1.693100000000128e-05, 1.693099999999781e-05, 1.6930000000005274e-05, 1.6916000000005704e-05, 1.697299999999652e-05, 1.6931000000004748e-05, 1.6915999999998765e-05, 1.6915999999998765e-05, 1.6929999999998335e-05, 1.691699999999824e-05, 1.6929999999998335e-05, 1.68889999999991e-05, 1.694499999999738e-05, 1.694499999999738e-05, 1.6917000000005178e-05, 1.6930000000005274e-05, 1.6917000000005178e-05, 1.6929999999998335e-05, 1.690299999999867e-05, 1.6943999999997905e-05, 1.7000000000003124e-05, 1.6931000000004748e-05]</msg>
<status status="PASS" starttime="20201115 22:02:35.569" endtime="20201115 22:02:35.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.564" endtime="20201115 22:02:35.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.574" endtime="20201115 22:02:35.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.577" endtime="20201115 22:02:35.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.576" endtime="20201115 22:02:35.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.572" endtime="20201115 22:02:35.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.197" endtime="20201115 22:02:35.598"></status>
</kw>
<msg timestamp="20201115 22:02:35.598" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.607" endtime="20201115 22:02:35.633"></status>
</kw>
<msg timestamp="20201115 22:02:35.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.605" endtime="20201115 22:02:35.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.634" endtime="20201115 22:02:35.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.636" endtime="20201115 22:02:35.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.603" endtime="20201115 22:02:35.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.601" endtime="20201115 22:02:35.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.646" endtime="20201115 22:02:35.932"></status>
</kw>
<msg timestamp="20201115 22:02:35.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:35.645" endtime="20201115 22:02:35.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:35.936" endtime="20201115 22:02:35.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.944" endtime="20201115 22:02:35.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.642" endtime="20201115 22:02:35.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.641" endtime="20201115 22:02:35.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.951" level="INFO">${RESULT} = [{'time': 0.020040417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.691700000000171e-05, 'source_diff': 1.691700000000171e-05}, {'time': 0.020342042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:35.948" endtime="20201115 22:02:35.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.965" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:35.952" endtime="20201115 22:02:35.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.970" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:35.969" endtime="20201115 22:02:35.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.973" level="INFO">VALUE: [1.691700000000171e-05, 1.691700000000171e-05, 1.6929999999998335e-05, 1.6943999999997905e-05, 1.693100000000128e-05, 1.693099999999781e-05, 1.690299999999867e-05, 1.693100000000128e-05, 1.6972999999999988e-05, 1.6999999999999654e-05, 1.6930000000001805e-05, 1.6915999999998765e-05, 1.684700000000039e-05, 1.691699999999824e-05, 1.691699999999824e-05, 1.6929999999998335e-05, 1.6916000000002235e-05, 1.6958000000000945e-05, 1.693099999999781e-05, 1.6944000000001375e-05, 1.6930000000001805e-05, 1.691700000000171e-05, 1.693100000000128e-05, 1.6944000000001375e-05, 1.693099999999781e-05, 1.6945000000000848e-05, 1.693100000000128e-05, 1.693100000000128e-05, 1.693099999999781e-05, 1.690299999999867e-05, 1.693099999999781e-05, 1.691699999999824e-05, 1.6972000000000514e-05, 1.6958000000000945e-05, 1.694499999999738e-05, 1.6929999999998335e-05, 1.68889999999991e-05, 1.6929999999998335e-05, 1.6986000000003554e-05, 1.6903000000005608e-05, 1.6929999999998335e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.684699999999345e-05, 1.6931000000004748e-05, 1.6917000000005178e-05, 1.6917000000005178e-05, 1.6943999999997905e-05, 1.690299999999867e-05, 1.693099999999781e-05]</msg>
<status status="PASS" starttime="20201115 22:02:35.971" endtime="20201115 22:02:35.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.967" endtime="20201115 22:02:35.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.976" endtime="20201115 22:02:35.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.979" endtime="20201115 22:02:35.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.978" endtime="20201115 22:02:35.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.974" endtime="20201115 22:02:36.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.599" endtime="20201115 22:02:36.000"></status>
</kw>
<msg timestamp="20201115 22:02:36.000" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.009" endtime="20201115 22:02:36.034"></status>
</kw>
<msg timestamp="20201115 22:02:36.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.007" endtime="20201115 22:02:36.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.037" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.036" endtime="20201115 22:02:36.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.038" endtime="20201115 22:02:36.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.005" endtime="20201115 22:02:36.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.003" endtime="20201115 22:02:36.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.048" endtime="20201115 22:02:36.337"></status>
</kw>
<msg timestamp="20201115 22:02:36.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020230444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020247375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.046" endtime="20201115 22:02:36.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020230444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020247375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.346" endtime="20201115 22:02:36.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.364" endtime="20201115 22:02:36.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.044" endtime="20201115 22:02:36.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.042" endtime="20201115 22:02:36.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.378" level="INFO">${RESULT} = [{'time': 0.020247375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.693100000000128e-05, 'source_diff': 1.693100000000128e-05}, {'time': 0.020548931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:36.371" endtime="20201115 22:02:36.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.409" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:36.381" endtime="20201115 22:02:36.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.419" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:36.417" endtime="20201115 22:02:36.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.423" level="INFO">VALUE: [1.693100000000128e-05, 1.693099999999781e-05, 1.691699999999824e-05, 1.688900000000257e-05, 1.6902000000002665e-05, 1.6944000000001375e-05, 1.6915999999998765e-05, 1.690299999999867e-05, 1.6901999999999195e-05, 1.6929999999998335e-05, 1.6930000000001805e-05, 1.6930000000001805e-05, 1.693100000000128e-05, 1.6930000000001805e-05, 1.690299999999867e-05, 1.6930000000001805e-05, 1.690299999999867e-05, 1.6930000000001805e-05, 1.6916000000002235e-05, 1.6986000000000084e-05, 1.6943999999997905e-05, 1.6943999999997905e-05, 1.687499999999953e-05, 1.690300000000214e-05, 1.6887999999999626e-05, 1.6875000000003e-05, 1.6943999999997905e-05, 1.6902000000002665e-05, 1.6930000000001805e-05, 1.6945000000000848e-05, 1.6972000000000514e-05, 1.686099999999996e-05, 1.691699999999824e-05, 1.6916000000002235e-05, 1.686099999999996e-05, 1.6930000000001805e-05, 1.6930000000001805e-05, 1.6931000000004748e-05, 1.694499999999738e-05, 1.6903000000005608e-05, 1.6929999999998335e-05, 1.6917000000005178e-05, 1.691699999999824e-05, 1.6916000000005704e-05, 1.693099999999781e-05, 1.6931000000004748e-05, 1.693099999999781e-05, 1.6929999999998335e-05, 1.6943999999997905e-05, 1.68889999999991e-05]</msg>
<status status="PASS" starttime="20201115 22:02:36.421" endtime="20201115 22:02:36.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.411" endtime="20201115 22:02:36.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.426" endtime="20201115 22:02:36.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.429" endtime="20201115 22:02:36.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.428" endtime="20201115 22:02:36.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.424" endtime="20201115 22:02:36.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.001" endtime="20201115 22:02:36.450"></status>
</kw>
<msg timestamp="20201115 22:02:36.450" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.459" endtime="20201115 22:02:36.484"></status>
</kw>
<msg timestamp="20201115 22:02:36.485" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.457" endtime="20201115 22:02:36.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.487" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.486" endtime="20201115 22:02:36.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.488" endtime="20201115 22:02:36.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.455" endtime="20201115 22:02:36.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.453" endtime="20201115 22:02:36.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.498" endtime="20201115 22:02:36.781"></status>
</kw>
<msg timestamp="20201115 22:02:36.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.497" endtime="20201115 22:02:36.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.785" endtime="20201115 22:02:36.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.794" endtime="20201115 22:02:36.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.494" endtime="20201115 22:02:36.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.492" endtime="20201115 22:02:36.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.801" level="INFO">${RESULT} = [{'time': 0.020079125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.693100000000128e-05, 'source_diff': 1.693100000000128e-05}, {'time': 0.020382556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:36.797" endtime="20201115 22:02:36.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.814" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:36.802" endtime="20201115 22:02:36.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.819" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:36.818" endtime="20201115 22:02:36.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.821" level="INFO">VALUE: [1.693100000000128e-05, 1.691699999999824e-05, 1.693100000000128e-05, 1.693099999999781e-05, 1.6915999999998765e-05, 1.6915999999998765e-05, 1.6930000000001805e-05, 1.6957999999997475e-05, 1.6887999999999626e-05, 1.690299999999867e-05, 1.6930000000001805e-05, 1.6930000000001805e-05, 1.693099999999781e-05, 1.6943999999997905e-05, 1.691699999999824e-05, 1.687499999999953e-05, 1.691699999999824e-05, 1.6915999999998765e-05, 1.691700000000171e-05, 1.6929999999998335e-05, 1.688900000000257e-05, 1.693100000000128e-05, 1.6959000000000418e-05, 1.6944000000001375e-05, 1.6929999999998335e-05, 1.6929999999998335e-05, 1.6944000000001375e-05, 1.6943999999997905e-05, 1.6915999999998765e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.6915999999998765e-05, 1.6930000000001805e-05, 1.6945000000000848e-05, 1.694499999999738e-05, 1.6959000000000418e-05, 1.6915999999998765e-05, 1.691700000000171e-05, 1.6986000000003554e-05, 1.68889999999991e-05, 1.6944000000004844e-05, 1.6929999999998335e-05, 1.691699999999824e-05, 1.693099999999781e-05, 1.687499999999953e-05, 1.691699999999824e-05, 1.6833999999993354e-05, 1.693099999999781e-05, 1.691699999999824e-05, 1.6930000000005274e-05]</msg>
<status status="PASS" starttime="20201115 22:02:36.820" endtime="20201115 22:02:36.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.815" endtime="20201115 22:02:36.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.824" endtime="20201115 22:02:36.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.828" endtime="20201115 22:02:36.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.826" endtime="20201115 22:02:36.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.823" endtime="20201115 22:02:36.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.451" endtime="20201115 22:02:36.848"></status>
</kw>
<msg timestamp="20201115 22:02:36.848" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.857" endtime="20201115 22:02:36.882"></status>
</kw>
<msg timestamp="20201115 22:02:36.883" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.856" endtime="20201115 22:02:36.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.884" endtime="20201115 22:02:36.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.886" endtime="20201115 22:02:36.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.853" endtime="20201115 22:02:36.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.851" endtime="20201115 22:02:36.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.896" endtime="20201115 22:02:37.179"></status>
</kw>
<msg timestamp="20201115 22:02:37.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.894" endtime="20201115 22:02:37.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.188" endtime="20201115 22:02:37.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.196" endtime="20201115 22:02:37.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.892" endtime="20201115 22:02:37.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.890" endtime="20201115 22:02:37.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.203" level="INFO">${RESULT} = [{'time': 0.020088667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.693100000000128e-05, 'source_diff': 1.693100000000128e-05}, {'time': 0.020388667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:37.200" endtime="20201115 22:02:37.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.216" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:37.204" endtime="20201115 22:02:37.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.221" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:37.220" endtime="20201115 22:02:37.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.223" level="INFO">VALUE: [1.693100000000128e-05, 1.693099999999781e-05, 1.6915999999998765e-05, 1.6929999999998335e-05, 1.686099999999996e-05, 1.691699999999824e-05, 1.693100000000128e-05, 1.6943999999997905e-05, 1.690299999999867e-05, 1.6929999999998335e-05, 1.6945000000000848e-05, 1.688900000000257e-05, 1.693100000000128e-05, 1.6929999999998335e-05, 1.6929999999998335e-05, 1.6959000000000418e-05, 1.6915999999998765e-05, 1.6930000000001805e-05, 1.687499999999953e-05, 1.6901999999999195e-05, 1.691699999999824e-05, 1.691699999999824e-05, 1.6943999999997905e-05, 1.6915999999998765e-05, 1.6916000000002235e-05, 1.693100000000128e-05, 1.691699999999824e-05, 1.6929999999998335e-05, 1.6944000000001375e-05, 1.6944000000001375e-05, 1.693099999999781e-05, 1.690299999999867e-05, 1.686099999999996e-05, 1.6930000000001805e-05, 1.6915999999998765e-05, 1.6986000000000084e-05, 1.693100000000128e-05, 1.693099999999781e-05, 1.693099999999781e-05, 1.693099999999781e-05, 1.6929999999998335e-05, 1.6901999999999195e-05, 1.6929999999998335e-05, 1.6985999999996615e-05, 1.687499999999953e-05, 1.690299999999867e-05, 1.6875000000006468e-05, 1.6931000000004748e-05, 1.6944000000004844e-05, 1.6943999999997905e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.222" endtime="20201115 22:02:37.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.217" endtime="20201115 22:02:37.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.226" endtime="20201115 22:02:37.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.230" endtime="20201115 22:02:37.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.228" endtime="20201115 22:02:37.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.225" endtime="20201115 22:02:37.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.849" endtime="20201115 22:02:37.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.196" endtime="20201115 22:02:37.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.195" endtime="20201115 22:02:37.251"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.253" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.262" endtime="20201115 22:02:37.288"></status>
</kw>
<msg timestamp="20201115 22:02:37.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.260" endtime="20201115 22:02:37.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.291" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.289" endtime="20201115 22:02:37.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.292" endtime="20201115 22:02:37.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.258" endtime="20201115 22:02:37.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.256" endtime="20201115 22:02:37.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.301" endtime="20201115 22:02:37.586"></status>
</kw>
<msg timestamp="20201115 22:02:37.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022449847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.299" endtime="20201115 22:02:37.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022449847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.590" endtime="20201115 22:02:37.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.598" endtime="20201115 22:02:37.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.297" endtime="20201115 22:02:37.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.295" endtime="20201115 22:02:37.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.605" level="INFO">${RESULT} = [{'time': 0.022449847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.755499999999896e-05, 'source_diff': 1.755499999999896e-05}, {'time': 0.022770014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:37.602" endtime="20201115 22:02:37.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.620" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:37.606" endtime="20201115 22:02:37.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.624" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:37.623" endtime="20201115 22:02:37.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.627" level="INFO">VALUE: [1.755499999999896e-05, 1.7528000000002764e-05, 1.7500000000000154e-05, 1.7541999999998864e-05, 1.7556000000001903e-05, 1.7527999999999294e-05, 1.754099999999939e-05, 1.7570000000001473e-05, 1.752699999999982e-05, 1.7541999999998864e-05, 1.754099999999939e-05, 1.7541999999998864e-05, 1.7555999999998434e-05, 1.7541999999998864e-05, 1.761100000000071e-05, 1.755500000000243e-05, 1.7556000000001903e-05, 1.7556000000001903e-05, 1.7528000000002764e-05, 1.7500000000000154e-05, 1.7528000000002764e-05, 1.7527999999999294e-05, 1.7527999999999294e-05, 1.759699999999767e-05, 1.761100000000071e-05, 1.7527999999999294e-05, 1.7541999999998864e-05, 1.7541999999998864e-05, 1.7556000000001903e-05, 1.7542000000002334e-05, 1.7527999999995825e-05, 1.7541999999995395e-05, 1.758299999999463e-05, 1.7513999999996255e-05, 1.7485999999997115e-05, 1.7528000000002764e-05, 1.7528000000002764e-05, 1.756899999999506e-05, 1.7542000000002334e-05, 1.7528000000002764e-05, 1.754099999999592e-05, 1.754100000000286e-05, 1.7542000000002334e-05, 1.754099999999592e-05, 1.7542000000002334e-05, 1.754100000000286e-05, 1.752700000000329e-05, 1.7541999999995395e-05, 1.754099999999592e-05, 1.7541999999995395e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.625" endtime="20201115 22:02:37.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.621" endtime="20201115 22:02:37.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.630" endtime="20201115 22:02:37.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.633" endtime="20201115 22:02:37.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.632" endtime="20201115 22:02:37.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.628" endtime="20201115 22:02:37.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.254" endtime="20201115 22:02:37.654"></status>
</kw>
<msg timestamp="20201115 22:02:37.654" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.663" endtime="20201115 22:02:37.689"></status>
</kw>
<msg timestamp="20201115 22:02:37.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.661" endtime="20201115 22:02:37.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.692" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.690" endtime="20201115 22:02:37.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.693" endtime="20201115 22:02:37.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.658" endtime="20201115 22:02:37.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.656" endtime="20201115 22:02:37.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.703" endtime="20201115 22:02:37.988"></status>
</kw>
<msg timestamp="20201115 22:02:37.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020049736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.702" endtime="20201115 22:02:37.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020049736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.992" endtime="20201115 22:02:37.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.000" endtime="20201115 22:02:38.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.699" endtime="20201115 22:02:38.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.697" endtime="20201115 22:02:38.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.007" level="INFO">${RESULT} = [{'time': 0.020049736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.755499999999896e-05, 'source_diff': 1.755499999999896e-05}, {'time': 0.020368264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:38.003" endtime="20201115 22:02:38.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.020" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:38.008" endtime="20201115 22:02:38.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.025" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:38.024" endtime="20201115 22:02:38.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.027" level="INFO">VALUE: [1.755499999999896e-05, 1.758300000000157e-05, 1.752699999999982e-05, 1.7513999999999724e-05, 1.751300000000025e-05, 1.7527999999999294e-05, 1.7542000000002334e-05, 1.756899999999853e-05, 1.7528000000002764e-05, 1.752699999999982e-05, 1.754099999999939e-05, 1.755499999999896e-05, 1.754099999999939e-05, 1.7527999999999294e-05, 1.7541999999998864e-05, 1.754099999999939e-05, 1.7542000000002334e-05, 1.7528000000002764e-05, 1.7500000000000154e-05, 1.754099999999939e-05, 1.7527999999999294e-05, 1.7527999999999294e-05, 1.7555999999998434e-05, 1.7527999999999294e-05, 1.752700000000329e-05, 1.7527999999999294e-05, 1.7541999999998864e-05, 1.755499999999896e-05, 1.7555999999998434e-05, 1.7584000000001043e-05, 1.7527999999999294e-05, 1.7528000000002764e-05, 1.7542000000002334e-05, 1.7500000000000154e-05, 1.7500000000000154e-05, 1.754099999999939e-05, 1.7542000000002334e-05, 1.7541999999995395e-05, 1.7542000000002334e-05, 1.7513999999996255e-05, 1.754100000000286e-05, 1.756899999999506e-05, 1.7527999999995825e-05, 1.7514000000003194e-05, 1.7541999999995395e-05, 1.7542000000002334e-05, 1.7542000000002334e-05, 1.754099999999592e-05, 1.7569999999994534e-05, 1.7542000000002334e-05]</msg>
<status status="PASS" starttime="20201115 22:02:38.026" endtime="20201115 22:02:38.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.021" endtime="20201115 22:02:38.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.030" endtime="20201115 22:02:38.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.034" endtime="20201115 22:02:38.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.032" endtime="20201115 22:02:38.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.029" endtime="20201115 22:02:38.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.654" endtime="20201115 22:02:38.054"></status>
</kw>
<msg timestamp="20201115 22:02:38.055" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.064" endtime="20201115 22:02:38.089"></status>
</kw>
<msg timestamp="20201115 22:02:38.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.062" endtime="20201115 22:02:38.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.092" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.091" endtime="20201115 22:02:38.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.093" endtime="20201115 22:02:38.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.059" endtime="20201115 22:02:38.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.057" endtime="20201115 22:02:38.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.103" endtime="20201115 22:02:38.389"></status>
</kw>
<msg timestamp="20201115 22:02:38.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020447444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.101" endtime="20201115 22:02:38.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020447444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.393" endtime="20201115 22:02:38.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.402" endtime="20201115 22:02:38.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.099" endtime="20201115 22:02:38.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.097" endtime="20201115 22:02:38.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.409" level="INFO">${RESULT} = [{'time': 0.020465028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7584000000001043e-05, 'source_diff': 1.7584000000001043e-05}, {'time': 0.020782792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:38.405" endtime="20201115 22:02:38.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.422" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:38.410" endtime="20201115 22:02:38.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.427" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:38.426" endtime="20201115 22:02:38.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.429" level="INFO">VALUE: [1.7584000000001043e-05, 1.7542000000002334e-05, 1.7555999999998434e-05, 1.755499999999896e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.7555999999998434e-05, 1.7527999999999294e-05, 1.7542000000002334e-05, 1.7527999999999294e-05, 1.7556000000001903e-05, 1.7527999999999294e-05, 1.7472000000001014e-05, 1.754099999999939e-05, 1.7542000000002334e-05, 1.7541999999998864e-05, 1.7556000000001903e-05, 1.7542000000002334e-05, 1.7541999999998864e-05, 1.7471999999997545e-05, 1.7555999999998434e-05, 1.752699999999982e-05, 1.7569999999998004e-05, 1.7541999999998864e-05, 1.759699999999767e-05, 1.7542000000002334e-05, 1.7541999999998864e-05, 1.754100000000286e-05, 1.7555999999998434e-05, 1.7527999999999294e-05, 1.7513999999999724e-05, 1.7598000000000613e-05, 1.7513999999999724e-05, 1.755500000000243e-05, 1.754099999999592e-05, 1.7528000000002764e-05, 1.754100000000286e-05, 1.7528000000002764e-05, 1.7556000000001903e-05, 1.7542000000002334e-05, 1.754100000000286e-05, 1.752699999999635e-05, 1.7514000000003194e-05, 1.754099999999592e-05, 1.754100000000286e-05, 1.7541999999995395e-05, 1.7514000000003194e-05, 1.7555999999994965e-05, 1.755499999999549e-05, 1.7458000000004914e-05]</msg>
<status status="PASS" starttime="20201115 22:02:38.428" endtime="20201115 22:02:38.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.423" endtime="20201115 22:02:38.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.432" endtime="20201115 22:02:38.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.436" endtime="20201115 22:02:38.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.434" endtime="20201115 22:02:38.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.431" endtime="20201115 22:02:38.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.055" endtime="20201115 22:02:38.457"></status>
</kw>
<msg timestamp="20201115 22:02:38.457" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.466" endtime="20201115 22:02:38.492"></status>
</kw>
<msg timestamp="20201115 22:02:38.493" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.465" endtime="20201115 22:02:38.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.494" endtime="20201115 22:02:38.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.496" endtime="20201115 22:02:38.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.462" endtime="20201115 22:02:38.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.460" endtime="20201115 22:02:38.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.506" endtime="20201115 22:02:38.792"></status>
</kw>
<msg timestamp="20201115 22:02:38.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.504" endtime="20201115 22:02:38.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.796" endtime="20201115 22:02:38.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.804" endtime="20201115 22:02:38.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.502" endtime="20201115 22:02:38.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.500" endtime="20201115 22:02:38.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.811" level="INFO">${RESULT} = [{'time': 0.020538986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7527999999999294e-05, 'source_diff': 1.7527999999999294e-05}, {'time': 0.020856792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:38.807" endtime="20201115 22:02:38.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.824" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:38.812" endtime="20201115 22:02:38.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.828" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:38.828" endtime="20201115 22:02:38.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.831" level="INFO">VALUE: [1.7527999999999294e-05, 1.7527999999999294e-05, 1.7513999999999724e-05, 1.7542000000002334e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.7500000000000154e-05, 1.7500000000000154e-05, 1.7472000000001014e-05, 1.7542000000002334e-05, 1.759700000000114e-05, 1.7541999999998864e-05, 1.7527999999999294e-05, 1.7541999999998864e-05, 1.7541999999998864e-05, 1.7556000000001903e-05, 1.7570000000001473e-05, 1.7541999999998864e-05, 1.75829999999981e-05, 1.7542000000002334e-05, 1.7471999999997545e-05, 1.758300000000157e-05, 1.7542000000002334e-05, 1.7555999999998434e-05, 1.761100000000071e-05, 1.754100000000286e-05, 1.7527999999999294e-05, 1.7570000000001473e-05, 1.7527999999999294e-05, 1.7541999999998864e-05, 1.7472000000001014e-05, 1.7541999999998864e-05, 1.7500000000000154e-05, 1.755499999999896e-05, 1.7457999999997975e-05, 1.752699999999635e-05, 1.754100000000286e-05, 1.7556000000001903e-05, 1.7556000000001903e-05, 1.7542000000002334e-05, 1.7514000000003194e-05, 1.7527999999995825e-05, 1.755499999999549e-05, 1.7556000000001903e-05, 1.761100000000071e-05, 1.7541999999995395e-05, 1.7527999999995825e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.758299999999463e-05]</msg>
<status status="PASS" starttime="20201115 22:02:38.830" endtime="20201115 22:02:38.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.825" endtime="20201115 22:02:38.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.835" endtime="20201115 22:02:38.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.838" endtime="20201115 22:02:38.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.837" endtime="20201115 22:02:38.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.833" endtime="20201115 22:02:38.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.458" endtime="20201115 22:02:38.859"></status>
</kw>
<msg timestamp="20201115 22:02:38.859" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.868" endtime="20201115 22:02:38.894"></status>
</kw>
<msg timestamp="20201115 22:02:38.894" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.866" endtime="20201115 22:02:38.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.895" endtime="20201115 22:02:38.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.898" endtime="20201115 22:02:38.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.864" endtime="20201115 22:02:38.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.862" endtime="20201115 22:02:38.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.908" endtime="20201115 22:02:39.194"></status>
</kw>
<msg timestamp="20201115 22:02:39.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.906" endtime="20201115 22:02:39.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.198" endtime="20201115 22:02:39.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.206" endtime="20201115 22:02:39.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.904" endtime="20201115 22:02:39.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.902" endtime="20201115 22:02:39.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.213" level="INFO">${RESULT} = [{'time': 0.020015944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.755500000000243e-05, 'source_diff': 1.755500000000243e-05}, {'time': 0.020337181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:39.209" endtime="20201115 22:02:39.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.227" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:39.214" endtime="20201115 22:02:39.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.232" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:39.231" endtime="20201115 22:02:39.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.234" level="INFO">VALUE: [1.755500000000243e-05, 1.7541999999998864e-05, 1.7527999999999294e-05, 1.7542000000002334e-05, 1.7527999999999294e-05, 1.7569000000002e-05, 1.7542000000002334e-05, 1.752699999999982e-05, 1.7556000000001903e-05, 1.7527999999999294e-05, 1.7542000000002334e-05, 1.7528000000002764e-05, 1.754099999999939e-05, 1.7555999999998434e-05, 1.7471999999997545e-05, 1.752699999999982e-05, 1.7527999999999294e-05, 1.7528000000002764e-05, 1.7541999999998864e-05, 1.7555999999998434e-05, 1.7541999999998864e-05, 1.7542000000002334e-05, 1.752699999999982e-05, 1.7555999999998434e-05, 1.755499999999896e-05, 1.7527999999999294e-05, 1.7542000000002334e-05, 1.7541999999998864e-05, 1.758300000000157e-05, 1.7541999999998864e-05, 1.755500000000243e-05, 1.7541999999998864e-05, 1.7555999999998434e-05, 1.7527999999999294e-05, 1.7542000000002334e-05, 1.7542000000002334e-05, 1.7542000000002334e-05, 1.7541999999995395e-05, 1.754100000000286e-05, 1.7528000000002764e-05, 1.7541999999995395e-05, 1.7542000000002334e-05, 1.7528000000002764e-05, 1.7556000000001903e-05, 1.752699999999635e-05, 1.7513999999996255e-05, 1.759700000000114e-05, 1.7528000000002764e-05, 1.7542000000002334e-05, 1.758300000000157e-05]</msg>
<status status="PASS" starttime="20201115 22:02:39.233" endtime="20201115 22:02:39.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.228" endtime="20201115 22:02:39.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.238" endtime="20201115 22:02:39.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.242" endtime="20201115 22:02:39.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.240" endtime="20201115 22:02:39.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.236" endtime="20201115 22:02:39.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.860" endtime="20201115 22:02:39.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.252" endtime="20201115 22:02:39.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.251" endtime="20201115 22:02:39.263"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.265" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.274" endtime="20201115 22:02:39.300"></status>
</kw>
<msg timestamp="20201115 22:02:39.301" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.272" endtime="20201115 22:02:39.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.302" endtime="20201115 22:02:39.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.304" endtime="20201115 22:02:39.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.269" endtime="20201115 22:02:39.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.267" endtime="20201115 22:02:39.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.313" endtime="20201115 22:02:39.598"></status>
</kw>
<msg timestamp="20201115 22:02:39.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.312" endtime="20201115 22:02:39.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.602" endtime="20201115 22:02:39.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.610" endtime="20201115 22:02:39.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.309" endtime="20201115 22:02:39.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.307" endtime="20201115 22:02:39.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.617" level="INFO">${RESULT} = [{'time': 0.022342208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.811099999999774e-05, 'source_diff': 1.811099999999774e-05}, {'time': 0.022681306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:39.613" endtime="20201115 22:02:39.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.630" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:39.618" endtime="20201115 22:02:39.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.635" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:39.634" endtime="20201115 22:02:39.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.638" level="INFO">VALUE: [1.811099999999774e-05, 1.815299999999992e-05, 1.816700000000296e-05, 1.815299999999992e-05, 1.8151999999996976e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.8166000000000015e-05, 1.818099999999906e-05, 1.816699999999949e-05, 1.8209000000001668e-05, 1.812500000000078e-05, 1.8166000000000015e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.8166000000000015e-05, 1.813899999999688e-05, 1.811100000000121e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.818099999999906e-05, 1.816699999999949e-05, 1.8138000000000876e-05, 1.813900000000035e-05, 1.8166000000000015e-05, 1.8166000000000015e-05, 1.8112000000000683e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.8137999999993937e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.809700000000164e-05, 1.815299999999992e-05, 1.819499999999863e-05, 1.8179999999999585e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.8056000000002403e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.80690000000025e-05, 1.813900000000035e-05]</msg>
<status status="PASS" starttime="20201115 22:02:39.636" endtime="20201115 22:02:39.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.631" endtime="20201115 22:02:39.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.641" endtime="20201115 22:02:39.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.644" endtime="20201115 22:02:39.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.643" endtime="20201115 22:02:39.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.640" endtime="20201115 22:02:39.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.265" endtime="20201115 22:02:39.665"></status>
</kw>
<msg timestamp="20201115 22:02:39.665" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.674" endtime="20201115 22:02:39.702"></status>
</kw>
<msg timestamp="20201115 22:02:39.702" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.673" endtime="20201115 22:02:39.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.705" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.703" endtime="20201115 22:02:39.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.706" endtime="20201115 22:02:39.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.670" endtime="20201115 22:02:39.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.668" endtime="20201115 22:02:39.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.716" endtime="20201115 22:02:40.012"></status>
</kw>
<msg timestamp="20201115 22:02:40.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.714" endtime="20201115 22:02:40.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.021" endtime="20201115 22:02:40.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.039" endtime="20201115 22:02:40.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.712" endtime="20201115 22:02:40.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.710" endtime="20201115 22:02:40.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.052" level="INFO">${RESULT} = [{'time': 0.020180861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.812500000000078e-05, 'source_diff': 1.812500000000078e-05}, {'time': 0.020518944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:40.046" endtime="20201115 22:02:40.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.065" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:40.053" endtime="20201115 22:02:40.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.070" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:40.069" endtime="20201115 22:02:40.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.073" level="INFO">VALUE: [1.812500000000078e-05, 1.8152000000000446e-05, 1.813900000000035e-05, 1.8166000000000015e-05, 1.816699999999949e-05, 1.8151999999996976e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.8166000000000015e-05, 1.813900000000035e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.816699999999949e-05, 1.8138000000000876e-05, 1.818099999999906e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.818099999999906e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.8236000000001334e-05, 1.813900000000035e-05, 1.8166000000000015e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.812499999999731e-05, 1.8166000000000015e-05, 1.813900000000035e-05, 1.811100000000121e-05, 1.8194000000006094e-05, 1.8166000000000015e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.809700000000164e-05, 1.8152000000000446e-05, 1.813900000000035e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.815299999999992e-05]</msg>
<status status="PASS" starttime="20201115 22:02:40.071" endtime="20201115 22:02:40.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.067" endtime="20201115 22:02:40.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.076" endtime="20201115 22:02:40.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.079" endtime="20201115 22:02:40.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.078" endtime="20201115 22:02:40.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.074" endtime="20201115 22:02:40.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.666" endtime="20201115 22:02:40.100"></status>
</kw>
<msg timestamp="20201115 22:02:40.100" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.109" endtime="20201115 22:02:40.136"></status>
</kw>
<msg timestamp="20201115 22:02:40.136" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.107" endtime="20201115 22:02:40.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.139" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.137" endtime="20201115 22:02:40.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.140" endtime="20201115 22:02:40.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.105" endtime="20201115 22:02:40.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.103" endtime="20201115 22:02:40.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.150" endtime="20201115 22:02:40.436"></status>
</kw>
<msg timestamp="20201115 22:02:40.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.148" endtime="20201115 22:02:40.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.441" endtime="20201115 22:02:40.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.449" endtime="20201115 22:02:40.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.146" endtime="20201115 22:02:40.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.144" endtime="20201115 22:02:40.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.455" level="INFO">${RESULT} = [{'time': 0.020170222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8166000000000015e-05, 'source_diff': 1.8166000000000015e-05}, {'time': 0.020507875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:40.452" endtime="20201115 22:02:40.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.469" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:40.457" endtime="20201115 22:02:40.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.474" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:40.473" endtime="20201115 22:02:40.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.476" level="INFO">VALUE: [1.8166000000000015e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.813899999999688e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.811100000000121e-05, 1.816699999999949e-05, 1.812499999999731e-05, 1.815299999999992e-05, 1.809700000000164e-05, 1.813900000000035e-05, 1.8193999999999155e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.8152000000000446e-05, 1.813900000000035e-05, 1.818099999999906e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.812500000000078e-05, 1.816699999999949e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.808300000000207e-05, 1.82089999999982e-05]</msg>
<status status="PASS" starttime="20201115 22:02:40.475" endtime="20201115 22:02:40.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.470" endtime="20201115 22:02:40.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.479" endtime="20201115 22:02:40.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.483" endtime="20201115 22:02:40.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.481" endtime="20201115 22:02:40.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.478" endtime="20201115 22:02:40.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.101" endtime="20201115 22:02:40.503"></status>
</kw>
<msg timestamp="20201115 22:02:40.504" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.513" endtime="20201115 22:02:40.540"></status>
</kw>
<msg timestamp="20201115 22:02:40.540" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.511" endtime="20201115 22:02:40.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.541" endtime="20201115 22:02:40.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.544" endtime="20201115 22:02:40.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.508" endtime="20201115 22:02:40.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.506" endtime="20201115 22:02:40.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.554" endtime="20201115 22:02:40.840"></status>
</kw>
<msg timestamp="20201115 22:02:40.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020186792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.552" endtime="20201115 22:02:40.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020186792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.845" endtime="20201115 22:02:40.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.853" endtime="20201115 22:02:40.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.550" endtime="20201115 22:02:40.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.548" endtime="20201115 22:02:40.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.860" level="INFO">${RESULT} = [{'time': 0.020204944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8152000000000446e-05, 'source_diff': 1.8152000000000446e-05}, {'time': 0.020541042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:40.856" endtime="20201115 22:02:40.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.874" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:40.861" endtime="20201115 22:02:40.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.879" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:40.878" endtime="20201115 22:02:40.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.881" level="INFO">VALUE: [1.8152000000000446e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.8208000000002195e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.8138000000000876e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.80829999999986e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.809699999999817e-05, 1.8236000000001334e-05, 1.815299999999992e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.812499999999731e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.8166000000000015e-05, 1.815299999999992e-05, 1.8179999999999585e-05, 1.813900000000035e-05, 1.8166000000000015e-05, 1.8193999999999155e-05, 1.8166000000000015e-05, 1.8179999999999585e-05, 1.811099999999427e-05, 1.816699999999949e-05, 1.819499999999863e-05, 1.8166000000000015e-05, 1.8152000000000446e-05, 1.812499999999384e-05, 1.815299999999992e-05, 1.8179999999999585e-05]</msg>
<status status="PASS" starttime="20201115 22:02:40.880" endtime="20201115 22:02:40.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.875" endtime="20201115 22:02:40.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.884" endtime="20201115 22:02:40.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.888" endtime="20201115 22:02:40.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.886" endtime="20201115 22:02:40.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.883" endtime="20201115 22:02:40.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.504" endtime="20201115 22:02:40.908"></status>
</kw>
<msg timestamp="20201115 22:02:40.909" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.917" endtime="20201115 22:02:40.944"></status>
</kw>
<msg timestamp="20201115 22:02:40.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.916" endtime="20201115 22:02:40.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.946" endtime="20201115 22:02:40.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.948" endtime="20201115 22:02:40.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.913" endtime="20201115 22:02:40.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.911" endtime="20201115 22:02:40.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.958" endtime="20201115 22:02:41.243"></status>
</kw>
<msg timestamp="20201115 22:02:41.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.957" endtime="20201115 22:02:41.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.247" endtime="20201115 22:02:41.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.255" endtime="20201115 22:02:41.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.954" endtime="20201115 22:02:41.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.952" endtime="20201115 22:02:41.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.262" level="INFO">${RESULT} = [{'time': 0.020088944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8138000000000876e-05, 'source_diff': 1.8138000000000876e-05}, {'time': 0.020427208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:41.259" endtime="20201115 22:02:41.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.276" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:41.263" endtime="20201115 22:02:41.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.280" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:41.279" endtime="20201115 22:02:41.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.283" level="INFO">VALUE: [1.8138000000000876e-05, 1.8179999999999585e-05, 1.815299999999992e-05, 1.813899999999688e-05, 1.8138000000000876e-05, 1.815299999999992e-05, 1.8138000000000876e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.816700000000296e-05, 1.8152000000000446e-05, 1.8098000000001113e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.811100000000121e-05, 1.813900000000035e-05, 1.816700000000296e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.818100000000253e-05, 1.819499999999863e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.8138000000000876e-05, 1.816700000000296e-05, 1.8151999999996976e-05, 1.813900000000035e-05, 1.8137999999997406e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.813899999999688e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.8138000000000876e-05, 1.8153000000006858e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.8221999999998295e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.8152000000000446e-05, 1.812500000000078e-05]</msg>
<status status="PASS" starttime="20201115 22:02:41.281" endtime="20201115 22:02:41.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.276" endtime="20201115 22:02:41.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.286" endtime="20201115 22:02:41.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.289" endtime="20201115 22:02:41.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.287" endtime="20201115 22:02:41.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.284" endtime="20201115 22:02:41.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.909" endtime="20201115 22:02:41.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.264" endtime="20201115 22:02:41.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.263" endtime="20201115 22:02:41.310"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.312" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.321" endtime="20201115 22:02:41.349"></status>
</kw>
<msg timestamp="20201115 22:02:41.350" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.319" endtime="20201115 22:02:41.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.352" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.351" endtime="20201115 22:02:41.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.353" endtime="20201115 22:02:41.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.317" endtime="20201115 22:02:41.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.315" endtime="20201115 22:02:41.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.363" endtime="20201115 22:02:41.648"></status>
</kw>
<msg timestamp="20201115 22:02:41.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02241825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:02:41.361" endtime="20201115 22:02:41.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02241825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:02:41.652" endtime="20201115 22:02:41.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.660" endtime="20201115 22:02:41.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.359" endtime="20201115 22:02:41.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.357" endtime="20201115 22:02:41.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.667" level="INFO">${RESULT} = [{'time': 0.022437, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999997935e-05, 'source_diff': 1.8749999999997935e-05}, {'time': 0.02279375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:41.663" endtime="20201115 22:02:41.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.680" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:41.668" endtime="20201115 22:02:41.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.685" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:41.684" endtime="20201115 22:02:41.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.687" level="INFO">VALUE: [1.8749999999997935e-05, 1.8764000000000974e-05, 1.8750000000001404e-05, 1.8764000000000974e-05, 1.8750000000001404e-05, 1.8819999999999254e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.880500000000021e-05, 1.8792000000000114e-05, 1.876299999999803e-05, 1.87630000000015e-05, 1.8792000000000114e-05, 1.8764000000000974e-05, 1.8749999999997935e-05, 1.8764000000000974e-05, 1.8777999999997075e-05, 1.8763999999997505e-05, 1.8749999999997935e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8778000000000544e-05, 1.8750000000001404e-05, 1.87630000000015e-05, 1.8778000000004014e-05, 1.880499999999674e-05, 1.8749999999997935e-05, 1.8764000000004444e-05, 1.8721999999998795e-05, 1.8763999999997505e-05, 1.8778000000004014e-05, 1.8750000000004874e-05, 1.8763999999997505e-05, 1.8763999999997505e-05, 1.8721999999998795e-05, 1.8764000000004444e-05, 1.8749999999997935e-05, 1.8763999999997505e-05, 1.8763999999997505e-05, 1.8749999999997935e-05, 1.87769999999976e-05, 1.87769999999976e-05, 1.8777999999997075e-05, 1.8764000000004444e-05, 1.8763999999997505e-05, 1.8749999999997935e-05, 1.8764000000004444e-05, 1.8778000000004014e-05, 1.8763999999997505e-05]</msg>
<status status="PASS" starttime="20201115 22:02:41.686" endtime="20201115 22:02:41.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.681" endtime="20201115 22:02:41.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.690" endtime="20201115 22:02:41.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.694" endtime="20201115 22:02:41.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.692" endtime="20201115 22:02:41.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.689" endtime="20201115 22:02:41.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.313" endtime="20201115 22:02:41.715"></status>
</kw>
<msg timestamp="20201115 22:02:41.715" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.724" endtime="20201115 22:02:41.752"></status>
</kw>
<msg timestamp="20201115 22:02:41.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.722" endtime="20201115 22:02:41.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.755" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.753" endtime="20201115 22:02:41.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.756" endtime="20201115 22:02:41.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.720" endtime="20201115 22:02:41.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.717" endtime="20201115 22:02:41.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.766" endtime="20201115 22:02:42.052"></status>
</kw>
<msg timestamp="20201115 22:02:42.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020161903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.765" endtime="20201115 22:02:42.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020161903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.056" endtime="20201115 22:02:42.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.064" endtime="20201115 22:02:42.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.762" endtime="20201115 22:02:42.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.761" endtime="20201115 22:02:42.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.071" level="INFO">${RESULT} = [{'time': 0.020180639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8736000000001835e-05, 'source_diff': 1.8736000000001835e-05}, {'time': 0.020536097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:42.068" endtime="20201115 22:02:42.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.084" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:42.072" endtime="20201115 22:02:42.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.089" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:42.088" endtime="20201115 22:02:42.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.091" level="INFO">VALUE: [1.8736000000001835e-05, 1.8750000000001404e-05, 1.8778000000000544e-05, 1.8778000000000544e-05, 1.873699999999784e-05, 1.8764000000000974e-05, 1.8763999999997505e-05, 1.8792000000000114e-05, 1.8764000000000974e-05, 1.8749999999997935e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8778000000000544e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.877700000000107e-05, 1.8764000000000974e-05, 1.8750000000001404e-05, 1.8764000000000974e-05, 1.8778000000000544e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8735999999998365e-05, 1.8763999999997505e-05, 1.8735999999998365e-05, 1.8750000000001404e-05, 1.8750000000001404e-05, 1.870900000000217e-05, 1.8764000000000974e-05, 1.8736000000001835e-05, 1.8750000000001404e-05, 1.876299999999803e-05, 1.8764000000004444e-05, 1.8764000000004444e-05, 1.87769999999976e-05, 1.8749999999997935e-05, 1.872299999999827e-05, 1.8763999999997505e-05, 1.8778000000004014e-05, 1.8778000000004014e-05, 1.8777999999997075e-05, 1.8777999999997075e-05, 1.87769999999976e-05, 1.8777999999997075e-05, 1.8749999999997935e-05, 1.8764000000004444e-05, 1.883300000000282e-05, 1.8749999999997935e-05, 1.8749999999997935e-05, 1.8723000000005208e-05]</msg>
<status status="PASS" starttime="20201115 22:02:42.090" endtime="20201115 22:02:42.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.085" endtime="20201115 22:02:42.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.095" endtime="20201115 22:02:42.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.098" endtime="20201115 22:02:42.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.097" endtime="20201115 22:02:42.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.093" endtime="20201115 22:02:42.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.715" endtime="20201115 22:02:42.119"></status>
</kw>
<msg timestamp="20201115 22:02:42.119" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.128" endtime="20201115 22:02:42.156"></status>
</kw>
<msg timestamp="20201115 22:02:42.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.126" endtime="20201115 22:02:42.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.157" endtime="20201115 22:02:42.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.160" endtime="20201115 22:02:42.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.124" endtime="20201115 22:02:42.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.122" endtime="20201115 22:02:42.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.170" endtime="20201115 22:02:42.454"></status>
</kw>
<msg timestamp="20201115 22:02:42.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020668889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020687653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.168" endtime="20201115 22:02:42.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020668889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020687653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.459" endtime="20201115 22:02:42.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.467" endtime="20201115 22:02:42.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.166" endtime="20201115 22:02:42.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.164" endtime="20201115 22:02:42.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.473" level="INFO">${RESULT} = [{'time': 0.020687653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8764000000000974e-05, 'source_diff': 1.8764000000000974e-05}, {'time': 0.021041833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:42.470" endtime="20201115 22:02:42.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.488" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:42.474" endtime="20201115 22:02:42.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.492" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:42.491" endtime="20201115 22:02:42.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.495" level="INFO">VALUE: [1.8764000000000974e-05, 1.8735999999998365e-05, 1.8764000000000974e-05, 1.877700000000107e-05, 1.8778000000000544e-05, 1.8721999999998795e-05, 1.87089999999987e-05, 1.8750000000001404e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8763999999997505e-05, 1.8764000000000974e-05, 1.8736000000001835e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8763999999997505e-05, 1.876299999999803e-05, 1.8750000000001404e-05, 1.8764000000000974e-05, 1.877700000000107e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8778000000000544e-05, 1.869499999999913e-05, 1.8763999999997505e-05, 1.8778000000000544e-05, 1.8763999999997505e-05, 1.8792000000000114e-05, 1.8764000000000974e-05, 1.8735999999998365e-05, 1.8750000000004874e-05, 1.8777999999997075e-05, 1.881900000000325e-05, 1.8763999999997505e-05, 1.8763999999997505e-05, 1.876300000000497e-05, 1.8749999999997935e-05, 1.8777999999997075e-05, 1.8834000000002293e-05, 1.8792000000003584e-05, 1.8777999999997075e-05, 1.8777999999997075e-05, 1.8834000000002293e-05, 1.8791999999996645e-05, 1.876299999999803e-05, 1.8764000000004444e-05, 1.8749999999997935e-05, 1.87769999999976e-05, 1.8777999999997075e-05, 1.8764000000004444e-05]</msg>
<status status="PASS" starttime="20201115 22:02:42.494" endtime="20201115 22:02:42.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.489" endtime="20201115 22:02:42.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.498" endtime="20201115 22:02:42.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.502" endtime="20201115 22:02:42.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.500" endtime="20201115 22:02:42.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.497" endtime="20201115 22:02:42.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.119" endtime="20201115 22:02:42.522"></status>
</kw>
<msg timestamp="20201115 22:02:42.527" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.536" endtime="20201115 22:02:42.564"></status>
</kw>
<msg timestamp="20201115 22:02:42.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.534" endtime="20201115 22:02:42.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.565" endtime="20201115 22:02:42.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.568" endtime="20201115 22:02:42.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.532" endtime="20201115 22:02:42.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.529" endtime="20201115 22:02:42.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.577" endtime="20201115 22:02:42.863"></status>
</kw>
<msg timestamp="20201115 22:02:42.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024602806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024621569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.576" endtime="20201115 22:02:42.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024602806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024621569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.867" endtime="20201115 22:02:42.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.875" endtime="20201115 22:02:42.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.573" endtime="20201115 22:02:42.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.572" endtime="20201115 22:02:42.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.882" level="INFO">${RESULT} = [{'time': 0.024621569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.876299999999803e-05, 'source_diff': 1.876299999999803e-05}, {'time': 0.024976639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:42.878" endtime="20201115 22:02:42.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.895" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:42.883" endtime="20201115 22:02:42.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.900" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:42.899" endtime="20201115 22:02:42.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.902" level="INFO">VALUE: [1.876299999999803e-05, 1.8749999999997935e-05, 1.8777999999997075e-05, 1.8764000000000974e-05, 1.8763999999997505e-05, 1.8764000000000974e-05, 1.8707999999999225e-05, 1.8805999999999684e-05, 1.8693999999999655e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8778000000000544e-05, 1.8778000000000544e-05, 1.876299999999803e-05, 1.8722000000002265e-05, 1.87630000000015e-05, 1.877700000000107e-05, 1.869499999999913e-05, 1.8764000000004444e-05, 1.8764000000004444e-05, 1.8777999999997075e-05, 1.8763999999997505e-05, 1.8749999999997935e-05, 1.8750000000004874e-05, 1.8777999999997075e-05, 1.8763999999997505e-05, 1.876300000000497e-05, 1.876299999999803e-05, 1.8777999999997075e-05, 1.8778000000004014e-05, 1.8763999999997505e-05, 1.8777999999997075e-05, 1.8763999999997505e-05, 1.8764000000004444e-05, 1.8764000000004444e-05, 1.8764000000004444e-05, 1.8735999999998365e-05, 1.8749999999997935e-05, 1.8735999999998365e-05, 1.8749999999997935e-05, 1.872299999999827e-05, 1.8749999999997935e-05, 1.8763999999997505e-05, 1.8777999999997075e-05, 1.8750000000004874e-05, 1.879099999999717e-05, 1.872299999999827e-05, 1.8749999999997935e-05, 1.8763999999997505e-05]</msg>
<status status="PASS" starttime="20201115 22:02:42.901" endtime="20201115 22:02:42.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.896" endtime="20201115 22:02:42.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.905" endtime="20201115 22:02:42.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.909" endtime="20201115 22:02:42.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.908" endtime="20201115 22:02:42.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.904" endtime="20201115 22:02:42.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.527" endtime="20201115 22:02:42.930"></status>
</kw>
<msg timestamp="20201115 22:02:42.930" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.939" endtime="20201115 22:02:42.966"></status>
</kw>
<msg timestamp="20201115 22:02:42.967" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.937" endtime="20201115 22:02:42.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.969" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.968" endtime="20201115 22:02:42.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.970" endtime="20201115 22:02:42.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.935" endtime="20201115 22:02:42.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.933" endtime="20201115 22:02:42.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.980" endtime="20201115 22:02:43.266"></status>
</kw>
<msg timestamp="20201115 22:02:43.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020124639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.979" endtime="20201115 22:02:43.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020124639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.270" endtime="20201115 22:02:43.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.278" endtime="20201115 22:02:43.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.976" endtime="20201115 22:02:43.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.975" endtime="20201115 22:02:43.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.285" level="INFO">${RESULT} = [{'time': 0.020124639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.883299999999935e-05, 'source_diff': 1.883299999999935e-05}, {'time': 0.020479333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:43.281" endtime="20201115 22:02:43.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.298" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:43.286" endtime="20201115 22:02:43.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.303" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:43.302" endtime="20201115 22:02:43.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.305" level="INFO">VALUE: [1.883299999999935e-05, 1.87769999999976e-05, 1.87769999999976e-05, 1.8763999999997505e-05, 1.8778000000000544e-05, 1.8764000000000974e-05, 1.8749999999997935e-05, 1.8749999999997935e-05, 1.8750000000001404e-05, 1.8749999999997935e-05, 1.8749999999997935e-05, 1.8764000000000974e-05, 1.8778000000000544e-05, 1.883299999999935e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8737000000001308e-05, 1.8750000000001404e-05, 1.8750000000001404e-05, 1.879100000000064e-05, 1.8778000000000544e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8736000000001835e-05, 1.8819999999999254e-05, 1.8721999999998795e-05, 1.8763999999997505e-05, 1.8763999999997505e-05, 1.87630000000015e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8750000000001404e-05, 1.8763999999997505e-05, 1.8749999999997935e-05, 1.8750000000004874e-05, 1.8777999999997075e-05, 1.8777999999997075e-05, 1.8707999999999225e-05, 1.8764000000004444e-05, 1.8792000000003584e-05, 1.8764000000004444e-05, 1.8778000000004014e-05, 1.8749999999997935e-05, 1.8763999999997505e-05, 1.8777999999997075e-05, 1.884700000000239e-05, 1.8764000000004444e-05, 1.879099999999717e-05, 1.8764000000004444e-05, 1.8764000000004444e-05]</msg>
<status status="PASS" starttime="20201115 22:02:43.304" endtime="20201115 22:02:43.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.299" endtime="20201115 22:02:43.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.309" endtime="20201115 22:02:43.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.312" endtime="20201115 22:02:43.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.311" endtime="20201115 22:02:43.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.307" endtime="20201115 22:02:43.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.931" endtime="20201115 22:02:43.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.311" endtime="20201115 22:02:43.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.310" endtime="20201115 22:02:43.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.294" endtime="20201115 22:02:43.333"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.338" endtime="20201115 22:02:43.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.336" endtime="20201115 22:02:43.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.335" endtime="20201115 22:02:43.358"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:53.220" endtime="20201115 22:02:43.359" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.366" endtime="20201115 22:02:43.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.364" endtime="20201115 22:02:43.386"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.400" endtime="20201115 22:02:43.418"></status>
</kw>
<msg timestamp="20201115 22:02:43.419" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.398" endtime="20201115 22:02:43.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.421" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.420" endtime="20201115 22:02:43.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.424" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:43.422" endtime="20201115 22:02:43.424"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:43.396" endtime="20201115 22:02:43.425"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:43.393" endtime="20201115 22:02:43.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.391" endtime="20201115 22:02:43.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:43.430" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:43.429" endtime="20201115 22:02:43.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.427" endtime="20201115 22:02:43.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.390" endtime="20201115 22:02:43.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.390" endtime="20201115 22:02:43.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.431" endtime="20201115 22:02:43.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.388" endtime="20201115 22:02:43.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.387" endtime="20201115 22:02:43.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.363" endtime="20201115 22:02:43.434"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.437" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.447" endtime="20201115 22:02:43.461"></status>
</kw>
<msg timestamp="20201115 22:02:43.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.445" endtime="20201115 22:02:43.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.462" endtime="20201115 22:02:43.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.465" endtime="20201115 22:02:43.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.443" endtime="20201115 22:02:43.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.440" endtime="20201115 22:02:43.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.475" endtime="20201115 22:02:43.760"></status>
</kw>
<msg timestamp="20201115 22:02:43.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071424306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071425847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.473" endtime="20201115 22:02:43.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071424306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071425847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.764" endtime="20201115 22:02:43.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.772" endtime="20201115 22:02:43.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.470" endtime="20201115 22:02:43.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.468" endtime="20201115 22:02:43.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.779" level="INFO">${RESULT} = [{'time': 0.071425847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5409999999937973e-06, 'source_diff': 1.5409999999937973e-06}, {'time': 0.07150475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:43.776" endtime="20201115 22:02:43.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.792" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:43.780" endtime="20201115 22:02:43.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.797" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:43.796" endtime="20201115 22:02:43.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.800" level="INFO">VALUE: [1.5409999999937973e-06, 1.5559999999997798e-06, 1.6109999999985858e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.514000000008009e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.4859999999949913e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1.52800000000064e-06, 1.5410000000076751e-06, 1.5410000000076751e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5410000000076751e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.569000000006815e-06, 1.52800000000064e-06, 1.5699999999924108e-06, 1.5689999999929372e-06, 1.5559999999997798e-06, 1.569000000006815e-06, 1.5410000000076751e-06, 1.5970000000059548e-06, 1.5700000000062886e-06, 1.5139999999941312e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.4859999999949913e-06, 1.5420000000071488e-06, 1.5410000000076751e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.4579999999958515e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.798" endtime="20201115 22:02:43.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.793" endtime="20201115 22:02:43.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.803" endtime="20201115 22:02:43.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.806" endtime="20201115 22:02:43.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.805" endtime="20201115 22:02:43.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.801" endtime="20201115 22:02:43.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.438" endtime="20201115 22:02:43.827"></status>
</kw>
<msg timestamp="20201115 22:02:43.827" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.836" endtime="20201115 22:02:43.850"></status>
</kw>
<msg timestamp="20201115 22:02:43.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.835" endtime="20201115 22:02:43.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.852" endtime="20201115 22:02:43.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.854" endtime="20201115 22:02:43.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.832" endtime="20201115 22:02:43.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.830" endtime="20201115 22:02:43.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.866" endtime="20201115 22:02:44.151"></status>
</kw>
<msg timestamp="20201115 22:02:44.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019996014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.862" endtime="20201115 22:02:44.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019994472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019996014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.155" endtime="20201115 22:02:44.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.163" endtime="20201115 22:02:44.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.859" endtime="20201115 22:02:44.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.858" endtime="20201115 22:02:44.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.170" level="INFO">${RESULT} = [{'time': 0.019996014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.020072417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:44.167" endtime="20201115 22:02:44.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.183" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:44.171" endtime="20201115 22:02:44.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.188" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.187" endtime="20201115 22:02:44.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.190" level="INFO">VALUE: [1.5420000000002099e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.4999999999980307e-06, 1.5559999999997798e-06, 1.5839999999989196e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5549999999968367e-06, 1.5420000000002099e-06, 1.5279999999971705e-06, 1.5270000000011663e-06, 1.582999999999446e-06, 1.52800000000064e-06, 1.4870000000014039e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5419999999967404e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.512999999998127e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.4859999999984608e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5410000000007362e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.189" endtime="20201115 22:02:44.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.184" endtime="20201115 22:02:44.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.194" endtime="20201115 22:02:44.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.197" endtime="20201115 22:02:44.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.196" endtime="20201115 22:02:44.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.192" endtime="20201115 22:02:44.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.828" endtime="20201115 22:02:44.218"></status>
</kw>
<msg timestamp="20201115 22:02:44.218" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.227" endtime="20201115 22:02:44.241"></status>
</kw>
<msg timestamp="20201115 22:02:44.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.225" endtime="20201115 22:02:44.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.244" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.243" endtime="20201115 22:02:44.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.245" endtime="20201115 22:02:44.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.223" endtime="20201115 22:02:44.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.221" endtime="20201115 22:02:44.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.254" endtime="20201115 22:02:44.541"></status>
</kw>
<msg timestamp="20201115 22:02:44.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.253" endtime="20201115 22:02:44.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.545" endtime="20201115 22:02:44.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.554" endtime="20201115 22:02:44.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.250" endtime="20201115 22:02:44.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.249" endtime="20201115 22:02:44.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.560" level="INFO">${RESULT} = [{'time': 0.019913653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019989056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:44.557" endtime="20201115 22:02:44.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.574" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:44.561" endtime="20201115 22:02:44.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.578" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.577" endtime="20201115 22:02:44.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.581" level="INFO">VALUE: [1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.4999999999980307e-06, 1.5420000000002099e-06, 1.5560000000032492e-06, 1.6249999999981557e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.4999999999980307e-06, 1.5410000000007362e-06, 1.5000000000015001e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5409999999972668e-06, 1.5419999999967404e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.4999999999980307e-06, 1.4589999999987946e-06, 1.5269999999976969e-06, 1.52800000000064e-06, 1.4859999999984608e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5269999999976969e-06, 1.51400000000107e-06, 1.5550000000003061e-06, 1.5419999999967404e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5970000000024853e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.5559999999997798e-06, 1.4859999999984608e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.5410000000007362e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.579" endtime="20201115 22:02:44.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.575" endtime="20201115 22:02:44.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.584" endtime="20201115 22:02:44.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.588" endtime="20201115 22:02:44.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.586" endtime="20201115 22:02:44.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.583" endtime="20201115 22:02:44.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.219" endtime="20201115 22:02:44.608"></status>
</kw>
<msg timestamp="20201115 22:02:44.609" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.617" endtime="20201115 22:02:44.632"></status>
</kw>
<msg timestamp="20201115 22:02:44.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.616" endtime="20201115 22:02:44.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.634" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.633" endtime="20201115 22:02:44.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.635" endtime="20201115 22:02:44.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.613" endtime="20201115 22:02:44.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.611" endtime="20201115 22:02:44.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.644" endtime="20201115 22:02:44.931"></status>
</kw>
<msg timestamp="20201115 22:02:44.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019989458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.643" endtime="20201115 22:02:44.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019989458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.935" endtime="20201115 22:02:44.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.943" endtime="20201115 22:02:44.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.640" endtime="20201115 22:02:44.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.639" endtime="20201115 22:02:44.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.950" level="INFO">${RESULT} = [{'time': 0.019989458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.020068222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:44.947" endtime="20201115 22:02:44.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.964" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:44.951" endtime="20201115 22:02:44.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.968" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.967" endtime="20201115 22:02:44.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.971" level="INFO">VALUE: [1.5410000000007362e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5270000000011663e-06, 1.4870000000014039e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.4859999999984608e-06, 1.5420000000002099e-06, 1.5269999999976969e-06, 1.5420000000002099e-06, 1.5279999999971705e-06, 1.4999999999980307e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5279999999971705e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.4720000000023603e-06, 1.5000000000015001e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.5970000000024853e-06, 1.5420000000002099e-06, 1.512999999998127e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.5830000000029154e-06, 1.5419999999967404e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.969" endtime="20201115 22:02:44.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.964" endtime="20201115 22:02:44.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.974" endtime="20201115 22:02:44.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.978" endtime="20201115 22:02:44.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.976" endtime="20201115 22:02:44.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.972" endtime="20201115 22:02:44.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.609" endtime="20201115 22:02:44.998"></status>
</kw>
<msg timestamp="20201115 22:02:44.998" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.007" endtime="20201115 22:02:45.022"></status>
</kw>
<msg timestamp="20201115 22:02:45.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.006" endtime="20201115 22:02:45.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.023" endtime="20201115 22:02:45.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.026" endtime="20201115 22:02:45.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.003" endtime="20201115 22:02:45.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.001" endtime="20201115 22:02:45.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.035" endtime="20201115 22:02:45.320"></status>
</kw>
<msg timestamp="20201115 22:02:45.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020103819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020105361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.033" endtime="20201115 22:02:45.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020103819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020105361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.324" endtime="20201115 22:02:45.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.333" endtime="20201115 22:02:45.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.031" endtime="20201115 22:02:45.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.029" endtime="20201115 22:02:45.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.339" level="INFO">${RESULT} = [{'time': 0.020105361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.020184333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:45.336" endtime="20201115 22:02:45.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.353" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:45.340" endtime="20201115 22:02:45.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.357" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:45.356" endtime="20201115 22:02:45.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.360" level="INFO">VALUE: [1.5420000000002099e-06, 1.5409999999972668e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.4859999999984608e-06, 1.5409999999972668e-06, 1.52800000000064e-06, 1.5969999999990159e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5139999999976006e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5409999999972668e-06, 1.52800000000064e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5409999999972668e-06, 1.52800000000064e-06, 1.5410000000007362e-06, 1.473000000001834e-06, 1.5410000000007362e-06, 1.4999999999980307e-06, 1.5269999999976969e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.4999999999980307e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.5550000000003061e-06, 1.51400000000107e-06, 1.5409999999972668e-06, 1.5420000000002099e-06, 1.4860000000019302e-06, 1.5420000000002099e-06, 1.6250000000016251e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5139999999976006e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.358" endtime="20201115 22:02:45.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.354" endtime="20201115 22:02:45.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.363" endtime="20201115 22:02:45.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.367" endtime="20201115 22:02:45.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.365" endtime="20201115 22:02:45.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.362" endtime="20201115 22:02:45.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.999" endtime="20201115 22:02:45.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.436" endtime="20201115 22:02:45.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.435" endtime="20201115 22:02:45.388"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.390" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.398" endtime="20201115 22:02:45.412"></status>
</kw>
<msg timestamp="20201115 22:02:45.413" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.397" endtime="20201115 22:02:45.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.414" endtime="20201115 22:02:45.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.416" endtime="20201115 22:02:45.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.394" endtime="20201115 22:02:45.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.392" endtime="20201115 22:02:45.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.425" endtime="20201115 22:02:45.712"></status>
</kw>
<msg timestamp="20201115 22:02:45.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.424" endtime="20201115 22:02:45.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.716" endtime="20201115 22:02:45.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.725" endtime="20201115 22:02:45.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.421" endtime="20201115 22:02:45.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.419" endtime="20201115 22:02:45.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.731" level="INFO">${RESULT} = [{'time': 0.022287194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.022370903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:45.728" endtime="20201115 22:02:45.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.745" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:45.732" endtime="20201115 22:02:45.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.749" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:45.748" endtime="20201115 22:02:45.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.752" level="INFO">VALUE: [1.6800000000004311e-06, 1.709000000002514e-06, 1.6670000000003349e-06, 1.6810000000033742e-06, 1.709000000002514e-06, 1.6809999999999048e-06, 1.6119999999980594e-06, 1.6380000000017214e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.639000000001195e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.6519999999978219e-06, 1.6660000000008612e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.6519999999978219e-06, 1.709000000002514e-06, 1.6949999999994747e-06, 1.6670000000003349e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.6799999999969617e-06, 1.6800000000004311e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.7370000000016539e-06, 1.6660000000008612e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.6800000000004311e-06, 1.653000000000765e-06, 1.709000000002514e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.750" endtime="20201115 22:02:45.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.746" endtime="20201115 22:02:45.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.755" endtime="20201115 22:02:45.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.759" endtime="20201115 22:02:45.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.757" endtime="20201115 22:02:45.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.754" endtime="20201115 22:02:45.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.390" endtime="20201115 22:02:45.779"></status>
</kw>
<msg timestamp="20201115 22:02:45.780" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.788" endtime="20201115 22:02:45.802"></status>
</kw>
<msg timestamp="20201115 22:02:45.803" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.787" endtime="20201115 22:02:45.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.805" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.804" endtime="20201115 22:02:45.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.806" endtime="20201115 22:02:45.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.784" endtime="20201115 22:02:45.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.782" endtime="20201115 22:02:45.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.815" endtime="20201115 22:02:46.102"></status>
</kw>
<msg timestamp="20201115 22:02:46.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019916764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.814" endtime="20201115 22:02:46.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019916764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.106" endtime="20201115 22:02:46.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.114" endtime="20201115 22:02:46.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.811" endtime="20201115 22:02:46.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.810" endtime="20201115 22:02:46.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.121" level="INFO">${RESULT} = [{'time': 0.019918514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019999653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:46.118" endtime="20201115 22:02:46.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.134" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:46.122" endtime="20201115 22:02:46.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.139" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.138" endtime="20201115 22:02:46.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.142" level="INFO">VALUE: [1.7499999999982807e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.6950000000029442e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.7369999999981844e-06, 1.694000000000001e-06, 1.6660000000008612e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.7359999999987108e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.6660000000008612e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.6800000000004311e-06, 1.6800000000004311e-06, 1.7089999999990446e-06, 1.6660000000008612e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.7220000000026103e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6659999999973918e-06, 1.6809999999999048e-06, 1.6809999999999048e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.140" endtime="20201115 22:02:46.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.136" endtime="20201115 22:02:46.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.145" endtime="20201115 22:02:46.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.148" endtime="20201115 22:02:46.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.147" endtime="20201115 22:02:46.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.143" endtime="20201115 22:02:46.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.780" endtime="20201115 22:02:46.169"></status>
</kw>
<msg timestamp="20201115 22:02:46.169" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.178" endtime="20201115 22:02:46.191"></status>
</kw>
<msg timestamp="20201115 22:02:46.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.176" endtime="20201115 22:02:46.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.193" endtime="20201115 22:02:46.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.195" endtime="20201115 22:02:46.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.174" endtime="20201115 22:02:46.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.172" endtime="20201115 22:02:46.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.204" endtime="20201115 22:02:46.490"></status>
</kw>
<msg timestamp="20201115 22:02:46.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.203" endtime="20201115 22:02:46.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.494" endtime="20201115 22:02:46.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.503" endtime="20201115 22:02:46.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.200" endtime="20201115 22:02:46.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.198" endtime="20201115 22:02:46.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.510" level="INFO">${RESULT} = [{'time': 0.019949222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.020029444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:46.506" endtime="20201115 22:02:46.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.523" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:46.511" endtime="20201115 22:02:46.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.528" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.527" endtime="20201115 22:02:46.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.530" level="INFO">VALUE: [1.6800000000004311e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.6110000000020552e-06, 1.707999999999571e-06, 1.6800000000004311e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.6660000000008612e-06, 1.6670000000003349e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.694000000000001e-06, 1.6389999999977256e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.7360000000021802e-06, 1.6660000000008612e-06, 1.6949999999994747e-06, 1.6670000000003349e-06, 1.6660000000008612e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.6810000000033742e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.6799999999969617e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.529" endtime="20201115 22:02:46.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.524" endtime="20201115 22:02:46.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.533" endtime="20201115 22:02:46.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.537" endtime="20201115 22:02:46.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.535" endtime="20201115 22:02:46.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.532" endtime="20201115 22:02:46.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.170" endtime="20201115 22:02:46.557"></status>
</kw>
<msg timestamp="20201115 22:02:46.558" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.566" endtime="20201115 22:02:46.580"></status>
</kw>
<msg timestamp="20201115 22:02:46.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.565" endtime="20201115 22:02:46.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.583" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.582" endtime="20201115 22:02:46.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.584" endtime="20201115 22:02:46.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.562" endtime="20201115 22:02:46.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.560" endtime="20201115 22:02:46.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.593" endtime="20201115 22:02:46.879"></status>
</kw>
<msg timestamp="20201115 22:02:46.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020142528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020144222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.592" endtime="20201115 22:02:46.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020142528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020144222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.883" endtime="20201115 22:02:46.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.892" endtime="20201115 22:02:46.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.589" endtime="20201115 22:02:46.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.588" endtime="20201115 22:02:46.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.900" level="INFO">${RESULT} = [{'time': 0.020144222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.020225625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:46.896" endtime="20201115 22:02:46.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.913" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:46.901" endtime="20201115 22:02:46.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.918" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.917" endtime="20201115 22:02:46.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.920" level="INFO">VALUE: [1.694000000000001e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.6110000000020552e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6660000000008612e-06, 1.694000000000001e-06, 1.6109999999985858e-06, 1.6670000000003349e-06, 1.6659999999973918e-06, 1.6669999999968654e-06, 1.6800000000004311e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.7219999999991409e-06, 1.7360000000021802e-06, 1.6809999999999048e-06, 1.6950000000029442e-06, 1.6659999999973918e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.6670000000003349e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.709000000002514e-06, 1.6950000000029442e-06, 1.6660000000008612e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.6809999999999048e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.919" endtime="20201115 22:02:46.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.914" endtime="20201115 22:02:46.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.923" endtime="20201115 22:02:46.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.927" endtime="20201115 22:02:46.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.925" endtime="20201115 22:02:46.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.922" endtime="20201115 22:02:46.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.558" endtime="20201115 22:02:46.947"></status>
</kw>
<msg timestamp="20201115 22:02:46.948" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.957" endtime="20201115 22:02:46.971"></status>
</kw>
<msg timestamp="20201115 22:02:46.971" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.955" endtime="20201115 22:02:46.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.972" endtime="20201115 22:02:46.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.975" endtime="20201115 22:02:46.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.952" endtime="20201115 22:02:46.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.950" endtime="20201115 22:02:46.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.984" endtime="20201115 22:02:47.271"></status>
</kw>
<msg timestamp="20201115 22:02:47.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.982" endtime="20201115 22:02:47.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.275" endtime="20201115 22:02:47.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.284" endtime="20201115 22:02:47.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.980" endtime="20201115 22:02:47.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.978" endtime="20201115 22:02:47.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.290" level="INFO">${RESULT} = [{'time': 0.020207625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.020290972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:47.287" endtime="20201115 22:02:47.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.304" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:47.291" endtime="20201115 22:02:47.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.308" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:47.307" endtime="20201115 22:02:47.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.311" level="INFO">VALUE: [1.6670000000003349e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.6250000000016251e-06, 1.7630000000018464e-06, 1.7359999999987108e-06, 1.6950000000029442e-06, 1.6809999999999048e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.7360000000021802e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 1.6669999999968654e-06, 1.6810000000033742e-06, 1.7089999999990446e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.76400000000132e-06, 1.6660000000008612e-06, 1.6809999999999048e-06, 1.7080000000030404e-06, 1.6809999999999048e-06, 1.6389999999977256e-06, 1.6799999999969617e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.6660000000008612e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.653000000000765e-06, 1.6809999999999048e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.309" endtime="20201115 22:02:47.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.305" endtime="20201115 22:02:47.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.314" endtime="20201115 22:02:47.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.317" endtime="20201115 22:02:47.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.316" endtime="20201115 22:02:47.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.312" endtime="20201115 22:02:47.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.948" endtime="20201115 22:02:47.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.389" endtime="20201115 22:02:47.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.388" endtime="20201115 22:02:47.338"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.340" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.349" endtime="20201115 22:02:47.363"></status>
</kw>
<msg timestamp="20201115 22:02:47.364" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.347" endtime="20201115 22:02:47.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.366" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.365" endtime="20201115 22:02:47.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.367" endtime="20201115 22:02:47.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.345" endtime="20201115 22:02:47.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.343" endtime="20201115 22:02:47.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.377" endtime="20201115 22:02:47.663"></status>
</kw>
<msg timestamp="20201115 22:02:47.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.375" endtime="20201115 22:02:47.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.667" endtime="20201115 22:02:47.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.675" endtime="20201115 22:02:47.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.373" endtime="20201115 22:02:47.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.371" endtime="20201115 22:02:47.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.682" level="INFO">${RESULT} = [{'time': 0.022401389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.022489569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:47.678" endtime="20201115 22:02:47.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.695" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:47.683" endtime="20201115 22:02:47.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.700" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:47.699" endtime="20201115 22:02:47.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.702" level="INFO">VALUE: [1.832999999999696e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.848000000002209e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8199999999995997e-06, 1.7920000000004599e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.819000000000126e-06, 1.8050000000005562e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8330000000031654e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.7779999999974205e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.8479999999987395e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.77800000000089e-06, 1.8339999999991696e-06, 1.819000000000126e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.701" endtime="20201115 22:02:47.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.696" endtime="20201115 22:02:47.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.705" endtime="20201115 22:02:47.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.709" endtime="20201115 22:02:47.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.707" endtime="20201115 22:02:47.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.704" endtime="20201115 22:02:47.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.341" endtime="20201115 22:02:47.729"></status>
</kw>
<msg timestamp="20201115 22:02:47.730" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.738" endtime="20201115 22:02:47.752"></status>
</kw>
<msg timestamp="20201115 22:02:47.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.737" endtime="20201115 22:02:47.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.760" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.758" endtime="20201115 22:02:47.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.761" endtime="20201115 22:02:47.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.734" endtime="20201115 22:02:47.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.732" endtime="20201115 22:02:47.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.770" endtime="20201115 22:02:48.056"></status>
</kw>
<msg timestamp="20201115 22:02:48.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01999825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020000097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:47.768" endtime="20201115 22:02:48.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01999825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020000097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:48.061" endtime="20201115 22:02:48.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.069" endtime="20201115 22:02:48.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.766" endtime="20201115 22:02:48.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.764" endtime="20201115 22:02:48.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.076" level="INFO">${RESULT} = [{'time': 0.020000097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.020089514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:48.072" endtime="20201115 22:02:48.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.089" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:48.077" endtime="20201115 22:02:48.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.093" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.092" endtime="20201115 22:02:48.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.096" level="INFO">VALUE: [1.8470000000027353e-06, 1.8199999999995997e-06, 1.819000000000126e-06, 1.8470000000027353e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.834000000002639e-06, 1.846999999999266e-06, 1.77800000000089e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.8479999999987395e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8199999999995997e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.8199999999995997e-06, 1.8479999999987395e-06, 1.8339999999991696e-06, 1.7920000000004599e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8889999999979756e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.8479999999987395e-06, 1.8479999999987395e-06, 1.903000000001015e-06, 1.832999999999696e-06, 1.8199999999995997e-06, 1.819000000000126e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.834000000002639e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.094" endtime="20201115 22:02:48.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.090" endtime="20201115 22:02:48.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.099" endtime="20201115 22:02:48.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.102" endtime="20201115 22:02:48.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.101" endtime="20201115 22:02:48.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.097" endtime="20201115 22:02:48.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.730" endtime="20201115 22:02:48.123"></status>
</kw>
<msg timestamp="20201115 22:02:48.123" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.132" endtime="20201115 22:02:48.148"></status>
</kw>
<msg timestamp="20201115 22:02:48.148" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.131" endtime="20201115 22:02:48.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.151" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.149" endtime="20201115 22:02:48.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.152" endtime="20201115 22:02:48.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.128" endtime="20201115 22:02:48.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.126" endtime="20201115 22:02:48.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.161" endtime="20201115 22:02:48.447"></status>
</kw>
<msg timestamp="20201115 22:02:48.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020612389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.159" endtime="20201115 22:02:48.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020612389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.451" endtime="20201115 22:02:48.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.460" endtime="20201115 22:02:48.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.157" endtime="20201115 22:02:48.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.155" endtime="20201115 22:02:48.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.466" level="INFO">${RESULT} = [{'time': 0.020612389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.02070175, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:48.463" endtime="20201115 22:02:48.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.480" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:48.467" endtime="20201115 22:02:48.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.484" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.483" endtime="20201115 22:02:48.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.487" level="INFO">VALUE: [1.8609999999988358e-06, 1.8470000000027353e-06, 1.819000000000126e-06, 1.8339999999991696e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.7779999999974205e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.8339999999991696e-06, 1.9029999999975455e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.7769999999979469e-06, 1.8609999999988358e-06, 1.7779999999974205e-06, 1.9020000000015413e-06, 1.8339999999991696e-06, 1.8330000000031654e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.8889999999979756e-06, 1.846999999999266e-06, 1.848000000002209e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.8200000000030692e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.485" endtime="20201115 22:02:48.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.481" endtime="20201115 22:02:48.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.490" endtime="20201115 22:02:48.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.493" endtime="20201115 22:02:48.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.492" endtime="20201115 22:02:48.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.488" endtime="20201115 22:02:48.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.124" endtime="20201115 22:02:48.514"></status>
</kw>
<msg timestamp="20201115 22:02:48.514" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.523" endtime="20201115 22:02:48.538"></status>
</kw>
<msg timestamp="20201115 22:02:48.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.522" endtime="20201115 22:02:48.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.541" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.539" endtime="20201115 22:02:48.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.542" endtime="20201115 22:02:48.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.519" endtime="20201115 22:02:48.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.517" endtime="20201115 22:02:48.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.551" endtime="20201115 22:02:48.838"></status>
</kw>
<msg timestamp="20201115 22:02:48.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.550" endtime="20201115 22:02:48.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.842" endtime="20201115 22:02:48.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.850" endtime="20201115 22:02:48.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.547" endtime="20201115 22:02:48.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.545" endtime="20201115 22:02:48.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.857" level="INFO">${RESULT} = [{'time': 0.020012972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.020101264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:48.853" endtime="20201115 22:02:48.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.870" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:48.858" endtime="20201115 22:02:48.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.875" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.874" endtime="20201115 22:02:48.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.877" level="INFO">VALUE: [1.832999999999696e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.7630000000018464e-06, 1.8610000000023053e-06, 1.8199999999995997e-06, 1.8339999999991696e-06, 1.8479999999987395e-06, 1.846999999999266e-06, 1.8050000000005562e-06, 1.862000000001779e-06, 1.819000000000126e-06, 1.8339999999991696e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.76400000000132e-06, 1.8339999999991696e-06, 1.8619999999983095e-06, 1.8339999999991696e-06, 1.819000000000126e-06, 1.8479999999987395e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.848000000002209e-06, 1.832999999999696e-06, 1.834000000002639e-06, 1.8470000000027353e-06, 1.7769999999979469e-06, 1.8339999999991696e-06, 1.832999999999696e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.876" endtime="20201115 22:02:48.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.871" endtime="20201115 22:02:48.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.881" endtime="20201115 22:02:48.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.884" endtime="20201115 22:02:48.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.883" endtime="20201115 22:02:48.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.879" endtime="20201115 22:02:48.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.515" endtime="20201115 22:02:48.905"></status>
</kw>
<msg timestamp="20201115 22:02:48.905" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.914" endtime="20201115 22:02:48.930"></status>
</kw>
<msg timestamp="20201115 22:02:48.930" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.912" endtime="20201115 22:02:48.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.931" endtime="20201115 22:02:48.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.934" endtime="20201115 22:02:48.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.910" endtime="20201115 22:02:48.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.908" endtime="20201115 22:02:48.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.943" endtime="20201115 22:02:49.229"></status>
</kw>
<msg timestamp="20201115 22:02:49.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020623208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.941" endtime="20201115 22:02:49.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020623208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.233" endtime="20201115 22:02:49.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.241" endtime="20201115 22:02:49.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.938" endtime="20201115 22:02:49.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.937" endtime="20201115 22:02:49.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.248" level="INFO">${RESULT} = [{'time': 0.020623208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.020711833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:49.245" endtime="20201115 22:02:49.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.261" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:49.249" endtime="20201115 22:02:49.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.266" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:49.265" endtime="20201115 22:02:49.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.268" level="INFO">VALUE: [1.819000000000126e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.76400000000132e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.834000000002639e-06, 1.8200000000030692e-06, 1.846999999999266e-06, 1.848000000002209e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.832999999999696e-06, 1.832999999999696e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.834000000002639e-06, 1.8339999999991696e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.267" endtime="20201115 22:02:49.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.262" endtime="20201115 22:02:49.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.272" endtime="20201115 22:02:49.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.275" endtime="20201115 22:02:49.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.274" endtime="20201115 22:02:49.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.270" endtime="20201115 22:02:49.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.905" endtime="20201115 22:02:49.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.339" endtime="20201115 22:02:49.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.338" endtime="20201115 22:02:49.296"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.299" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.307" endtime="20201115 22:02:49.322"></status>
</kw>
<msg timestamp="20201115 22:02:49.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.306" endtime="20201115 22:02:49.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.325" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.324" endtime="20201115 22:02:49.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.326" endtime="20201115 22:02:49.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.303" endtime="20201115 22:02:49.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.301" endtime="20201115 22:02:49.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.335" endtime="20201115 22:02:49.622"></status>
</kw>
<msg timestamp="20201115 22:02:49.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.334" endtime="20201115 22:02:49.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.626" endtime="20201115 22:02:49.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.634" endtime="20201115 22:02:49.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.331" endtime="20201115 22:02:49.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.329" endtime="20201115 22:02:49.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.641" level="INFO">${RESULT} = [{'time': 0.022457819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.022551139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9...</msg>
<status status="PASS" starttime="20201115 22:02:49.638" endtime="20201115 22:02:49.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.654" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:49.642" endtime="20201115 22:02:49.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.659" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:49.658" endtime="20201115 22:02:49.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.662" level="INFO">VALUE: [2.000000000002e-06, 1.9860000000024303e-06, 2.01400000000157e-06, 1.9869999999984345e-06, 1.9860000000024303e-06, 2.02800000000114e-06, 1.9720000000028604e-06, 2.01400000000157e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.9589999999992946e-06, 2.01400000000157e-06, 2.02800000000114e-06, 1.971999999999391e-06, 1.985999999998961e-06, 1.957999999999821e-06, 1.9860000000024303e-06, 1.9869999999984345e-06, 1.9449999999997247e-06, 2.055000000000806e-06, 2.02800000000114e-06, 1.985999999998961e-06, 1.971999999999391e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.930000000000681e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 2.02800000000114e-06, 2.01400000000157e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9729999999988646e-06, 1.9999999999985307e-06, 1.9449999999997247e-06, 2.04200000000071e-06, 1.9860000000024303e-06, 1.971999999999391e-06, 1.971999999999391e-06, 1.985999999998961e-06, 1.985999999998961e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.660" endtime="20201115 22:02:49.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.655" endtime="20201115 22:02:49.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.665" endtime="20201115 22:02:49.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.669" endtime="20201115 22:02:49.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.667" endtime="20201115 22:02:49.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.664" endtime="20201115 22:02:49.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.299" endtime="20201115 22:02:49.689"></status>
</kw>
<msg timestamp="20201115 22:02:49.689" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.698" endtime="20201115 22:02:49.712"></status>
</kw>
<msg timestamp="20201115 22:02:49.713" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.697" endtime="20201115 22:02:49.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.715" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.714" endtime="20201115 22:02:49.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.716" endtime="20201115 22:02:49.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.694" endtime="20201115 22:02:49.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.692" endtime="20201115 22:02:49.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.725" endtime="20201115 22:02:50.012"></status>
</kw>
<msg timestamp="20201115 22:02:50.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019968514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019970514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.724" endtime="20201115 22:02:50.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019968514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019970514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.016" endtime="20201115 22:02:50.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.024" endtime="20201115 22:02:50.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.721" endtime="20201115 22:02:50.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.720" endtime="20201115 22:02:50.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.031" level="INFO">${RESULT} = [{'time': 0.019970514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.020064528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0...</msg>
<status status="PASS" starttime="20201115 22:02:50.027" endtime="20201115 22:02:50.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.044" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:50.032" endtime="20201115 22:02:50.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.049" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.048" endtime="20201115 22:02:50.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.051" level="INFO">VALUE: [2.000000000002e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.987000000001904e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 2.0139999999981006e-06, 1.9860000000024303e-06, 1.9860000000024303e-06, 1.9729999999988646e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9860000000024303e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 2.000000000002e-06, 1.9860000000024303e-06, 1.9860000000024303e-06, 2.01400000000157e-06, 1.9860000000024303e-06, 1.971999999999391e-06, 2.000000000002e-06, 2.026999999998197e-06, 2.0549999999973367e-06, 1.9860000000024303e-06, 1.971999999999391e-06, 1.957999999999821e-06, 1.9860000000024303e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 2.02800000000114e-06, 1.9860000000024303e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.971999999999391e-06, 2.000000000002e-06, 2.000000000002e-06, 2.040999999997767e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.0410000000012363e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 2.000000000002e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.050" endtime="20201115 22:02:50.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.045" endtime="20201115 22:02:50.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.054" endtime="20201115 22:02:50.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.058" endtime="20201115 22:02:50.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.056" endtime="20201115 22:02:50.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.053" endtime="20201115 22:02:50.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.690" endtime="20201115 22:02:50.078"></status>
</kw>
<msg timestamp="20201115 22:02:50.079" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.087" endtime="20201115 22:02:50.103"></status>
</kw>
<msg timestamp="20201115 22:02:50.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.086" endtime="20201115 22:02:50.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.104" endtime="20201115 22:02:50.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.107" endtime="20201115 22:02:50.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.083" endtime="20201115 22:02:50.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.081" endtime="20201115 22:02:50.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.116" endtime="20201115 22:02:50.403"></status>
</kw>
<msg timestamp="20201115 22:02:50.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020036875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.114" endtime="20201115 22:02:50.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020036875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.407" endtime="20201115 22:02:50.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.416" endtime="20201115 22:02:50.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.112" endtime="20201115 22:02:50.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.110" endtime="20201115 22:02:50.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.423" level="INFO">${RESULT} = [{'time': 0.020036875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.020129708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:50.419" endtime="20201115 22:02:50.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.436" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:50.424" endtime="20201115 22:02:50.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.441" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.440" endtime="20201115 22:02:50.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.443" level="INFO">VALUE: [1.971999999999391e-06, 1.9999999999985307e-06, 1.971999999999391e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9449999999997247e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.944000000000251e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 2.0410000000012363e-06, 1.9589999999992946e-06, 1.9999999999985307e-06, 2.02800000000114e-06, 1.985999999998961e-06, 2.02800000000114e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.971999999999391e-06, 1.985999999998961e-06, 2.000000000002e-06, 2.01400000000157e-06, 1.9720000000028604e-06, 2.000000000002e-06, 1.971999999999391e-06, 1.9860000000024303e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 1.9860000000024303e-06, 1.9729999999988646e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.000000000002e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.973000000002334e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 1.9860000000024303e-06, 2.01400000000157e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.442" endtime="20201115 22:02:50.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.437" endtime="20201115 22:02:50.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.446" endtime="20201115 22:02:50.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.450" endtime="20201115 22:02:50.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.448" endtime="20201115 22:02:50.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.445" endtime="20201115 22:02:50.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.079" endtime="20201115 22:02:50.470"></status>
</kw>
<msg timestamp="20201115 22:02:50.471" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.479" endtime="20201115 22:02:50.494"></status>
</kw>
<msg timestamp="20201115 22:02:50.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.478" endtime="20201115 22:02:50.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.497" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.496" endtime="20201115 22:02:50.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.498" endtime="20201115 22:02:50.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.475" endtime="20201115 22:02:50.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.473" endtime="20201115 22:02:50.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.507" endtime="20201115 22:02:50.793"></status>
</kw>
<msg timestamp="20201115 22:02:50.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020064, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020066, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201115 22:02:50.506" endtime="20201115 22:02:50.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020064, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020066, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201115 22:02:50.797" endtime="20201115 22:02:50.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.806" endtime="20201115 22:02:50.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.503" endtime="20201115 22:02:50.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.501" endtime="20201115 22:02:50.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.813" level="INFO">${RESULT} = [{'time': 0.020066, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.020160389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860...</msg>
<status status="PASS" starttime="20201115 22:02:50.809" endtime="20201115 22:02:50.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.826" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:50.814" endtime="20201115 22:02:50.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.830" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.829" endtime="20201115 22:02:50.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.833" level="INFO">VALUE: [2.000000000002e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 2.000000000002e-06, 2.040999999997767e-06, 2.01400000000157e-06, 1.9589999999992946e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.04200000000071e-06, 1.9860000000024303e-06, 2.0139999999981006e-06, 2.01400000000157e-06, 2.0139999999981006e-06, 1.985999999998961e-06, 2.04200000000071e-06, 2.01400000000157e-06, 1.959000000002764e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.971999999999391e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 2.0139999999981006e-06, 1.9860000000024303e-06, 2.000000000002e-06, 1.973000000002334e-06, 2.0279999999976706e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 1.971999999999391e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.987000000001904e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 2.01400000000157e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 1.9869999999984345e-06, 1.9999999999985307e-06, 1.9449999999997247e-06, 1.971999999999391e-06, 1.971999999999391e-06, 2.01400000000157e-06, 2.01400000000157e-06, 1.985999999998961e-06, 1.985999999998961e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.831" endtime="20201115 22:02:50.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.827" endtime="20201115 22:02:50.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.836" endtime="20201115 22:02:50.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.839" endtime="20201115 22:02:50.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.838" endtime="20201115 22:02:50.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.834" endtime="20201115 22:02:50.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.471" endtime="20201115 22:02:50.860"></status>
</kw>
<msg timestamp="20201115 22:02:50.860" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.869" endtime="20201115 22:02:50.885"></status>
</kw>
<msg timestamp="20201115 22:02:50.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.867" endtime="20201115 22:02:50.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.887" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.886" endtime="20201115 22:02:50.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.888" endtime="20201115 22:02:50.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.865" endtime="20201115 22:02:50.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.863" endtime="20201115 22:02:50.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.898" endtime="20201115 22:02:51.185"></status>
</kw>
<msg timestamp="20201115 22:02:51.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.896" endtime="20201115 22:02:51.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.189" endtime="20201115 22:02:51.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.197" endtime="20201115 22:02:51.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.894" endtime="20201115 22:02:51.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.892" endtime="20201115 22:02:51.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.204" level="INFO">${RESULT} = [{'time': 0.020226333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.020321611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:51.201" endtime="20201115 22:02:51.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.218" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:51.205" endtime="20201115 22:02:51.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.222" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:51.221" endtime="20201115 22:02:51.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.225" level="INFO">VALUE: [1.971999999999391e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 2.000000000002e-06, 1.9860000000024303e-06, 2.02800000000114e-06, 2.0270000000016664e-06, 1.971999999999391e-06, 2.01400000000157e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.9869999999984345e-06, 2.01400000000157e-06, 2.0139999999981006e-06, 1.985999999998961e-06, 1.971999999999391e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.971999999999391e-06, 1.931000000000155e-06, 1.917000000000585e-06, 1.9860000000024303e-06, 1.9589999999992946e-06, 2.000000000002e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 2.0270000000016664e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.0139999999981006e-06, 1.971999999999391e-06, 1.9860000000024303e-06, 1.9729999999988646e-06, 1.985999999998961e-06, 1.9589999999992946e-06, 2.0279999999976706e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.957999999999821e-06, 1.9449999999997247e-06, 1.9860000000024303e-06, 2.000000000002e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.223" endtime="20201115 22:02:51.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.219" endtime="20201115 22:02:51.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.228" endtime="20201115 22:02:51.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.231" endtime="20201115 22:02:51.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.230" endtime="20201115 22:02:51.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.226" endtime="20201115 22:02:51.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.861" endtime="20201115 22:02:51.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.298" endtime="20201115 22:02:51.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.297" endtime="20201115 22:02:51.252"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.254" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.263" endtime="20201115 22:02:51.279"></status>
</kw>
<msg timestamp="20201115 22:02:51.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.262" endtime="20201115 22:02:51.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.282" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.280" endtime="20201115 22:02:51.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.283" endtime="20201115 22:02:51.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.259" endtime="20201115 22:02:51.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.257" endtime="20201115 22:02:51.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.292" endtime="20201115 22:02:51.578"></status>
</kw>
<msg timestamp="20201115 22:02:51.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022625833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.290" endtime="20201115 22:02:51.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022625833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.582" endtime="20201115 22:02:51.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.590" endtime="20201115 22:02:51.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.288" endtime="20201115 22:02:51.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.286" endtime="20201115 22:02:51.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.597" level="INFO">${RESULT} = [{'time': 0.022627958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1249999999986557e-06, 'source_diff': 2.1249999999986557e-06}, {'time': 0.022730167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:51.594" endtime="20201115 22:02:51.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.610" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:51.598" endtime="20201115 22:02:51.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.615" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:51.614" endtime="20201115 22:02:51.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.617" level="INFO">VALUE: [2.1249999999986557e-06, 2.181000000000405e-06, 2.1389999999982257e-06, 2.139000000001695e-06, 2.153000000001265e-06, 2.139000000001695e-06, 2.153000000001265e-06, 2.139000000001695e-06, 2.151999999998322e-06, 2.1249999999986557e-06, 2.1119999999985595e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.153000000001265e-06, 2.153000000001265e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.1249999999986557e-06, 2.1529999999977956e-06, 2.139000000001695e-06, 2.0839999999994197e-06, 2.1389999999982257e-06, 2.153000000001265e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.139000000001695e-06, 2.1389999999982257e-06, 2.167000000000835e-06, 2.096999999999516e-06, 2.1249999999986557e-06, 2.1520000000017914e-06, 2.153000000001265e-06, 2.167000000000835e-06, 2.1110000000025553e-06, 2.1389999999982257e-06, 2.05600000000028e-06, 2.137999999998752e-06, 2.1520000000017914e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.1249999999986557e-06, 2.153000000001265e-06, 2.1389999999982257e-06, 2.137999999998752e-06, 2.139000000001695e-06, 2.137999999998752e-06, 2.1249999999986557e-06, 2.125000000002125e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.616" endtime="20201115 22:02:51.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.611" endtime="20201115 22:02:51.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.621" endtime="20201115 22:02:51.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.624" endtime="20201115 22:02:51.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.622" endtime="20201115 22:02:51.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.619" endtime="20201115 22:02:51.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.255" endtime="20201115 22:02:51.645"></status>
</kw>
<msg timestamp="20201115 22:02:51.645" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.654" endtime="20201115 22:02:51.669"></status>
</kw>
<msg timestamp="20201115 22:02:51.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.652" endtime="20201115 22:02:51.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.671" endtime="20201115 22:02:51.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.673" endtime="20201115 22:02:51.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.650" endtime="20201115 22:02:51.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.647" endtime="20201115 22:02:51.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.682" endtime="20201115 22:02:51.969"></status>
</kw>
<msg timestamp="20201115 22:02:51.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020075403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.681" endtime="20201115 22:02:51.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020075403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.973" endtime="20201115 22:02:51.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.981" endtime="20201115 22:02:51.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.678" endtime="20201115 22:02:51.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.677" endtime="20201115 22:02:51.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.988" level="INFO">${RESULT} = [{'time': 0.020077528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.020178569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:51.985" endtime="20201115 22:02:51.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.001" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:51.989" endtime="20201115 22:02:52.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.006" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.005" endtime="20201115 22:02:52.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.008" level="INFO">VALUE: [2.125000000002125e-06, 2.137999999998752e-06, 2.1389999999982257e-06, 2.125000000002125e-06, 2.1529999999977956e-06, 2.1389999999982257e-06, 2.125000000002125e-06, 2.153000000001265e-06, 2.1389999999982257e-06, 2.139000000001695e-06, 2.1249999999986557e-06, 2.1389999999982257e-06, 2.1249999999986557e-06, 2.1389999999982257e-06, 2.1249999999986557e-06, 2.153000000001265e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.1389999999982257e-06, 2.153000000001265e-06, 2.1249999999986557e-06, 2.137999999998752e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.125000000002125e-06, 2.139000000001695e-06, 2.125000000002125e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.1520000000017914e-06, 2.125000000002125e-06, 2.137999999998752e-06, 2.1389999999982257e-06, 2.1380000000022215e-06, 2.139000000001695e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.096999999999516e-06, 2.153000000001265e-06, 2.1249999999986557e-06, 2.096999999999516e-06, 2.139000000001695e-06, 2.1520000000017914e-06, 2.165999999997892e-06, 2.110999999999086e-06, 2.1389999999982257e-06, 2.1110000000025553e-06, 2.1389999999982257e-06, 2.125000000002125e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.007" endtime="20201115 22:02:52.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.002" endtime="20201115 22:02:52.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.012" endtime="20201115 22:02:52.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.015" endtime="20201115 22:02:52.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.014" endtime="20201115 22:02:52.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.010" endtime="20201115 22:02:52.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.645" endtime="20201115 22:02:52.036"></status>
</kw>
<msg timestamp="20201115 22:02:52.036" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.045" endtime="20201115 22:02:52.060"></status>
</kw>
<msg timestamp="20201115 22:02:52.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.043" endtime="20201115 22:02:52.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.062" endtime="20201115 22:02:52.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.065" endtime="20201115 22:02:52.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.041" endtime="20201115 22:02:52.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.038" endtime="20201115 22:02:52.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.074" endtime="20201115 22:02:52.361"></status>
</kw>
<msg timestamp="20201115 22:02:52.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020520944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.072" endtime="20201115 22:02:52.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020520944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.365" endtime="20201115 22:02:52.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.373" endtime="20201115 22:02:52.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.070" endtime="20201115 22:02:52.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.068" endtime="20201115 22:02:52.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.380" level="INFO">${RESULT} = [{'time': 0.020523069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.020621542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.376" endtime="20201115 22:02:52.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.393" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:52.381" endtime="20201115 22:02:52.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.398" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.397" endtime="20201115 22:02:52.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.400" level="INFO">VALUE: [2.125000000002125e-06, 2.1249999999986557e-06, 2.1389999999982257e-06, 2.1249999999986557e-06, 2.125000000002125e-06, 2.125000000002125e-06, 2.139000000001695e-06, 2.1389999999982257e-06, 2.1249999999986557e-06, 2.137999999998752e-06, 2.139000000001695e-06, 2.1249999999986557e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.139000000001695e-06, 2.096999999999516e-06, 2.139000000001695e-06, 2.1249999999986557e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.1529999999977956e-06, 2.110999999999086e-06, 2.181000000000405e-06, 2.167000000000835e-06, 2.181000000000405e-06, 2.139000000001695e-06, 2.137999999998752e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.1520000000017914e-06, 2.125000000002125e-06, 2.139000000001695e-06, 2.139000000001695e-06, 2.153000000001265e-06, 2.1249999999986557e-06, 2.125000000002125e-06, 2.1529999999977956e-06, 2.1529999999977956e-06, 2.180000000000931e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.1389999999982257e-06, 2.125000000002125e-06, 2.1529999999977956e-06, 2.1520000000017914e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.399" endtime="20201115 22:02:52.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.394" endtime="20201115 22:02:52.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.403" endtime="20201115 22:02:52.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.407" endtime="20201115 22:02:52.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.405" endtime="20201115 22:02:52.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.402" endtime="20201115 22:02:52.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.036" endtime="20201115 22:02:52.427"></status>
</kw>
<msg timestamp="20201115 22:02:52.428" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.437" endtime="20201115 22:02:52.452"></status>
</kw>
<msg timestamp="20201115 22:02:52.452" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.435" endtime="20201115 22:02:52.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.453" endtime="20201115 22:02:52.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.456" endtime="20201115 22:02:52.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.433" endtime="20201115 22:02:52.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.430" endtime="20201115 22:02:52.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.465" endtime="20201115 22:02:52.751"></status>
</kw>
<msg timestamp="20201115 22:02:52.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020589431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020591569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.463" endtime="20201115 22:02:52.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020589431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020591569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.755" endtime="20201115 22:02:52.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.764" endtime="20201115 22:02:52.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.461" endtime="20201115 22:02:52.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.459" endtime="20201115 22:02:52.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.771" level="INFO">${RESULT} = [{'time': 0.020591569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1380000000022215e-06, 'source_diff': 2.1380000000022215e-06}, {'time': 0.020690917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:52.767" endtime="20201115 22:02:52.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.784" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:52.772" endtime="20201115 22:02:52.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.789" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.788" endtime="20201115 22:02:52.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.791" level="INFO">VALUE: [2.1380000000022215e-06, 2.1249999999986557e-06, 2.110999999999086e-06, 2.153000000001265e-06, 2.153000000001265e-06, 2.096999999999516e-06, 2.153000000001265e-06, 2.151999999998322e-06, 2.1389999999982257e-06, 2.1520000000017914e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.125000000002125e-06, 2.1389999999982257e-06, 2.1520000000017914e-06, 2.1389999999982257e-06, 2.069000000000376e-06, 2.1389999999982257e-06, 2.1249999999986557e-06, 2.1529999999977956e-06, 2.139000000001695e-06, 2.139000000001695e-06, 2.1249999999986557e-06, 2.0699999999998497e-06, 2.125000000002125e-06, 2.139000000001695e-06, 2.139000000001695e-06, 2.1110000000025553e-06, 2.139000000001695e-06, 2.181000000000405e-06, 2.1249999999986557e-06, 2.0699999999998497e-06, 2.1660000000013613e-06, 2.1389999999982257e-06, 2.139000000001695e-06, 2.1529999999977956e-06, 2.125000000002125e-06, 2.167000000000835e-06, 2.125000000002125e-06, 2.05600000000028e-06, 2.1529999999977956e-06, 2.151999999998322e-06, 2.221999999999641e-06, 2.139000000001695e-06, 2.1389999999982257e-06, 2.125000000002125e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 2.1389999999982257e-06, 2.1389999999982257e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.790" endtime="20201115 22:02:52.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.785" endtime="20201115 22:02:52.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.794" endtime="20201115 22:02:52.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.804" endtime="20201115 22:02:52.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.803" endtime="20201115 22:02:52.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.792" endtime="20201115 22:02:52.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.428" endtime="20201115 22:02:52.825"></status>
</kw>
<msg timestamp="20201115 22:02:52.825" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.834" endtime="20201115 22:02:52.850"></status>
</kw>
<msg timestamp="20201115 22:02:52.850" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.832" endtime="20201115 22:02:52.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.851" endtime="20201115 22:02:52.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.854" endtime="20201115 22:02:52.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.830" endtime="20201115 22:02:52.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.828" endtime="20201115 22:02:52.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.863" endtime="20201115 22:02:53.150"></status>
</kw>
<msg timestamp="20201115 22:02:53.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020007333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.861" endtime="20201115 22:02:53.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020007333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.154" endtime="20201115 22:02:53.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.162" endtime="20201115 22:02:53.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.858" endtime="20201115 22:02:53.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.857" endtime="20201115 22:02:53.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.169" level="INFO">${RESULT} = [{'time': 0.020009444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1110000000025553e-06, 'source_diff': 2.1110000000025553e-06}, {'time': 0.020110472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:53.165" endtime="20201115 22:02:53.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.182" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:53.170" endtime="20201115 22:02:53.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.187" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.186" endtime="20201115 22:02:53.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.189" level="INFO">VALUE: [2.1110000000025553e-06, 2.125000000002125e-06, 2.165999999997892e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.082999999999946e-06, 2.1389999999982257e-06, 2.1529999999977956e-06, 2.040999999997767e-06, 2.096999999999516e-06, 2.153000000001265e-06, 2.137999999998752e-06, 2.1660000000013613e-06, 2.1380000000022215e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.125000000002125e-06, 2.1669999999973655e-06, 2.151999999998322e-06, 2.139000000001695e-06, 2.137999999998752e-06, 2.0689999999969066e-06, 2.1380000000022215e-06, 2.139000000001695e-06, 2.1380000000022215e-06, 2.139000000001695e-06, 2.1529999999977956e-06, 2.1389999999982257e-06, 2.153000000001265e-06, 2.139000000001695e-06, 2.139000000001695e-06, 2.1799999999974617e-06, 2.139000000001695e-06, 2.1249999999986557e-06, 2.096999999999516e-06, 2.110999999999086e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.1389999999982257e-06, 2.139000000001695e-06, 2.153000000001265e-06, 2.1660000000013613e-06, 2.1389999999982257e-06, 2.1389999999982257e-06, 2.1249999999986557e-06, 2.194000000000501e-06, 2.1520000000017914e-06, 2.1389999999982257e-06, 2.125000000002125e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.188" endtime="20201115 22:02:53.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.183" endtime="20201115 22:02:53.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.193" endtime="20201115 22:02:53.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.196" endtime="20201115 22:02:53.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.195" endtime="20201115 22:02:53.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.191" endtime="20201115 22:02:53.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.826" endtime="20201115 22:02:53.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.253" endtime="20201115 22:02:53.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.253" endtime="20201115 22:02:53.217"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.219" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.228" endtime="20201115 22:02:53.244"></status>
</kw>
<msg timestamp="20201115 22:02:53.244" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.227" endtime="20201115 22:02:53.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.247" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.245" endtime="20201115 22:02:53.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.248" endtime="20201115 22:02:53.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.224" endtime="20201115 22:02:53.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.222" endtime="20201115 22:02:53.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.257" endtime="20201115 22:02:53.543"></status>
</kw>
<msg timestamp="20201115 22:02:53.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.255" endtime="20201115 22:02:53.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.547" endtime="20201115 22:02:53.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.555" endtime="20201115 22:02:53.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.253" endtime="20201115 22:02:53.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.251" endtime="20201115 22:02:53.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.562" level="INFO">${RESULT} = [{'time': 0.022491403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.022597778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:53.558" endtime="20201115 22:02:53.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.575" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:53.563" endtime="20201115 22:02:53.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.579" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.578" endtime="20201115 22:02:53.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.582" level="INFO">VALUE: [2.27800000000139e-06, 2.2919999999974905e-06, 2.29200000000096e-06, 2.334000000003139e-06, 2.305000000001056e-06, 2.221999999999641e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.2919999999974905e-06, 2.2919999999974905e-06, 2.290999999998017e-06, 2.319000000000626e-06, 2.27800000000139e-06, 2.3189999999971567e-06, 2.2910000000014863e-06, 2.27800000000139e-06, 2.235999999999211e-06, 2.29200000000096e-06, 2.2779999999979206e-06, 2.29200000000096e-06, 2.2360000000026803e-06, 2.290999999998017e-06, 2.26400000000182e-06, 2.2919999999974905e-06, 2.2910000000014863e-06, 2.3049999999975868e-06, 2.2910000000014863e-06, 2.2639999999983507e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.2910000000014863e-06, 2.26400000000182e-06, 2.2639999999983507e-06, 2.30600000000053e-06, 2.26400000000182e-06, 2.2779999999979206e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.27800000000139e-06, 2.27800000000139e-06, 2.3059999999970604e-06, 2.319000000000626e-06, 2.30600000000053e-06, 2.290999999998017e-06, 2.2919999999974905e-06, 2.2919999999974905e-06, 2.2910000000014863e-06, 2.3339999999996697e-06, 2.305000000001056e-06, 2.2779999999979206e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.581" endtime="20201115 22:02:53.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.576" endtime="20201115 22:02:53.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.585" endtime="20201115 22:02:53.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.589" endtime="20201115 22:02:53.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.587" endtime="20201115 22:02:53.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.584" endtime="20201115 22:02:53.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.220" endtime="20201115 22:02:53.610"></status>
</kw>
<msg timestamp="20201115 22:02:53.610" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.619" endtime="20201115 22:02:53.634"></status>
</kw>
<msg timestamp="20201115 22:02:53.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.617" endtime="20201115 22:02:53.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.636" endtime="20201115 22:02:53.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.638" endtime="20201115 22:02:53.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.614" endtime="20201115 22:02:53.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.612" endtime="20201115 22:02:53.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.647" endtime="20201115 22:02:53.934"></status>
</kw>
<msg timestamp="20201115 22:02:53.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020331403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.646" endtime="20201115 22:02:53.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020331403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.938" endtime="20201115 22:02:53.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.946" endtime="20201115 22:02:53.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.643" endtime="20201115 22:02:53.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.641" endtime="20201115 22:02:53.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.953" level="INFO">${RESULT} = [{'time': 0.020331403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.020437056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:53.950" endtime="20201115 22:02:53.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.966" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:53.954" endtime="20201115 22:02:53.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.972" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.971" endtime="20201115 22:02:53.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.974" level="INFO">VALUE: [2.27800000000139e-06, 2.2779999999979206e-06, 2.27800000000139e-06, 2.27800000000139e-06, 2.3339999999996697e-06, 2.2779999999979206e-06, 2.27800000000139e-06, 2.2779999999979206e-06, 2.30600000000053e-06, 2.2770000000019164e-06, 2.2639999999983507e-06, 2.29200000000096e-06, 2.290999999998017e-06, 2.2639999999983507e-06, 2.2919999999974905e-06, 2.3619999999988095e-06, 2.2910000000014863e-06, 2.30600000000053e-06, 2.3200000000000998e-06, 2.2639999999983507e-06, 2.2910000000014863e-06, 2.262999999998877e-06, 2.26400000000182e-06, 2.276999999998447e-06, 2.26400000000182e-06, 2.2770000000019164e-06, 2.2910000000014863e-06, 2.27800000000139e-06, 2.2639999999983507e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.2499999999987808e-06, 2.27800000000139e-06, 2.2770000000019164e-06, 2.3049999999975868e-06, 2.2639999999983507e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.276999999998447e-06, 2.30600000000053e-06, 2.27800000000139e-06, 2.27800000000139e-06, 2.276999999998447e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.319000000000626e-06, 2.276999999998447e-06, 2.2919999999974905e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.973" endtime="20201115 22:02:53.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.968" endtime="20201115 22:02:53.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.977" endtime="20201115 22:02:53.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.980" endtime="20201115 22:02:54.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.979" endtime="20201115 22:02:54.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.975" endtime="20201115 22:02:54.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.610" endtime="20201115 22:02:54.001"></status>
</kw>
<msg timestamp="20201115 22:02:54.002" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.010" endtime="20201115 22:02:54.026"></status>
</kw>
<msg timestamp="20201115 22:02:54.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.009" endtime="20201115 22:02:54.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.027" endtime="20201115 22:02:54.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.030" endtime="20201115 22:02:54.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.006" endtime="20201115 22:02:54.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.004" endtime="20201115 22:02:54.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.038" endtime="20201115 22:02:54.325"></status>
</kw>
<msg timestamp="20201115 22:02:54.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.037" endtime="20201115 22:02:54.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.330" endtime="20201115 22:02:54.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.337" endtime="20201115 22:02:54.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.034" endtime="20201115 22:02:54.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.033" endtime="20201115 22:02:54.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.344" level="INFO">${RESULT} = [{'time': 0.020272972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.020379069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:54.341" endtime="20201115 22:02:54.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.358" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:54.346" endtime="20201115 22:02:54.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.363" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.362" endtime="20201115 22:02:54.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.365" level="INFO">VALUE: [2.27800000000139e-06, 2.262999999998877e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.2779999999979206e-06, 2.2770000000019164e-06, 2.2910000000014863e-06, 2.3059999999970604e-06, 2.290999999998017e-06, 2.30600000000053e-06, 2.27800000000139e-06, 2.3610000000028053e-06, 2.2499999999987808e-06, 2.346999999999766e-06, 2.290999999998017e-06, 2.2910000000014863e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.27800000000139e-06, 2.25000000000225e-06, 2.2910000000014863e-06, 2.2919999999974905e-06, 2.2779999999979206e-06, 2.305000000001056e-06, 2.305000000001056e-06, 2.29200000000096e-06, 2.25000000000225e-06, 2.30600000000053e-06, 2.3200000000000998e-06, 2.2919999999974905e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.2919999999974905e-06, 2.276999999998447e-06, 2.29200000000096e-06, 2.30600000000053e-06, 2.2919999999974905e-06, 2.27800000000139e-06, 2.2779999999979206e-06, 2.29200000000096e-06, 2.30600000000053e-06, 2.2779999999979206e-06, 2.27800000000139e-06, 2.3479999999992396e-06, 2.276999999998447e-06, 2.235999999999211e-06, 2.27800000000139e-06, 2.305000000001056e-06, 2.208000000000071e-06, 2.29200000000096e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.364" endtime="20201115 22:02:54.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.359" endtime="20201115 22:02:54.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.368" endtime="20201115 22:02:54.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.372" endtime="20201115 22:02:54.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.370" endtime="20201115 22:02:54.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.366" endtime="20201115 22:02:54.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.002" endtime="20201115 22:02:54.392"></status>
</kw>
<msg timestamp="20201115 22:02:54.392" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.401" endtime="20201115 22:02:54.417"></status>
</kw>
<msg timestamp="20201115 22:02:54.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.400" endtime="20201115 22:02:54.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.419" endtime="20201115 22:02:54.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.421" endtime="20201115 22:02:54.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.397" endtime="20201115 22:02:54.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.395" endtime="20201115 22:02:54.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.430" endtime="20201115 22:02:54.715"></status>
</kw>
<msg timestamp="20201115 22:02:54.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019973611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.429" endtime="20201115 22:02:54.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019973611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.719" endtime="20201115 22:02:54.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.728" endtime="20201115 22:02:54.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.426" endtime="20201115 22:02:54.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.424" endtime="20201115 22:02:54.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.734" level="INFO">${RESULT} = [{'time': 0.019973611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3189999999971567e-06, 'source_diff': 2.3189999999971567e-06}, {'time': 0.020080556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:54.731" endtime="20201115 22:02:54.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.748" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:54.735" endtime="20201115 22:02:54.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.752" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.751" endtime="20201115 22:02:54.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.755" level="INFO">VALUE: [2.3189999999971567e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.30600000000053e-06, 2.319000000000626e-06, 2.2910000000014863e-06, 2.3200000000000998e-06, 2.276999999998447e-06, 2.26400000000182e-06, 2.2639999999983507e-06, 2.2779999999979206e-06, 2.30600000000053e-06, 2.2910000000014863e-06, 2.27800000000139e-06, 2.3049999999975868e-06, 2.319000000000626e-06, 2.30600000000053e-06, 2.2910000000014863e-06, 2.2639999999983507e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.235999999999211e-06, 2.290999999998017e-06, 2.2910000000014863e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.290999999998017e-06, 2.2910000000014863e-06, 2.3200000000000998e-06, 2.2910000000014863e-06, 2.27800000000139e-06, 2.276999999998447e-06, 2.29200000000096e-06, 2.221999999999641e-06, 2.29200000000096e-06, 2.2770000000019164e-06, 2.27800000000139e-06, 2.2910000000014863e-06, 2.319000000000626e-06, 2.27800000000139e-06, 2.2770000000019164e-06, 2.305000000001056e-06, 2.221999999999641e-06, 2.3049999999975868e-06, 2.27800000000139e-06, 2.26400000000182e-06, 2.27800000000139e-06, 2.3200000000000998e-06, 2.2499999999987808e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.753" endtime="20201115 22:02:54.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.749" endtime="20201115 22:02:54.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.758" endtime="20201115 22:02:54.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.761" endtime="20201115 22:02:54.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.760" endtime="20201115 22:02:54.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.756" endtime="20201115 22:02:54.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.393" endtime="20201115 22:02:54.782"></status>
</kw>
<msg timestamp="20201115 22:02:54.782" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.791" endtime="20201115 22:02:54.806"></status>
</kw>
<msg timestamp="20201115 22:02:54.807" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.789" endtime="20201115 22:02:54.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.808" endtime="20201115 22:02:54.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.810" endtime="20201115 22:02:54.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.787" endtime="20201115 22:02:54.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.785" endtime="20201115 22:02:54.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.819" endtime="20201115 22:02:55.106"></status>
</kw>
<msg timestamp="20201115 22:02:55.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020269458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.818" endtime="20201115 22:02:55.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020269458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.110" endtime="20201115 22:02:55.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.118" endtime="20201115 22:02:55.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.815" endtime="20201115 22:02:55.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.813" endtime="20201115 22:02:55.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.125" level="INFO">${RESULT} = [{'time': 0.020269458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.020376667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:55.122" endtime="20201115 22:02:55.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.138" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:55.126" endtime="20201115 22:02:55.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.143" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.142" endtime="20201115 22:02:55.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.145" level="INFO">VALUE: [2.305000000001056e-06, 2.29200000000096e-06, 2.290999999998017e-06, 2.30600000000053e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.319000000000626e-06, 2.290999999998017e-06, 2.2360000000026803e-06, 2.30600000000053e-06, 2.209000000003014e-06, 2.3059999999970604e-06, 2.30600000000053e-06, 2.29200000000096e-06, 2.27800000000139e-06, 2.290999999998017e-06, 2.29200000000096e-06, 2.305000000001056e-06, 2.2919999999974905e-06, 2.29200000000096e-06, 2.26400000000182e-06, 2.29200000000096e-06, 2.2499999999987808e-06, 2.276999999998447e-06, 2.3049999999975868e-06, 2.290999999998017e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.3200000000000998e-06, 2.26400000000182e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.3059999999970604e-06, 2.3189999999971567e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.2770000000019164e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.3049999999975868e-06, 2.305000000001056e-06, 2.2910000000014863e-06, 2.30600000000053e-06, 2.30600000000053e-06, 2.29200000000096e-06, 2.3329999999967266e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.144" endtime="20201115 22:02:55.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.139" endtime="20201115 22:02:55.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.148" endtime="20201115 22:02:55.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.152" endtime="20201115 22:02:55.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.150" endtime="20201115 22:02:55.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.147" endtime="20201115 22:02:55.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.783" endtime="20201115 22:02:55.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.218" endtime="20201115 22:02:55.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.218" endtime="20201115 22:02:55.173"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.175" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.184" endtime="20201115 22:02:55.200"></status>
</kw>
<msg timestamp="20201115 22:02:55.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.182" endtime="20201115 22:02:55.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.203" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.202" endtime="20201115 22:02:55.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.204" endtime="20201115 22:02:55.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.180" endtime="20201115 22:02:55.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.178" endtime="20201115 22:02:55.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.213" endtime="20201115 22:02:55.501"></status>
</kw>
<msg timestamp="20201115 22:02:55.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.212" endtime="20201115 22:02:55.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.505" endtime="20201115 22:02:55.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.513" endtime="20201115 22:02:55.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.209" endtime="20201115 22:02:55.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.208" endtime="20201115 22:02:55.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.520" level="INFO">${RESULT} = [{'time': 0.022336347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.022453431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:55.516" endtime="20201115 22:02:55.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.533" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:55.521" endtime="20201115 22:02:55.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.538" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.537" endtime="20201115 22:02:55.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.540" level="INFO">VALUE: [2.444000000000751e-06, 2.431000000000655e-06, 2.417000000001085e-06, 2.431000000000655e-06, 2.4439999999972817e-06, 2.4300000000011812e-06, 2.417000000001085e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.431000000000655e-06, 2.4450000000002248e-06, 2.4300000000011812e-06, 2.431000000000655e-06, 2.458000000000321e-06, 2.4300000000011812e-06, 2.4300000000011812e-06, 2.485999999999461e-06, 2.417000000001085e-06, 2.4300000000011812e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.4439999999972817e-06, 2.471999999999891e-06, 2.417000000001085e-06, 2.4300000000011812e-06, 2.431000000000655e-06, 2.458000000000321e-06, 2.485999999999461e-06, 2.360999999999336e-06, 2.4300000000011812e-06, 2.4450000000002248e-06, 2.4309999999971854e-06, 2.458000000000321e-06, 2.431000000000655e-06, 2.4450000000002248e-06, 2.4299999999977118e-06, 2.4450000000002248e-06, 2.3880000000024715e-06, 2.458000000000321e-06, 2.4309999999971854e-06, 2.485999999999461e-06, 2.3749999999989058e-06, 2.431000000000655e-06, 2.4450000000002248e-06, 2.4439999999972817e-06, 2.4300000000011812e-06, 2.471999999999891e-06, 2.417000000001085e-06, 2.458000000000321e-06, 2.4160000000016113e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.539" endtime="20201115 22:02:55.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.534" endtime="20201115 22:02:55.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.543" endtime="20201115 22:02:55.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.547" endtime="20201115 22:02:55.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.545" endtime="20201115 22:02:55.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.542" endtime="20201115 22:02:55.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.176" endtime="20201115 22:02:55.567"></status>
</kw>
<msg timestamp="20201115 22:02:55.567" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.576" endtime="20201115 22:02:55.593"></status>
</kw>
<msg timestamp="20201115 22:02:55.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.575" endtime="20201115 22:02:55.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.594" endtime="20201115 22:02:55.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.597" endtime="20201115 22:02:55.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.572" endtime="20201115 22:02:55.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.570" endtime="20201115 22:02:55.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.606" endtime="20201115 22:02:55.893"></status>
</kw>
<msg timestamp="20201115 22:02:55.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.605" endtime="20201115 22:02:55.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.897" endtime="20201115 22:02:55.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.905" endtime="20201115 22:02:55.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.602" endtime="20201115 22:02:55.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.601" endtime="20201115 22:02:55.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.912" level="INFO">${RESULT} = [{'time': 0.020226611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4439999999972817e-06, 'source_diff': 2.4439999999972817e-06}, {'time': 0.020342569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:55.909" endtime="20201115 22:02:55.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.925" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:55.913" endtime="20201115 22:02:55.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.930" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.929" endtime="20201115 22:02:55.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.932" level="INFO">VALUE: [2.4439999999972817e-06, 2.4300000000011812e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.431000000000655e-06, 2.4999999999990308e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.360999999999336e-06, 2.444000000000751e-06, 2.431000000000655e-06, 2.431000000000655e-06, 2.4299999999977118e-06, 2.458000000000321e-06, 2.4300000000011812e-06, 2.431000000000655e-06, 2.444000000000751e-06, 2.444000000000751e-06, 2.3889999999984757e-06, 2.431000000000655e-06, 2.415999999998142e-06, 2.431000000000655e-06, 2.4300000000011812e-06, 2.4439999999972817e-06, 2.444000000000751e-06, 2.4300000000011812e-06, 2.4300000000011812e-06, 2.431000000000655e-06, 2.415999999998142e-06, 2.431000000000655e-06, 2.431000000000655e-06, 2.417000000001085e-06, 2.360999999999336e-06, 2.4300000000011812e-06, 2.431000000000655e-06, 2.417000000001085e-06, 2.4449999999967553e-06, 2.444000000000751e-06, 2.4309999999971854e-06, 2.4300000000011812e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.4450000000002248e-06, 2.431000000000655e-06, 2.431000000000655e-06, 2.4450000000002248e-06, 2.4439999999972817e-06, 2.3889999999984757e-06, 2.4450000000002248e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.931" endtime="20201115 22:02:55.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.926" endtime="20201115 22:02:55.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.935" endtime="20201115 22:02:55.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.939" endtime="20201115 22:02:55.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.937" endtime="20201115 22:02:55.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.934" endtime="20201115 22:02:55.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.568" endtime="20201115 22:02:55.959"></status>
</kw>
<msg timestamp="20201115 22:02:55.960" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.969" endtime="20201115 22:02:55.984"></status>
</kw>
<msg timestamp="20201115 22:02:55.985" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.967" endtime="20201115 22:02:55.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.987" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.986" endtime="20201115 22:02:55.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.988" endtime="20201115 22:02:55.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.964" endtime="20201115 22:02:55.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.962" endtime="20201115 22:02:55.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.997" endtime="20201115 22:02:56.284"></status>
</kw>
<msg timestamp="20201115 22:02:56.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020672903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020675347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.996" endtime="20201115 22:02:56.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020672903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020675347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.288" endtime="20201115 22:02:56.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.296" endtime="20201115 22:02:56.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.993" endtime="20201115 22:02:56.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.992" endtime="20201115 22:02:56.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.303" level="INFO">${RESULT} = [{'time': 0.020675347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.020791625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.300" endtime="20201115 22:02:56.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.317" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:56.304" endtime="20201115 22:02:56.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.321" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.320" endtime="20201115 22:02:56.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.324" level="INFO">VALUE: [2.444000000000751e-06, 2.444000000000751e-06, 2.471999999999891e-06, 2.4309999999971854e-06, 2.4450000000002248e-06, 2.4450000000002248e-06, 2.4169999999976155e-06, 2.4450000000002248e-06, 2.375000000002375e-06, 2.4300000000011812e-06, 2.444000000000751e-06, 2.52800000000164e-06, 2.3889999999984757e-06, 2.431000000000655e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.417000000001085e-06, 2.431000000000655e-06, 2.4300000000011812e-06, 2.431000000000655e-06, 2.444000000000751e-06, 2.431000000000655e-06, 2.431000000000655e-06, 2.431000000000655e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.4300000000011812e-06, 2.458000000000321e-06, 2.417000000001085e-06, 2.4169999999976155e-06, 2.431000000000655e-06, 2.4309999999971854e-06, 2.4309999999971854e-06, 2.417000000001085e-06, 2.431000000000655e-06, 2.431000000000655e-06, 2.444000000000751e-06, 2.4589999999997947e-06, 2.459000000003264e-06, 2.471999999999891e-06, 2.4169999999976155e-06, 2.4439999999972817e-06, 2.444000000000751e-06, 2.4589999999997947e-06, 2.4300000000011812e-06, 2.4999999999990308e-06, 2.4309999999971854e-06, 2.4169999999976155e-06, 2.431000000000655e-06, 2.3889999999984757e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.322" endtime="20201115 22:02:56.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.317" endtime="20201115 22:02:56.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.327" endtime="20201115 22:02:56.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.330" endtime="20201115 22:02:56.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.329" endtime="20201115 22:02:56.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.325" endtime="20201115 22:02:56.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.960" endtime="20201115 22:02:56.351"></status>
</kw>
<msg timestamp="20201115 22:02:56.351" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.360" endtime="20201115 22:02:56.376"></status>
</kw>
<msg timestamp="20201115 22:02:56.377" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.359" endtime="20201115 22:02:56.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.379" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.378" endtime="20201115 22:02:56.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.380" endtime="20201115 22:02:56.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.356" endtime="20201115 22:02:56.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.354" endtime="20201115 22:02:56.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.389" endtime="20201115 22:02:56.677"></status>
</kw>
<msg timestamp="20201115 22:02:56.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.387" endtime="20201115 22:02:56.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.681" endtime="20201115 22:02:56.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.689" endtime="20201115 22:02:56.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.385" endtime="20201115 22:02:56.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.383" endtime="20201115 22:02:56.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.696" level="INFO">${RESULT} = [{'time': 0.020481319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.02059825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:56.692" endtime="20201115 22:02:56.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.709" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:56.697" endtime="20201115 22:02:56.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.713" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.712" endtime="20201115 22:02:56.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.716" level="INFO">VALUE: [2.4300000000011812e-06, 2.485999999999461e-06, 2.4860000000029303e-06, 2.444000000000751e-06, 2.473000000002834e-06, 2.458000000000321e-06, 2.4439999999972817e-06, 2.458000000000321e-06, 2.4439999999972817e-06, 2.485999999999461e-06, 2.375000000002375e-06, 2.4300000000011812e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.4300000000011812e-06, 2.444000000000751e-06, 2.431000000000655e-06, 2.4729999999993646e-06, 2.4309999999971854e-06, 2.4300000000011812e-06, 2.4300000000011812e-06, 2.4300000000011812e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.4169999999976155e-06, 2.431000000000655e-06, 2.3749999999989058e-06, 2.4300000000011812e-06, 2.417000000001085e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.4439999999972817e-06, 2.471999999999891e-06, 2.4309999999971854e-06, 2.485999999999461e-06, 2.389000000001945e-06, 2.4300000000011812e-06, 2.4309999999971854e-06, 2.4450000000002248e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.4300000000011812e-06, 2.360999999999336e-06, 2.431000000000655e-06, 2.4300000000011812e-06, 2.431000000000655e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.714" endtime="20201115 22:02:56.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.710" endtime="20201115 22:02:56.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.719" endtime="20201115 22:02:56.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.723" endtime="20201115 22:02:56.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.721" endtime="20201115 22:02:56.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.717" endtime="20201115 22:02:56.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.352" endtime="20201115 22:02:56.744"></status>
</kw>
<msg timestamp="20201115 22:02:56.744" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.753" endtime="20201115 22:02:56.769"></status>
</kw>
<msg timestamp="20201115 22:02:56.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.751" endtime="20201115 22:02:56.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.770" endtime="20201115 22:02:56.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.773" endtime="20201115 22:02:56.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.748" endtime="20201115 22:02:56.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.746" endtime="20201115 22:02:56.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.782" endtime="20201115 22:02:57.069"></status>
</kw>
<msg timestamp="20201115 22:02:57.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020024736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020027208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.780" endtime="20201115 22:02:57.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020024736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020027208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.073" endtime="20201115 22:02:57.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.081" endtime="20201115 22:02:57.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.778" endtime="20201115 22:02:57.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.776" endtime="20201115 22:02:57.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.088" level="INFO">${RESULT} = [{'time': 0.020027208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.020144472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.084" endtime="20201115 22:02:57.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.101" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:57.089" endtime="20201115 22:02:57.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.106" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.105" endtime="20201115 22:02:57.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.108" level="INFO">VALUE: [2.471999999999891e-06, 2.458000000000321e-06, 2.4160000000016113e-06, 2.431000000000655e-06, 2.4300000000011812e-06, 2.4300000000011812e-06, 2.4860000000029303e-06, 2.4300000000011812e-06, 2.4299999999977118e-06, 2.458000000000321e-06, 2.4300000000011812e-06, 2.4439999999972817e-06, 2.4300000000011812e-06, 2.431000000000655e-06, 2.4300000000011812e-06, 2.444000000000751e-06, 2.431000000000655e-06, 2.458000000000321e-06, 2.4300000000011812e-06, 2.415999999998142e-06, 2.444000000000751e-06, 2.4299999999977118e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.4999999999990308e-06, 2.4450000000002248e-06, 2.4300000000011812e-06, 2.4309999999971854e-06, 2.417000000001085e-06, 2.4300000000011812e-06, 2.431000000000655e-06, 2.4450000000002248e-06, 2.4300000000011812e-06, 2.4450000000002248e-06, 2.4439999999972817e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.4439999999972817e-06, 2.4299999999977118e-06, 2.360999999999336e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.4439999999972817e-06, 2.4029999999980456e-06, 2.431000000000655e-06, 2.4309999999971854e-06, 2.444000000000751e-06, 2.444000000000751e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.107" endtime="20201115 22:02:57.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.102" endtime="20201115 22:02:57.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.112" endtime="20201115 22:02:57.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.115" endtime="20201115 22:02:57.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.114" endtime="20201115 22:02:57.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.110" endtime="20201115 22:02:57.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.744" endtime="20201115 22:02:57.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.174" endtime="20201115 22:02:57.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.173" endtime="20201115 22:02:57.136"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.138" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.147" endtime="20201115 22:02:57.164"></status>
</kw>
<msg timestamp="20201115 22:02:57.164" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.146" endtime="20201115 22:02:57.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.167" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.166" endtime="20201115 22:02:57.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.168" endtime="20201115 22:02:57.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.143" endtime="20201115 22:02:57.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.141" endtime="20201115 22:02:57.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.177" endtime="20201115 22:02:57.464"></status>
</kw>
<msg timestamp="20201115 22:02:57.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.176" endtime="20201115 22:02:57.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.468" endtime="20201115 22:02:57.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.476" endtime="20201115 22:02:57.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.173" endtime="20201115 22:02:57.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.171" endtime="20201115 22:02:57.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.483" level="INFO">${RESULT} = [{'time': 0.022452417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5700000000003498e-06, 'source_diff': 2.5700000000003498e-06}, {'time': 0.02257575, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:57.480" endtime="20201115 22:02:57.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.496" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:57.484" endtime="20201115 22:02:57.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.501" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.500" endtime="20201115 22:02:57.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.504" level="INFO">VALUE: [2.5700000000003498e-06, 2.610999999999586e-06, 2.52800000000164e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.5699999999968803e-06, 2.612000000002529e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.5700000000003498e-06, 2.5979999999994896e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5979999999994896e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5550000000013062e-06, 2.6249999999991558e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.5700000000003498e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.6389999999987257e-06, 2.569000000000876e-06, 2.512999999999127e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.5700000000003498e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.502" endtime="20201115 22:02:57.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.497" endtime="20201115 22:02:57.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.507" endtime="20201115 22:02:57.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.511" endtime="20201115 22:02:57.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.509" endtime="20201115 22:02:57.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.505" endtime="20201115 22:02:57.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.139" endtime="20201115 22:02:57.531"></status>
</kw>
<msg timestamp="20201115 22:02:57.531" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.540" endtime="20201115 22:02:57.557"></status>
</kw>
<msg timestamp="20201115 22:02:57.557" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.538" endtime="20201115 22:02:57.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.560" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.558" endtime="20201115 22:02:57.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.561" endtime="20201115 22:02:57.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.536" endtime="20201115 22:02:57.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.534" endtime="20201115 22:02:57.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.570" endtime="20201115 22:02:57.855"></status>
</kw>
<msg timestamp="20201115 22:02:57.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020041056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.568" endtime="20201115 22:02:57.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020041056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.859" endtime="20201115 22:02:57.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.867" endtime="20201115 22:02:57.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.566" endtime="20201115 22:02:57.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.564" endtime="20201115 22:02:57.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.874" level="INFO">${RESULT} = [{'time': 0.020043681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.020169417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:57.871" endtime="20201115 22:02:57.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.888" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:57.875" endtime="20201115 22:02:57.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.896" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.895" endtime="20201115 22:02:57.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.899" level="INFO">VALUE: [2.6249999999991558e-06, 2.610999999999586e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.5410000000017363e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.5829999999969766e-06, 2.597000000000016e-06, 2.5829999999969766e-06, 2.6249999999991558e-06, 2.569000000000876e-06, 2.569000000000876e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.512999999999127e-06, 2.583000000000446e-06, 2.5829999999969766e-06, 2.54200000000121e-06, 2.55600000000078e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.5139999999986007e-06, 2.5419999999977405e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.5979999999994896e-06, 2.6250000000026252e-06, 2.597000000000016e-06, 2.52800000000164e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.5839999999999197e-06, 2.5829999999969766e-06, 2.569000000000876e-06, 2.5979999999994896e-06, 2.597000000000016e-06, 2.597000000000016e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.897" endtime="20201115 22:02:57.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.893" endtime="20201115 22:02:57.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.902" endtime="20201115 22:02:57.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.905" endtime="20201115 22:02:57.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.904" endtime="20201115 22:02:57.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.900" endtime="20201115 22:02:57.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.532" endtime="20201115 22:02:57.926"></status>
</kw>
<msg timestamp="20201115 22:02:57.926" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.935" endtime="20201115 22:02:57.952"></status>
</kw>
<msg timestamp="20201115 22:02:57.953" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.934" endtime="20201115 22:02:57.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.954" endtime="20201115 22:02:57.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.956" endtime="20201115 22:02:57.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.931" endtime="20201115 22:02:57.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.929" endtime="20201115 22:02:57.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.965" endtime="20201115 22:02:58.253"></status>
</kw>
<msg timestamp="20201115 22:02:58.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020255083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.963" endtime="20201115 22:02:58.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020255083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.257" endtime="20201115 22:02:58.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.265" endtime="20201115 22:02:58.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.961" endtime="20201115 22:02:58.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.959" endtime="20201115 22:02:58.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.272" level="INFO">${RESULT} = [{'time': 0.020257653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5700000000003498e-06, 'source_diff': 2.5700000000003498e-06}, {'time': 0.020381528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:58.268" endtime="20201115 22:02:58.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.287" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:58.273" endtime="20201115 22:02:58.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.291" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.290" endtime="20201115 22:02:58.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.294" level="INFO">VALUE: [2.5700000000003498e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.55600000000078e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.6529999999982956e-06, 2.5829999999969766e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.597000000000016e-06, 2.569000000000876e-06, 2.597000000000016e-06, 2.569000000000876e-06, 2.597000000000016e-06, 2.5829999999969766e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5829999999969766e-06, 2.5000000000025002e-06, 2.597000000000016e-06, 2.540999999998267e-06, 2.597000000000016e-06, 2.5829999999969766e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.54200000000121e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.584000000003389e-06, 2.5839999999999197e-06, 2.5829999999969766e-06, 2.5979999999994896e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.610999999999586e-06, 2.5839999999999197e-06, 2.5829999999969766e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.5979999999994896e-06, 2.5979999999994896e-06, 2.5549999999978368e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.292" endtime="20201115 22:02:58.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.287" endtime="20201115 22:02:58.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.297" endtime="20201115 22:02:58.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.300" endtime="20201115 22:02:58.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.298" endtime="20201115 22:02:58.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.295" endtime="20201115 22:02:58.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.927" endtime="20201115 22:02:58.321"></status>
</kw>
<msg timestamp="20201115 22:02:58.321" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.330" endtime="20201115 22:02:58.346"></status>
</kw>
<msg timestamp="20201115 22:02:58.347" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.328" endtime="20201115 22:02:58.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.349" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.348" endtime="20201115 22:02:58.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.350" endtime="20201115 22:02:58.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.326" endtime="20201115 22:02:58.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.324" endtime="20201115 22:02:58.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.359" endtime="20201115 22:02:58.646"></status>
</kw>
<msg timestamp="20201115 22:02:58.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020380514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.357" endtime="20201115 22:02:58.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020380514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.650" endtime="20201115 22:02:58.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.658" endtime="20201115 22:02:58.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.355" endtime="20201115 22:02:58.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.353" endtime="20201115 22:02:58.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.665" level="INFO">${RESULT} = [{'time': 0.020383097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.020506972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.661" endtime="20201115 22:02:58.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.678" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:58.666" endtime="20201115 22:02:58.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.683" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.682" endtime="20201115 22:02:58.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.685" level="INFO">VALUE: [2.583000000000446e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.6529999999982956e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.583000000000446e-06, 2.6110000000030553e-06, 2.6250000000026252e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.6389999999987257e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.5689999999974067e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.55600000000078e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.6249999999991558e-06, 2.512999999999127e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.5700000000003498e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.5829999999969766e-06, 2.5979999999994896e-06, 2.5839999999999197e-06, 2.55600000000078e-06, 2.584000000003389e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.653000000001765e-06, 2.5839999999999197e-06, 2.5550000000013062e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.684" endtime="20201115 22:02:58.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.679" endtime="20201115 22:02:58.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.688" endtime="20201115 22:02:58.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.692" endtime="20201115 22:02:58.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.690" endtime="20201115 22:02:58.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.687" endtime="20201115 22:02:58.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.321" endtime="20201115 22:02:58.713"></status>
</kw>
<msg timestamp="20201115 22:02:58.713" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.722" endtime="20201115 22:02:58.738"></status>
</kw>
<msg timestamp="20201115 22:02:58.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.720" endtime="20201115 22:02:58.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.741" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.739" endtime="20201115 22:02:58.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.742" endtime="20201115 22:02:58.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.717" endtime="20201115 22:02:58.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.715" endtime="20201115 22:02:58.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.751" endtime="20201115 22:02:59.037"></status>
</kw>
<msg timestamp="20201115 22:02:59.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020047736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.749" endtime="20201115 22:02:59.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020047736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.042" endtime="20201115 22:02:59.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.050" endtime="20201115 22:02:59.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.747" endtime="20201115 22:02:59.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.745" endtime="20201115 22:02:59.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.056" level="INFO">${RESULT} = [{'time': 0.020047736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.020170125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.053" endtime="20201115 22:02:59.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.070" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:59.057" endtime="20201115 22:02:59.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.075" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.074" endtime="20201115 22:02:59.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.077" level="INFO">VALUE: [2.583000000000446e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.6529999999982956e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.612000000002529e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.6119999999990595e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.612000000002529e-06, 2.583000000000446e-06, 2.5829999999969766e-06, 2.6529999999982956e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.610999999999586e-06, 2.5550000000013062e-06, 2.54200000000121e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.569000000000876e-06, 2.569000000000876e-06, 2.5829999999969766e-06, 2.583000000000446e-06, 2.55600000000078e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.5699999999968803e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.583000000000446e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.076" endtime="20201115 22:02:59.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.071" endtime="20201115 22:02:59.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.081" endtime="20201115 22:02:59.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.084" endtime="20201115 22:02:59.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.083" endtime="20201115 22:02:59.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.079" endtime="20201115 22:02:59.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.713" endtime="20201115 22:02:59.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.137" endtime="20201115 22:02:59.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.136" endtime="20201115 22:02:59.106"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.108" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.117" endtime="20201115 22:02:59.133"></status>
</kw>
<msg timestamp="20201115 22:02:59.133" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.115" endtime="20201115 22:02:59.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.136" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.134" endtime="20201115 22:02:59.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.137" endtime="20201115 22:02:59.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.113" endtime="20201115 22:02:59.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.110" endtime="20201115 22:02:59.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.146" endtime="20201115 22:02:59.433"></status>
</kw>
<msg timestamp="20201115 22:02:59.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.145" endtime="20201115 22:02:59.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.437" endtime="20201115 22:02:59.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.445" endtime="20201115 22:02:59.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.142" endtime="20201115 22:02:59.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.141" endtime="20201115 22:02:59.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.451" level="INFO">${RESULT} = [{'time': 0.022523097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.022655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:59.448" endtime="20201115 22:02:59.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.465" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:59.452" endtime="20201115 22:02:59.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.469" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.468" endtime="20201115 22:02:59.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.472" level="INFO">VALUE: [2.735999999999711e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.7500000000027502e-06, 2.735999999999711e-06, 2.708000000000571e-06, 2.7229999999996146e-06, 2.749999999999281e-06, 2.80600000000103e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.7500000000027502e-06, 2.7639999999988507e-06, 2.7369999999991845e-06, 2.8329999999972266e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.7360000000031803e-06, 2.7360000000031803e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.6800000000014312e-06, 2.735999999999711e-06, 2.7369999999991845e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.679999999997962e-06, 2.7639999999988507e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.7500000000027502e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.7369999999991845e-06, 2.749999999999281e-06, 2.7229999999996146e-06, 2.7500000000027502e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.77800000000189e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.470" endtime="20201115 22:02:59.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.466" endtime="20201115 22:02:59.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.475" endtime="20201115 22:02:59.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.478" endtime="20201115 22:02:59.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.477" endtime="20201115 22:02:59.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.473" endtime="20201115 22:02:59.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.108" endtime="20201115 22:02:59.499"></status>
</kw>
<msg timestamp="20201115 22:02:59.499" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.510" endtime="20201115 22:02:59.527"></status>
</kw>
<msg timestamp="20201115 22:02:59.527" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.508" endtime="20201115 22:02:59.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.530" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.529" endtime="20201115 22:02:59.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.532" endtime="20201115 22:02:59.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.504" endtime="20201115 22:02:59.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.502" endtime="20201115 22:02:59.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.541" endtime="20201115 22:02:59.829"></status>
</kw>
<msg timestamp="20201115 22:02:59.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.539" endtime="20201115 22:02:59.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.833" endtime="20201115 22:02:59.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.841" endtime="20201115 22:02:59.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.536" endtime="20201115 22:02:59.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.535" endtime="20201115 22:02:59.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.848" level="INFO">${RESULT} = [{'time': 0.022283333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.022416389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.845" endtime="20201115 22:02:59.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.861" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:59.849" endtime="20201115 22:02:59.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.866" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.865" endtime="20201115 22:02:59.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.868" level="INFO">VALUE: [2.735999999999711e-06, 2.749999999999281e-06, 2.7500000000027502e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.6949999999970053e-06, 2.7369999999991845e-06, 2.7639999999988507e-06, 2.7219999999966715e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.7500000000027502e-06, 2.735999999999711e-06, 2.76400000000232e-06, 2.722000000000141e-06, 2.6800000000014312e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.6809999999974354e-06, 2.7919999999979905e-06, 2.749999999999281e-06, 2.679999999997962e-06, 2.722000000000141e-06, 2.7910000000019863e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.749999999999281e-06, 2.77800000000189e-06, 2.749999999999281e-06, 2.7639999999988507e-06, 2.7639999999988507e-06, 2.749999999999281e-06, 2.7360000000031803e-06, 2.7639999999988507e-06, 2.7229999999996146e-06, 2.7500000000027502e-06, 2.735999999999711e-06, 2.7369999999991845e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.867" endtime="20201115 22:02:59.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.862" endtime="20201115 22:02:59.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.871" endtime="20201115 22:02:59.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.875" endtime="20201115 22:02:59.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.873" endtime="20201115 22:02:59.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.870" endtime="20201115 22:02:59.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.500" endtime="20201115 22:02:59.895"></status>
</kw>
<msg timestamp="20201115 22:02:59.896" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.905" endtime="20201115 22:02:59.922"></status>
</kw>
<msg timestamp="20201115 22:02:59.923" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.903" endtime="20201115 22:02:59.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.925" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.924" endtime="20201115 22:02:59.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.926" endtime="20201115 22:02:59.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.900" endtime="20201115 22:02:59.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.898" endtime="20201115 22:02:59.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.935" endtime="20201115 22:03:00.223"></status>
</kw>
<msg timestamp="20201115 22:03:00.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020581375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.934" endtime="20201115 22:03:00.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020581375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.227" endtime="20201115 22:03:00.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.235" endtime="20201115 22:03:00.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.931" endtime="20201115 22:03:00.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.930" endtime="20201115 22:03:00.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.242" level="INFO">${RESULT} = [{'time': 0.020581375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.020713083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.238" endtime="20201115 22:03:00.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.255" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:00.243" endtime="20201115 22:03:00.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.259" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.258" endtime="20201115 22:03:00.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.262" level="INFO">VALUE: [2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.77800000000189e-06, 2.735999999999711e-06, 2.79200000000146e-06, 2.735999999999711e-06, 2.7639999999988507e-06, 2.79200000000146e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.695000000000475e-06, 2.722000000000141e-06, 2.7369999999991845e-06, 2.7219999999966715e-06, 2.722000000000141e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7919999999979905e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.6669999999978655e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.76400000000232e-06, 2.722000000000141e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.695000000000475e-06, 2.735999999999711e-06, 2.776999999998947e-06, 2.722000000000141e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.261" endtime="20201115 22:03:00.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.256" endtime="20201115 22:03:00.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.265" endtime="20201115 22:03:00.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.268" endtime="20201115 22:03:00.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.267" endtime="20201115 22:03:00.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.263" endtime="20201115 22:03:00.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.896" endtime="20201115 22:03:00.289"></status>
</kw>
<msg timestamp="20201115 22:03:00.290" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.298" endtime="20201115 22:03:00.315"></status>
</kw>
<msg timestamp="20201115 22:03:00.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.297" endtime="20201115 22:03:00.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.318" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.316" endtime="20201115 22:03:00.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.319" endtime="20201115 22:03:00.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.294" endtime="20201115 22:03:00.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.292" endtime="20201115 22:03:00.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.328" endtime="20201115 22:03:00.614"></status>
</kw>
<msg timestamp="20201115 22:03:00.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020465833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020468569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.326" endtime="20201115 22:03:00.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020465833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020468569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.618" endtime="20201115 22:03:00.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.626" endtime="20201115 22:03:00.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.324" endtime="20201115 22:03:00.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.322" endtime="20201115 22:03:00.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.633" level="INFO">${RESULT} = [{'time': 0.020468569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.020603264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.629" endtime="20201115 22:03:00.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.646" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:00.634" endtime="20201115 22:03:00.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.651" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.650" endtime="20201115 22:03:00.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.653" level="INFO">VALUE: [2.735999999999711e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.7500000000027502e-06, 2.695000000000475e-06, 2.7229999999996146e-06, 2.7639999999988507e-06, 2.735999999999711e-06, 2.7369999999991845e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.7500000000027502e-06, 2.7229999999996146e-06, 2.7229999999996146e-06, 2.749999999999281e-06, 2.76400000000232e-06, 2.735999999999711e-06, 2.7639999999988507e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.80600000000103e-06, 2.7500000000027502e-06, 2.737000000002654e-06, 2.735999999999711e-06, 2.7639999999988507e-06, 2.79200000000146e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7779999999984206e-06, 2.735999999999711e-06, 2.7639999999988507e-06, 2.735999999999711e-06, 2.667000000001335e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.7919999999979905e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7779999999984206e-06, 2.7779999999984206e-06, 2.735999999999711e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.652" endtime="20201115 22:03:00.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.647" endtime="20201115 22:03:00.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.657" endtime="20201115 22:03:00.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.660" endtime="20201115 22:03:00.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.659" endtime="20201115 22:03:00.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.655" endtime="20201115 22:03:00.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.290" endtime="20201115 22:03:00.681"></status>
</kw>
<msg timestamp="20201115 22:03:00.681" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.690" endtime="20201115 22:03:00.706"></status>
</kw>
<msg timestamp="20201115 22:03:00.707" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.688" endtime="20201115 22:03:00.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.709" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.708" endtime="20201115 22:03:00.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.711" endtime="20201115 22:03:00.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.686" endtime="20201115 22:03:00.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.684" endtime="20201115 22:03:00.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.719" endtime="20201115 22:03:01.006"></status>
</kw>
<msg timestamp="20201115 22:03:01.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.718" endtime="20201115 22:03:01.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.010" endtime="20201115 22:03:01.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.018" endtime="20201115 22:03:01.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.715" endtime="20201115 22:03:01.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.714" endtime="20201115 22:03:01.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.024" level="INFO">${RESULT} = [{'time': 0.020285889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.020420667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.021" endtime="20201115 22:03:01.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.038" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:01.025" endtime="20201115 22:03:01.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.043" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.042" endtime="20201115 22:03:01.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.045" level="INFO">VALUE: [2.735999999999711e-06, 2.735999999999711e-06, 2.7360000000031803e-06, 2.6800000000014312e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.722000000000141e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.7369999999991845e-06, 2.7360000000031803e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.7369999999991845e-06, 2.749999999999281e-06, 2.749999999999281e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.749999999999281e-06, 2.7360000000031803e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.694000000001001e-06, 2.735999999999711e-06, 2.8059999999975604e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7369999999991845e-06, 2.735999999999711e-06, 2.7639999999988507e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.7369999999991845e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.7919999999979905e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.749999999999281e-06, 2.679999999997962e-06, 2.7369999999991845e-06, 2.8050000000015562e-06, 2.735999999999711e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.044" endtime="20201115 22:03:01.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.039" endtime="20201115 22:03:01.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.049" endtime="20201115 22:03:01.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.052" endtime="20201115 22:03:01.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.051" endtime="20201115 22:03:01.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.047" endtime="20201115 22:03:01.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.682" endtime="20201115 22:03:01.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.107" endtime="20201115 22:03:01.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.106" endtime="20201115 22:03:01.073"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.075" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.084" endtime="20201115 22:03:01.102"></status>
</kw>
<msg timestamp="20201115 22:03:01.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.083" endtime="20201115 22:03:01.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.103" endtime="20201115 22:03:01.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.106" endtime="20201115 22:03:01.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.080" endtime="20201115 22:03:01.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.078" endtime="20201115 22:03:01.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.115" endtime="20201115 22:03:01.401"></status>
</kw>
<msg timestamp="20201115 22:03:01.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.113" endtime="20201115 22:03:01.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.406" endtime="20201115 22:03:01.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.414" endtime="20201115 22:03:01.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.111" endtime="20201115 22:03:01.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.109" endtime="20201115 22:03:01.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.420" level="INFO">${RESULT} = [{'time': 0.022671514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.022813736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:01.417" endtime="20201115 22:03:01.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.434" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:01.421" endtime="20201115 22:03:01.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.438" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.437" endtime="20201115 22:03:01.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.441" level="INFO">VALUE: [2.8889999999989757e-06, 2.874999999999406e-06, 2.903000000002015e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.915999999998642e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.903000000002015e-06, 2.889000000002445e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.833000000000696e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.944000000001251e-06, 2.874999999999406e-06, 2.903000000002015e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.860999999999836e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.8329999999972266e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.9029999999985456e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.439" endtime="20201115 22:03:01.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.435" endtime="20201115 22:03:01.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.444" endtime="20201115 22:03:01.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.448" endtime="20201115 22:03:01.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.446" endtime="20201115 22:03:01.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.443" endtime="20201115 22:03:01.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.076" endtime="20201115 22:03:01.468"></status>
</kw>
<msg timestamp="20201115 22:03:01.468" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.477" endtime="20201115 22:03:01.495"></status>
</kw>
<msg timestamp="20201115 22:03:01.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.476" endtime="20201115 22:03:01.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.497" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.496" endtime="20201115 22:03:01.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.498" endtime="20201115 22:03:01.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.473" endtime="20201115 22:03:01.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.471" endtime="20201115 22:03:01.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.508" endtime="20201115 22:03:01.795"></status>
</kw>
<msg timestamp="20201115 22:03:01.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020129514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020132389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.506" endtime="20201115 22:03:01.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020129514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020132389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.799" endtime="20201115 22:03:01.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.807" endtime="20201115 22:03:01.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.503" endtime="20201115 22:03:01.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.502" endtime="20201115 22:03:01.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.814" level="INFO">${RESULT} = [{'time': 0.020132389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.020275431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.810" endtime="20201115 22:03:01.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.827" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:01.815" endtime="20201115 22:03:01.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.832" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.831" endtime="20201115 22:03:01.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.834" level="INFO">VALUE: [2.874999999999406e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.929999999998212e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.944000000001251e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.915999999998642e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.9169999999981155e-06, 2.860999999999836e-06, 2.958000000000821e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.903000000002015e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.862000000002779e-06, 2.874999999999406e-06, 2.860999999999836e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.833" endtime="20201115 22:03:01.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.828" endtime="20201115 22:03:01.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.837" endtime="20201115 22:03:01.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.841" endtime="20201115 22:03:01.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.839" endtime="20201115 22:03:01.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.836" endtime="20201115 22:03:01.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.469" endtime="20201115 22:03:01.861"></status>
</kw>
<msg timestamp="20201115 22:03:01.862" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.870" endtime="20201115 22:03:01.889"></status>
</kw>
<msg timestamp="20201115 22:03:01.889" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.869" endtime="20201115 22:03:01.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.891" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.890" endtime="20201115 22:03:01.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.893" endtime="20201115 22:03:01.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.866" endtime="20201115 22:03:01.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.864" endtime="20201115 22:03:01.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.901" endtime="20201115 22:03:02.207"></status>
</kw>
<msg timestamp="20201115 22:03:02.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.900" endtime="20201115 22:03:02.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.211" endtime="20201115 22:03:02.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.219" endtime="20201115 22:03:02.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.897" endtime="20201115 22:03:02.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.896" endtime="20201115 22:03:02.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.226" level="INFO">${RESULT} = [{'time': 0.020138931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.020280472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:02.223" endtime="20201115 22:03:02.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.240" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:02.227" endtime="20201115 22:03:02.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.244" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.243" endtime="20201115 22:03:02.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.247" level="INFO">VALUE: [2.8889999999989757e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.889000000002445e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.9020000000025414e-06, 2.9300000000016813e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.887999999999502e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.9020000000025414e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.847000000000266e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.901999999999072e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.8340000000001697e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.833000000000696e-06, 2.8889999999989757e-06, 2.931000000001155e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.847000000000266e-06, 2.9020000000025414e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.246" endtime="20201115 22:03:02.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.241" endtime="20201115 22:03:02.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.250" endtime="20201115 22:03:02.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.253" endtime="20201115 22:03:02.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.252" endtime="20201115 22:03:02.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.248" endtime="20201115 22:03:02.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.862" endtime="20201115 22:03:02.274"></status>
</kw>
<msg timestamp="20201115 22:03:02.274" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.283" endtime="20201115 22:03:02.300"></status>
</kw>
<msg timestamp="20201115 22:03:02.301" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.282" endtime="20201115 22:03:02.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.302" endtime="20201115 22:03:02.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.304" endtime="20201115 22:03:02.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.279" endtime="20201115 22:03:02.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.277" endtime="20201115 22:03:02.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.313" endtime="20201115 22:03:02.599"></status>
</kw>
<msg timestamp="20201115 22:03:02.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.311" endtime="20201115 22:03:02.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.603" endtime="20201115 22:03:02.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.612" endtime="20201115 22:03:02.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.309" endtime="20201115 22:03:02.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.307" endtime="20201115 22:03:02.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.619" level="INFO">${RESULT} = [{'time': 0.020222889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.020365361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.615" endtime="20201115 22:03:02.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.632" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:02.620" endtime="20201115 22:03:02.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.636" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.635" endtime="20201115 22:03:02.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.639" level="INFO">VALUE: [2.833000000000696e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.917000000001585e-06, 2.903000000002015e-06, 2.9579999999973516e-06, 2.9029999999985456e-06, 2.915999999998642e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.9020000000025414e-06, 2.860999999999836e-06, 2.889000000002445e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.917000000001585e-06, 2.901999999999072e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.80600000000103e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.901999999999072e-06, 2.860999999999836e-06, 2.903000000002015e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.958000000000821e-06, 2.903000000002015e-06, 2.847000000000266e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8750000000028753e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.638" endtime="20201115 22:03:02.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.633" endtime="20201115 22:03:02.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.642" endtime="20201115 22:03:02.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.646" endtime="20201115 22:03:02.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.644" endtime="20201115 22:03:02.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.640" endtime="20201115 22:03:02.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.275" endtime="20201115 22:03:02.666"></status>
</kw>
<msg timestamp="20201115 22:03:02.666" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.675" endtime="20201115 22:03:02.693"></status>
</kw>
<msg timestamp="20201115 22:03:02.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.674" endtime="20201115 22:03:02.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.694" endtime="20201115 22:03:02.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.697" endtime="20201115 22:03:02.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.671" endtime="20201115 22:03:02.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.669" endtime="20201115 22:03:02.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.706" endtime="20201115 22:03:02.993"></status>
</kw>
<msg timestamp="20201115 22:03:02.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02015775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:02.704" endtime="20201115 22:03:02.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02015775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:02.998" endtime="20201115 22:03:03.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.006" endtime="20201115 22:03:03.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.702" endtime="20201115 22:03:03.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.700" endtime="20201115 22:03:03.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.013" level="INFO">${RESULT} = [{'time': 0.02015775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.020299917, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:03.009" endtime="20201115 22:03:03.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.026" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:03.014" endtime="20201115 22:03:03.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.031" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.030" endtime="20201115 22:03:03.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.033" level="INFO">VALUE: [2.8889999999989757e-06, 2.903000000002015e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.804999999998087e-06, 2.945000000000725e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.9169999999981155e-06, 2.9029999999985456e-06, 2.8619999999993095e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.903000000002015e-06, 2.917000000001585e-06, 2.9169999999981155e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.887999999999502e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.915999999998642e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.8479999999997396e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.903000000002015e-06, 2.903000000002015e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.901999999999072e-06, 2.874999999999406e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.032" endtime="20201115 22:03:03.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.027" endtime="20201115 22:03:03.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.036" endtime="20201115 22:03:03.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.040" endtime="20201115 22:03:03.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.038" endtime="20201115 22:03:03.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.035" endtime="20201115 22:03:03.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.667" endtime="20201115 22:03:03.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.074" endtime="20201115 22:03:03.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.073" endtime="20201115 22:03:03.061"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.063" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.072" endtime="20201115 22:03:03.089"></status>
</kw>
<msg timestamp="20201115 22:03:03.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.070" endtime="20201115 22:03:03.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.092" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.091" endtime="20201115 22:03:03.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.093" endtime="20201115 22:03:03.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.067" endtime="20201115 22:03:03.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.065" endtime="20201115 22:03:03.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.103" endtime="20201115 22:03:03.390"></status>
</kw>
<msg timestamp="20201115 22:03:03.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:03.101" endtime="20201115 22:03:03.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:03.394" endtime="20201115 22:03:03.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.402" endtime="20201115 22:03:03.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.099" endtime="20201115 22:03:03.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.097" endtime="20201115 22:03:03.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.408" level="INFO">${RESULT} = [{'time': 0.022464528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.022618625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:03.405" endtime="20201115 22:03:03.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.422" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:03.409" endtime="20201115 22:03:03.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.426" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.425" endtime="20201115 22:03:03.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.429" level="INFO">VALUE: [3.02800000000214e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.097000000000516e-06, 3.05600000000128e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.026999999999197e-06, 3.026999999999197e-06, 3.0969999999970466e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.0559999999978105e-06, 3.026999999999197e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.0559999999978105e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.054999999998337e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.02800000000214e-06, 2.9579999999973516e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.427" endtime="20201115 22:03:03.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.423" endtime="20201115 22:03:03.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.432" endtime="20201115 22:03:03.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.435" endtime="20201115 22:03:03.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.434" endtime="20201115 22:03:03.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.430" endtime="20201115 22:03:03.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.063" endtime="20201115 22:03:03.456"></status>
</kw>
<msg timestamp="20201115 22:03:03.456" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.465" endtime="20201115 22:03:03.483"></status>
</kw>
<msg timestamp="20201115 22:03:03.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.463" endtime="20201115 22:03:03.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.487" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.485" endtime="20201115 22:03:03.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.488" endtime="20201115 22:03:03.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.461" endtime="20201115 22:03:03.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.458" endtime="20201115 22:03:03.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.497" endtime="20201115 22:03:03.781"></status>
</kw>
<msg timestamp="20201115 22:03:03.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020178528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020181556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.495" endtime="20201115 22:03:03.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020178528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020181556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.785" endtime="20201115 22:03:03.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.793" endtime="20201115 22:03:03.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.493" endtime="20201115 22:03:03.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.491" endtime="20201115 22:03:03.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.800" level="INFO">${RESULT} = [{'time': 0.020181556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.020334222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:03.797" endtime="20201115 22:03:03.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.813" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:03.801" endtime="20201115 22:03:03.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.818" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.817" endtime="20201115 22:03:03.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.820" level="INFO">VALUE: [3.0279999999986706e-06, 3.0279999999986706e-06, 3.0130000000030965e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.0139999999991007e-06, 2.985999999999961e-06, 3.012999999999627e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 3.0419999999982406e-06, 2.985999999999961e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.04200000000171e-06, 2.985999999999961e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.0139999999991007e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0279999999986706e-06, 3.0139999999991007e-06, 3.0840000000004197e-06, 3.0559999999978105e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.026999999999197e-06, 2.972000000000391e-06, 3.0410000000022364e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.02800000000214e-06, 2.9729999999998646e-06, 3.0419999999982406e-06, 2.9719999999969215e-06, 3.0559999999978105e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.819" endtime="20201115 22:03:03.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.814" endtime="20201115 22:03:03.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.823" endtime="20201115 22:03:03.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.827" endtime="20201115 22:03:03.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.825" endtime="20201115 22:03:03.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.822" endtime="20201115 22:03:03.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.456" endtime="20201115 22:03:03.847"></status>
</kw>
<msg timestamp="20201115 22:03:03.848" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.857" endtime="20201115 22:03:03.875"></status>
</kw>
<msg timestamp="20201115 22:03:03.875" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.855" endtime="20201115 22:03:03.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.878" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.876" endtime="20201115 22:03:03.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.879" endtime="20201115 22:03:03.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.852" endtime="20201115 22:03:03.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.850" endtime="20201115 22:03:03.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.888" endtime="20201115 22:03:04.174"></status>
</kw>
<msg timestamp="20201115 22:03:04.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020647986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020651028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.886" endtime="20201115 22:03:04.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020647986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020651028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.178" endtime="20201115 22:03:04.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.186" endtime="20201115 22:03:04.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.884" endtime="20201115 22:03:04.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.882" endtime="20201115 22:03:04.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.193" level="INFO">${RESULT} = [{'time': 0.020651028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.020802375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:04.189" endtime="20201115 22:03:04.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.206" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:04.194" endtime="20201115 22:03:04.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.210" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.209" endtime="20201115 22:03:04.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.213" level="INFO">VALUE: [3.0419999999982406e-06, 3.02800000000214e-06, 3.0279999999986706e-06, 3.054999999998337e-06, 3.083000000000946e-06, 3.0139999999991007e-06, 3.026999999999197e-06, 3.0979999999999897e-06, 3.04200000000171e-06, 3.111000000000086e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 2.999999999999531e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.0139999999991007e-06, 3.040999999998767e-06, 3.0139999999991007e-06, 3.026999999999197e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.054999999998337e-06, 3.02800000000214e-06, 3.026999999999197e-06, 3.0279999999986706e-06, 2.985999999999961e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 2.999999999999531e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.0279999999986706e-06, 2.999999999999531e-06, 3.02800000000214e-06, 3.0130000000030965e-06, 3.0139999999991007e-06, 3.0270000000026664e-06, 3.0410000000022364e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.212" endtime="20201115 22:03:04.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.207" endtime="20201115 22:03:04.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.216" endtime="20201115 22:03:04.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.219" endtime="20201115 22:03:04.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.218" endtime="20201115 22:03:04.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.214" endtime="20201115 22:03:04.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.848" endtime="20201115 22:03:04.240"></status>
</kw>
<msg timestamp="20201115 22:03:04.241" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.249" endtime="20201115 22:03:04.268"></status>
</kw>
<msg timestamp="20201115 22:03:04.268" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.248" endtime="20201115 22:03:04.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.269" endtime="20201115 22:03:04.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.272" endtime="20201115 22:03:04.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.245" endtime="20201115 22:03:04.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.243" endtime="20201115 22:03:04.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.281" endtime="20201115 22:03:04.568"></status>
</kw>
<msg timestamp="20201115 22:03:04.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020660542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.279" endtime="20201115 22:03:04.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020660542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.572" endtime="20201115 22:03:04.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.580" endtime="20201115 22:03:04.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.276" endtime="20201115 22:03:04.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.275" endtime="20201115 22:03:04.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.587" level="INFO">${RESULT} = [{'time': 0.020663597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.020816681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:04.584" endtime="20201115 22:03:04.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.600" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:04.588" endtime="20201115 22:03:04.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.605" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.604" endtime="20201115 22:03:04.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.607" level="INFO">VALUE: [3.054999999998337e-06, 3.04200000000171e-06, 2.985999999999961e-06, 3.0419999999982406e-06, 2.999999999999531e-06, 3.05600000000128e-06, 3.097000000000516e-06, 2.999999999999531e-06, 3.054999999998337e-06, 3.01400000000257e-06, 3.04200000000171e-06, 3.026999999999197e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.097000000000516e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.026999999999197e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.0139999999991007e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.0410000000022364e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 2.999999999999531e-06, 3.0410000000022364e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.0550000000018063e-06, 2.9869999999994346e-06, 3.0410000000022364e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.054999999998337e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.606" endtime="20201115 22:03:04.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.601" endtime="20201115 22:03:04.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.611" endtime="20201115 22:03:04.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.614" endtime="20201115 22:03:04.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.613" endtime="20201115 22:03:04.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.609" endtime="20201115 22:03:04.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.241" endtime="20201115 22:03:04.635"></status>
</kw>
<msg timestamp="20201115 22:03:04.635" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.644" endtime="20201115 22:03:04.662"></status>
</kw>
<msg timestamp="20201115 22:03:04.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.642" endtime="20201115 22:03:04.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.665" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.663" endtime="20201115 22:03:04.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.666" endtime="20201115 22:03:04.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.640" endtime="20201115 22:03:04.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.638" endtime="20201115 22:03:04.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.674" endtime="20201115 22:03:04.961"></status>
</kw>
<msg timestamp="20201115 22:03:04.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.673" endtime="20201115 22:03:04.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.965" endtime="20201115 22:03:04.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.973" endtime="20201115 22:03:04.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.670" endtime="20201115 22:03:04.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.669" endtime="20201115 22:03:04.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.980" level="INFO">${RESULT} = [{'time': 0.020312306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.020464597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:04.976" endtime="20201115 22:03:04.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.993" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:04.981" endtime="20201115 22:03:04.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.998" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.997" endtime="20201115 22:03:04.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.000" level="INFO">VALUE: [3.0139999999991007e-06, 2.958000000000821e-06, 2.972000000000391e-06, 3.0139999999991007e-06, 3.054999999998337e-06, 3.02800000000214e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0699999999973804e-06, 3.026999999999197e-06, 3.054999999998337e-06, 3.026999999999197e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.0550000000018063e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.01400000000257e-06, 3.0139999999991007e-06, 3.097000000000516e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.04200000000171e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 2.999999999999531e-06, 3.026999999999197e-06, 3.026999999999197e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.097000000000516e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 2.999999999999531e-06, 3.0410000000022364e-06, 3.0139999999991007e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.999" endtime="20201115 22:03:05.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.994" endtime="20201115 22:03:05.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.004" endtime="20201115 22:03:05.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.007" endtime="20201115 22:03:05.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.005" endtime="20201115 22:03:05.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.002" endtime="20201115 22:03:05.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.636" endtime="20201115 22:03:05.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.062" endtime="20201115 22:03:05.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.061" endtime="20201115 22:03:05.028"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.030" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.039" endtime="20201115 22:03:05.058"></status>
</kw>
<msg timestamp="20201115 22:03:05.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.037" endtime="20201115 22:03:05.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.060" endtime="20201115 22:03:05.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.062" endtime="20201115 22:03:05.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.035" endtime="20201115 22:03:05.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.033" endtime="20201115 22:03:05.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.071" endtime="20201115 22:03:05.358"></status>
</kw>
<msg timestamp="20201115 22:03:05.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022712306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:05.069" endtime="20201115 22:03:05.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022712306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:05.362" endtime="20201115 22:03:05.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.370" endtime="20201115 22:03:05.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.067" endtime="20201115 22:03:05.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.065" endtime="20201115 22:03:05.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.376" level="INFO">${RESULT} = [{'time': 0.0227155, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1939999999980317e-06, 'source_diff': 3.1939999999980317e-06}, {'time': 0.022877764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:05.373" endtime="20201115 22:03:05.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.390" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:05.377" endtime="20201115 22:03:05.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.394" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.393" endtime="20201115 22:03:05.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.397" level="INFO">VALUE: [3.1939999999980317e-06, 3.1809999999979355e-06, 3.165999999998892e-06, 3.194000000001501e-06, 3.194000000001501e-06, 3.194000000001501e-06, 3.2089999999970753e-06, 3.181000000001405e-06, 3.194000000001501e-06, 3.167000000001835e-06, 3.179999999998462e-06, 3.1809999999979355e-06, 3.1660000000023614e-06, 3.165999999998892e-06, 3.181000000001405e-06, 3.151999999999322e-06, 3.1800000000019313e-06, 3.2230000000001147e-06, 3.1669999999983656e-06, 3.2079999999976017e-06, 3.222000000000641e-06, 3.1809999999979355e-06, 3.1669999999983656e-06, 3.181000000001405e-06, 3.179999999998462e-06, 3.2079999999976017e-06, 3.179999999998462e-06, 3.181000000001405e-06, 3.179999999998462e-06, 3.1529999999987957e-06, 3.2079999999976017e-06, 3.181000000001405e-06, 3.1939999999980317e-06, 3.2079999999976017e-06, 3.179999999998462e-06, 3.181000000001405e-06, 3.1529999999987957e-06, 3.181000000001405e-06, 3.1809999999979355e-06, 3.181000000001405e-06, 3.195000000000975e-06, 3.1800000000019313e-06, 3.1669999999983656e-06, 3.1809999999979355e-06, 3.181000000001405e-06, 3.194000000001501e-06, 3.1800000000019313e-06, 3.179999999998462e-06, 3.124999999999656e-06, 3.165999999998892e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.395" endtime="20201115 22:03:05.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.391" endtime="20201115 22:03:05.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.400" endtime="20201115 22:03:05.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.404" endtime="20201115 22:03:05.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.402" endtime="20201115 22:03:05.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.399" endtime="20201115 22:03:05.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.031" endtime="20201115 22:03:05.424"></status>
</kw>
<msg timestamp="20201115 22:03:05.425" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.433" endtime="20201115 22:03:05.452"></status>
</kw>
<msg timestamp="20201115 22:03:05.453" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.432" endtime="20201115 22:03:05.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.454" endtime="20201115 22:03:05.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.456" endtime="20201115 22:03:05.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.429" endtime="20201115 22:03:05.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.427" endtime="20201115 22:03:05.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.465" endtime="20201115 22:03:05.750"></status>
</kw>
<msg timestamp="20201115 22:03:05.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020226792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.463" endtime="20201115 22:03:05.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020226792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.754" endtime="20201115 22:03:05.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.762" endtime="20201115 22:03:05.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.461" endtime="20201115 22:03:05.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.459" endtime="20201115 22:03:05.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.769" level="INFO">${RESULT} = [{'time': 0.020229972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.020393014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:05.766" endtime="20201115 22:03:05.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.782" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:05.770" endtime="20201115 22:03:05.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.787" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.786" endtime="20201115 22:03:05.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.790" level="INFO">VALUE: [3.179999999998462e-06, 3.208000000001071e-06, 3.195000000000975e-06, 3.2079999999976017e-06, 3.2090000000005448e-06, 3.1669999999983656e-06, 3.2219999999971716e-06, 3.165999999998892e-06, 3.167000000001835e-06, 3.181000000001405e-06, 3.1939999999980317e-06, 3.194000000001501e-06, 3.222000000000641e-06, 3.1800000000019313e-06, 3.195000000000975e-06, 3.208000000001071e-06, 3.195000000000975e-06, 3.249999999999781e-06, 3.1389999999992257e-06, 3.1669999999983656e-06, 3.181000000001405e-06, 3.249999999999781e-06, 3.2230000000001147e-06, 3.1809999999979355e-06, 3.179999999998462e-06, 3.1939999999980317e-06, 3.181000000001405e-06, 3.179999999998462e-06, 3.1949999999975054e-06, 3.2230000000001147e-06, 3.1529999999987957e-06, 3.179999999998462e-06, 3.208000000001071e-06, 3.194000000001501e-06, 3.181000000001405e-06, 3.1809999999979355e-06, 3.165999999998892e-06, 3.222000000000641e-06, 3.195000000000975e-06, 3.1669999999983656e-06, 3.194000000001501e-06, 3.208000000001071e-06, 3.194000000001501e-06, 3.194000000001501e-06, 3.181000000001405e-06, 3.1939999999980317e-06, 3.208000000001071e-06, 3.1809999999979355e-06, 3.1949999999975054e-06, 3.1949999999975054e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.788" endtime="20201115 22:03:05.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.784" endtime="20201115 22:03:05.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.793" endtime="20201115 22:03:05.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.796" endtime="20201115 22:03:05.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.795" endtime="20201115 22:03:05.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.791" endtime="20201115 22:03:05.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.425" endtime="20201115 22:03:05.817"></status>
</kw>
<msg timestamp="20201115 22:03:05.817" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.826" endtime="20201115 22:03:05.845"></status>
</kw>
<msg timestamp="20201115 22:03:05.845" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.824" endtime="20201115 22:03:05.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.846" endtime="20201115 22:03:05.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.849" endtime="20201115 22:03:05.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.822" endtime="20201115 22:03:05.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.820" endtime="20201115 22:03:05.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.858" endtime="20201115 22:03:06.145"></status>
</kw>
<msg timestamp="20201115 22:03:06.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020234431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.856" endtime="20201115 22:03:06.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020234431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.149" endtime="20201115 22:03:06.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.157" endtime="20201115 22:03:06.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.854" endtime="20201115 22:03:06.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.852" endtime="20201115 22:03:06.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.164" level="INFO">${RESULT} = [{'time': 0.020234431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.020398153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:06.161" endtime="20201115 22:03:06.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.178" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:06.166" endtime="20201115 22:03:06.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.183" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.182" endtime="20201115 22:03:06.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.185" level="INFO">VALUE: [3.167000000001835e-06, 3.1949999999975054e-06, 3.181000000001405e-06, 3.1669999999983656e-06, 3.1949999999975054e-06, 3.195000000000975e-06, 3.195000000000975e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.167000000001835e-06, 3.181000000001405e-06, 3.195000000000975e-06, 3.1809999999979355e-06, 3.2500000000032503e-06, 3.1660000000023614e-06, 3.1949999999975054e-06, 3.1809999999979355e-06, 3.222000000000641e-06, 3.194000000001501e-06, 3.195000000000975e-06, 3.1800000000019313e-06, 3.1809999999979355e-06, 3.195000000000975e-06, 3.179999999998462e-06, 3.222000000000641e-06, 3.1669999999983656e-06, 3.208000000001071e-06, 3.222000000000641e-06, 3.1520000000027915e-06, 3.1669999999983656e-06, 3.1809999999979355e-06, 3.165999999998892e-06, 3.165999999998892e-06, 3.194000000001501e-06, 3.194000000001501e-06, 3.195000000000975e-06, 3.1669999999983656e-06, 3.1800000000019313e-06, 3.1800000000019313e-06, 3.179999999998462e-06, 3.1949999999975054e-06, 3.153000000002265e-06, 3.194000000001501e-06, 3.1669999999983656e-06, 3.179999999998462e-06, 3.1809999999979355e-06, 3.1809999999979355e-06, 3.208000000001071e-06, 3.151999999999322e-06, 3.2090000000005448e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.184" endtime="20201115 22:03:06.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.179" endtime="20201115 22:03:06.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.188" endtime="20201115 22:03:06.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.192" endtime="20201115 22:03:06.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.190" endtime="20201115 22:03:06.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.187" endtime="20201115 22:03:06.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.818" endtime="20201115 22:03:06.212"></status>
</kw>
<msg timestamp="20201115 22:03:06.213" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.221" endtime="20201115 22:03:06.240"></status>
</kw>
<msg timestamp="20201115 22:03:06.241" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.220" endtime="20201115 22:03:06.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.242" endtime="20201115 22:03:06.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.244" endtime="20201115 22:03:06.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.217" endtime="20201115 22:03:06.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.215" endtime="20201115 22:03:06.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.253" endtime="20201115 22:03:06.539"></status>
</kw>
<msg timestamp="20201115 22:03:06.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.252" endtime="20201115 22:03:06.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.543" endtime="20201115 22:03:06.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.552" endtime="20201115 22:03:06.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.249" endtime="20201115 22:03:06.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.247" endtime="20201115 22:03:06.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.558" level="INFO">${RESULT} = [{'time': 0.020191194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2079999999976017e-06, 'source_diff': 3.2079999999976017e-06}, {'time': 0.020355153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:06.555" endtime="20201115 22:03:06.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.572" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:06.559" endtime="20201115 22:03:06.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.576" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.575" endtime="20201115 22:03:06.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.578" level="INFO">VALUE: [3.2079999999976017e-06, 3.2090000000005448e-06, 3.181000000001405e-06, 3.179999999998462e-06, 3.208000000001071e-06, 3.2369999999996846e-06, 3.208000000001071e-06, 3.167000000001835e-06, 3.1389999999992257e-06, 3.194000000001501e-06, 3.1800000000019313e-06, 3.165999999998892e-06, 3.1529999999987957e-06, 3.1389999999992257e-06, 3.179999999998462e-06, 3.194000000001501e-06, 3.195000000000975e-06, 3.194000000001501e-06, 3.1939999999980317e-06, 3.195000000000975e-06, 3.1660000000023614e-06, 3.194000000001501e-06, 3.165999999998892e-06, 3.181000000001405e-06, 3.2090000000005448e-06, 3.167000000001835e-06, 3.2090000000005448e-06, 3.236000000000211e-06, 3.1939999999980317e-06, 3.195000000000975e-06, 3.1939999999980317e-06, 3.1809999999979355e-06, 3.124999999999656e-06, 3.1389999999992257e-06, 3.1939999999980317e-06, 3.1809999999979355e-06, 3.195000000000975e-06, 3.179999999998462e-06, 3.179999999998462e-06, 3.208000000001071e-06, 3.195000000000975e-06, 3.181000000001405e-06, 3.194000000001501e-06, 3.179999999998462e-06, 3.165999999998892e-06, 3.195000000000975e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.194000000001501e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.577" endtime="20201115 22:03:06.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.573" endtime="20201115 22:03:06.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.582" endtime="20201115 22:03:06.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.585" endtime="20201115 22:03:06.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.584" endtime="20201115 22:03:06.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.580" endtime="20201115 22:03:06.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.213" endtime="20201115 22:03:06.606"></status>
</kw>
<msg timestamp="20201115 22:03:06.606" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.615" endtime="20201115 22:03:06.633"></status>
</kw>
<msg timestamp="20201115 22:03:06.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.613" endtime="20201115 22:03:06.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.634" endtime="20201115 22:03:06.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.637" endtime="20201115 22:03:06.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.611" endtime="20201115 22:03:06.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.608" endtime="20201115 22:03:06.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.646" endtime="20201115 22:03:06.933"></status>
</kw>
<msg timestamp="20201115 22:03:06.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020160167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.644" endtime="20201115 22:03:06.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020160167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.937" endtime="20201115 22:03:06.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.945" endtime="20201115 22:03:06.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.642" endtime="20201115 22:03:06.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.640" endtime="20201115 22:03:06.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.952" level="INFO">${RESULT} = [{'time': 0.020160167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2090000000005448e-06, 'source_diff': 3.2090000000005448e-06}, {'time': 0.020322861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:06.949" endtime="20201115 22:03:06.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.965" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:06.953" endtime="20201115 22:03:06.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.970" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.969" endtime="20201115 22:03:06.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.973" level="INFO">VALUE: [3.2090000000005448e-06, 3.194000000001501e-06, 3.194000000001501e-06, 3.179999999998462e-06, 3.194000000001501e-06, 3.2090000000005448e-06, 3.1800000000019313e-06, 3.165999999998892e-06, 3.153000000002265e-06, 3.1809999999979355e-06, 3.181000000001405e-06, 3.2079999999976017e-06, 3.179999999998462e-06, 3.1809999999979355e-06, 3.222000000000641e-06, 3.1669999999983656e-06, 3.1809999999979355e-06, 3.194000000001501e-06, 3.195000000000975e-06, 3.208000000001071e-06, 3.1800000000019313e-06, 3.195000000000975e-06, 3.1809999999979355e-06, 3.1949999999975054e-06, 3.195000000000975e-06, 3.181000000001405e-06, 3.153000000002265e-06, 3.181000000001405e-06, 3.194000000001501e-06, 3.137999999999752e-06, 3.208000000001071e-06, 3.1809999999979355e-06, 3.1949999999975054e-06, 3.181000000001405e-06, 3.1669999999983656e-06, 3.195000000000975e-06, 3.195000000000975e-06, 3.179999999998462e-06, 3.1669999999983656e-06, 3.194000000001501e-06, 3.249999999999781e-06, 3.1800000000019313e-06, 3.179999999998462e-06, 3.2219999999971716e-06, 3.222000000000641e-06, 3.1949999999975054e-06, 3.194000000001501e-06, 3.124999999999656e-06, 3.179999999998462e-06, 3.181000000001405e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.971" endtime="20201115 22:03:06.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.966" endtime="20201115 22:03:06.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.976" endtime="20201115 22:03:06.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.979" endtime="20201115 22:03:06.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.977" endtime="20201115 22:03:06.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.974" endtime="20201115 22:03:06.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.606" endtime="20201115 22:03:07.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.029" endtime="20201115 22:03:07.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.028" endtime="20201115 22:03:07.000"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.002" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.011" endtime="20201115 22:03:07.031"></status>
</kw>
<msg timestamp="20201115 22:03:07.031" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.009" endtime="20201115 22:03:07.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.032" endtime="20201115 22:03:07.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.035" endtime="20201115 22:03:07.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.007" endtime="20201115 22:03:07.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.005" endtime="20201115 22:03:07.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.044" endtime="20201115 22:03:07.333"></status>
</kw>
<msg timestamp="20201115 22:03:07.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022693444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.042" endtime="20201115 22:03:07.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022693444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.337" endtime="20201115 22:03:07.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.345" endtime="20201115 22:03:07.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.040" endtime="20201115 22:03:07.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.038" endtime="20201115 22:03:07.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.352" level="INFO">${RESULT} = [{'time': 0.022693444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319000000001626e-06, 'source_diff': 3.319000000001626e-06}, {'time': 0.022867069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:07.349" endtime="20201115 22:03:07.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.365" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:07.353" endtime="20201115 22:03:07.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.370" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.369" endtime="20201115 22:03:07.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.372" level="INFO">VALUE: [3.319000000001626e-06, 3.319000000001626e-06, 3.3469999999972966e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.2639999999993508e-06, 3.361000000000336e-06, 3.347000000000766e-06, 3.403000000002515e-06, 3.3480000000002397e-06, 3.3889999999994758e-06, 3.3329999999977267e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.319000000001626e-06, 3.333000000001196e-06, 3.388000000000002e-06, 3.319000000001626e-06, 3.3329999999977267e-06, 3.3329999999977267e-06, 3.3200000000011e-06, 3.3200000000011e-06, 3.374999999999906e-06, 3.3199999999976304e-06, 3.361000000000336e-06, 3.319000000001626e-06, 3.361000000000336e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.3329999999977267e-06, 3.374999999999906e-06, 3.319000000001626e-06, 3.3480000000002397e-06, 3.3200000000011e-06, 3.3469999999972966e-06, 3.3059999999980605e-06, 3.3189999999981568e-06, 3.3339999999972003e-06, 3.347000000000766e-06, 3.3339999999972003e-06, 3.3329999999977267e-06, 3.374999999999906e-06, 3.3189999999981568e-06, 3.333000000001196e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.371" endtime="20201115 22:03:07.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.366" endtime="20201115 22:03:07.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.376" endtime="20201115 22:03:07.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.379" endtime="20201115 22:03:07.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.377" endtime="20201115 22:03:07.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.374" endtime="20201115 22:03:07.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.003" endtime="20201115 22:03:07.400"></status>
</kw>
<msg timestamp="20201115 22:03:07.400" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.409" endtime="20201115 22:03:07.427"></status>
</kw>
<msg timestamp="20201115 22:03:07.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.407" endtime="20201115 22:03:07.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.430" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.429" endtime="20201115 22:03:07.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.432" endtime="20201115 22:03:07.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.405" endtime="20201115 22:03:07.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.402" endtime="20201115 22:03:07.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.441" endtime="20201115 22:03:07.729"></status>
</kw>
<msg timestamp="20201115 22:03:07.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020236389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.439" endtime="20201115 22:03:07.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020236389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.733" endtime="20201115 22:03:07.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.741" endtime="20201115 22:03:07.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.436" endtime="20201115 22:03:07.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.435" endtime="20201115 22:03:07.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.747" level="INFO">${RESULT} = [{'time': 0.020236389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.020410597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:07.744" endtime="20201115 22:03:07.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.761" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:07.748" endtime="20201115 22:03:07.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.765" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.764" endtime="20201115 22:03:07.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.768" level="INFO">VALUE: [3.4029999999990457e-06, 3.415999999999142e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.3889999999994758e-06, 3.347000000000766e-06, 3.3480000000002397e-06, 3.3329999999977267e-06, 3.347000000000766e-06, 3.3329999999977267e-06, 3.361000000000336e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.3469999999972966e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.347000000000766e-06, 3.2639999999993508e-06, 3.3329999999977267e-06, 3.3200000000011e-06, 3.3340000000006698e-06, 3.3480000000002397e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3469999999972966e-06, 3.3189999999981568e-06, 3.403000000002515e-06, 3.3340000000006698e-06, 3.3199999999976304e-06, 3.319000000001626e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.27800000000239e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.3329999999977267e-06, 3.3339999999972003e-06, 3.3200000000011e-06, 3.3480000000002397e-06, 3.3200000000011e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.347000000000766e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.766" endtime="20201115 22:03:07.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.762" endtime="20201115 22:03:07.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.771" endtime="20201115 22:03:07.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.774" endtime="20201115 22:03:07.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.773" endtime="20201115 22:03:07.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.769" endtime="20201115 22:03:07.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.400" endtime="20201115 22:03:07.795"></status>
</kw>
<msg timestamp="20201115 22:03:07.795" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.804" endtime="20201115 22:03:07.824"></status>
</kw>
<msg timestamp="20201115 22:03:07.824" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.802" endtime="20201115 22:03:07.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.825" endtime="20201115 22:03:07.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.827" endtime="20201115 22:03:07.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.800" endtime="20201115 22:03:07.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.798" endtime="20201115 22:03:07.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.836" endtime="20201115 22:03:08.122"></status>
</kw>
<msg timestamp="20201115 22:03:08.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020674125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020677472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.835" endtime="20201115 22:03:08.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020674125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020677472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.126" endtime="20201115 22:03:08.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.134" endtime="20201115 22:03:08.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.832" endtime="20201115 22:03:08.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.831" endtime="20201115 22:03:08.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.141" level="INFO">${RESULT} = [{'time': 0.020677472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.020851972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:08.137" endtime="20201115 22:03:08.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.154" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:08.142" endtime="20201115 22:03:08.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.158" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.158" endtime="20201115 22:03:08.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.161" level="INFO">VALUE: [3.3469999999972966e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.361000000000336e-06, 3.347000000000766e-06, 3.3469999999972966e-06, 3.361000000000336e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.401999999999572e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3200000000011e-06, 3.2779999999989207e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.3480000000002397e-06, 3.319000000001626e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.374999999999906e-06, 3.3329999999977267e-06, 3.3340000000006698e-06, 3.304999999998587e-06, 3.29200000000196e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.304999999998587e-06, 3.2779999999989207e-06, 3.3200000000011e-06, 3.3200000000011e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3889999999994758e-06, 3.3200000000011e-06, 3.3189999999981568e-06, 3.361000000000336e-06, 3.4169999999986156e-06, 3.3199999999976304e-06, 3.3059999999980605e-06, 3.347000000000766e-06, 3.3189999999981568e-06, 3.3199999999976304e-06, 3.3189999999981568e-06, 3.29200000000196e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.160" endtime="20201115 22:03:08.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.155" endtime="20201115 22:03:08.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.164" endtime="20201115 22:03:08.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.167" endtime="20201115 22:03:08.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.166" endtime="20201115 22:03:08.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.162" endtime="20201115 22:03:08.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.796" endtime="20201115 22:03:08.193"></status>
</kw>
<msg timestamp="20201115 22:03:08.193" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.203" endtime="20201115 22:03:08.223"></status>
</kw>
<msg timestamp="20201115 22:03:08.223" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.201" endtime="20201115 22:03:08.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.225" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.224" endtime="20201115 22:03:08.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.226" endtime="20201115 22:03:08.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.198" endtime="20201115 22:03:08.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.196" endtime="20201115 22:03:08.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.235" endtime="20201115 22:03:08.522"></status>
</kw>
<msg timestamp="20201115 22:03:08.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0261645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026167833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:08.234" endtime="20201115 22:03:08.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0261645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026167833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:08.526" endtime="20201115 22:03:08.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.534" endtime="20201115 22:03:08.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.231" endtime="20201115 22:03:08.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.230" endtime="20201115 22:03:08.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.541" level="INFO">${RESULT} = [{'time': 0.026167833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.026345181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:08.538" endtime="20201115 22:03:08.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.555" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:08.542" endtime="20201115 22:03:08.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.559" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.558" endtime="20201115 22:03:08.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.561" level="INFO">VALUE: [3.333000000001196e-06, 3.3059999999980605e-06, 3.333000000001196e-06, 3.3200000000011e-06, 3.3340000000006698e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.361000000000336e-06, 3.29200000000196e-06, 3.304999999998587e-06, 3.374999999999906e-06, 3.3329999999977267e-06, 3.3050000000020563e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.3329999999977267e-06, 3.3050000000020563e-06, 3.319000000001626e-06, 3.3340000000006698e-06, 3.3340000000006698e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.361000000000336e-06, 3.3340000000006698e-06, 3.3340000000006698e-06, 3.3200000000011e-06, 3.347000000000766e-06, 3.3329999999977267e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.361000000000336e-06, 3.30600000000153e-06, 3.319000000001626e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.3189999999946873e-06, 3.2910000000024864e-06, 3.3340000000006698e-06, 3.3340000000006698e-06, 3.3480000000002397e-06, 3.319999999994161e-06, 3.361000000000336e-06, 3.3340000000006698e-06, 3.361000000000336e-06, 3.2909999999955475e-06, 3.333000000001196e-06, 3.347000000000766e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.560" endtime="20201115 22:03:08.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.555" endtime="20201115 22:03:08.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.565" endtime="20201115 22:03:08.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.568" endtime="20201115 22:03:08.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.567" endtime="20201115 22:03:08.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.563" endtime="20201115 22:03:08.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.194" endtime="20201115 22:03:08.589"></status>
</kw>
<msg timestamp="20201115 22:03:08.589" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.598" endtime="20201115 22:03:08.617"></status>
</kw>
<msg timestamp="20201115 22:03:08.617" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.597" endtime="20201115 22:03:08.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.620" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.618" endtime="20201115 22:03:08.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.621" endtime="20201115 22:03:08.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.594" endtime="20201115 22:03:08.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.592" endtime="20201115 22:03:08.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.629" endtime="20201115 22:03:08.916"></status>
</kw>
<msg timestamp="20201115 22:03:08.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020260569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.628" endtime="20201115 22:03:08.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020260569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.920" endtime="20201115 22:03:08.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.928" endtime="20201115 22:03:08.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.625" endtime="20201115 22:03:08.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.624" endtime="20201115 22:03:08.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.935" level="INFO">${RESULT} = [{'time': 0.020263903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.020439736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:08.932" endtime="20201115 22:03:08.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.948" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:08.936" endtime="20201115 22:03:08.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.953" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.952" endtime="20201115 22:03:08.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.955" level="INFO">VALUE: [3.3340000000006698e-06, 3.304999999998587e-06, 3.3189999999981568e-06, 3.4029999999990457e-06, 3.347000000000766e-06, 3.3050000000020563e-06, 3.333000000001196e-06, 3.3199999999976304e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.374999999999906e-06, 3.3469999999972966e-06, 3.30600000000153e-06, 3.3329999999977267e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3339999999972003e-06, 3.3199999999976304e-06, 3.3480000000002397e-06, 3.3480000000002397e-06, 3.3189999999981568e-06, 3.3329999999977267e-06, 3.3480000000002397e-06, 3.3469999999972966e-06, 3.333000000001196e-06, 3.3469999999972966e-06, 3.374999999999906e-06, 3.3329999999977267e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.30600000000153e-06, 3.3480000000002397e-06, 3.3619999999998096e-06, 3.361000000000336e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.3469999999972966e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.333000000001196e-06, 3.4169999999986156e-06, 3.3200000000011e-06, 3.401999999999572e-06, 3.3329999999977267e-06, 3.401999999999572e-06, 3.3340000000006698e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.954" endtime="20201115 22:03:08.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.949" endtime="20201115 22:03:08.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.959" endtime="20201115 22:03:08.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.962" endtime="20201115 22:03:08.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.961" endtime="20201115 22:03:08.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.957" endtime="20201115 22:03:08.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.590" endtime="20201115 22:03:08.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.001" endtime="20201115 22:03:08.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.000" endtime="20201115 22:03:08.983"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.986" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.994" endtime="20201115 22:03:09.014"></status>
</kw>
<msg timestamp="20201115 22:03:09.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.993" endtime="20201115 22:03:09.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.017" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.016" endtime="20201115 22:03:09.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.018" endtime="20201115 22:03:09.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.990" endtime="20201115 22:03:09.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.988" endtime="20201115 22:03:09.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.027" endtime="20201115 22:03:09.315"></status>
</kw>
<msg timestamp="20201115 22:03:09.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.026" endtime="20201115 22:03:09.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.319" endtime="20201115 22:03:09.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.327" endtime="20201115 22:03:09.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.023" endtime="20201115 22:03:09.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.022" endtime="20201115 22:03:09.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.333" level="INFO">${RESULT} = [{'time': 0.022547639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.431000000001655e-06, 'source_diff': 3.431000000001655e-06}, {'time': 0.022734431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:09.330" endtime="20201115 22:03:09.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.347" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:09.334" endtime="20201115 22:03:09.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.351" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.350" endtime="20201115 22:03:09.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.354" level="INFO">VALUE: [3.431000000001655e-06, 3.4869999999999346e-06, 3.472000000000891e-06, 3.4869999999999346e-06, 3.5279999999991707e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.57000000000135e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.4730000000003647e-06, 3.486000000000461e-06, 3.4869999999999346e-06, 3.4029999999990457e-06, 3.486000000000461e-06, 3.4589999999973253e-06, 3.4169999999986156e-06, 3.458000000001321e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.4730000000003647e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.5559999999983105e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4730000000003647e-06, 3.500000000000031e-06, 3.4869999999999346e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.429999999998712e-06, 3.486000000000461e-06, 3.4309999999981855e-06, 3.486000000000461e-06, 3.54200000000221e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4860000000039304e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.352" endtime="20201115 22:03:09.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.348" endtime="20201115 22:03:09.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.357" endtime="20201115 22:03:09.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.361" endtime="20201115 22:03:09.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.359" endtime="20201115 22:03:09.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.356" endtime="20201115 22:03:09.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.986" endtime="20201115 22:03:09.382"></status>
</kw>
<msg timestamp="20201115 22:03:09.382" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.390" endtime="20201115 22:03:09.410"></status>
</kw>
<msg timestamp="20201115 22:03:09.410" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.389" endtime="20201115 22:03:09.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.412" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.411" endtime="20201115 22:03:09.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.414" endtime="20201115 22:03:09.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.386" endtime="20201115 22:03:09.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.384" endtime="20201115 22:03:09.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.422" endtime="20201115 22:03:09.710"></status>
</kw>
<msg timestamp="20201115 22:03:09.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020214028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020217514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.421" endtime="20201115 22:03:09.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020214028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020217514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.714" endtime="20201115 22:03:09.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.722" endtime="20201115 22:03:09.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.418" endtime="20201115 22:03:09.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.417" endtime="20201115 22:03:09.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.728" level="INFO">${RESULT} = [{'time': 0.020217514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.020403861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:09.725" endtime="20201115 22:03:09.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.742" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:09.729" endtime="20201115 22:03:09.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.747" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.746" endtime="20201115 22:03:09.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.749" level="INFO">VALUE: [3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4730000000003647e-06, 3.4579999999978517e-06, 3.500000000000031e-06, 3.4859999999969915e-06, 3.55600000000178e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.4309999999981855e-06, 3.472000000000891e-06, 3.417000000002085e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4719999999974216e-06, 3.4999999999965614e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4590000000007948e-06, 3.486000000000461e-06, 3.5419999999987406e-06, 3.500000000000031e-06, 3.4029999999990457e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.4730000000003647e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.4440000000017512e-06, 3.486000000000461e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.748" endtime="20201115 22:03:09.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.743" endtime="20201115 22:03:09.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.752" endtime="20201115 22:03:09.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.756" endtime="20201115 22:03:09.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.754" endtime="20201115 22:03:09.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.751" endtime="20201115 22:03:09.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.382" endtime="20201115 22:03:09.776"></status>
</kw>
<msg timestamp="20201115 22:03:09.776" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.785" endtime="20201115 22:03:09.805"></status>
</kw>
<msg timestamp="20201115 22:03:09.805" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.784" endtime="20201115 22:03:09.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.806" endtime="20201115 22:03:09.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.809" endtime="20201115 22:03:09.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.781" endtime="20201115 22:03:09.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.779" endtime="20201115 22:03:09.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.818" endtime="20201115 22:03:10.105"></status>
</kw>
<msg timestamp="20201115 22:03:10.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.816" endtime="20201115 22:03:10.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.109" endtime="20201115 22:03:10.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.117" endtime="20201115 22:03:10.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.814" endtime="20201115 22:03:10.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.812" endtime="20201115 22:03:10.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.124" level="INFO">${RESULT} = [{'time': 0.020233167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.020421542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:10.120" endtime="20201115 22:03:10.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.137" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:10.125" endtime="20201115 22:03:10.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.142" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.141" endtime="20201115 22:03:10.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.144" level="INFO">VALUE: [3.4730000000003647e-06, 3.4590000000007948e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.5419999999987406e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.4579999999978517e-06, 3.486000000000461e-06, 3.458000000001321e-06, 3.4439999999982818e-06, 3.4869999999999346e-06, 3.472000000000891e-06, 3.526999999999697e-06, 3.4719999999974216e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.4869999999999346e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.4869999999999346e-06, 3.472000000000891e-06, 3.4869999999999346e-06, 3.486000000000461e-06, 3.4869999999999346e-06, 3.458000000001321e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.4869999999999346e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.4439999999982818e-06, 3.4719999999974216e-06]</msg>
<status status="PASS" starttime="20201115 22:03:10.143" endtime="20201115 22:03:10.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.138" endtime="20201115 22:03:10.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.148" endtime="20201115 22:03:10.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.151" endtime="20201115 22:03:10.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.150" endtime="20201115 22:03:10.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.146" endtime="20201115 22:03:10.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.777" endtime="20201115 22:03:10.172"></status>
</kw>
<msg timestamp="20201115 22:03:10.172" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.181" endtime="20201115 22:03:10.200"></status>
</kw>
<msg timestamp="20201115 22:03:10.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.179" endtime="20201115 22:03:10.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.203" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.202" endtime="20201115 22:03:10.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.204" endtime="20201115 22:03:10.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.177" endtime="20201115 22:03:10.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.175" endtime="20201115 22:03:10.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.213" endtime="20201115 22:03:10.500"></status>
</kw>
<msg timestamp="20201115 22:03:10.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020279861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.211" endtime="20201115 22:03:10.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020279861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.504" endtime="20201115 22:03:10.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.512" endtime="20201115 22:03:10.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.209" endtime="20201115 22:03:10.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.207" endtime="20201115 22:03:10.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.519" level="INFO">${RESULT} = [{'time': 0.020279861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.020465986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:10.516" endtime="20201115 22:03:10.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.532" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:10.520" endtime="20201115 22:03:10.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.537" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.536" endtime="20201115 22:03:10.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.539" level="INFO">VALUE: [3.472000000000891e-06, 3.5139999999996008e-06, 3.4730000000003647e-06, 3.500000000000031e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.5139999999996008e-06, 3.472000000000891e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.4869999999999346e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.4859999999969915e-06, 3.4730000000003647e-06, 3.500000000000031e-06, 3.513000000000127e-06, 3.415999999999142e-06, 3.431000000001655e-06, 3.500000000000031e-06, 3.526999999999697e-06, 3.486000000000461e-06, 3.4719999999974216e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.4579999999978517e-06, 3.500000000000031e-06, 3.4730000000003647e-06, 3.4719999999974216e-06, 3.472000000000891e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4869999999999346e-06, 3.472000000000891e-06, 3.513000000000127e-06, 3.486000000000461e-06, 3.526999999999697e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4579999999978517e-06]</msg>
<status status="PASS" starttime="20201115 22:03:10.538" endtime="20201115 22:03:10.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.533" endtime="20201115 22:03:10.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.542" endtime="20201115 22:03:10.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.546" endtime="20201115 22:03:10.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.544" endtime="20201115 22:03:10.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.541" endtime="20201115 22:03:10.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.173" endtime="20201115 22:03:10.566"></status>
</kw>
<msg timestamp="20201115 22:03:10.567" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.575" endtime="20201115 22:03:10.595"></status>
</kw>
<msg timestamp="20201115 22:03:10.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.574" endtime="20201115 22:03:10.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.597" endtime="20201115 22:03:10.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.599" endtime="20201115 22:03:10.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.571" endtime="20201115 22:03:10.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.569" endtime="20201115 22:03:10.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.608" endtime="20201115 22:03:10.895"></status>
</kw>
<msg timestamp="20201115 22:03:10.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.607" endtime="20201115 22:03:10.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.899" endtime="20201115 22:03:10.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.907" endtime="20201115 22:03:10.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.604" endtime="20201115 22:03:10.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.603" endtime="20201115 22:03:10.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.914" level="INFO">${RESULT} = [{'time': 0.020209625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.020398667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:10.911" endtime="20201115 22:03:10.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.971" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:10.915" endtime="20201115 22:03:10.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.976" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.975" endtime="20201115 22:03:10.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.978" level="INFO">VALUE: [3.500000000000031e-06, 3.486000000000461e-06, 3.458000000001321e-06, 3.472000000000891e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.5279999999991707e-06, 3.513000000000127e-06, 3.445000000001225e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.4579999999978517e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4169999999986156e-06, 3.472000000000891e-06, 3.429999999998712e-06, 3.486000000000461e-06, 3.4869999999999346e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.554999999998837e-06, 3.5690000000018762e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.458000000001321e-06, 3.4859999999969915e-06, 3.472000000000891e-06, 3.472000000000891e-06, 3.4449999999977554e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.4719999999974216e-06, 3.4579999999978517e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.513000000000127e-06, 3.486000000000461e-06]</msg>
<status status="PASS" starttime="20201115 22:03:10.977" endtime="20201115 22:03:10.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.972" endtime="20201115 22:03:10.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.982" endtime="20201115 22:03:10.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.985" endtime="20201115 22:03:11.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.983" endtime="20201115 22:03:11.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.980" endtime="20201115 22:03:11.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.567" endtime="20201115 22:03:11.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.985" endtime="20201115 22:03:11.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.984" endtime="20201115 22:03:11.006"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.008" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.018" endtime="20201115 22:03:11.038"></status>
</kw>
<msg timestamp="20201115 22:03:11.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.016" endtime="20201115 22:03:11.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.041" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.040" endtime="20201115 22:03:11.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.042" endtime="20201115 22:03:11.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.013" endtime="20201115 22:03:11.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.011" endtime="20201115 22:03:11.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.051" endtime="20201115 22:03:11.339"></status>
</kw>
<msg timestamp="20201115 22:03:11.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023295736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.050" endtime="20201115 22:03:11.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023295736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.343" endtime="20201115 22:03:11.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.351" endtime="20201115 22:03:11.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.047" endtime="20201115 22:03:11.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.046" endtime="20201115 22:03:11.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.357" level="INFO">${RESULT} = [{'time': 0.023299375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.023500722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.354" endtime="20201115 22:03:11.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.371" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:11.358" endtime="20201115 22:03:11.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.375" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.374" endtime="20201115 22:03:11.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.378" level="INFO">VALUE: [3.6389999999997258e-06, 3.6390000000031952e-06, 3.611000000000586e-06, 3.6249999999966864e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.651999999999822e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.57000000000135e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.7079999999981017e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.638000000000252e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.665999999999392e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.651999999999822e-06, 3.6529999999992957e-06, 3.6390000000031952e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.651999999999822e-06, 3.625000000000156e-06, 3.695000000001475e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.597000000001016e-06, 3.638000000000252e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.625000000000156e-06]</msg>
<status status="PASS" starttime="20201115 22:03:11.376" endtime="20201115 22:03:11.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.372" endtime="20201115 22:03:11.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.381" endtime="20201115 22:03:11.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.384" endtime="20201115 22:03:11.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.383" endtime="20201115 22:03:11.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.379" endtime="20201115 22:03:11.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.009" endtime="20201115 22:03:11.405"></status>
</kw>
<msg timestamp="20201115 22:03:11.405" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.415" endtime="20201115 22:03:11.435"></status>
</kw>
<msg timestamp="20201115 22:03:11.435" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.413" endtime="20201115 22:03:11.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.438" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.436" endtime="20201115 22:03:11.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.439" endtime="20201115 22:03:11.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.410" endtime="20201115 22:03:11.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.408" endtime="20201115 22:03:11.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.448" endtime="20201115 22:03:11.733"></status>
</kw>
<msg timestamp="20201115 22:03:11.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021029528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021033194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.446" endtime="20201115 22:03:11.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021029528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021033194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.738" endtime="20201115 22:03:11.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.746" endtime="20201115 22:03:11.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.444" endtime="20201115 22:03:11.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.442" endtime="20201115 22:03:11.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.752" level="INFO">${RESULT} = [{'time': 0.021033194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6660000000028614e-06, 'source_diff': 3.6660000000028614e-06}, {'time': 0.021233319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.749" endtime="20201115 22:03:11.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.766" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:11.754" endtime="20201115 22:03:11.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.771" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.769" endtime="20201115 22:03:11.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.773" level="INFO">VALUE: [3.6660000000028614e-06, 3.638000000000252e-06, 3.5699999999978804e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6809999999984355e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.695000000001475e-06, 3.55600000000178e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6390000000031952e-06, 3.6249999999966864e-06, 3.6379999999967827e-06, 3.625000000000156e-06, 3.6390000000031952e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.709000000001045e-06, 3.638000000000252e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.693999999998532e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.5690000000018762e-06, 3.625000000000156e-06, 3.7219999999976716e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.681000000001905e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.625000000000156e-06, 3.583000000001446e-06]</msg>
<status status="PASS" starttime="20201115 22:03:11.772" endtime="20201115 22:03:11.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.767" endtime="20201115 22:03:11.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.776" endtime="20201115 22:03:11.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.779" endtime="20201115 22:03:11.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.778" endtime="20201115 22:03:11.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.774" endtime="20201115 22:03:11.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.406" endtime="20201115 22:03:11.800"></status>
</kw>
<msg timestamp="20201115 22:03:11.800" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.810" endtime="20201115 22:03:11.831"></status>
</kw>
<msg timestamp="20201115 22:03:11.832" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.808" endtime="20201115 22:03:11.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.834" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.833" endtime="20201115 22:03:11.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.835" endtime="20201115 22:03:11.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.805" endtime="20201115 22:03:11.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.803" endtime="20201115 22:03:11.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.844" endtime="20201115 22:03:12.130"></status>
</kw>
<msg timestamp="20201115 22:03:12.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021505681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.842" endtime="20201115 22:03:12.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021505681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.134" endtime="20201115 22:03:12.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.142" endtime="20201115 22:03:12.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.840" endtime="20201115 22:03:12.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.838" endtime="20201115 22:03:12.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.149" level="INFO">${RESULT} = [{'time': 0.021509278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.021708014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:12.146" endtime="20201115 22:03:12.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.163" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:12.150" endtime="20201115 22:03:12.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.167" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.166" endtime="20201115 22:03:12.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.170" level="INFO">VALUE: [3.597000000001016e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6809999999984355e-06, 3.6389999999997258e-06, 3.651999999999822e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.5969999999975466e-06, 3.6389999999997258e-06, 3.6949999999980054e-06, 3.6529999999992957e-06, 3.638000000000252e-06, 3.6389999999997258e-06, 3.583000000001446e-06, 3.681000000001905e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.6390000000031952e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.681000000001905e-06, 3.693999999998532e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.651999999999822e-06, 3.6529999999992957e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.168" endtime="20201115 22:03:12.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.164" endtime="20201115 22:03:12.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.173" endtime="20201115 22:03:12.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.176" endtime="20201115 22:03:12.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.175" endtime="20201115 22:03:12.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.171" endtime="20201115 22:03:12.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.801" endtime="20201115 22:03:12.197"></status>
</kw>
<msg timestamp="20201115 22:03:12.197" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.206" endtime="20201115 22:03:12.228"></status>
</kw>
<msg timestamp="20201115 22:03:12.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.205" endtime="20201115 22:03:12.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.231" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.229" endtime="20201115 22:03:12.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.232" endtime="20201115 22:03:12.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.202" endtime="20201115 22:03:12.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.200" endtime="20201115 22:03:12.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.241" endtime="20201115 22:03:12.526"></status>
</kw>
<msg timestamp="20201115 22:03:12.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021334944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021338583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.239" endtime="20201115 22:03:12.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021334944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021338583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.530" endtime="20201115 22:03:12.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.539" endtime="20201115 22:03:12.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.237" endtime="20201115 22:03:12.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.235" endtime="20201115 22:03:12.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.545" level="INFO">${RESULT} = [{'time': 0.021338583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.02154, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:12.542" endtime="20201115 22:03:12.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.560" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:12.546" endtime="20201115 22:03:12.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.564" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.563" endtime="20201115 22:03:12.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.567" level="INFO">VALUE: [3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.6809999999984355e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.695000000001475e-06, 3.6529999999992957e-06, 3.597000000001016e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.5829999999979767e-06, 3.6389999999997258e-06, 3.708000000001571e-06, 3.6389999999997258e-06, 3.583000000001446e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.651999999999822e-06, 3.6389999999997258e-06, 3.653000000002765e-06, 3.7079999999981017e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.6529999999992957e-06, 3.6390000000031952e-06, 3.625000000000156e-06, 3.57000000000135e-06, 3.651999999999822e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6669999999988656e-06, 3.6379999999967827e-06, 3.651999999999822e-06, 3.6389999999997258e-06, 3.6940000000020012e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6949999999980054e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.565" endtime="20201115 22:03:12.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.561" endtime="20201115 22:03:12.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.570" endtime="20201115 22:03:12.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.574" endtime="20201115 22:03:12.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.572" endtime="20201115 22:03:12.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.569" endtime="20201115 22:03:12.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.198" endtime="20201115 22:03:12.594"></status>
</kw>
<msg timestamp="20201115 22:03:12.595" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.604" endtime="20201115 22:03:12.624"></status>
</kw>
<msg timestamp="20201115 22:03:12.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.602" endtime="20201115 22:03:12.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.627" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.626" endtime="20201115 22:03:12.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.628" endtime="20201115 22:03:12.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.599" endtime="20201115 22:03:12.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.597" endtime="20201115 22:03:12.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.638" endtime="20201115 22:03:12.924"></status>
</kw>
<msg timestamp="20201115 22:03:12.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.636" endtime="20201115 22:03:12.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.928" endtime="20201115 22:03:12.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.936" endtime="20201115 22:03:12.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.634" endtime="20201115 22:03:12.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.632" endtime="20201115 22:03:12.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.943" level="INFO">${RESULT} = [{'time': 0.020268944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.638000000000252e-06, 'source_diff': 3.638000000000252e-06}, {'time': 0.020469181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:12.940" endtime="20201115 22:03:12.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.956" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:12.944" endtime="20201115 22:03:12.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.961" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.960" endtime="20201115 22:03:12.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.963" level="INFO">VALUE: [3.638000000000252e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.722000000001141e-06, 3.625000000000156e-06, 3.5829999999979767e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.5969999999975466e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.625000000000156e-06, 3.6109999999971165e-06, 3.667000000002335e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6809999999984355e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.709000000001045e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.651999999999822e-06, 3.5840000000009198e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.653000000002765e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.5980000000004897e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.6529999999992957e-06, 3.5690000000018762e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.5840000000009198e-06, 3.625000000000156e-06, 3.667000000002335e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.665999999999392e-06, 3.5969999999975466e-06, 3.638000000000252e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.962" endtime="20201115 22:03:12.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.957" endtime="20201115 22:03:12.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.967" endtime="20201115 22:03:12.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.971" endtime="20201115 22:03:12.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.969" endtime="20201115 22:03:12.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.965" endtime="20201115 22:03:12.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.595" endtime="20201115 22:03:12.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.007" endtime="20201115 22:03:12.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.006" endtime="20201115 22:03:12.992"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.994" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.003" endtime="20201115 22:03:13.023"></status>
</kw>
<msg timestamp="20201115 22:03:13.024" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.001" endtime="20201115 22:03:13.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.025" endtime="20201115 22:03:13.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.027" endtime="20201115 22:03:13.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.998" endtime="20201115 22:03:13.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.996" endtime="20201115 22:03:13.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.036" endtime="20201115 22:03:13.321"></status>
</kw>
<msg timestamp="20201115 22:03:13.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.035" endtime="20201115 22:03:13.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.325" endtime="20201115 22:03:13.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.333" endtime="20201115 22:03:13.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.032" endtime="20201115 22:03:13.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.030" endtime="20201115 22:03:13.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.340" level="INFO">${RESULT} = [{'time': 0.022601264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.02281525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:13.336" endtime="20201115 22:03:13.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.353" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:13.341" endtime="20201115 22:03:13.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.358" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.357" endtime="20201115 22:03:13.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.364" level="INFO">VALUE: [3.7779999999994207e-06, 3.7919999999989906e-06, 3.763999999999851e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.84800000000074e-06, 3.804999999999087e-06, 3.8200000000016e-06, 3.80600000000203e-06, 3.763999999999851e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.7499999999968114e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.77800000000289e-06, 3.776999999999947e-06, 3.790999999999517e-06, 3.79200000000246e-06, 3.776999999999947e-06, 3.776999999999947e-06, 3.736000000000711e-06, 3.83400000000117e-06, 3.77800000000289e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.79200000000246e-06, 3.804999999999087e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.80600000000203e-06, 3.722000000001141e-06, 3.77800000000289e-06, 3.80600000000203e-06, 3.7779999999994207e-06, 3.790999999999517e-06, 3.804999999999087e-06, 3.819000000002126e-06, 3.80600000000203e-06, 3.7919999999989906e-06, 3.80600000000203e-06, 3.7770000000034165e-06, 3.7220000000046105e-06, 3.7779999999959513e-06, 3.7910000000029864e-06, 3.77800000000289e-06, 3.791999999995521e-06, 3.7639999999963814e-06, 3.80600000000203e-06]</msg>
<status status="PASS" starttime="20201115 22:03:13.359" endtime="20201115 22:03:13.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.354" endtime="20201115 22:03:13.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.367" endtime="20201115 22:03:13.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.371" endtime="20201115 22:03:13.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.369" endtime="20201115 22:03:13.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.366" endtime="20201115 22:03:13.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.994" endtime="20201115 22:03:13.392"></status>
</kw>
<msg timestamp="20201115 22:03:13.392" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.401" endtime="20201115 22:03:13.422"></status>
</kw>
<msg timestamp="20201115 22:03:13.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.399" endtime="20201115 22:03:13.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.425" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.424" endtime="20201115 22:03:13.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.426" endtime="20201115 22:03:13.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.396" endtime="20201115 22:03:13.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.394" endtime="20201115 22:03:13.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.436" endtime="20201115 22:03:13.720"></status>
</kw>
<msg timestamp="20201115 22:03:13.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.434" endtime="20201115 22:03:13.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.724" endtime="20201115 22:03:13.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.732" endtime="20201115 22:03:13.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.432" endtime="20201115 22:03:13.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.430" endtime="20201115 22:03:13.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.739" level="INFO">${RESULT} = [{'time': 0.020255139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.020469083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:13.736" endtime="20201115 22:03:13.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.753" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:13.740" endtime="20201115 22:03:13.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.757" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.756" endtime="20201115 22:03:13.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.760" level="INFO">VALUE: [3.763999999999851e-06, 3.804999999999087e-06, 3.83400000000117e-06, 3.7919999999989906e-06, 3.818999999998657e-06, 3.804999999999087e-06, 3.790999999999517e-06, 3.790999999999517e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.77800000000289e-06, 3.763999999999851e-06, 3.790999999999517e-06, 3.84800000000074e-06, 3.8059999999985605e-06, 3.790999999999517e-06, 3.763000000000377e-06, 3.833000000001696e-06, 3.750000000000281e-06, 3.832999999998227e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.8609999999973665e-06, 3.8059999999985605e-06, 3.79200000000246e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.7910000000029864e-06, 3.763000000000377e-06, 3.77800000000289e-06, 3.80600000000203e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.8059999999985605e-06, 3.833000000001696e-06, 3.77800000000289e-06, 3.804999999999087e-06, 3.875000000000406e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.8050000000025563e-06, 3.790999999999517e-06, 3.8059999999985605e-06, 3.8749999999969365e-06, 3.736000000000711e-06, 3.875000000000406e-06]</msg>
<status status="PASS" starttime="20201115 22:03:13.758" endtime="20201115 22:03:13.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.754" endtime="20201115 22:03:13.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.763" endtime="20201115 22:03:13.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.766" endtime="20201115 22:03:13.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.765" endtime="20201115 22:03:13.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.761" endtime="20201115 22:03:13.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.392" endtime="20201115 22:03:13.787"></status>
</kw>
<msg timestamp="20201115 22:03:13.787" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.796" endtime="20201115 22:03:13.817"></status>
</kw>
<msg timestamp="20201115 22:03:13.818" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.794" endtime="20201115 22:03:13.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.820" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.819" endtime="20201115 22:03:13.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.821" endtime="20201115 22:03:13.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.792" endtime="20201115 22:03:13.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.790" endtime="20201115 22:03:13.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.831" endtime="20201115 22:03:14.117"></status>
</kw>
<msg timestamp="20201115 22:03:14.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.830" endtime="20201115 22:03:14.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.121" endtime="20201115 22:03:14.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.129" endtime="20201115 22:03:14.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.827" endtime="20201115 22:03:14.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.825" endtime="20201115 22:03:14.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.136" level="INFO">${RESULT} = [{'time': 0.020212236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.020423875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:14.132" endtime="20201115 22:03:14.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.151" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:14.137" endtime="20201115 22:03:14.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.155" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.154" endtime="20201115 22:03:14.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.158" level="INFO">VALUE: [3.833000000001696e-06, 3.79200000000246e-06, 3.819000000002126e-06, 3.80600000000203e-06, 3.8609999999973665e-06, 3.79200000000246e-06, 3.8059999999985605e-06, 3.819000000002126e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.79200000000246e-06, 3.79200000000246e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.790999999999517e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.8059999999985605e-06, 3.790999999999517e-06, 3.79200000000246e-06, 3.7359999999972415e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.819000000002126e-06, 3.790999999999517e-06, 3.804999999999087e-06, 3.750000000000281e-06, 3.8059999999985605e-06, 3.8059999999985605e-06, 3.763000000000377e-06, 3.750000000000281e-06, 3.8059999999985605e-06, 3.776999999999947e-06, 3.7640000000033202e-06, 3.790999999999517e-06, 3.790999999999517e-06, 3.722000000001141e-06, 3.819000000002126e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.7499999999968114e-06, 3.763999999999851e-06, 3.8059999999985605e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.7779999999994207e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.156" endtime="20201115 22:03:14.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.152" endtime="20201115 22:03:14.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.161" endtime="20201115 22:03:14.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.164" endtime="20201115 22:03:14.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.163" endtime="20201115 22:03:14.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.159" endtime="20201115 22:03:14.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.788" endtime="20201115 22:03:14.185"></status>
</kw>
<msg timestamp="20201115 22:03:14.185" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.194" endtime="20201115 22:03:14.215"></status>
</kw>
<msg timestamp="20201115 22:03:14.216" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.192" endtime="20201115 22:03:14.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.217" endtime="20201115 22:03:14.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.219" endtime="20201115 22:03:14.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.190" endtime="20201115 22:03:14.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.187" endtime="20201115 22:03:14.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.229" endtime="20201115 22:03:14.515"></status>
</kw>
<msg timestamp="20201115 22:03:14.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020208889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.227" endtime="20201115 22:03:14.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020208889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.519" endtime="20201115 22:03:14.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.527" endtime="20201115 22:03:14.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.225" endtime="20201115 22:03:14.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.223" endtime="20201115 22:03:14.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.534" level="INFO">${RESULT} = [{'time': 0.020208889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.020423944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:14.531" endtime="20201115 22:03:14.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.547" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:14.535" endtime="20201115 22:03:14.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.552" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.551" endtime="20201115 22:03:14.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.555" level="INFO">VALUE: [3.7779999999994207e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.8059999999985605e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 3.818999999998657e-06, 3.861000000000836e-06, 3.804999999999087e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.847000000001266e-06, 3.750000000000281e-06, 3.804999999999087e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 3.8199999999981304e-06, 3.763000000000377e-06, 3.750000000000281e-06, 3.77800000000289e-06, 3.790999999999517e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.763999999999851e-06, 3.776999999999947e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.804999999999087e-06, 3.776999999999947e-06, 3.818999999998657e-06, 3.7779999999994207e-06, 3.8059999999985605e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.832999999998227e-06, 3.7919999999989906e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.7919999999989906e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.553" endtime="20201115 22:03:14.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.548" endtime="20201115 22:03:14.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.558" endtime="20201115 22:03:14.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.561" endtime="20201115 22:03:14.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.560" endtime="20201115 22:03:14.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.556" endtime="20201115 22:03:14.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.185" endtime="20201115 22:03:14.582"></status>
</kw>
<msg timestamp="20201115 22:03:14.582" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.591" endtime="20201115 22:03:14.612"></status>
</kw>
<msg timestamp="20201115 22:03:14.612" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.589" endtime="20201115 22:03:14.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.614" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.613" endtime="20201115 22:03:14.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.615" endtime="20201115 22:03:14.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.587" endtime="20201115 22:03:14.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.585" endtime="20201115 22:03:14.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.625" endtime="20201115 22:03:14.910"></status>
</kw>
<msg timestamp="20201115 22:03:14.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020219361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.624" endtime="20201115 22:03:14.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020219361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.914" endtime="20201115 22:03:14.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.922" endtime="20201115 22:03:14.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.621" endtime="20201115 22:03:14.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.620" endtime="20201115 22:03:14.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.929" level="INFO">${RESULT} = [{'time': 0.020223167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.020438569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:14.926" endtime="20201115 22:03:14.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.943" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:14.930" endtime="20201115 22:03:14.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.947" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.946" endtime="20201115 22:03:14.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.950" level="INFO">VALUE: [3.8059999999985605e-06, 3.763000000000377e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.77800000000289e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.776999999999947e-06, 3.776999999999947e-06, 3.79200000000246e-06, 3.80600000000203e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.7219999999976716e-06, 3.8200000000016e-06, 3.79200000000246e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.708000000001571e-06, 3.818999999998657e-06, 3.790999999999517e-06, 3.790999999999517e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 3.763999999999851e-06, 3.790999999999517e-06, 3.818999999998657e-06, 3.8059999999985605e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.80600000000203e-06, 3.790999999999517e-06, 3.79200000000246e-06, 3.8199999999981304e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.77800000000289e-06, 3.7919999999989906e-06, 3.8059999999985605e-06, 3.7919999999989906e-06, 3.79200000000246e-06, 3.790999999999517e-06, 3.708000000001571e-06, 3.790999999999517e-06, 3.7779999999994207e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.948" endtime="20201115 22:03:14.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.943" endtime="20201115 22:03:14.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.953" endtime="20201115 22:03:14.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.956" endtime="20201115 22:03:14.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.954" endtime="20201115 22:03:14.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.951" endtime="20201115 22:03:14.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.582" endtime="20201115 22:03:14.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.993" endtime="20201115 22:03:14.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.992" endtime="20201115 22:03:14.977"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.979" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.988" endtime="20201115 22:03:15.010"></status>
</kw>
<msg timestamp="20201115 22:03:15.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.986" endtime="20201115 22:03:15.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.012" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.011" endtime="20201115 22:03:15.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.014" endtime="20201115 22:03:15.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.984" endtime="20201115 22:03:15.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.982" endtime="20201115 22:03:15.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.023" endtime="20201115 22:03:15.307"></status>
</kw>
<msg timestamp="20201115 22:03:15.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.021" endtime="20201115 22:03:15.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.311" endtime="20201115 22:03:15.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.319" endtime="20201115 22:03:15.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.019" endtime="20201115 22:03:15.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.017" endtime="20201115 22:03:15.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.326" level="INFO">${RESULT} = [{'time': 0.022561458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.022789792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:15.322" endtime="20201115 22:03:15.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.339" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:15.327" endtime="20201115 22:03:15.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.344" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.343" endtime="20201115 22:03:15.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.346" level="INFO">VALUE: [3.943999999998782e-06, 3.916999999999116e-06, 3.915999999999642e-06, 3.902000000000072e-06, 3.888999999999976e-06, 3.943999999998782e-06, 3.944000000002251e-06, 3.888999999999976e-06, 3.957999999998352e-06, 3.916999999999116e-06, 3.945000000001725e-06, 3.931000000002155e-06, 3.9309999999986855e-06, 3.846999999997797e-06, 3.931000000002155e-06, 3.944000000002251e-06, 3.9859999999974915e-06, 3.929999999999212e-06, 3.875000000000406e-06, 3.915999999999642e-06, 3.931000000002155e-06, 3.943999999998782e-06, 3.875000000000406e-06, 3.929999999999212e-06, 3.958000000001821e-06, 3.930000000002681e-06, 3.929999999999212e-06, 3.929999999999212e-06, 3.945000000001725e-06, 3.916999999999116e-06, 3.931000000002155e-06, 3.930000000002681e-06, 3.915999999999642e-06, 3.916999999999116e-06, 3.931000000002155e-06, 3.9309999999986855e-06, 3.944000000002251e-06, 3.929999999999212e-06, 3.929999999999212e-06, 3.9309999999986855e-06, 3.875000000000406e-06, 3.929999999999212e-06, 3.943999999998782e-06, 3.9309999999986855e-06, 3.9449999999982555e-06, 3.929999999999212e-06, 3.916999999999116e-06, 3.9449999999982555e-06, 3.9449999999982555e-06, 3.9449999999982555e-06]</msg>
<status status="PASS" starttime="20201115 22:03:15.345" endtime="20201115 22:03:15.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.340" endtime="20201115 22:03:15.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.349" endtime="20201115 22:03:15.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.353" endtime="20201115 22:03:15.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.351" endtime="20201115 22:03:15.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.348" endtime="20201115 22:03:15.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.980" endtime="20201115 22:03:15.374"></status>
</kw>
<msg timestamp="20201115 22:03:15.374" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.383" endtime="20201115 22:03:15.405"></status>
</kw>
<msg timestamp="20201115 22:03:15.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.381" endtime="20201115 22:03:15.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.408" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.406" endtime="20201115 22:03:15.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.409" endtime="20201115 22:03:15.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.378" endtime="20201115 22:03:15.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.376" endtime="20201115 22:03:15.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.419" endtime="20201115 22:03:15.702"></status>
</kw>
<msg timestamp="20201115 22:03:15.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020271486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.417" endtime="20201115 22:03:15.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020271486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.706" endtime="20201115 22:03:15.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.714" endtime="20201115 22:03:15.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.415" endtime="20201115 22:03:15.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.413" endtime="20201115 22:03:15.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.721" level="INFO">${RESULT} = [{'time': 0.020275417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.931000000002155e-06, 'source_diff': 3.931000000002155e-06}, {'time': 0.020504097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:15.717" endtime="20201115 22:03:15.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.735" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:15.722" endtime="20201115 22:03:15.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.740" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.738" endtime="20201115 22:03:15.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.742" level="INFO">VALUE: [3.931000000002155e-06, 3.943999999998782e-06, 3.9309999999986855e-06, 3.944000000002251e-06, 3.972000000001391e-06, 3.930000000002681e-06, 3.902999999999546e-06, 3.944000000002251e-06, 3.931000000002155e-06, 3.986000000000961e-06, 3.9309999999986855e-06, 3.943999999998782e-06, 3.915999999999642e-06, 3.944000000002251e-06, 3.929999999999212e-06, 3.9309999999986855e-06, 3.9309999999986855e-06, 3.9449999999982555e-06, 3.943999999998782e-06, 3.943999999998782e-06, 3.929999999999212e-06, 3.943999999998782e-06, 3.929999999999212e-06, 3.916999999999116e-06, 3.959000000001295e-06, 3.943999999998782e-06, 3.945000000001725e-06, 3.944000000002251e-06, 3.9309999999986855e-06, 4.014000000000101e-06, 3.931000000002155e-06, 3.943999999998782e-06, 3.9309999999986855e-06, 3.945000000001725e-06, 3.943999999998782e-06, 3.929999999999212e-06, 3.9309999999986855e-06, 3.957999999998352e-06, 3.9309999999986855e-06, 3.986000000000961e-06, 3.959000000001295e-06, 3.958000000001821e-06, 3.902000000000072e-06, 3.9309999999986855e-06, 3.902999999999546e-06, 3.86200000000031e-06, 3.9449999999982555e-06, 3.971999999997922e-06, 3.958000000001821e-06, 3.958999999997825e-06]</msg>
<status status="PASS" starttime="20201115 22:03:15.741" endtime="20201115 22:03:15.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.736" endtime="20201115 22:03:15.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.745" endtime="20201115 22:03:15.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.749" endtime="20201115 22:03:15.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.747" endtime="20201115 22:03:15.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.744" endtime="20201115 22:03:15.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.374" endtime="20201115 22:03:15.769"></status>
</kw>
<msg timestamp="20201115 22:03:15.769" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.779" endtime="20201115 22:03:15.801"></status>
</kw>
<msg timestamp="20201115 22:03:15.802" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.777" endtime="20201115 22:03:15.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.804" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.803" endtime="20201115 22:03:15.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.805" endtime="20201115 22:03:15.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.774" endtime="20201115 22:03:15.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.772" endtime="20201115 22:03:15.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.815" endtime="20201115 22:03:16.099"></status>
</kw>
<msg timestamp="20201115 22:03:16.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020827181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.813" endtime="20201115 22:03:16.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020827181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.103" endtime="20201115 22:03:16.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.111" endtime="20201115 22:03:16.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.811" endtime="20201115 22:03:16.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.809" endtime="20201115 22:03:16.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.118" level="INFO">${RESULT} = [{'time': 0.020831153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.021057861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:16.115" endtime="20201115 22:03:16.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.131" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:16.119" endtime="20201115 22:03:16.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.136" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.135" endtime="20201115 22:03:16.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.138" level="INFO">VALUE: [3.972000000001391e-06, 3.958000000001821e-06, 3.957999999998352e-06, 3.943999999998782e-06, 3.9309999999986855e-06, 3.9309999999986855e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.929999999999212e-06, 3.931000000002155e-06, 3.943999999998782e-06, 3.944000000002251e-06, 3.929999999999212e-06, 3.958000000001821e-06, 3.9309999999986855e-06, 3.9309999999986855e-06, 3.945000000001725e-06, 3.931000000002155e-06, 3.9309999999986855e-06, 3.929999999999212e-06, 3.943999999998782e-06, 3.943999999998782e-06, 3.9160000000031114e-06, 3.929999999999212e-06, 3.943999999998782e-06, 3.916999999999116e-06, 3.9309999999986855e-06, 3.931000000002155e-06, 3.931000000002155e-06, 4.000000000000531e-06, 3.902999999999546e-06, 3.929999999999212e-06, 3.944000000002251e-06, 3.929999999999212e-06, 3.9309999999986855e-06, 3.945000000001725e-06, 3.9449999999982555e-06, 3.9449999999982555e-06, 3.945000000001725e-06, 3.945000000001725e-06, 3.958000000001821e-06, 3.959000000001295e-06, 3.9309999999986855e-06, 3.944000000002251e-06, 3.929999999999212e-06, 3.888999999999976e-06, 3.9449999999982555e-06, 3.9309999999986855e-06, 3.915999999999642e-06, 3.943999999998782e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.137" endtime="20201115 22:03:16.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.132" endtime="20201115 22:03:16.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.142" endtime="20201115 22:03:16.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.145" endtime="20201115 22:03:16.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.144" endtime="20201115 22:03:16.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.140" endtime="20201115 22:03:16.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.770" endtime="20201115 22:03:16.166"></status>
</kw>
<msg timestamp="20201115 22:03:16.166" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.175" endtime="20201115 22:03:16.196"></status>
</kw>
<msg timestamp="20201115 22:03:16.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.174" endtime="20201115 22:03:16.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.198" endtime="20201115 22:03:16.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.200" endtime="20201115 22:03:16.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.171" endtime="20201115 22:03:16.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.169" endtime="20201115 22:03:16.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.210" endtime="20201115 22:03:16.497"></status>
</kw>
<msg timestamp="20201115 22:03:16.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020665639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020669556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.209" endtime="20201115 22:03:16.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020665639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020669556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.501" endtime="20201115 22:03:16.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.509" endtime="20201115 22:03:16.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.206" endtime="20201115 22:03:16.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.204" endtime="20201115 22:03:16.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.516" level="INFO">${RESULT} = [{'time': 0.020669556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.020897083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:16.512" endtime="20201115 22:03:16.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.529" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:16.517" endtime="20201115 22:03:16.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.534" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.533" endtime="20201115 22:03:16.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.536" level="INFO">VALUE: [3.916999999999116e-06, 3.929999999999212e-06, 3.943999999998782e-06, 3.9309999999986855e-06, 3.9449999999982555e-06, 3.943999999998782e-06, 3.930000000002681e-06, 3.944000000002251e-06, 3.945000000001725e-06, 3.9309999999986855e-06, 4.000000000000531e-06, 3.9859999999974915e-06, 3.943999999998782e-06, 3.945000000001725e-06, 3.929999999999212e-06, 3.9309999999986855e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.930000000002681e-06, 3.916999999999116e-06, 3.929999999999212e-06, 3.930000000002681e-06, 3.986000000000961e-06, 3.929999999999212e-06, 3.931000000002155e-06, 3.916999999999116e-06, 3.945000000001725e-06, 3.9309999999986855e-06, 3.9449999999982555e-06, 3.931000000002155e-06, 3.917000000002585e-06, 3.958999999997825e-06, 3.9309999999986855e-06, 3.875000000000406e-06, 3.915999999999642e-06, 3.915999999999642e-06, 3.888999999999976e-06, 3.931000000002155e-06, 3.9449999999982555e-06, 3.943999999998782e-06, 3.959000000001295e-06, 3.9999999999970615e-06, 3.915999999999642e-06, 3.944000000002251e-06, 3.943999999998782e-06, 3.958000000001821e-06, 3.943999999998782e-06, 3.958999999997825e-06, 3.9449999999982555e-06, 3.944000000005721e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.535" endtime="20201115 22:03:16.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.530" endtime="20201115 22:03:16.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.540" endtime="20201115 22:03:16.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.543" endtime="20201115 22:03:16.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.542" endtime="20201115 22:03:16.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.538" endtime="20201115 22:03:16.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.167" endtime="20201115 22:03:16.564"></status>
</kw>
<msg timestamp="20201115 22:03:16.564" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.573" endtime="20201115 22:03:16.594"></status>
</kw>
<msg timestamp="20201115 22:03:16.595" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.571" endtime="20201115 22:03:16.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.597" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.596" endtime="20201115 22:03:16.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.598" endtime="20201115 22:03:16.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.569" endtime="20201115 22:03:16.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.567" endtime="20201115 22:03:16.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.608" endtime="20201115 22:03:16.891"></status>
</kw>
<msg timestamp="20201115 22:03:16.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020262903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.606" endtime="20201115 22:03:16.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020262903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.895" endtime="20201115 22:03:16.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.903" endtime="20201115 22:03:16.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.604" endtime="20201115 22:03:16.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.602" endtime="20201115 22:03:16.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.910" level="INFO">${RESULT} = [{'time': 0.020266847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.944000000002251e-06, 'source_diff': 3.944000000002251e-06}, {'time': 0.020494875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:16.906" endtime="20201115 22:03:16.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.923" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:16.911" endtime="20201115 22:03:16.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.928" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.927" endtime="20201115 22:03:16.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.930" level="INFO">VALUE: [3.944000000002251e-06, 3.9309999999986855e-06, 3.943999999998782e-06, 3.986999999996965e-06, 3.929999999999212e-06, 3.915999999999642e-06, 3.915999999999642e-06, 3.945000000001725e-06, 3.929999999999212e-06, 3.943999999998782e-06, 3.9449999999982555e-06, 3.916999999999116e-06, 3.957999999998352e-06, 3.929999999999212e-06, 3.931000000002155e-06, 3.9309999999986855e-06, 3.9309999999986855e-06, 3.9449999999982555e-06, 3.931000000002155e-06, 3.915999999999642e-06, 3.959000000001295e-06, 3.9449999999982555e-06, 3.931000000002155e-06, 3.929999999999212e-06, 3.888999999999976e-06, 4.000000000000531e-06, 3.945000000001725e-06, 3.943999999998782e-06, 3.888999999999976e-06, 3.9309999999986855e-06, 3.9449999999982555e-06, 3.971999999997922e-06, 3.9309999999986855e-06, 3.943999999998782e-06, 3.929999999999212e-06, 3.9449999999982555e-06, 3.943999999998782e-06, 3.9859999999974915e-06, 3.943999999998782e-06, 3.944000000002251e-06, 3.972000000001391e-06, 3.9309999999986855e-06, 3.931000000002155e-06, 3.915999999999642e-06, 3.9449999999982555e-06, 3.915999999999642e-06, 3.958000000001821e-06, 3.915999999999642e-06, 3.945000000001725e-06, 3.9449999999982555e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.929" endtime="20201115 22:03:16.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.924" endtime="20201115 22:03:16.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.934" endtime="20201115 22:03:16.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.937" endtime="20201115 22:03:16.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.936" endtime="20201115 22:03:16.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.932" endtime="20201115 22:03:16.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.565" endtime="20201115 22:03:16.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.978" endtime="20201115 22:03:16.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.977" endtime="20201115 22:03:16.958"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.960" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.969" endtime="20201115 22:03:16.992"></status>
</kw>
<msg timestamp="20201115 22:03:16.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.967" endtime="20201115 22:03:16.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.995" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.993" endtime="20201115 22:03:16.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.996" endtime="20201115 22:03:16.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.965" endtime="20201115 22:03:16.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.963" endtime="20201115 22:03:16.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.005" endtime="20201115 22:03:17.290"></status>
</kw>
<msg timestamp="20201115 22:03:17.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.003" endtime="20201115 22:03:17.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.294" endtime="20201115 22:03:17.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.302" endtime="20201115 22:03:17.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.001" endtime="20201115 22:03:17.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.999" endtime="20201115 22:03:17.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.309" level="INFO">${RESULT} = [{'time': 0.022797069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.023041264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:17.305" endtime="20201115 22:03:17.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.323" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:17.310" endtime="20201115 22:03:17.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.328" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.327" endtime="20201115 22:03:17.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.332" level="INFO">VALUE: [4.082999999998477e-06, 4.0699999999983805e-06, 4.054999999999337e-06, 4.08399999999795e-06, 4.125000000000656e-06, 4.165999999999892e-06, 4.0699999999983805e-06, 4.069000000002376e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.083000000001946e-06, 4.152999999999796e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.027999999999671e-06, 4.08400000000142e-06, 4.08400000000142e-06, 4.055000000002806e-06, 4.0699999999983805e-06, 4.096999999998047e-06, 4.1109999999976166e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.041999999999241e-06, 4.08399999999795e-06, 4.083000000001946e-06, 4.014000000000101e-06, 4.09800000000099e-06, 4.11200000000056e-06, 4.08400000000142e-06, 4.1109999999976166e-06, 4.08400000000142e-06, 4.082999999998477e-06, 4.082999999998477e-06, 4.068999999998907e-06, 4.068999999995437e-06, 4.083000000001946e-06, 4.082999999995007e-06, 4.083000000001946e-06, 4.07000000000185e-06, 4.09800000000099e-06, 4.069000000002376e-06, 4.069000000002376e-06, 4.069999999994911e-06, 4.07000000000185e-06, 4.082999999995007e-06, 4.097000000001516e-06, 4.07000000000185e-06, 4.08400000000142e-06, 4.111000000001086e-06]</msg>
<status status="PASS" starttime="20201115 22:03:17.330" endtime="20201115 22:03:17.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.324" endtime="20201115 22:03:17.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.335" endtime="20201115 22:03:17.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.338" endtime="20201115 22:03:17.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.337" endtime="20201115 22:03:17.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.333" endtime="20201115 22:03:17.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.961" endtime="20201115 22:03:17.359"></status>
</kw>
<msg timestamp="20201115 22:03:17.359" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.368" endtime="20201115 22:03:17.391"></status>
</kw>
<msg timestamp="20201115 22:03:17.391" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.366" endtime="20201115 22:03:17.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.394" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.392" endtime="20201115 22:03:17.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.395" endtime="20201115 22:03:17.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.364" endtime="20201115 22:03:17.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.362" endtime="20201115 22:03:17.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.405" endtime="20201115 22:03:17.690"></status>
</kw>
<msg timestamp="20201115 22:03:17.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.403" endtime="20201115 22:03:17.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.694" endtime="20201115 22:03:17.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.702" endtime="20201115 22:03:17.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.401" endtime="20201115 22:03:17.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.399" endtime="20201115 22:03:17.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.708" level="INFO">${RESULT} = [{'time': 0.020233111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.020474181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:17.705" endtime="20201115 22:03:17.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.722" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:17.709" endtime="20201115 22:03:17.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.727" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.726" endtime="20201115 22:03:17.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.729" level="INFO">VALUE: [4.02800000000314e-06, 4.07000000000185e-06, 4.166999999999366e-06, 4.0699999999983805e-06, 4.082999999998477e-06, 4.08399999999795e-06, 4.096999999998047e-06, 4.096999999998047e-06, 4.1249999999971865e-06, 4.068999999998907e-06, 4.111000000001086e-06, 4.069000000002376e-06, 4.09799999999752e-06, 4.08399999999795e-06, 4.0410000000032364e-06, 4.097000000001516e-06, 4.082999999998477e-06, 4.097000000001516e-06, 4.083000000001946e-06, 4.097000000001516e-06, 4.08399999999795e-06, 4.083000000001946e-06, 4.082999999998477e-06, 4.096999999998047e-06, 4.069000000002376e-06, 4.082999999998477e-06, 4.082999999998477e-06, 4.068999999998907e-06, 4.139000000000226e-06, 4.096999999998047e-06, 4.07000000000185e-06, 4.082999999998477e-06, 4.05600000000228e-06, 4.082999999998477e-06, 4.097000000001516e-06, 4.054999999999337e-06, 4.08400000000142e-06, 4.068999999998907e-06, 4.139000000000226e-06, 4.0559999999988106e-06, 4.069000000002376e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.166999999999366e-06, 4.083000000001946e-06, 4.0559999999988106e-06, 4.07000000000185e-06, 4.082999999995007e-06, 4.055000000002806e-06, 4.08400000000142e-06]</msg>
<status status="PASS" starttime="20201115 22:03:17.728" endtime="20201115 22:03:17.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.723" endtime="20201115 22:03:17.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.732" endtime="20201115 22:03:17.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.736" endtime="20201115 22:03:17.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.734" endtime="20201115 22:03:17.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.731" endtime="20201115 22:03:17.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.360" endtime="20201115 22:03:17.756"></status>
</kw>
<msg timestamp="20201115 22:03:17.757" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.765" endtime="20201115 22:03:17.787"></status>
</kw>
<msg timestamp="20201115 22:03:17.788" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.764" endtime="20201115 22:03:17.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.789" endtime="20201115 22:03:17.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.791" endtime="20201115 22:03:17.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.761" endtime="20201115 22:03:17.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.759" endtime="20201115 22:03:17.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.801" endtime="20201115 22:03:18.087"></status>
</kw>
<msg timestamp="20201115 22:03:18.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.800" endtime="20201115 22:03:18.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.091" endtime="20201115 22:03:18.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.099" endtime="20201115 22:03:18.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.797" endtime="20201115 22:03:18.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.795" endtime="20201115 22:03:18.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.106" level="INFO">${RESULT} = [{'time': 0.020326069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.020569264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:18.102" endtime="20201115 22:03:18.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.120" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:18.107" endtime="20201115 22:03:18.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.124" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.123" endtime="20201115 22:03:18.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.126" level="INFO">VALUE: [4.082999999998477e-06, 4.07000000000185e-06, 4.125000000000656e-06, 4.069000000002376e-06, 4.068999999998907e-06, 4.082999999998477e-06, 4.082999999998477e-06, 4.125000000000656e-06, 4.08400000000142e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.1109999999976166e-06, 4.07000000000185e-06, 4.068999999998907e-06, 4.069000000002376e-06, 4.096999999998047e-06, 4.082999999998477e-06, 4.069000000002376e-06, 4.082999999998477e-06, 4.083000000001946e-06, 4.08400000000142e-06, 4.07000000000185e-06, 4.09800000000099e-06, 4.097000000001516e-06, 4.138000000000752e-06, 4.097000000001516e-06, 4.09800000000099e-06, 4.083000000001946e-06, 4.111000000001086e-06, 4.014000000000101e-06, 4.1109999999976166e-06, 4.139000000000226e-06, 4.027999999999671e-06, 4.069000000002376e-06, 4.166999999999366e-06, 4.068999999998907e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.054999999999337e-06, 4.096999999998047e-06, 4.08399999999795e-06, 4.111000000001086e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.068999999995437e-06, 4.097999999994051e-06, 4.083000000001946e-06, 4.096999999994577e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.125" endtime="20201115 22:03:18.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.120" endtime="20201115 22:03:18.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.130" endtime="20201115 22:03:18.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.133" endtime="20201115 22:03:18.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.131" endtime="20201115 22:03:18.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.128" endtime="20201115 22:03:18.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.757" endtime="20201115 22:03:18.154"></status>
</kw>
<msg timestamp="20201115 22:03:18.154" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.163" endtime="20201115 22:03:18.185"></status>
</kw>
<msg timestamp="20201115 22:03:18.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.161" endtime="20201115 22:03:18.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.187" endtime="20201115 22:03:18.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.189" endtime="20201115 22:03:18.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.158" endtime="20201115 22:03:18.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.156" endtime="20201115 22:03:18.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.199" endtime="20201115 22:03:18.488"></status>
</kw>
<msg timestamp="20201115 22:03:18.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.197" endtime="20201115 22:03:18.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.492" endtime="20201115 22:03:18.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.507" endtime="20201115 22:03:18.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.195" endtime="20201115 22:03:18.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.193" endtime="20201115 22:03:18.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.514" level="INFO">${RESULT} = [{'time': 0.020390014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.020631486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:18.511" endtime="20201115 22:03:18.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.528" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:18.515" endtime="20201115 22:03:18.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.533" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.532" endtime="20201115 22:03:18.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.535" level="INFO">VALUE: [4.083000000001946e-06, 4.111000000001086e-06, 4.11200000000056e-06, 4.068999999998907e-06, 4.125000000000656e-06, 4.082999999998477e-06, 4.083000000001946e-06, 4.08400000000142e-06, 4.068999999998907e-06, 4.111000000001086e-06, 4.096999999998047e-06, 4.082999999998477e-06, 4.152999999999796e-06, 4.096999999998047e-06, 4.08400000000142e-06, 4.08400000000142e-06, 4.083000000001946e-06, 4.054999999999337e-06, 4.096999999998047e-06, 4.082999999998477e-06, 4.08400000000142e-06, 4.068999999998907e-06, 4.041999999999241e-06, 4.08399999999795e-06, 4.068999999998907e-06, 4.040999999999767e-06, 4.179999999999462e-06, 4.152999999999796e-06, 4.0699999999983805e-06, 4.000000000000531e-06, 4.068999999998907e-06, 4.111000000001086e-06, 4.054999999999337e-06, 4.0559999999988106e-06, 4.152999999999796e-06, 4.04200000000271e-06, 4.082999999998477e-06, 4.08400000000142e-06, 4.083000000001946e-06, 4.055000000002806e-06, 4.09800000000099e-06, 4.08399999999795e-06, 4.08400000000142e-06, 4.139000000000226e-06, 4.083000000001946e-06, 4.01400000000357e-06, 4.083000000001946e-06, 4.08400000000142e-06, 4.08400000000142e-06, 4.139000000000226e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.534" endtime="20201115 22:03:18.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.529" endtime="20201115 22:03:18.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.539" endtime="20201115 22:03:18.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.544" endtime="20201115 22:03:18.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.541" endtime="20201115 22:03:18.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.537" endtime="20201115 22:03:18.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.154" endtime="20201115 22:03:18.565"></status>
</kw>
<msg timestamp="20201115 22:03:18.565" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.574" endtime="20201115 22:03:18.597"></status>
</kw>
<msg timestamp="20201115 22:03:18.597" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.572" endtime="20201115 22:03:18.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.600" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.598" endtime="20201115 22:03:18.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.601" endtime="20201115 22:03:18.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.570" endtime="20201115 22:03:18.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.568" endtime="20201115 22:03:18.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.610" endtime="20201115 22:03:18.896"></status>
</kw>
<msg timestamp="20201115 22:03:18.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020382861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.609" endtime="20201115 22:03:18.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020382861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.900" endtime="20201115 22:03:18.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.908" endtime="20201115 22:03:18.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.606" endtime="20201115 22:03:18.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.605" endtime="20201115 22:03:18.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.915" level="INFO">${RESULT} = [{'time': 0.020382861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.020623333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:18.912" endtime="20201115 22:03:18.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.929" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:18.916" endtime="20201115 22:03:18.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.934" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.933" endtime="20201115 22:03:18.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.936" level="INFO">VALUE: [4.082999999998477e-06, 4.097000000001516e-06, 4.0699999999983805e-06, 4.083000000001946e-06, 4.0559999999988106e-06, 4.09800000000099e-06, 4.09800000000099e-06, 4.097000000001516e-06, 4.082999999998477e-06, 4.082999999998477e-06, 4.082999999998477e-06, 4.068999999998907e-06, 4.069000000002376e-06, 4.0699999999983805e-06, 4.082999999998477e-06, 4.082999999998477e-06, 4.096999999998047e-06, 4.083000000001946e-06, 4.0699999999983805e-06, 4.07000000000185e-06, 4.111000000001086e-06, 4.082999999998477e-06, 4.096999999998047e-06, 4.068999999998907e-06, 4.08400000000142e-06, 4.152999999999796e-06, 4.07000000000185e-06, 4.096999999998047e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 4.083000000001946e-06, 4.08399999999795e-06, 4.097000000001516e-06, 4.068999999998907e-06, 4.082999999998477e-06, 4.09800000000099e-06, 4.083000000001946e-06, 4.054999999999337e-06, 4.096999999998047e-06, 4.139000000000226e-06, 4.083000000001946e-06, 4.096999999998047e-06, 4.0699999999983805e-06, 4.083000000001946e-06, 4.068999999998907e-06, 4.111000000001086e-06, 4.069000000002376e-06, 4.083000000001946e-06, 4.08400000000142e-06, 4.111000000001086e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.935" endtime="20201115 22:03:18.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.930" endtime="20201115 22:03:18.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.939" endtime="20201115 22:03:18.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.943" endtime="20201115 22:03:18.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.941" endtime="20201115 22:03:18.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.938" endtime="20201115 22:03:18.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.566" endtime="20201115 22:03:18.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.959" endtime="20201115 22:03:18.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.958" endtime="20201115 22:03:18.964"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.966" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.975" endtime="20201115 22:03:18.998"></status>
</kw>
<msg timestamp="20201115 22:03:18.999" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.974" endtime="20201115 22:03:18.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.000" endtime="20201115 22:03:19.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.002" endtime="20201115 22:03:19.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.971" endtime="20201115 22:03:19.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.969" endtime="20201115 22:03:19.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.012" endtime="20201115 22:03:19.313"></status>
</kw>
<msg timestamp="20201115 22:03:19.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022855306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022859528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.010" endtime="20201115 22:03:19.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022855306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022859528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.317" endtime="20201115 22:03:19.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.325" endtime="20201115 22:03:19.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.008" endtime="20201115 22:03:19.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.006" endtime="20201115 22:03:19.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.332" level="INFO">${RESULT} = [{'time': 0.022859528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.023116931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:19.328" endtime="20201115 22:03:19.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.345" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:19.333" endtime="20201115 22:03:19.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.351" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.349" endtime="20201115 22:03:19.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.353" level="INFO">VALUE: [4.222000000001641e-06, 4.209000000001545e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.263999999996881e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.277999999999921e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.277000000000447e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.277999999999921e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.222000000001641e-06, 4.2360000000046805e-06, 4.2359999999977416e-06, 4.208999999998075e-06, 4.2359999999977416e-06, 4.25000000000425e-06, 4.221999999998172e-06, 4.222999999997645e-06, 4.29200000000296e-06, 4.207999999998602e-06, 4.2359999999977416e-06, 4.2360000000046805e-06, 4.222999999997645e-06, 4.2360000000046805e-06, 4.2360000000046805e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.25000000000425e-06]</msg>
<status status="PASS" starttime="20201115 22:03:19.352" endtime="20201115 22:03:19.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.346" endtime="20201115 22:03:19.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.357" endtime="20201115 22:03:19.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.361" endtime="20201115 22:03:19.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.359" endtime="20201115 22:03:19.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.355" endtime="20201115 22:03:19.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.967" endtime="20201115 22:03:19.382"></status>
</kw>
<msg timestamp="20201115 22:03:19.382" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.391" endtime="20201115 22:03:19.415"></status>
</kw>
<msg timestamp="20201115 22:03:19.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.390" endtime="20201115 22:03:19.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.416" endtime="20201115 22:03:19.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.419" endtime="20201115 22:03:19.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.387" endtime="20201115 22:03:19.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.385" endtime="20201115 22:03:19.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.429" endtime="20201115 22:03:19.715"></status>
</kw>
<msg timestamp="20201115 22:03:19.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020607986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020612222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.428" endtime="20201115 22:03:19.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020607986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020612222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.719" endtime="20201115 22:03:19.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.727" endtime="20201115 22:03:19.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.425" endtime="20201115 22:03:19.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.423" endtime="20201115 22:03:19.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.734" level="INFO">${RESULT} = [{'time': 0.020612222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.020871583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:19.730" endtime="20201115 22:03:19.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.747" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:19.735" endtime="20201115 22:03:19.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.752" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.751" endtime="20201115 22:03:19.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.754" level="INFO">VALUE: [4.236000000001211e-06, 4.250000000000781e-06, 4.236999999997215e-06, 4.2359999999977416e-06, 4.263000000000877e-06, 4.222000000001641e-06, 4.209000000001545e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.195000000001975e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.2499999999973115e-06, 4.193999999999032e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.179999999999462e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.277999999999921e-06, 4.222000000001641e-06, 4.2360000000046805e-06, 4.221999999998172e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.262999999997408e-06, 4.2499999999973115e-06, 4.2499999999973115e-06]</msg>
<status status="PASS" starttime="20201115 22:03:19.753" endtime="20201115 22:03:19.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.748" endtime="20201115 22:03:19.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.758" endtime="20201115 22:03:19.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.761" endtime="20201115 22:03:19.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.759" endtime="20201115 22:03:19.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.756" endtime="20201115 22:03:19.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.383" endtime="20201115 22:03:19.782"></status>
</kw>
<msg timestamp="20201115 22:03:19.782" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.791" endtime="20201115 22:03:19.815"></status>
</kw>
<msg timestamp="20201115 22:03:19.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.789" endtime="20201115 22:03:19.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.818" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.816" endtime="20201115 22:03:19.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.819" endtime="20201115 22:03:19.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.787" endtime="20201115 22:03:19.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.784" endtime="20201115 22:03:19.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.829" endtime="20201115 22:03:20.132"></status>
</kw>
<msg timestamp="20201115 22:03:20.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020938431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020942653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.827" endtime="20201115 22:03:20.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020938431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020942653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.136" endtime="20201115 22:03:20.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.144" endtime="20201115 22:03:20.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.825" endtime="20201115 22:03:20.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.823" endtime="20201115 22:03:20.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.151" level="INFO">${RESULT} = [{'time': 0.020942653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.021201625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:20.147" endtime="20201115 22:03:20.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.164" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:20.152" endtime="20201115 22:03:20.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.169" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.168" endtime="20201115 22:03:20.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.172" level="INFO">VALUE: [4.221999999998172e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.223000000001115e-06, 4.236000000001211e-06, 4.236999999997215e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.2499999999973115e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.276999999996978e-06, 4.179999999999462e-06, 4.263000000000877e-06, 4.151999999996853e-06, 4.1809999999989356e-06, 4.2359999999977416e-06, 4.237000000000685e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.277000000000447e-06, 4.264000000000351e-06, 4.1949999999985055e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.237000000000685e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.223000000001115e-06, 4.165999999999892e-06, 4.26400000000382e-06, 4.2499999999973115e-06, 4.237000000004154e-06, 4.2499999999973115e-06, 4.207999999998602e-06, 4.2360000000046805e-06, 4.319999999995161e-06, 4.263999999996881e-06]</msg>
<status status="PASS" starttime="20201115 22:03:20.170" endtime="20201115 22:03:20.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.165" endtime="20201115 22:03:20.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.175" endtime="20201115 22:03:20.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.178" endtime="20201115 22:03:20.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.177" endtime="20201115 22:03:20.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.173" endtime="20201115 22:03:20.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.782" endtime="20201115 22:03:20.199"></status>
</kw>
<msg timestamp="20201115 22:03:20.199" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.208" endtime="20201115 22:03:20.231"></status>
</kw>
<msg timestamp="20201115 22:03:20.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.207" endtime="20201115 22:03:20.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.233" endtime="20201115 22:03:20.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.235" endtime="20201115 22:03:20.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.204" endtime="20201115 22:03:20.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.202" endtime="20201115 22:03:20.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.245" endtime="20201115 22:03:20.532"></status>
</kw>
<msg timestamp="20201115 22:03:20.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02080925, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:03:20.244" endtime="20201115 22:03:20.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02080925, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:03:20.536" endtime="20201115 22:03:20.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.544" endtime="20201115 22:03:20.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.241" endtime="20201115 22:03:20.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.239" endtime="20201115 22:03:20.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.551" level="INFO">${RESULT} = [{'time': 0.02080925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.021065861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:20.547" endtime="20201115 22:03:20.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.566" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:20.552" endtime="20201115 22:03:20.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.570" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.569" endtime="20201115 22:03:20.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.573" level="INFO">VALUE: [4.250000000000781e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.236999999997215e-06, 4.305999999999061e-06, 4.304999999999587e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.1660000000033615e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.236999999997215e-06, 4.264000000000351e-06, 4.181000000002405e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.2499999999973115e-06, 4.223000000001115e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.223000000001115e-06, 4.2359999999977416e-06, 4.236999999997215e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.2220000000051106e-06, 4.207999999998602e-06, 4.25000000000425e-06, 4.2359999999977416e-06]</msg>
<status status="PASS" starttime="20201115 22:03:20.571" endtime="20201115 22:03:20.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.567" endtime="20201115 22:03:20.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.576" endtime="20201115 22:03:20.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.580" endtime="20201115 22:03:20.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.578" endtime="20201115 22:03:20.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.574" endtime="20201115 22:03:20.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.200" endtime="20201115 22:03:20.600"></status>
</kw>
<msg timestamp="20201115 22:03:20.601" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.610" endtime="20201115 22:03:20.633"></status>
</kw>
<msg timestamp="20201115 22:03:20.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.608" endtime="20201115 22:03:20.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.634" endtime="20201115 22:03:20.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.637" endtime="20201115 22:03:20.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.605" endtime="20201115 22:03:20.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.603" endtime="20201115 22:03:20.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.647" endtime="20201115 22:03:20.932"></status>
</kw>
<msg timestamp="20201115 22:03:20.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020476542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020480792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.645" endtime="20201115 22:03:20.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020476542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020480792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.936" endtime="20201115 22:03:20.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.944" endtime="20201115 22:03:20.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.643" endtime="20201115 22:03:20.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.641" endtime="20201115 22:03:20.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.951" level="INFO">${RESULT} = [{'time': 0.020480792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.020739569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:20.948" endtime="20201115 22:03:20.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.965" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:20.952" endtime="20201115 22:03:20.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.969" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.968" endtime="20201115 22:03:20.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.972" level="INFO">VALUE: [4.250000000000781e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.1809999999989356e-06, 4.1949999999985055e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.1809999999989356e-06, 4.263000000000877e-06, 4.264000000000351e-06, 4.3200000000021e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.291999999999491e-06, 4.262999999997408e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.2499999999973115e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.1809999999989356e-06, 4.222000000001641e-06, 4.152999999999796e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.237000000000685e-06, 4.264000000000351e-06, 4.236999999997215e-06, 4.193999999999032e-06, 4.236999999997215e-06, 4.25000000000425e-06, 4.2499999999973115e-06, 4.208999999998075e-06, 4.26400000000382e-06, 4.2499999999973115e-06]</msg>
<status status="PASS" starttime="20201115 22:03:20.970" endtime="20201115 22:03:20.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.966" endtime="20201115 22:03:20.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.975" endtime="20201115 22:03:20.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.979" endtime="20201115 22:03:20.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.977" endtime="20201115 22:03:20.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.974" endtime="20201115 22:03:20.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.601" endtime="20201115 22:03:21.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.965" endtime="20201115 22:03:21.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.964" endtime="20201115 22:03:21.000"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.002" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.011" endtime="20201115 22:03:21.036"></status>
</kw>
<msg timestamp="20201115 22:03:21.036" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.009" endtime="20201115 22:03:21.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.037" endtime="20201115 22:03:21.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.040" endtime="20201115 22:03:21.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.007" endtime="20201115 22:03:21.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.005" endtime="20201115 22:03:21.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.049" endtime="20201115 22:03:21.334"></status>
</kw>
<msg timestamp="20201115 22:03:21.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.047" endtime="20201115 22:03:21.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.338" endtime="20201115 22:03:21.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.346" endtime="20201115 22:03:21.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.045" endtime="20201115 22:03:21.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.043" endtime="20201115 22:03:21.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.353" level="INFO">${RESULT} = [{'time': 0.022946792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.023220403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.350" endtime="20201115 22:03:21.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.367" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:21.354" endtime="20201115 22:03:21.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.371" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.370" endtime="20201115 22:03:21.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.374" level="INFO">VALUE: [4.389000000000476e-06, 4.347000000001766e-06, 4.417000000003085e-06, 4.387999999997533e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.346999999998297e-06, 4.388000000001002e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.388000000001002e-06, 4.375000000000906e-06, 4.332999999998727e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.387999999997533e-06, 4.360999999997867e-06, 4.416999999999616e-06, 4.445000000002225e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.443999999999282e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.360999999994397e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201115 22:03:21.372" endtime="20201115 22:03:21.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.367" endtime="20201115 22:03:21.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.377" endtime="20201115 22:03:21.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.381" endtime="20201115 22:03:21.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.379" endtime="20201115 22:03:21.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.376" endtime="20201115 22:03:21.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.003" endtime="20201115 22:03:21.402"></status>
</kw>
<msg timestamp="20201115 22:03:21.402" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.411" endtime="20201115 22:03:21.436"></status>
</kw>
<msg timestamp="20201115 22:03:21.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.410" endtime="20201115 22:03:21.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.437" endtime="20201115 22:03:21.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.440" endtime="20201115 22:03:21.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.407" endtime="20201115 22:03:21.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.405" endtime="20201115 22:03:21.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.450" endtime="20201115 22:03:21.736"></status>
</kw>
<msg timestamp="20201115 22:03:21.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020625972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.448" endtime="20201115 22:03:21.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020625972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.740" endtime="20201115 22:03:21.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.748" endtime="20201115 22:03:21.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.446" endtime="20201115 22:03:21.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.444" endtime="20201115 22:03:21.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.755" level="INFO">${RESULT} = [{'time': 0.020625972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.020898528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.752" endtime="20201115 22:03:21.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.768" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:21.756" endtime="20201115 22:03:21.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.773" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.772" endtime="20201115 22:03:21.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.776" level="INFO">VALUE: [4.375000000000906e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.388000000001002e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.332999999998727e-06, 4.34800000000124e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.4449999999987555e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.319999999995161e-06, 4.374999999993967e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201115 22:03:21.774" endtime="20201115 22:03:21.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.770" endtime="20201115 22:03:21.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.779" endtime="20201115 22:03:21.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.783" endtime="20201115 22:03:21.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.781" endtime="20201115 22:03:21.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.777" endtime="20201115 22:03:21.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.403" endtime="20201115 22:03:21.803"></status>
</kw>
<msg timestamp="20201115 22:03:21.803" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.812" endtime="20201115 22:03:21.836"></status>
</kw>
<msg timestamp="20201115 22:03:21.837" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.811" endtime="20201115 22:03:21.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.839" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.838" endtime="20201115 22:03:21.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.840" endtime="20201115 22:03:21.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.808" endtime="20201115 22:03:21.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.806" endtime="20201115 22:03:21.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.850" endtime="20201115 22:03:22.136"></status>
</kw>
<msg timestamp="20201115 22:03:22.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020471472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.849" endtime="20201115 22:03:22.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020471472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.140" endtime="20201115 22:03:22.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.149" endtime="20201115 22:03:22.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.846" endtime="20201115 22:03:22.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.844" endtime="20201115 22:03:22.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.155" level="INFO">${RESULT} = [{'time': 0.020475875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020748819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:22.152" endtime="20201115 22:03:22.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.170" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:22.157" endtime="20201115 22:03:22.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.175" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.174" endtime="20201115 22:03:22.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.178" level="INFO">VALUE: [4.403000000000046e-06, 4.416000000000142e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.445000000002225e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.36200000000081e-06, 4.388999999997006e-06, 4.402999999996576e-06, 4.361000000001336e-06, 4.402999999996576e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.318999999999157e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.34800000000124e-06, 4.388999999993537e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201115 22:03:22.176" endtime="20201115 22:03:22.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.171" endtime="20201115 22:03:22.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.181" endtime="20201115 22:03:22.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.184" endtime="20201115 22:03:22.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.183" endtime="20201115 22:03:22.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.179" endtime="20201115 22:03:22.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.804" endtime="20201115 22:03:22.205"></status>
</kw>
<msg timestamp="20201115 22:03:22.205" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.214" endtime="20201115 22:03:22.238"></status>
</kw>
<msg timestamp="20201115 22:03:22.238" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.212" endtime="20201115 22:03:22.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.240" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.239" endtime="20201115 22:03:22.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.242" endtime="20201115 22:03:22.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.210" endtime="20201115 22:03:22.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.208" endtime="20201115 22:03:22.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.252" endtime="20201115 22:03:22.537"></status>
</kw>
<msg timestamp="20201115 22:03:22.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020501306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.250" endtime="20201115 22:03:22.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020501306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.541" endtime="20201115 22:03:22.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.550" endtime="20201115 22:03:22.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.247" endtime="20201115 22:03:22.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.246" endtime="20201115 22:03:22.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.557" level="INFO">${RESULT} = [{'time': 0.020505722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.020778236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:22.553" endtime="20201115 22:03:22.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.570" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:22.558" endtime="20201115 22:03:22.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.575" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.574" endtime="20201115 22:03:22.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.577" level="INFO">VALUE: [4.416000000000142e-06, 4.388999999997006e-06, 4.417000000003085e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.318999999999157e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.3339999999982e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.332999999998727e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.402000000000572e-06, 4.332999999998727e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.430000000003181e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.318999999995687e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201115 22:03:22.576" endtime="20201115 22:03:22.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.571" endtime="20201115 22:03:22.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.580" endtime="20201115 22:03:22.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.584" endtime="20201115 22:03:22.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.582" endtime="20201115 22:03:22.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.579" endtime="20201115 22:03:22.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.206" endtime="20201115 22:03:22.605"></status>
</kw>
<msg timestamp="20201115 22:03:22.605" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.614" endtime="20201115 22:03:22.638"></status>
</kw>
<msg timestamp="20201115 22:03:22.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.612" endtime="20201115 22:03:22.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.641" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.639" endtime="20201115 22:03:22.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.642" endtime="20201115 22:03:22.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.609" endtime="20201115 22:03:22.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.607" endtime="20201115 22:03:22.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.652" endtime="20201115 22:03:22.938"></status>
</kw>
<msg timestamp="20201115 22:03:22.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020446514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020450889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.650" endtime="20201115 22:03:22.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020446514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020450889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.942" endtime="20201115 22:03:22.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.950" endtime="20201115 22:03:22.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.648" endtime="20201115 22:03:22.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.646" endtime="20201115 22:03:22.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.957" level="INFO">${RESULT} = [{'time': 0.020450889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.020723444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:22.954" endtime="20201115 22:03:22.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.971" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:22.958" endtime="20201115 22:03:22.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.975" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.974" endtime="20201115 22:03:22.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.978" level="INFO">VALUE: [4.375000000000906e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.346999999998297e-06, 4.389000000000476e-06, 4.387999999997533e-06, 4.389000000000476e-06, 4.3199999999986305e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.375000000000906e-06, 4.387999999997533e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.34800000000124e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.360999999994397e-06]</msg>
<status status="PASS" starttime="20201115 22:03:22.976" endtime="20201115 22:03:22.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.972" endtime="20201115 22:03:22.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.981" endtime="20201115 22:03:22.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.984" endtime="20201115 22:03:23.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.983" endtime="20201115 22:03:23.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.979" endtime="20201115 22:03:23.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.605" endtime="20201115 22:03:23.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.001" endtime="20201115 22:03:23.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.000" endtime="20201115 22:03:23.006"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.008" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.017" endtime="20201115 22:03:23.042"></status>
</kw>
<msg timestamp="20201115 22:03:23.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.015" endtime="20201115 22:03:23.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.045" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.044" endtime="20201115 22:03:23.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.046" endtime="20201115 22:03:23.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.013" endtime="20201115 22:03:23.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.011" endtime="20201115 22:03:23.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.056" endtime="20201115 22:03:23.341"></status>
</kw>
<msg timestamp="20201115 22:03:23.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02294175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:23.054" endtime="20201115 22:03:23.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02294175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:23.346" endtime="20201115 22:03:23.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.354" endtime="20201115 22:03:23.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.052" endtime="20201115 22:03:23.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.050" endtime="20201115 22:03:23.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.360" level="INFO">${RESULT} = [{'time': 0.022946278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.023237083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:23.357" endtime="20201115 22:03:23.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.374" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:23.361" endtime="20201115 22:03:23.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.379" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.378" endtime="20201115 22:03:23.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.381" level="INFO">VALUE: [4.528000000000171e-06, 4.541000000000267e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.541000000000267e-06, 4.486000000001461e-06, 4.541000000000267e-06, 4.514000000000601e-06, 4.473000000001365e-06, 4.555000000003306e-06, 4.526999999997228e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.513999999997131e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.500000000001031e-06, 4.541999999999741e-06, 4.457999999998852e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.51400000000407e-06, 4.4999999999975615e-06, 4.54200000000321e-06, 4.527000000004167e-06, 4.4999999999975615e-06, 4.55600000000278e-06, 4.541999999996271e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.541999999996271e-06, 4.54200000000321e-06, 4.540999999996798e-06, 4.54200000000321e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.540999999996798e-06, 4.54200000000321e-06]</msg>
<status status="PASS" starttime="20201115 22:03:23.380" endtime="20201115 22:03:23.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.375" endtime="20201115 22:03:23.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.384" endtime="20201115 22:03:23.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.388" endtime="20201115 22:03:23.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.386" endtime="20201115 22:03:23.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.383" endtime="20201115 22:03:23.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.008" endtime="20201115 22:03:23.409"></status>
</kw>
<msg timestamp="20201115 22:03:23.409" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.419" endtime="20201115 22:03:23.443"></status>
</kw>
<msg timestamp="20201115 22:03:23.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.417" endtime="20201115 22:03:23.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.445" endtime="20201115 22:03:23.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.448" endtime="20201115 22:03:23.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.414" endtime="20201115 22:03:23.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.412" endtime="20201115 22:03:23.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.458" endtime="20201115 22:03:23.744"></status>
</kw>
<msg timestamp="20201115 22:03:23.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.456" endtime="20201115 22:03:23.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.748" endtime="20201115 22:03:23.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.756" endtime="20201115 22:03:23.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.454" endtime="20201115 22:03:23.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.452" endtime="20201115 22:03:23.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.763" level="INFO">${RESULT} = [{'time': 0.021986875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.022278111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:23.759" endtime="20201115 22:03:23.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.777" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:23.764" endtime="20201115 22:03:23.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.782" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.781" endtime="20201115 22:03:23.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.784" level="INFO">VALUE: [4.541999999999741e-06, 4.528000000000171e-06, 4.4999999999975615e-06, 4.541000000000267e-06, 4.500000000001031e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.514000000000601e-06, 4.500000000001031e-06, 4.541999999999741e-06, 4.597000000002016e-06, 4.486000000001461e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.555999999999311e-06, 4.528000000000171e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.582999999998977e-06, 4.541999999999741e-06, 4.473000000001365e-06, 4.541999999999741e-06, 4.4999999999975615e-06, 4.514000000000601e-06, 4.514000000000601e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.527999999996701e-06, 4.5410000000037365e-06, 4.596999999995077e-06, 4.540999999996798e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.51400000000407e-06, 4.540999999996798e-06, 4.52800000000364e-06, 4.51400000000407e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.540999999996798e-06, 4.57000000000235e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.541999999996271e-06, 4.54200000000321e-06]</msg>
<status status="PASS" starttime="20201115 22:03:23.783" endtime="20201115 22:03:23.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.778" endtime="20201115 22:03:23.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.787" endtime="20201115 22:03:23.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.791" endtime="20201115 22:03:23.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.789" endtime="20201115 22:03:23.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.786" endtime="20201115 22:03:23.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.410" endtime="20201115 22:03:23.812"></status>
</kw>
<msg timestamp="20201115 22:03:23.812" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.825" endtime="20201115 22:03:23.850"></status>
</kw>
<msg timestamp="20201115 22:03:23.850" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.819" endtime="20201115 22:03:23.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.851" endtime="20201115 22:03:23.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.854" endtime="20201115 22:03:23.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.816" endtime="20201115 22:03:23.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.814" endtime="20201115 22:03:23.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.864" endtime="20201115 22:03:24.150"></status>
</kw>
<msg timestamp="20201115 22:03:24.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025092833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025097375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.862" endtime="20201115 22:03:24.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025092833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025097375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.154" endtime="20201115 22:03:24.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.162" endtime="20201115 22:03:24.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.860" endtime="20201115 22:03:24.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.858" endtime="20201115 22:03:24.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.169" level="INFO">${RESULT} = [{'time': 0.025097375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.025386861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:24.166" endtime="20201115 22:03:24.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.183" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:24.170" endtime="20201115 22:03:24.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.187" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.186" endtime="20201115 22:03:24.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.190" level="INFO">VALUE: [4.54200000000321e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.526999999997228e-06, 4.541000000000267e-06, 4.541000000000267e-06, 4.5699999999988805e-06, 4.4999999999975615e-06, 4.473000000001365e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.527000000000697e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.514000000000601e-06, 4.527000000000697e-06, 4.500000000001031e-06, 4.527000000000697e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.51400000000407e-06, 4.4999999999975615e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.540999999996798e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.51400000000407e-06, 4.52800000000364e-06, 4.5410000000037365e-06, 4.54200000000321e-06, 4.52800000000364e-06, 4.555000000003306e-06, 4.555999999995841e-06, 4.569999999995411e-06, 4.526999999997228e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.568999999995937e-06, 4.4999999999975615e-06, 4.51400000000407e-06, 4.52800000000364e-06, 4.540999999996798e-06]</msg>
<status status="PASS" starttime="20201115 22:03:24.188" endtime="20201115 22:03:24.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.184" endtime="20201115 22:03:24.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.193" endtime="20201115 22:03:24.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.196" endtime="20201115 22:03:24.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.195" endtime="20201115 22:03:24.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.191" endtime="20201115 22:03:24.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.812" endtime="20201115 22:03:24.217"></status>
</kw>
<msg timestamp="20201115 22:03:24.218" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.227" endtime="20201115 22:03:24.251"></status>
</kw>
<msg timestamp="20201115 22:03:24.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.225" endtime="20201115 22:03:24.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.254" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.253" endtime="20201115 22:03:24.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.255" endtime="20201115 22:03:24.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.222" endtime="20201115 22:03:24.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.220" endtime="20201115 22:03:24.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.265" endtime="20201115 22:03:24.551"></status>
</kw>
<msg timestamp="20201115 22:03:24.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020936792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020941319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.264" endtime="20201115 22:03:24.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020936792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020941319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.555" endtime="20201115 22:03:24.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.563" endtime="20201115 22:03:24.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.261" endtime="20201115 22:03:24.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.260" endtime="20201115 22:03:24.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.570" level="INFO">${RESULT} = [{'time': 0.020941319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.021231, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:03:24.566" endtime="20201115 22:03:24.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.583" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:24.571" endtime="20201115 22:03:24.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.588" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.587" endtime="20201115 22:03:24.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.591" level="INFO">VALUE: [4.527000000000697e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.568999999999407e-06, 4.541000000000267e-06, 4.471999999998422e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.610999999998117e-06, 4.527999999996701e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.527000000000697e-06, 4.527999999996701e-06, 4.4999999999975615e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.568999999999407e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.514000000000601e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.554999999999837e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.527000000000697e-06, 4.540999999996798e-06, 4.485999999997992e-06, 4.54200000000321e-06, 4.540999999996798e-06, 4.526999999997228e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.54200000000321e-06, 4.540999999996798e-06, 4.540999999996798e-06, 4.54200000000321e-06, 4.55600000000278e-06, 4.527999999996701e-06]</msg>
<status status="PASS" starttime="20201115 22:03:24.589" endtime="20201115 22:03:24.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.584" endtime="20201115 22:03:24.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.594" endtime="20201115 22:03:24.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.598" endtime="20201115 22:03:24.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.596" endtime="20201115 22:03:24.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.592" endtime="20201115 22:03:24.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.218" endtime="20201115 22:03:24.618"></status>
</kw>
<msg timestamp="20201115 22:03:24.619" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.627" endtime="20201115 22:03:24.653"></status>
</kw>
<msg timestamp="20201115 22:03:24.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.626" endtime="20201115 22:03:24.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.656" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.654" endtime="20201115 22:03:24.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.657" endtime="20201115 22:03:24.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.623" endtime="20201115 22:03:24.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.621" endtime="20201115 22:03:24.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.667" endtime="20201115 22:03:24.953"></status>
</kw>
<msg timestamp="20201115 22:03:24.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020537208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020541764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.665" endtime="20201115 22:03:24.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020537208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020541764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.957" endtime="20201115 22:03:24.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.965" endtime="20201115 22:03:24.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.663" endtime="20201115 22:03:24.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.661" endtime="20201115 22:03:24.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.972" level="INFO">${RESULT} = [{'time': 0.020541764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.020832125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:24.968" endtime="20201115 22:03:24.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.985" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:24.973" endtime="20201115 22:03:24.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.990" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.989" endtime="20201115 22:03:24.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.992" level="INFO">VALUE: [4.555999999999311e-06, 4.555999999999311e-06, 4.541000000000267e-06, 4.527000000000697e-06, 4.611000000001586e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.527000000000697e-06, 4.528000000000171e-06, 4.486000000001461e-06, 4.528000000000171e-06, 4.485999999997992e-06, 4.541000000000267e-06, 4.554999999999837e-06, 4.555999999999311e-06, 4.597000000002016e-06, 4.513999999997131e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.610999999998117e-06, 4.541999999999741e-06, 4.5699999999988805e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.57000000000235e-06, 4.528000000000171e-06, 4.472000000001891e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.51400000000407e-06, 4.526999999997228e-06, 4.513000000004597e-06, 4.555999999995841e-06, 4.54200000000321e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.541999999996271e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.55600000000278e-06]</msg>
<status status="PASS" starttime="20201115 22:03:24.991" endtime="20201115 22:03:24.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.986" endtime="20201115 22:03:24.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.996" endtime="20201115 22:03:24.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.000" endtime="20201115 22:03:25.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.998" endtime="20201115 22:03:25.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.994" endtime="20201115 22:03:25.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.619" endtime="20201115 22:03:25.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.007" endtime="20201115 22:03:25.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.006" endtime="20201115 22:03:25.021"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.023" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.032" endtime="20201115 22:03:25.058"></status>
</kw>
<msg timestamp="20201115 22:03:25.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.030" endtime="20201115 22:03:25.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.060" endtime="20201115 22:03:25.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.062" endtime="20201115 22:03:25.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.028" endtime="20201115 22:03:25.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.026" endtime="20201115 22:03:25.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.071" endtime="20201115 22:03:25.358"></status>
</kw>
<msg timestamp="20201115 22:03:25.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02285, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:03:25.070" endtime="20201115 22:03:25.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02285, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:03:25.362" endtime="20201115 22:03:25.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.371" endtime="20201115 22:03:25.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.067" endtime="20201115 22:03:25.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.066" endtime="20201115 22:03:25.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.377" level="INFO">${RESULT} = [{'time': 0.02285, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.023156472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 22:03:25.374" endtime="20201115 22:03:25.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.392" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:25.378" endtime="20201115 22:03:25.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.397" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:25.396" endtime="20201115 22:03:25.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.400" level="INFO">VALUE: [4.666999999999866e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.694000000003001e-06, 4.764000000000851e-06, 4.680999999999436e-06, 4.750000000001281e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.6949999999990055e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.707999999999102e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.707999999999102e-06, 4.721999999998672e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.722999999998145e-06, 4.681000000002905e-06, 4.750000000001281e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.707999999999102e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.7499999999978115e-06, 4.6810000000063745e-06, 4.638999999993787e-06, 4.707999999999102e-06, 4.666999999999866e-06]</msg>
<status status="PASS" starttime="20201115 22:03:25.398" endtime="20201115 22:03:25.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.393" endtime="20201115 22:03:25.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.403" endtime="20201115 22:03:25.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.406" endtime="20201115 22:03:25.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.405" endtime="20201115 22:03:25.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.401" endtime="20201115 22:03:25.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.024" endtime="20201115 22:03:25.427"></status>
</kw>
<msg timestamp="20201115 22:03:25.427" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.436" endtime="20201115 22:03:25.462"></status>
</kw>
<msg timestamp="20201115 22:03:25.463" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.434" endtime="20201115 22:03:25.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.465" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.464" endtime="20201115 22:03:25.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.466" endtime="20201115 22:03:25.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.432" endtime="20201115 22:03:25.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.430" endtime="20201115 22:03:25.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.476" endtime="20201115 22:03:25.763"></status>
</kw>
<msg timestamp="20201115 22:03:25.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020719097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020723764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.475" endtime="20201115 22:03:25.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020719097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020723764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.767" endtime="20201115 22:03:25.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.775" endtime="20201115 22:03:25.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.472" endtime="20201115 22:03:25.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.471" endtime="20201115 22:03:25.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.782" level="INFO">${RESULT} = [{'time': 0.020723764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.021029889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:25.778" endtime="20201115 22:03:25.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.795" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:25.783" endtime="20201115 22:03:25.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.800" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:25.799" endtime="20201115 22:03:25.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.803" level="INFO">VALUE: [4.666999999999866e-06, 4.707999999999102e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.695000000002475e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.6949999999990055e-06, 4.680999999999436e-06, 4.6949999999990055e-06, 4.737000000001185e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.707999999999102e-06, 4.707999999999102e-06, 4.736000000001711e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.735999999998242e-06, 4.639000000000726e-06, 4.679999999999962e-06, 4.694000000003001e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.707999999999102e-06, 4.680999999999436e-06, 4.7499999999978115e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.7499999999978115e-06, 4.709000000005514e-06, 4.653000000000296e-06, 4.75000000000475e-06, 4.7089999999985754e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.709000000005514e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.735999999998242e-06, 4.6810000000063745e-06, 4.722000000005611e-06, 4.708000000006041e-06]</msg>
<status status="PASS" starttime="20201115 22:03:25.802" endtime="20201115 22:03:25.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.797" endtime="20201115 22:03:25.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.806" endtime="20201115 22:03:25.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.809" endtime="20201115 22:03:25.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.808" endtime="20201115 22:03:25.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.804" endtime="20201115 22:03:25.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.428" endtime="20201115 22:03:25.830"></status>
</kw>
<msg timestamp="20201115 22:03:25.831" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.839" endtime="20201115 22:03:25.865"></status>
</kw>
<msg timestamp="20201115 22:03:25.865" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.838" endtime="20201115 22:03:25.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.866" endtime="20201115 22:03:25.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.869" endtime="20201115 22:03:25.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.835" endtime="20201115 22:03:25.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.833" endtime="20201115 22:03:25.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.879" endtime="20201115 22:03:26.164"></status>
</kw>
<msg timestamp="20201115 22:03:26.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020564125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020568819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.877" endtime="20201115 22:03:26.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020564125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020568819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.168" endtime="20201115 22:03:26.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.176" endtime="20201115 22:03:26.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.875" endtime="20201115 22:03:26.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.873" endtime="20201115 22:03:26.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.183" level="INFO">${RESULT} = [{'time': 0.020568819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.020876347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.179" endtime="20201115 22:03:26.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.197" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:26.184" endtime="20201115 22:03:26.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.201" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:26.200" endtime="20201115 22:03:26.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.204" level="INFO">VALUE: [4.693999999999532e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.681000000002905e-06, 4.652000000000822e-06, 4.681000000002905e-06, 4.695000000002475e-06, 4.681000000002905e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.695000000002475e-06, 4.735999999998242e-06, 4.750000000001281e-06, 4.709000000002045e-06, 4.693999999999532e-06, 4.735999999998242e-06, 4.721999999998672e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.707999999999102e-06, 4.693999999999532e-06, 4.695000000002475e-06, 4.721999999998672e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.7499999999978115e-06, 4.680999999999436e-06, 4.638000000001252e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.694000000006471e-06, 4.611000000001586e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.6949999999990055e-06, 4.693999999999532e-06]</msg>
<status status="PASS" starttime="20201115 22:03:26.203" endtime="20201115 22:03:26.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.198" endtime="20201115 22:03:26.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.207" endtime="20201115 22:03:26.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.211" endtime="20201115 22:03:26.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.209" endtime="20201115 22:03:26.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.205" endtime="20201115 22:03:26.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.831" endtime="20201115 22:03:26.231"></status>
</kw>
<msg timestamp="20201115 22:03:26.231" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.240" endtime="20201115 22:03:26.266"></status>
</kw>
<msg timestamp="20201115 22:03:26.267" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.239" endtime="20201115 22:03:26.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.268" endtime="20201115 22:03:26.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.270" endtime="20201115 22:03:26.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.236" endtime="20201115 22:03:26.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.234" endtime="20201115 22:03:26.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.280" endtime="20201115 22:03:26.566"></status>
</kw>
<msg timestamp="20201115 22:03:26.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020552778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.279" endtime="20201115 22:03:26.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020552778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.570" endtime="20201115 22:03:26.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.578" endtime="20201115 22:03:26.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.276" endtime="20201115 22:03:26.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.275" endtime="20201115 22:03:26.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.585" level="INFO">${RESULT} = [{'time': 0.020557444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.020862694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.582" endtime="20201115 22:03:26.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.599" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:26.586" endtime="20201115 22:03:26.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.603" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:26.602" endtime="20201115 22:03:26.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.606" level="INFO">VALUE: [4.666000000000392e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.764000000000851e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.707999999999102e-06, 4.666000000000392e-06, 4.6949999999990055e-06, 4.694000000003001e-06, 4.722000000002141e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.695000000002475e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.722000000002141e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.707999999999102e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.6949999999990055e-06, 4.679999999999962e-06, 4.7499999999978115e-06, 4.679999999999962e-06, 4.6249999999976865e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.695000000005944e-06, 4.6949999999990055e-06, 4.707999999999102e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.735999999998242e-06, 4.666000000000392e-06]</msg>
<status status="PASS" starttime="20201115 22:03:26.604" endtime="20201115 22:03:26.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.600" endtime="20201115 22:03:26.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.609" endtime="20201115 22:03:26.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.612" endtime="20201115 22:03:26.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.611" endtime="20201115 22:03:26.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.607" endtime="20201115 22:03:26.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.232" endtime="20201115 22:03:26.633"></status>
</kw>
<msg timestamp="20201115 22:03:26.633" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.642" endtime="20201115 22:03:26.668"></status>
</kw>
<msg timestamp="20201115 22:03:26.668" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.641" endtime="20201115 22:03:26.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.669" endtime="20201115 22:03:26.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.672" endtime="20201115 22:03:26.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.638" endtime="20201115 22:03:26.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.636" endtime="20201115 22:03:26.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.682" endtime="20201115 22:03:26.967"></status>
</kw>
<msg timestamp="20201115 22:03:26.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020535694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020540333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.680" endtime="20201115 22:03:26.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020535694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020540333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.971" endtime="20201115 22:03:26.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.979" endtime="20201115 22:03:26.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.678" endtime="20201115 22:03:26.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.676" endtime="20201115 22:03:26.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.986" level="INFO">${RESULT} = [{'time': 0.020540333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.020848069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.983" endtime="20201115 22:03:26.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.001" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:26.987" endtime="20201115 22:03:27.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.005" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:27.004" endtime="20201115 22:03:27.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.008" level="INFO">VALUE: [4.639000000000726e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.7089999999985754e-06, 4.708000000002571e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.652000000000822e-06, 4.721999999998672e-06, 4.6949999999990055e-06, 4.7499999999978115e-06, 4.666999999999866e-06, 4.681000000002905e-06, 4.707999999999102e-06, 4.652000000000822e-06, 4.680999999999436e-06, 4.638000000001252e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.764000000000851e-06, 4.666000000000392e-06, 4.6249999999976865e-06, 4.694000000003001e-06, 4.680999999999436e-06, 4.722000000002141e-06, 4.639000000000726e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.707999999999102e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.735999999998242e-06, 4.722999999998145e-06, 4.679999999999962e-06, 4.721999999998672e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.722000000005611e-06, 4.652000000000822e-06]</msg>
<status status="PASS" starttime="20201115 22:03:27.006" endtime="20201115 22:03:27.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.002" endtime="20201115 22:03:27.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.011" endtime="20201115 22:03:27.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.015" endtime="20201115 22:03:27.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.013" endtime="20201115 22:03:27.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.009" endtime="20201115 22:03:27.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.634" endtime="20201115 22:03:27.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.022" endtime="20201115 22:03:27.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.021" endtime="20201115 22:03:27.036"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.038" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.047" endtime="20201115 22:03:27.073"></status>
</kw>
<msg timestamp="20201115 22:03:27.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.045" endtime="20201115 22:03:27.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.076" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.075" endtime="20201115 22:03:27.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.077" endtime="20201115 22:03:27.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.043" endtime="20201115 22:03:27.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.040" endtime="20201115 22:03:27.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.087" endtime="20201115 22:03:27.372"></status>
</kw>
<msg timestamp="20201115 22:03:27.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022859736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022864569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.085" endtime="20201115 22:03:27.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022859736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022864569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.376" endtime="20201115 22:03:27.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.385" endtime="20201115 22:03:27.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.083" endtime="20201115 22:03:27.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.081" endtime="20201115 22:03:27.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.391" level="INFO">${RESULT} = [{'time': 0.022864569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.023190847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:27.388" endtime="20201115 22:03:27.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.405" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:27.392" endtime="20201115 22:03:27.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.410" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:27.408" endtime="20201115 22:03:27.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.412" level="INFO">VALUE: [4.833000000002696e-06, 4.832999999999227e-06, 4.846999999998797e-06, 4.846999999998797e-06, 4.791999999999991e-06, 4.832999999999227e-06, 4.846999999998797e-06, 4.805000000000087e-06, 4.818999999999657e-06, 4.8200000000026e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.86200000000131e-06, 4.889000000000976e-06, 4.860999999998367e-06, 4.84799999999827e-06, 4.818999999999657e-06, 4.832999999999227e-06, 4.833000000002696e-06, 4.8199999999991305e-06, 4.83400000000217e-06, 4.764000000000851e-06, 4.846999999998797e-06, 4.8339999999987004e-06, 4.818999999999657e-06, 4.805000000000087e-06, 4.832999999995757e-06, 4.833999999995231e-06, 4.833000000002696e-06, 4.889000000000976e-06, 4.86200000000131e-06, 4.8189999999961874e-06, 4.790999999997048e-06, 4.77800000000389e-06, 4.833999999995231e-06, 4.860999999994897e-06, 4.8200000000026e-06, 4.832999999995757e-06, 4.8189999999961874e-06, 4.8049999999966175e-06, 4.833000000002696e-06, 4.83400000000217e-06, 4.860999999994897e-06, 4.833000000002696e-06, 4.8200000000026e-06, 4.916000000000642e-06, 4.80600000000303e-06, 4.832999999995757e-06, 4.84800000000174e-06, 4.846999999995327e-06]</msg>
<status status="PASS" starttime="20201115 22:03:27.411" endtime="20201115 22:03:27.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.406" endtime="20201115 22:03:27.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.415" endtime="20201115 22:03:27.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.419" endtime="20201115 22:03:27.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.417" endtime="20201115 22:03:27.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.414" endtime="20201115 22:03:27.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.038" endtime="20201115 22:03:27.439"></status>
</kw>
<msg timestamp="20201115 22:03:27.440" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.448" endtime="20201115 22:03:27.475"></status>
</kw>
<msg timestamp="20201115 22:03:27.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.447" endtime="20201115 22:03:27.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.478" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.476" endtime="20201115 22:03:27.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.480" endtime="20201115 22:03:27.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.444" endtime="20201115 22:03:27.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.442" endtime="20201115 22:03:27.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.490" endtime="20201115 22:03:27.775"></status>
</kw>
<msg timestamp="20201115 22:03:27.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020518458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.488" endtime="20201115 22:03:27.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020518458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.779" endtime="20201115 22:03:27.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.787" endtime="20201115 22:03:27.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.486" endtime="20201115 22:03:27.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.484" endtime="20201115 22:03:27.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.794" level="INFO">${RESULT} = [{'time': 0.020523292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.02084925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:27.791" endtime="20201115 22:03:27.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.808" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:27.795" endtime="20201115 22:03:27.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.812" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:27.811" endtime="20201115 22:03:27.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.815" level="INFO">VALUE: [4.8339999999987004e-06, 4.818999999999657e-06, 4.8200000000026e-06, 4.847000000002266e-06, 4.861000000001836e-06, 4.846999999998797e-06, 4.861000000001836e-06, 4.84800000000174e-06, 4.832999999999227e-06, 4.8199999999991305e-06, 4.805000000000087e-06, 4.84800000000174e-06, 4.833000000002696e-06, 4.832999999999227e-06, 4.818999999999657e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.8200000000026e-06, 4.8339999999987004e-06, 4.847000000002266e-06, 4.83400000000217e-06, 4.8199999999991305e-06, 4.846999999998797e-06, 4.846999999998797e-06, 4.791000000000517e-06, 4.832999999999227e-06, 4.846999999998797e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.8199999999991305e-06, 4.832999999999227e-06, 4.8199999999991305e-06, 4.8199999999991305e-06, 4.833000000002696e-06, 4.930000000000212e-06, 4.833999999995231e-06, 4.83400000000217e-06, 4.847000000002266e-06, 4.832999999995757e-06, 4.83400000000217e-06, 4.847999999994801e-06, 4.847000000002266e-06, 4.847000000002266e-06, 4.903000000000546e-06, 4.861000000001836e-06, 4.847000000002266e-06, 4.847999999994801e-06, 4.889000000000976e-06, 4.846999999995327e-06, 4.847000000002266e-06]</msg>
<status status="PASS" starttime="20201115 22:03:27.813" endtime="20201115 22:03:27.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.809" endtime="20201115 22:03:27.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.818" endtime="20201115 22:03:27.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.822" endtime="20201115 22:03:27.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.820" endtime="20201115 22:03:27.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.816" endtime="20201115 22:03:27.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.440" endtime="20201115 22:03:27.842"></status>
</kw>
<msg timestamp="20201115 22:03:27.842" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.852" endtime="20201115 22:03:27.879"></status>
</kw>
<msg timestamp="20201115 22:03:27.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.850" endtime="20201115 22:03:27.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.880" endtime="20201115 22:03:27.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.883" endtime="20201115 22:03:27.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.847" endtime="20201115 22:03:27.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.845" endtime="20201115 22:03:27.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.893" endtime="20201115 22:03:28.178"></status>
</kw>
<msg timestamp="20201115 22:03:28.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020968069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020972833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.891" endtime="20201115 22:03:28.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020968069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020972833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.182" endtime="20201115 22:03:28.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.190" endtime="20201115 22:03:28.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.889" endtime="20201115 22:03:28.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.887" endtime="20201115 22:03:28.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.197" level="INFO">${RESULT} = [{'time': 0.020972833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.021296667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:28.194" endtime="20201115 22:03:28.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.210" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:28.198" endtime="20201115 22:03:28.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.215" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:28.214" endtime="20201115 22:03:28.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.217" level="INFO">VALUE: [4.764000000000851e-06, 4.84799999999827e-06, 4.8339999999987004e-06, 4.778000000000421e-06, 4.84800000000174e-06, 4.819000000003126e-06, 4.832999999999227e-06, 4.832999999999227e-06, 4.778000000000421e-06, 4.84800000000174e-06, 4.818999999999657e-06, 4.860999999998367e-06, 4.8199999999991305e-06, 4.791999999999991e-06, 4.847000000002266e-06, 4.83400000000217e-06, 4.819000000003126e-06, 4.819000000003126e-06, 4.832999999999227e-06, 4.818999999999657e-06, 4.846999999998797e-06, 4.860999999998367e-06, 4.832999999999227e-06, 4.860999999998367e-06, 4.875000000001406e-06, 4.846999999998797e-06, 4.83400000000217e-06, 4.846999999998797e-06, 4.805000000000087e-06, 4.847000000002266e-06, 4.860999999998367e-06, 4.8199999999991305e-06, 4.847000000002266e-06, 4.861000000001836e-06, 4.832999999995757e-06, 4.847000000002266e-06, 4.847000000002266e-06, 4.833999999995231e-06, 4.847000000002266e-06, 4.832999999995757e-06, 4.847000000002266e-06, 4.83400000000217e-06, 4.847000000002266e-06, 4.875000000001406e-06, 4.84800000000174e-06, 4.819000000003126e-06, 4.861000000001836e-06, 4.903000000000546e-06, 4.861000000001836e-06, 4.833000000002696e-06]</msg>
<status status="PASS" starttime="20201115 22:03:28.216" endtime="20201115 22:03:28.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.211" endtime="20201115 22:03:28.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.221" endtime="20201115 22:03:28.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.224" endtime="20201115 22:03:28.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.223" endtime="20201115 22:03:28.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.219" endtime="20201115 22:03:28.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.843" endtime="20201115 22:03:28.245"></status>
</kw>
<msg timestamp="20201115 22:03:28.245" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.255" endtime="20201115 22:03:28.281"></status>
</kw>
<msg timestamp="20201115 22:03:28.282" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.253" endtime="20201115 22:03:28.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.283" endtime="20201115 22:03:28.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.285" endtime="20201115 22:03:28.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.250" endtime="20201115 22:03:28.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.248" endtime="20201115 22:03:28.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.295" endtime="20201115 22:03:28.582"></status>
</kw>
<msg timestamp="20201115 22:03:28.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021063514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021068347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.294" endtime="20201115 22:03:28.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021063514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021068347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.586" endtime="20201115 22:03:28.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.594" endtime="20201115 22:03:28.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.291" endtime="20201115 22:03:28.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.290" endtime="20201115 22:03:28.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.601" level="INFO">${RESULT} = [{'time': 0.021068347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.021391569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:28.597" endtime="20201115 22:03:28.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.615" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:28.602" endtime="20201115 22:03:28.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.620" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:28.619" endtime="20201115 22:03:28.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.622" level="INFO">VALUE: [4.833000000002696e-06, 4.846999999998797e-06, 4.833000000002696e-06, 4.847000000002266e-06, 4.8339999999987004e-06, 4.846999999998797e-06, 4.832999999999227e-06, 4.846999999998797e-06, 4.833000000002696e-06, 4.861000000001836e-06, 4.847000000002266e-06, 4.777999999996951e-06, 4.832999999999227e-06, 4.818999999999657e-06, 4.86199999999784e-06, 4.8339999999987004e-06, 4.860999999998367e-06, 4.833000000002696e-06, 4.832999999999227e-06, 4.8200000000026e-06, 4.846999999998797e-06, 4.818999999999657e-06, 4.8339999999987004e-06, 4.83400000000217e-06, 4.7499999999978115e-06, 4.8339999999987004e-06, 4.832999999999227e-06, 4.818999999999657e-06, 4.846999999998797e-06, 4.832999999999227e-06, 4.846999999998797e-06, 4.846999999998797e-06, 4.777999999996951e-06, 4.83400000000217e-06, 4.8189999999961874e-06, 4.847000000002266e-06, 4.861000000001836e-06, 4.805999999996091e-06, 4.833000000002696e-06, 4.832999999995757e-06, 4.7639999999973814e-06, 4.8189999999961874e-06, 4.833000000002696e-06, 4.847999999994801e-06, 4.79200000000346e-06, 4.847000000002266e-06, 4.861000000001836e-06, 4.833000000002696e-06, 4.847000000002266e-06, 4.832999999995757e-06]</msg>
<status status="PASS" starttime="20201115 22:03:28.621" endtime="20201115 22:03:28.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.616" endtime="20201115 22:03:28.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.626" endtime="20201115 22:03:28.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.629" endtime="20201115 22:03:28.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.628" endtime="20201115 22:03:28.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.624" endtime="20201115 22:03:28.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.246" endtime="20201115 22:03:28.650"></status>
</kw>
<msg timestamp="20201115 22:03:28.650" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.659" endtime="20201115 22:03:28.685"></status>
</kw>
<msg timestamp="20201115 22:03:28.686" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.658" endtime="20201115 22:03:28.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.688" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.687" endtime="20201115 22:03:28.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.689" endtime="20201115 22:03:28.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.655" endtime="20201115 22:03:28.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.653" endtime="20201115 22:03:28.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.699" endtime="20201115 22:03:28.985"></status>
</kw>
<msg timestamp="20201115 22:03:28.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020469236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.698" endtime="20201115 22:03:28.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020469236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.989" endtime="20201115 22:03:28.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.997" endtime="20201115 22:03:28.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.695" endtime="20201115 22:03:28.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.694" endtime="20201115 22:03:28.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.004" level="INFO">${RESULT} = [{'time': 0.020474056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.020796722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 22:03:29.000" endtime="20201115 22:03:29.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.017" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:29.005" endtime="20201115 22:03:29.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.022" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:29.021" endtime="20201115 22:03:29.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.024" level="INFO">VALUE: [4.8200000000026e-06, 4.861000000001836e-06, 4.832999999999227e-06, 4.8339999999987004e-06, 4.8200000000026e-06, 4.805000000000087e-06, 4.8199999999991305e-06, 4.875000000001406e-06, 4.832999999999227e-06, 4.86200000000131e-06, 4.8339999999987004e-06, 4.847000000002266e-06, 4.8199999999991305e-06, 4.791999999999991e-06, 4.8339999999987004e-06, 4.8749999999979365e-06, 4.805999999999561e-06, 4.791999999999991e-06, 4.832999999999227e-06, 4.805999999999561e-06, 4.819000000003126e-06, 4.860999999998367e-06, 4.833000000002696e-06, 4.832999999999227e-06, 4.8199999999991305e-06, 4.846999999998797e-06, 4.832999999999227e-06, 4.84800000000174e-06, 4.84800000000174e-06, 4.832999999999227e-06, 4.847000000002266e-06, 4.889000000000976e-06, 4.861000000001836e-06, 4.860999999998367e-06, 4.847999999994801e-06, 4.861000000001836e-06, 4.832999999995757e-06, 4.819999999995661e-06, 4.86200000000131e-06, 4.819999999995661e-06, 4.861000000001836e-06, 4.833999999995231e-06, 4.833000000002696e-06, 4.819000000003126e-06, 4.819000000003126e-06, 4.83400000000217e-06, 4.80600000000303e-06, 4.832999999995757e-06, 4.84800000000174e-06, 4.833999999995231e-06]</msg>
<status status="PASS" starttime="20201115 22:03:29.023" endtime="20201115 22:03:29.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.018" endtime="20201115 22:03:29.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.033" endtime="20201115 22:03:29.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.036" endtime="20201115 22:03:29.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.035" endtime="20201115 22:03:29.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.031" endtime="20201115 22:03:29.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.651" endtime="20201115 22:03:29.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.037" endtime="20201115 22:03:29.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.036" endtime="20201115 22:03:29.057"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.060" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.068" endtime="20201115 22:03:29.096"></status>
</kw>
<msg timestamp="20201115 22:03:29.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.067" endtime="20201115 22:03:29.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.099" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.097" endtime="20201115 22:03:29.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.100" endtime="20201115 22:03:29.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.064" endtime="20201115 22:03:29.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.062" endtime="20201115 22:03:29.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.109" endtime="20201115 22:03:29.394"></status>
</kw>
<msg timestamp="20201115 22:03:29.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.107" endtime="20201115 22:03:29.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.398" endtime="20201115 22:03:29.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.407" endtime="20201115 22:03:29.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.105" endtime="20201115 22:03:29.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.103" endtime="20201115 22:03:29.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.413" level="INFO">${RESULT} = [{'time': 0.022857431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.023199875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.410" endtime="20201115 22:03:29.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.427" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:29.414" endtime="20201115 22:03:29.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.432" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:29.431" endtime="20201115 22:03:29.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.435" level="INFO">VALUE: [5.000000000001531e-06, 5.027999999997201e-06, 5.014000000001101e-06, 4.985999999998492e-06, 4.985999999998492e-06, 5.055999999999811e-06, 4.973000000001865e-06, 4.985999999998492e-06, 5.000000000001531e-06, 5.000000000001531e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.986000000001961e-06, 4.985999999998492e-06, 5.0549999999968676e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 5.000000000001531e-06, 4.985999999998492e-06, 5.042000000000241e-06, 4.971999999998922e-06, 4.985999999998492e-06, 5.000000000001531e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.9589999999988255e-06, 4.985999999998492e-06, 4.9860000000054305e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.9589999999988255e-06, 5.05600000000328e-06, 4.972000000005861e-06, 5.0000000000050004e-06, 5.0000000000050004e-06, 4.985999999998492e-06, 4.9860000000054305e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.972999999998395e-06, 4.985999999998492e-06, 5.0139999999976315e-06, 5.027000000004667e-06]</msg>
<status status="PASS" starttime="20201115 22:03:29.433" endtime="20201115 22:03:29.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.428" endtime="20201115 22:03:29.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.438" endtime="20201115 22:03:29.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.441" endtime="20201115 22:03:29.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.440" endtime="20201115 22:03:29.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.436" endtime="20201115 22:03:29.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.060" endtime="20201115 22:03:29.462"></status>
</kw>
<msg timestamp="20201115 22:03:29.462" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.471" endtime="20201115 22:03:29.499"></status>
</kw>
<msg timestamp="20201115 22:03:29.499" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.469" endtime="20201115 22:03:29.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.500" endtime="20201115 22:03:29.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.503" endtime="20201115 22:03:29.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.467" endtime="20201115 22:03:29.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.465" endtime="20201115 22:03:29.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.514" endtime="20201115 22:03:29.799"></status>
</kw>
<msg timestamp="20201115 22:03:29.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020522319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.512" endtime="20201115 22:03:29.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020522319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.804" endtime="20201115 22:03:29.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.812" endtime="20201115 22:03:29.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.510" endtime="20201115 22:03:29.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.508" endtime="20201115 22:03:29.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.819" level="INFO">${RESULT} = [{'time': 0.020527292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.020868958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.815" endtime="20201115 22:03:29.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.832" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:29.820" endtime="20201115 22:03:29.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.837" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:29.836" endtime="20201115 22:03:29.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.840" level="INFO">VALUE: [4.972999999998395e-06, 4.985999999998492e-06, 5.028000000000671e-06, 5.000000000001531e-06, 4.957999999999352e-06, 4.985999999998492e-06, 4.973000000001865e-06, 4.985999999998492e-06, 4.986000000001961e-06, 4.9589999999988255e-06, 4.986000000001961e-06, 4.986000000001961e-06, 4.971999999998922e-06, 4.9999999999980616e-06, 5.042000000000241e-06, 4.971999999998922e-06, 5.000000000001531e-06, 4.985999999998492e-06, 4.9449999999992555e-06, 4.986000000001961e-06, 4.985999999998492e-06, 5.042000000000241e-06, 4.986000000001961e-06, 4.930999999999686e-06, 5.000000000001531e-06, 4.985999999998492e-06, 4.986000000001961e-06, 4.986000000001961e-06, 4.985999999998492e-06, 4.986000000001961e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.972999999998395e-06, 4.972999999998395e-06, 4.958000000006291e-06, 4.930999999999686e-06, 4.985999999998492e-06, 4.930000000000212e-06, 4.985999999998492e-06, 4.9860000000054305e-06, 4.985999999998492e-06, 4.9589999999988255e-06, 4.986999999997965e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.957999999999352e-06, 5.0000000000050004e-06, 4.985999999998492e-06]</msg>
<status status="PASS" starttime="20201115 22:03:29.838" endtime="20201115 22:03:29.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.833" endtime="20201115 22:03:29.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.843" endtime="20201115 22:03:29.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.846" endtime="20201115 22:03:29.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.845" endtime="20201115 22:03:29.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.841" endtime="20201115 22:03:29.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.463" endtime="20201115 22:03:29.867"></status>
</kw>
<msg timestamp="20201115 22:03:29.867" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.876" endtime="20201115 22:03:29.904"></status>
</kw>
<msg timestamp="20201115 22:03:29.904" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.875" endtime="20201115 22:03:29.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.905" endtime="20201115 22:03:29.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.908" endtime="20201115 22:03:29.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.872" endtime="20201115 22:03:29.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.870" endtime="20201115 22:03:29.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.918" endtime="20201115 22:03:30.203"></status>
</kw>
<msg timestamp="20201115 22:03:30.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.916" endtime="20201115 22:03:30.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.207" endtime="20201115 22:03:30.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.215" endtime="20201115 22:03:30.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.914" endtime="20201115 22:03:30.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.912" endtime="20201115 22:03:30.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.222" level="INFO">${RESULT} = [{'time': 0.020486014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.020830111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:30.218" endtime="20201115 22:03:30.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.237" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:30.223" endtime="20201115 22:03:30.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.241" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:30.240" endtime="20201115 22:03:30.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.244" level="INFO">VALUE: [4.986000000001961e-06, 4.957999999999352e-06, 4.985999999998492e-06, 4.986000000001961e-06, 4.959000000002295e-06, 5.000000000001531e-06, 4.9999999999980616e-06, 5.014000000001101e-06, 4.972999999998395e-06, 4.985999999998492e-06, 4.972000000002391e-06, 4.986000000001961e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.917000000000116e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.971999999998922e-06, 5.028000000000671e-06, 4.986000000001961e-06, 5.041000000000767e-06, 4.930999999999686e-06, 4.973000000001865e-06, 5.000000000001531e-06, 4.986000000001961e-06, 4.986000000001961e-06, 5.014000000001101e-06, 5.014000000001101e-06, 4.972000000002391e-06, 4.986000000001961e-06, 5.000000000001531e-06, 4.986999999997965e-06, 4.986999999997965e-06, 5.0000000000050004e-06, 5.04200000000371e-06, 4.986999999997965e-06, 4.985999999998492e-06, 4.957999999999352e-06, 4.971999999998922e-06, 4.9999999999980616e-06, 5.0000000000050004e-06, 4.971999999998922e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.972000000005861e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.986999999997965e-06, 5.027999999997201e-06]</msg>
<status status="PASS" starttime="20201115 22:03:30.242" endtime="20201115 22:03:30.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.238" endtime="20201115 22:03:30.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.247" endtime="20201115 22:03:30.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.250" endtime="20201115 22:03:30.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.249" endtime="20201115 22:03:30.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.245" endtime="20201115 22:03:30.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.868" endtime="20201115 22:03:30.271"></status>
</kw>
<msg timestamp="20201115 22:03:30.271" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.280" endtime="20201115 22:03:30.308"></status>
</kw>
<msg timestamp="20201115 22:03:30.308" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.279" endtime="20201115 22:03:30.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.311" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.309" endtime="20201115 22:03:30.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.312" endtime="20201115 22:03:30.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.276" endtime="20201115 22:03:30.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.274" endtime="20201115 22:03:30.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.322" endtime="20201115 22:03:30.608"></status>
</kw>
<msg timestamp="20201115 22:03:30.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.320" endtime="20201115 22:03:30.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.612" endtime="20201115 22:03:30.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.621" endtime="20201115 22:03:30.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.318" endtime="20201115 22:03:30.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.316" endtime="20201115 22:03:30.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.628" level="INFO">${RESULT} = [{'time': 0.020526056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.020868847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:30.624" endtime="20201115 22:03:30.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.642" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:30.629" endtime="20201115 22:03:30.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.646" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:30.645" endtime="20201115 22:03:30.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.649" level="INFO">VALUE: [4.973000000001865e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 5.000000000001531e-06, 4.986000000001961e-06, 4.986000000001961e-06, 4.986000000001961e-06, 4.971999999998922e-06, 5.028000000000671e-06, 5.000000000001531e-06, 4.986000000001961e-06, 4.917000000000116e-06, 4.957999999999352e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 5.028000000000671e-06, 4.9589999999988255e-06, 5.000000000001531e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 5.013000000001627e-06, 5.000000000001531e-06, 4.971999999998922e-06, 4.986000000001961e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 5.000000000001531e-06, 4.985999999998492e-06, 5.000000000001531e-06, 5.014000000001101e-06, 4.971999999998922e-06, 4.971999999998922e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.985999999998492e-06, 4.9860000000054305e-06, 5.0550000000038064e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.9999999999980616e-06, 5.04200000000371e-06, 4.972999999998395e-06, 4.971999999998922e-06, 4.986999999997965e-06, 4.985999999998492e-06, 5.0549999999968676e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.971999999998922e-06]</msg>
<status status="PASS" starttime="20201115 22:03:30.647" endtime="20201115 22:03:30.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.643" endtime="20201115 22:03:30.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.652" endtime="20201115 22:03:30.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.655" endtime="20201115 22:03:30.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.654" endtime="20201115 22:03:30.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.650" endtime="20201115 22:03:30.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.272" endtime="20201115 22:03:30.676"></status>
</kw>
<msg timestamp="20201115 22:03:30.676" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.685" endtime="20201115 22:03:30.713"></status>
</kw>
<msg timestamp="20201115 22:03:30.714" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.684" endtime="20201115 22:03:30.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.716" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.715" endtime="20201115 22:03:30.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.717" endtime="20201115 22:03:30.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.681" endtime="20201115 22:03:30.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.679" endtime="20201115 22:03:30.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.727" endtime="20201115 22:03:31.013"></status>
</kw>
<msg timestamp="20201115 22:03:31.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020604097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020609083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.726" endtime="20201115 22:03:31.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020604097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020609083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.018" endtime="20201115 22:03:31.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.026" endtime="20201115 22:03:31.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.723" endtime="20201115 22:03:31.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.721" endtime="20201115 22:03:31.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.033" level="INFO">${RESULT} = [{'time': 0.020609083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.020953375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:31.029" endtime="20201115 22:03:31.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.046" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:31.034" endtime="20201115 22:03:31.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.051" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:31.050" endtime="20201115 22:03:31.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.053" level="INFO">VALUE: [4.986000000001961e-06, 4.985999999998492e-06, 5.026999999997728e-06, 4.972000000002391e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 4.930999999999686e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 5.042000000000241e-06, 5.000000000001531e-06, 4.986000000001961e-06, 4.986000000001961e-06, 4.985999999998492e-06, 4.985999999998492e-06, 5.000000000001531e-06, 5.014000000001101e-06, 4.9999999999980616e-06, 4.987000000001435e-06, 4.973000000001865e-06, 4.971999999998922e-06, 4.972000000002391e-06, 4.971999999998922e-06, 4.986000000001961e-06, 4.972000000002391e-06, 4.987000000001435e-06, 4.957999999999352e-06, 5.000000000001531e-06, 4.985999999998492e-06, 5.000000000001531e-06, 5.014000000001101e-06, 5.000000000001531e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.985999999998492e-06, 5.01400000000457e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 4.972999999998395e-06, 4.971999999998922e-06, 5.055999999996341e-06, 4.958000000006291e-06, 4.9860000000054305e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.985999999998492e-06]</msg>
<status status="PASS" starttime="20201115 22:03:31.052" endtime="20201115 22:03:31.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.047" endtime="20201115 22:03:31.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.056" endtime="20201115 22:03:31.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.060" endtime="20201115 22:03:31.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.058" endtime="20201115 22:03:31.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.055" endtime="20201115 22:03:31.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.677" endtime="20201115 22:03:31.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.059" endtime="20201115 22:03:31.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.058" endtime="20201115 22:03:31.081"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.083" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.092" endtime="20201115 22:03:31.121"></status>
</kw>
<msg timestamp="20201115 22:03:31.121" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.091" endtime="20201115 22:03:31.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.122" endtime="20201115 22:03:31.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.125" endtime="20201115 22:03:31.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.088" endtime="20201115 22:03:31.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.086" endtime="20201115 22:03:31.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.135" endtime="20201115 22:03:31.420"></status>
</kw>
<msg timestamp="20201115 22:03:31.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022988264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022993389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.133" endtime="20201115 22:03:31.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022988264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022993389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.424" endtime="20201115 22:03:31.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.432" endtime="20201115 22:03:31.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.130" endtime="20201115 22:03:31.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.129" endtime="20201115 22:03:31.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.439" level="INFO">${RESULT} = [{'time': 0.022993389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.023353583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:31.435" endtime="20201115 22:03:31.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.452" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:31.440" endtime="20201115 22:03:31.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.457" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:31.456" endtime="20201115 22:03:31.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.460" level="INFO">VALUE: [5.1249999999981866e-06, 5.125000000001656e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.096999999999047e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.180000000000462e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.1249999999981866e-06, 5.1389999999977565e-06, 5.1249999999981866e-06, 5.110999999998617e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.139000000001226e-06, 5.138999999994287e-06, 5.139000000001226e-06, 5.0689999999964375e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.1949999999995056e-06, 5.153000000000796e-06, 5.138999999994287e-06, 5.138000000001752e-06, 5.138000000001752e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.110999999995147e-06, 5.138999999994287e-06, 5.124999999994717e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.124999999994717e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.124999999994717e-06, 5.138999999994287e-06, 5.125000000001656e-06, 5.139000000001226e-06]</msg>
<status status="PASS" starttime="20201115 22:03:31.458" endtime="20201115 22:03:31.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.453" endtime="20201115 22:03:31.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.463" endtime="20201115 22:03:31.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.466" endtime="20201115 22:03:31.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.465" endtime="20201115 22:03:31.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.461" endtime="20201115 22:03:31.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.084" endtime="20201115 22:03:31.487"></status>
</kw>
<msg timestamp="20201115 22:03:31.487" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.496" endtime="20201115 22:03:31.525"></status>
</kw>
<msg timestamp="20201115 22:03:31.526" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.494" endtime="20201115 22:03:31.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.527" endtime="20201115 22:03:31.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.530" endtime="20201115 22:03:31.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.492" endtime="20201115 22:03:31.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.490" endtime="20201115 22:03:31.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.541" endtime="20201115 22:03:31.826"></status>
</kw>
<msg timestamp="20201115 22:03:31.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020626708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.539" endtime="20201115 22:03:31.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020626708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.830" endtime="20201115 22:03:31.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.838" endtime="20201115 22:03:31.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.537" endtime="20201115 22:03:31.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.535" endtime="20201115 22:03:31.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.845" level="INFO">${RESULT} = [{'time': 0.020626708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.020989333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:31.842" endtime="20201115 22:03:31.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.860" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:31.846" endtime="20201115 22:03:31.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.864" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:31.863" endtime="20201115 22:03:31.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.867" level="INFO">VALUE: [5.139000000001226e-06, 5.151999999997853e-06, 5.139000000001226e-06, 5.208000000003071e-06, 5.125000000001656e-06, 5.055999999999811e-06, 5.11200000000156e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.1249999999981866e-06, 5.110999999998617e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.111000000002086e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.152999999997326e-06, 5.1389999999977565e-06, 5.166000000000892e-06, 5.1389999999977565e-06, 5.1249999999981866e-06, 5.110999999998617e-06, 5.125000000001656e-06, 5.124999999994717e-06, 5.180999999999936e-06, 5.125000000001656e-06, 5.138000000001752e-06, 5.125000000001656e-06, 5.111000000002086e-06, 5.152000000001322e-06, 5.138999999994287e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.08400000000242e-06, 5.153000000000796e-06, 5.180000000000462e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.153000000000796e-06, 5.097000000002516e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.139000000001226e-06]</msg>
<status status="PASS" starttime="20201115 22:03:31.865" endtime="20201115 22:03:31.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.861" endtime="20201115 22:03:31.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.870" endtime="20201115 22:03:31.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.873" endtime="20201115 22:03:31.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.872" endtime="20201115 22:03:31.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.868" endtime="20201115 22:03:31.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.488" endtime="20201115 22:03:31.894"></status>
</kw>
<msg timestamp="20201115 22:03:31.894" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.904" endtime="20201115 22:03:31.933"></status>
</kw>
<msg timestamp="20201115 22:03:31.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.902" endtime="20201115 22:03:31.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.936" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.934" endtime="20201115 22:03:31.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.937" endtime="20201115 22:03:31.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.899" endtime="20201115 22:03:31.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.897" endtime="20201115 22:03:31.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.947" endtime="20201115 22:03:32.233"></status>
</kw>
<msg timestamp="20201115 22:03:32.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021032597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02103775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:31.945" endtime="20201115 22:03:32.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021032597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02103775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:32.237" endtime="20201115 22:03:32.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.245" endtime="20201115 22:03:32.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.943" endtime="20201115 22:03:32.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.941" endtime="20201115 22:03:32.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.252" level="INFO">${RESULT} = [{'time': 0.02103775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.021400486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:32.248" endtime="20201115 22:03:32.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.265" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:32.253" endtime="20201115 22:03:32.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.270" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:32.269" endtime="20201115 22:03:32.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.272" level="INFO">VALUE: [5.153000000000796e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.1799999999969926e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.055000000000337e-06, 5.167000000000366e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.152999999997326e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.110999999998617e-06, 5.180000000000462e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.068999999999907e-06, 5.1389999999977565e-06, 5.138999999994287e-06, 5.152000000001322e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.097000000002516e-06, 5.139000000001226e-06, 5.096999999995577e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.11200000000156e-06, 5.125000000001656e-06, 5.180000000000462e-06, 5.125000000001656e-06, 5.138999999994287e-06]</msg>
<status status="PASS" starttime="20201115 22:03:32.271" endtime="20201115 22:03:32.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.266" endtime="20201115 22:03:32.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.275" endtime="20201115 22:03:32.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.279" endtime="20201115 22:03:32.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.277" endtime="20201115 22:03:32.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.274" endtime="20201115 22:03:32.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.895" endtime="20201115 22:03:32.300"></status>
</kw>
<msg timestamp="20201115 22:03:32.300" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.309" endtime="20201115 22:03:32.338"></status>
</kw>
<msg timestamp="20201115 22:03:32.338" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.307" endtime="20201115 22:03:32.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.339" endtime="20201115 22:03:32.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.342" endtime="20201115 22:03:32.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.305" endtime="20201115 22:03:32.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.303" endtime="20201115 22:03:32.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.352" endtime="20201115 22:03:32.638"></status>
</kw>
<msg timestamp="20201115 22:03:32.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020969486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.350" endtime="20201115 22:03:32.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020969486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.642" endtime="20201115 22:03:32.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.651" endtime="20201115 22:03:32.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.348" endtime="20201115 22:03:32.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.346" endtime="20201115 22:03:32.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.657" level="INFO">${RESULT} = [{'time': 0.020969486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.021329417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:32.654" endtime="20201115 22:03:32.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.671" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:32.658" endtime="20201115 22:03:32.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.676" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:32.674" endtime="20201115 22:03:32.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.678" level="INFO">VALUE: [5.1389999999977565e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.110999999998617e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.138000000001752e-06, 5.151999999997853e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.110999999998617e-06, 5.1389999999977565e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.05600000000328e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.165999999997423e-06, 5.138000000001752e-06, 5.139000000001226e-06, 5.096999999999047e-06, 5.152000000001322e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.05600000000328e-06, 5.124999999994717e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.124999999994717e-06, 5.153000000000796e-06, 5.08400000000242e-06, 5.139000000001226e-06, 5.138999999994287e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.1949999999995056e-06, 5.125000000001656e-06]</msg>
<status status="PASS" starttime="20201115 22:03:32.677" endtime="20201115 22:03:32.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.672" endtime="20201115 22:03:32.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.682" endtime="20201115 22:03:32.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.685" endtime="20201115 22:03:32.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.683" endtime="20201115 22:03:32.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.680" endtime="20201115 22:03:32.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.301" endtime="20201115 22:03:32.706"></status>
</kw>
<msg timestamp="20201115 22:03:32.706" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.715" endtime="20201115 22:03:32.743"></status>
</kw>
<msg timestamp="20201115 22:03:32.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.713" endtime="20201115 22:03:32.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.745" endtime="20201115 22:03:32.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.747" endtime="20201115 22:03:32.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.711" endtime="20201115 22:03:32.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.709" endtime="20201115 22:03:32.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.757" endtime="20201115 22:03:33.042"></status>
</kw>
<msg timestamp="20201115 22:03:33.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020529375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020534514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.756" endtime="20201115 22:03:33.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020529375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020534514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.046" endtime="20201115 22:03:33.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.055" endtime="20201115 22:03:33.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.753" endtime="20201115 22:03:33.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.751" endtime="20201115 22:03:33.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:33.061" level="INFO">${RESULT} = [{'time': 0.020534514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.020895069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:33.058" endtime="20201115 22:03:33.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:33.075" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:03:33.062" endtime="20201115 22:03:33.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.080" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:33.079" endtime="20201115 22:03:33.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.082" level="INFO">VALUE: [5.139000000001226e-06, 5.137999999998283e-06, 5.137999999998283e-06, 5.096999999999047e-06, 5.151999999997853e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.0699999999993806e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.137999999998283e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.152000000001322e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.167000000000366e-06, 5.1249999999981866e-06, 5.221999999999172e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.194000000000032e-06, 5.137999999994813e-06, 5.097999999995051e-06, 5.139000000001226e-06, 5.138999999994287e-06, 5.166000000000892e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.138999999994287e-06, 5.165999999993953e-06, 5.167000000000366e-06, 5.180000000000462e-06, 5.209000000006014e-06, 5.139000000001226e-06, 5.082999999996007e-06, 5.139000000001226e-06, 5.138999999994287e-06, 5.124999999994717e-06]</msg>
<status status="PASS" starttime="20201115 22:03:33.081" endtime="20201115 22:03:33.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.076" endtime="20201115 22:03:33.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.086" endtime="20201115 22:03:33.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.089" endtime="20201115 22:03:33.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.088" endtime="20201115 22:03:33.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.084" endtime="20201115 22:03:33.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.706" endtime="20201115 22:03:33.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.082" endtime="20201115 22:03:33.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.081" endtime="20201115 22:03:33.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.435" endtime="20201115 22:03:33.111"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.115" endtime="20201115 22:03:33.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.113" endtime="20201115 22:03:33.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.112" endtime="20201115 22:03:33.135"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:43.360" endtime="20201115 22:03:33.136" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:01:47.902" endtime="20201115 22:03:33.142"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:01:46.005" endtime="20201115 22:03:33.162"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
