<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 21:59:49.169" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.740" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:49.750" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:50.725" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:49.739" endtime="20201115 21:59:50.726"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.728" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:50.727" endtime="20201115 21:59:50.728"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.738" endtime="20201115 21:59:50.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.732" endtime="20201115 21:59:50.917"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.730" endtime="20201115 21:59:50.918"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.931" endtime="20201115 21:59:50.952"></status>
</kw>
<msg timestamp="20201115 21:59:50.953" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.929" endtime="20201115 21:59:50.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.955" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.954" endtime="20201115 21:59:50.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.959" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:50.956" endtime="20201115 21:59:50.959"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:50.927" endtime="20201115 21:59:50.960"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:50.925" endtime="20201115 21:59:50.960"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.923" endtime="20201115 21:59:50.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:50.965" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:50.964" endtime="20201115 21:59:50.965"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.962" endtime="20201115 21:59:50.965"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.923" endtime="20201115 21:59:50.966"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.922" endtime="20201115 21:59:50.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.967" endtime="20201115 21:59:50.968"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.920" endtime="20201115 21:59:50.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.969" endtime="20201115 21:59:50.971"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.919" endtime="20201115 21:59:50.972"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.736" endtime="20201115 21:59:50.972"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.979" endtime="20201115 21:59:50.999"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.978" endtime="20201115 21:59:50.999"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.015" endtime="20201115 21:59:51.033"></status>
</kw>
<msg timestamp="20201115 21:59:51.033" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.012" endtime="20201115 21:59:51.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.036" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.034" endtime="20201115 21:59:51.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.039" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:51.037" endtime="20201115 21:59:51.039"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:51.009" endtime="20201115 21:59:51.040"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:51.007" endtime="20201115 21:59:51.041"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.005" endtime="20201115 21:59:51.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:51.045" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:51.044" endtime="20201115 21:59:51.045"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.042" endtime="20201115 21:59:51.045"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.004" endtime="20201115 21:59:51.046"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.003" endtime="20201115 21:59:51.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.047" endtime="20201115 21:59:51.048"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.002" endtime="20201115 21:59:51.049"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.000" endtime="20201115 21:59:51.049"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.976" endtime="20201115 21:59:51.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.057" endtime="20201115 21:59:51.070"></status>
</kw>
<msg timestamp="20201115 21:59:51.070" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.055" endtime="20201115 21:59:51.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.073" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.071" endtime="20201115 21:59:51.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.074" endtime="20201115 21:59:51.076"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.053" endtime="20201115 21:59:51.076"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.051" endtime="20201115 21:59:51.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.081" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 21:59:51.080" endtime="20201115 21:59:51.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.084" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 21:59:51.083" endtime="20201115 21:59:51.084"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.078" endtime="20201115 21:59:51.084"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:50.973" endtime="20201115 21:59:51.085" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:49.281" endtime="20201115 21:59:51.089"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.146" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:51.154" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:52.218" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:51.145" endtime="20201115 21:59:52.219"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.224" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:52.221" endtime="20201115 21:59:52.225"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.144" endtime="20201115 21:59:52.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.231" endtime="20201115 21:59:52.455"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.228" endtime="20201115 21:59:52.456"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.468" endtime="20201115 21:59:52.488"></status>
</kw>
<msg timestamp="20201115 21:59:52.488" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.466" endtime="20201115 21:59:52.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.491" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.490" endtime="20201115 21:59:52.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.494" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:52.492" endtime="20201115 21:59:52.495"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:52.464" endtime="20201115 21:59:52.495"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:52.462" endtime="20201115 21:59:52.496"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.461" endtime="20201115 21:59:52.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:52.500" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:52.499" endtime="20201115 21:59:52.501"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.497" endtime="20201115 21:59:52.501"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.460" endtime="20201115 21:59:52.501"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.459" endtime="20201115 21:59:52.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.502" endtime="20201115 21:59:52.504"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.458" endtime="20201115 21:59:52.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.505" endtime="20201115 21:59:52.507"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.456" endtime="20201115 21:59:52.507"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.142" endtime="20201115 21:59:52.507"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.515" endtime="20201115 21:59:52.534"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.512" endtime="20201115 21:59:52.535"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.550" endtime="20201115 21:59:52.568"></status>
</kw>
<msg timestamp="20201115 21:59:52.568" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.548" endtime="20201115 21:59:52.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.570" endtime="20201115 21:59:52.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.574" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:52.572" endtime="20201115 21:59:52.575"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:52.545" endtime="20201115 21:59:52.575"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:52.543" endtime="20201115 21:59:52.576"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.540" endtime="20201115 21:59:52.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:52.580" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:52.580" endtime="20201115 21:59:52.581"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.577" endtime="20201115 21:59:52.581"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.539" endtime="20201115 21:59:52.581"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.539" endtime="20201115 21:59:52.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.582" endtime="20201115 21:59:52.584"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.537" endtime="20201115 21:59:52.584"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.536" endtime="20201115 21:59:52.585"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.511" endtime="20201115 21:59:52.585"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:52.588" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.596" endtime="20201115 21:59:52.611"></status>
</kw>
<msg timestamp="20201115 21:59:52.612" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.594" endtime="20201115 21:59:52.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.614" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.613" endtime="20201115 21:59:52.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.615" endtime="20201115 21:59:52.617"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.591" endtime="20201115 21:59:52.618"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.590" endtime="20201115 21:59:52.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.625" endtime="20201115 21:59:52.894"></status>
</kw>
<msg timestamp="20201115 21:59:52.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071096306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071101708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.623" endtime="20201115 21:59:52.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071096306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071101708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.897" endtime="20201115 21:59:52.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.903" endtime="20201115 21:59:52.904"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.621" endtime="20201115 21:59:52.905"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.619" endtime="20201115 21:59:52.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.909" level="INFO">${RESULT} = [{'time': 0.071101708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.071109722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:52.906" endtime="20201115 21:59:52.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.917" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:52.910" endtime="20201115 21:59:52.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.922" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:52.921" endtime="20201115 21:59:52.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.924" level="INFO">VALUE: [5.402000000001572e-06, 4.0409999999962976e-06, 3.1530000000057345e-06, 5.2360000000056806e-06, 6.236000000006681e-06, 5.05600000000328e-06, 3.1949999999975054e-06, 5.971999999992983e-06, 2.596999999993077e-06, 5.972000000006861e-06, 4.860999999994897e-06, 5.041999999996771e-06, 2.79200000000146e-06, 4.013999999996631e-06, 6.2779999999984515e-06, 2.847000000000266e-06, 2.4589999999963252e-06, 5.346999999988888e-06, 3.5409999999957975e-06, 3.041999999994771e-06, 3.861000000007775e-06, 4.917000000007055e-06, 5.721999999999672e-06, 3.847000000001266e-06, 4.333000000009135e-06]</msg>
<status status="PASS" starttime="20201115 21:59:52.923" endtime="20201115 21:59:52.924"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.918" endtime="20201115 21:59:52.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.927" endtime="20201115 21:59:52.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.931" endtime="20201115 21:59:52.953"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.929" endtime="20201115 21:59:52.954"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.925" endtime="20201115 21:59:52.955"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.588" endtime="20201115 21:59:52.956"></status>
</kw>
<msg timestamp="20201115 21:59:52.956" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.973" endtime="20201115 21:59:52.992"></status>
</kw>
<msg timestamp="20201115 21:59:52.993" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.969" endtime="20201115 21:59:52.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.998" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.995" endtime="20201115 21:59:52.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.001" endtime="20201115 21:59:53.004"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.964" endtime="20201115 21:59:53.005"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.960" endtime="20201115 21:59:53.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.020" endtime="20201115 21:59:53.289"></status>
</kw>
<msg timestamp="20201115 21:59:53.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031165861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031171083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.017" endtime="20201115 21:59:53.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031165861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031171083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.292" endtime="20201115 21:59:53.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.298" endtime="20201115 21:59:53.299"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.011" endtime="20201115 21:59:53.300"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.007" endtime="20201115 21:59:53.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.304" level="INFO">${RESULT} = [{'time': 0.031171083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.031179347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:53.301" endtime="20201115 21:59:53.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.313" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:53.305" endtime="20201115 21:59:53.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.317" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:53.316" endtime="20201115 21:59:53.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.320" level="INFO">VALUE: [5.221999999999172e-06, 2.458000000000321e-06, 3.153000000002265e-06, 4.0410000000032364e-06, 3.708000000001571e-06, 3.05600000000128e-06, 5.277999999997451e-06, 5.431000000000186e-06, 5.2499999999983116e-06, 3.1520000000027915e-06, 5.416000000001142e-06, 5.708000000000102e-06, 6.291999999998021e-06, 2.4719999999964215e-06, 6.235999999999742e-06, 3.5409999999957975e-06, 4.54200000000321e-06, 5.485999999998992e-06, 5.096999999995577e-06, 6.08400000000342e-06, 3.916999999999116e-06, 4.971999999998922e-06, 5.2639999999978815e-06, 6.041999999997771e-06, 5.986999999998965e-06]</msg>
<status status="PASS" starttime="20201115 21:59:53.318" endtime="20201115 21:59:53.320"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.314" endtime="20201115 21:59:53.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.323" endtime="20201115 21:59:53.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.326" endtime="20201115 21:59:53.346"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.325" endtime="20201115 21:59:53.346"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.321" endtime="20201115 21:59:53.347"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.958" endtime="20201115 21:59:53.347"></status>
</kw>
<msg timestamp="20201115 21:59:53.347" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.355" endtime="20201115 21:59:53.369"></status>
</kw>
<msg timestamp="20201115 21:59:53.369" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.353" endtime="20201115 21:59:53.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.372" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.370" endtime="20201115 21:59:53.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.373" endtime="20201115 21:59:53.374"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.351" endtime="20201115 21:59:53.375"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.349" endtime="20201115 21:59:53.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.382" endtime="20201115 21:59:53.646"></status>
</kw>
<msg timestamp="20201115 21:59:53.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017441931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.380" endtime="20201115 21:59:53.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017441931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.649" endtime="20201115 21:59:53.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.654" endtime="20201115 21:59:53.656"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.378" endtime="20201115 21:59:53.657"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.376" endtime="20201115 21:59:53.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.660" level="INFO">${RESULT} = [{'time': 0.017441931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.01745025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 21:59:53.658" endtime="20201115 21:59:53.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.675" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:53.668" endtime="20201115 21:59:53.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.680" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:53.679" endtime="20201115 21:59:53.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.682" level="INFO">VALUE: [5.042000000000241e-06, 4.277999999999921e-06, 5.542000000000741e-06, 5.403000000001046e-06, 6.236999999999215e-06, 3.972999999997395e-06, 4.166999999999366e-06, 5.417000000000616e-06, 5.041000000000767e-06, 5.082999999999477e-06, 4.889000000000976e-06, 5.222000000002641e-06, 6.0279999999982015e-06, 5.972000000003391e-06, 4.721999999998672e-06, 5.819000000000657e-06, 2.55600000000078e-06, 3.4309999999981855e-06, 6.2090000000000756e-06, 4.097000000001516e-06, 4.750000000001281e-06, 5.846999999999797e-06, 3.167000000001835e-06, 2.667000000001335e-06, 4.041999999999241e-06]</msg>
<status status="PASS" starttime="20201115 21:59:53.681" endtime="20201115 21:59:53.682"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.676" endtime="20201115 21:59:53.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.685" endtime="20201115 21:59:53.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.688" endtime="20201115 21:59:53.708"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.687" endtime="20201115 21:59:53.708"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.683" endtime="20201115 21:59:53.709"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.348" endtime="20201115 21:59:53.709"></status>
</kw>
<msg timestamp="20201115 21:59:53.709" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.717" endtime="20201115 21:59:53.731"></status>
</kw>
<msg timestamp="20201115 21:59:53.731" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.715" endtime="20201115 21:59:53.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.733" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.732" endtime="20201115 21:59:53.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.735" endtime="20201115 21:59:53.736"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.713" endtime="20201115 21:59:53.737"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.711" endtime="20201115 21:59:53.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.748" endtime="20201115 21:59:54.028"></status>
</kw>
<msg timestamp="20201115 21:59:54.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017403389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017407764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.744" endtime="20201115 21:59:54.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017403389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017407764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.031" endtime="20201115 21:59:54.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.036" endtime="20201115 21:59:54.038"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.739" endtime="20201115 21:59:54.039"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.738" endtime="20201115 21:59:54.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.042" level="INFO">${RESULT} = [{'time': 0.017407764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.017417139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.040" endtime="20201115 21:59:54.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.051" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:54.044" endtime="20201115 21:59:54.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.056" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:54.054" endtime="20201115 21:59:54.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.058" level="INFO">VALUE: [4.375000000000906e-06, 6.153000000001796e-06, 5.5139999999981315e-06, 4.277999999999921e-06, 3.222000000000641e-06, 2.76400000000232e-06, 4.721999999998672e-06, 5.027999999997201e-06, 5.346999999999297e-06, 4.917000000000116e-06, 5.985999999999492e-06, 5.916000000001642e-06, 4.096999999998047e-06, 2.4729999999993646e-06, 3.679999999998962e-06, 6.1389999999987566e-06, 2.4029999999980456e-06, 3.0969999999970466e-06, 5.917000000001116e-06, 2.80600000000103e-06, 4.666999999999866e-06, 2.985999999999961e-06, 5.596999999999547e-06, 5.471999999999422e-06, 2.5419999999977405e-06]</msg>
<status status="PASS" starttime="20201115 21:59:54.057" endtime="20201115 21:59:54.059"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.052" endtime="20201115 21:59:54.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.061" endtime="20201115 21:59:54.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.065" endtime="20201115 21:59:54.084"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.063" endtime="20201115 21:59:54.084"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.060" endtime="20201115 21:59:54.085"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.710" endtime="20201115 21:59:54.085"></status>
</kw>
<msg timestamp="20201115 21:59:54.085" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.093" endtime="20201115 21:59:54.108"></status>
</kw>
<msg timestamp="20201115 21:59:54.108" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.091" endtime="20201115 21:59:54.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.111" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.109" endtime="20201115 21:59:54.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.112" endtime="20201115 21:59:54.113"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.089" endtime="20201115 21:59:54.114"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.087" endtime="20201115 21:59:54.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.121" endtime="20201115 21:59:54.385"></status>
</kw>
<msg timestamp="20201115 21:59:54.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017448389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017451736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.119" endtime="20201115 21:59:54.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017448389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017451736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.388" endtime="20201115 21:59:54.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.394" endtime="20201115 21:59:54.395"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.117" endtime="20201115 21:59:54.396"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.115" endtime="20201115 21:59:54.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.400" level="INFO">${RESULT} = [{'time': 0.017451736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.017460764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:54.397" endtime="20201115 21:59:54.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.409" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:54.401" endtime="20201115 21:59:54.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.413" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:54.412" endtime="20201115 21:59:54.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.416" level="INFO">VALUE: [3.3469999999972966e-06, 4.985999999998492e-06, 5.971999999999922e-06, 3.026999999999197e-06, 5.499999999998562e-06, 5.417000000000616e-06, 5.346999999999297e-06, 3.708000000001571e-06, 4.750000000001281e-06, 5.667000000000866e-06, 5.09800000000199e-06, 3.7499999999968114e-06, 2.679999999997962e-06, 4.277999999999921e-06, 5.527999999997701e-06, 5.7229999999991454e-06, 3.347000000000766e-06, 5.749999999998812e-06, 3.554999999998837e-06, 2.653000000001765e-06, 3.111000000000086e-06, 5.749999999998812e-06, 5.776999999998478e-06, 2.667000000001335e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 21:59:54.414" endtime="20201115 21:59:54.416"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.410" endtime="20201115 21:59:54.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.419" endtime="20201115 21:59:54.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.422" endtime="20201115 21:59:54.441"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.421" endtime="20201115 21:59:54.442"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.417" endtime="20201115 21:59:54.442"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.086" endtime="20201115 21:59:54.443"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.586" endtime="20201115 21:59:54.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.447" endtime="20201115 21:59:54.467"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.446" endtime="20201115 21:59:54.468"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.444" endtime="20201115 21:59:54.468"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:52.508" endtime="20201115 21:59:54.469" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.476" endtime="20201115 21:59:54.495"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.474" endtime="20201115 21:59:54.496"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.509" endtime="20201115 21:59:54.526"></status>
</kw>
<msg timestamp="20201115 21:59:54.526" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.507" endtime="20201115 21:59:54.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.528" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.527" endtime="20201115 21:59:54.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.532" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:54.530" endtime="20201115 21:59:54.532"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:54.504" endtime="20201115 21:59:54.533"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:54.502" endtime="20201115 21:59:54.533"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.501" endtime="20201115 21:59:54.533"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:54.537" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:54.536" endtime="20201115 21:59:54.537"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.534" endtime="20201115 21:59:54.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.500" endtime="20201115 21:59:54.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.499" endtime="20201115 21:59:54.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.539" endtime="20201115 21:59:54.541"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.498" endtime="20201115 21:59:54.541"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.496" endtime="20201115 21:59:54.542"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.473" endtime="20201115 21:59:54.542"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:54.544" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.553" endtime="20201115 21:59:54.568"></status>
</kw>
<msg timestamp="20201115 21:59:54.568" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.551" endtime="20201115 21:59:54.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.571" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.569" endtime="20201115 21:59:54.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.572" endtime="20201115 21:59:54.573"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.548" endtime="20201115 21:59:54.574"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.546" endtime="20201115 21:59:54.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.581" endtime="20201115 21:59:54.862"></status>
</kw>
<msg timestamp="20201115 21:59:54.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066558625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066568514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.579" endtime="20201115 21:59:54.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066558625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066568514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.866" endtime="20201115 21:59:54.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.874" endtime="20201115 21:59:54.876"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.577" endtime="20201115 21:59:54.877"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.575" endtime="20201115 21:59:54.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.881" level="INFO">${RESULT} = [{'time': 0.066568514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.066572236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.878" endtime="20201115 21:59:54.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.895" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:54.882" endtime="20201115 21:59:54.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.899" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:54.898" endtime="20201115 21:59:54.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.901" level="INFO">VALUE: [9.888999999999037e-06, 1.1670000000102432e-06, 1.151999999990383e-06, 1.1530000000037344e-06, 1.1530000000037344e-06, 1.1250000000045945e-06, 1.1800000000034006e-06, 1.1939999999960316e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.151999999990383e-06, 1.1530000000037344e-06, 1.1659999999968917e-06, 1.1530000000037344e-06, 1.1529999999898566e-06, 1.1380000000116297e-06, 1.1529999999898566e-06, 1.1520000000042607e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.1530000000037344e-06, 1.151999999990383e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1520000000042607e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.1530000000037344e-06, 1.1530000000037344e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.1530000000037344e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.195000000009383e-06, 1.1390000000111034e-06, 1.1530000000037344e-06, 1.1530000000037344e-06, 1.1390000000111034e-06, 1.1520000000042607e-06, 1.1530000000037344e-06, 1.1939999999960316e-06, 1.1520000000042607e-06, 1.1529999999898566e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1520000000042607e-06, 1.1530000000037344e-06]</msg>
<status status="PASS" starttime="20201115 21:59:54.900" endtime="20201115 21:59:54.902"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.896" endtime="20201115 21:59:54.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.905" endtime="20201115 21:59:54.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.908" endtime="20201115 21:59:54.928"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.907" endtime="20201115 21:59:54.928"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.903" endtime="20201115 21:59:54.929"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.545" endtime="20201115 21:59:54.929"></status>
</kw>
<msg timestamp="20201115 21:59:54.929" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.937" endtime="20201115 21:59:54.953"></status>
</kw>
<msg timestamp="20201115 21:59:54.953" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.935" endtime="20201115 21:59:54.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.956" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.955" endtime="20201115 21:59:54.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.957" endtime="20201115 21:59:54.959"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.933" endtime="20201115 21:59:54.959"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.931" endtime="20201115 21:59:54.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.966" endtime="20201115 21:59:55.256"></status>
</kw>
<msg timestamp="20201115 21:59:55.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018574569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018575722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.964" endtime="20201115 21:59:55.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018574569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018575722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.260" endtime="20201115 21:59:55.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.268" endtime="20201115 21:59:55.270"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.962" endtime="20201115 21:59:55.271"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.960" endtime="20201115 21:59:55.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.276" level="INFO">${RESULT} = [{'time': 0.018575722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018582903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.272" endtime="20201115 21:59:55.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.290" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:55.277" endtime="20201115 21:59:55.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.294" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:55.293" endtime="20201115 21:59:55.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.296" level="INFO">VALUE: [1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.068999999999376e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.139000000000695e-06, 1.137999999997752e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.137999999997752e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.0830000000024154e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.295" endtime="20201115 21:59:55.297"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.290" endtime="20201115 21:59:55.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.300" endtime="20201115 21:59:55.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.303" endtime="20201115 21:59:55.323"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.302" endtime="20201115 21:59:55.323"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.298" endtime="20201115 21:59:55.324"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.930" endtime="20201115 21:59:55.324"></status>
</kw>
<msg timestamp="20201115 21:59:55.324" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.332" endtime="20201115 21:59:55.347"></status>
</kw>
<msg timestamp="20201115 21:59:55.347" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.330" endtime="20201115 21:59:55.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.348" endtime="20201115 21:59:55.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.351" endtime="20201115 21:59:55.353"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.328" endtime="20201115 21:59:55.353"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.326" endtime="20201115 21:59:55.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.361" endtime="20201115 21:59:55.650"></status>
</kw>
<msg timestamp="20201115 21:59:55.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017905514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017906667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.359" endtime="20201115 21:59:55.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017905514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017906667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.654" endtime="20201115 21:59:55.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.663" endtime="20201115 21:59:55.664"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.356" endtime="20201115 21:59:55.665"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.354" endtime="20201115 21:59:55.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.669" level="INFO">${RESULT} = [{'time': 0.017906667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.017911389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.666" endtime="20201115 21:59:55.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.682" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:55.670" endtime="20201115 21:59:55.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.687" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:55.686" endtime="20201115 21:59:55.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.689" level="INFO">VALUE: [1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1529999999967955e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1670000000033043e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1529999999967955e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.0969999999985158e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.688" endtime="20201115 21:59:55.690"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.683" endtime="20201115 21:59:55.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.693" endtime="20201115 21:59:55.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.696" endtime="20201115 21:59:55.715"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.695" endtime="20201115 21:59:55.716"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.691" endtime="20201115 21:59:55.716"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.325" endtime="20201115 21:59:55.717"></status>
</kw>
<msg timestamp="20201115 21:59:55.717" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.724" endtime="20201115 21:59:55.740"></status>
</kw>
<msg timestamp="20201115 21:59:55.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.723" endtime="20201115 21:59:55.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.743" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.741" endtime="20201115 21:59:55.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.744" endtime="20201115 21:59:55.745"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.720" endtime="20201115 21:59:55.746"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.719" endtime="20201115 21:59:55.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.754" endtime="20201115 21:59:56.043"></status>
</kw>
<msg timestamp="20201115 21:59:56.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017857458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017858597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.751" endtime="20201115 21:59:56.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017857458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017858597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.047" endtime="20201115 21:59:56.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.055" endtime="20201115 21:59:56.057"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.749" endtime="20201115 21:59:56.057"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.747" endtime="20201115 21:59:56.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.062" level="INFO">${RESULT} = [{'time': 0.017858597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.017861833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.059" endtime="20201115 21:59:56.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.076" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:56.063" endtime="20201115 21:59:56.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.081" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:56.080" endtime="20201115 21:59:56.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.083" level="INFO">VALUE: [1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1670000000033043e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1119999999975594e-06, 1.0970000000019853e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.137999999997752e-06, 1.1389999999972256e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1670000000033043e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.082" endtime="20201115 21:59:56.084"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.077" endtime="20201115 21:59:56.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.087" endtime="20201115 21:59:56.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.090" endtime="20201115 21:59:56.109"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.088" endtime="20201115 21:59:56.110"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.085" endtime="20201115 21:59:56.110"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.717" endtime="20201115 21:59:56.111"></status>
</kw>
<msg timestamp="20201115 21:59:56.111" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.118" endtime="20201115 21:59:56.134"></status>
</kw>
<msg timestamp="20201115 21:59:56.134" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.117" endtime="20201115 21:59:56.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.137" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.135" endtime="20201115 21:59:56.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.138" endtime="20201115 21:59:56.139"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.114" endtime="20201115 21:59:56.140"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.113" endtime="20201115 21:59:56.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.147" endtime="20201115 21:59:56.437"></status>
</kw>
<msg timestamp="20201115 21:59:56.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017869958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017871111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.145" endtime="20201115 21:59:56.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017869958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017871111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.441" endtime="20201115 21:59:56.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.449" endtime="20201115 21:59:56.451"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.143" endtime="20201115 21:59:56.451"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.141" endtime="20201115 21:59:56.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.456" level="INFO">${RESULT} = [{'time': 0.017871111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.017874903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.453" endtime="20201115 21:59:56.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.469" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:56.457" endtime="20201115 21:59:56.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.473" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:56.472" endtime="20201115 21:59:56.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.476" level="INFO">VALUE: [1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1380000000012214e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1520000000007913e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1380000000012214e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.474" endtime="20201115 21:59:56.476"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.470" endtime="20201115 21:59:56.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.479" endtime="20201115 21:59:56.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.483" endtime="20201115 21:59:56.502"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.481" endtime="20201115 21:59:56.503"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.478" endtime="20201115 21:59:56.503"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.111" endtime="20201115 21:59:56.503"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.543" endtime="20201115 21:59:56.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.508" endtime="20201115 21:59:56.527"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.507" endtime="20201115 21:59:56.528"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.505" endtime="20201115 21:59:56.528"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:54.470" endtime="20201115 21:59:56.529" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.537" endtime="20201115 21:59:56.557"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.536" endtime="20201115 21:59:56.557"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.571" endtime="20201115 21:59:56.589"></status>
</kw>
<msg timestamp="20201115 21:59:56.590" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.568" endtime="20201115 21:59:56.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.591" endtime="20201115 21:59:56.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.595" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:56.593" endtime="20201115 21:59:56.596"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:56.566" endtime="20201115 21:59:56.596"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:56.564" endtime="20201115 21:59:56.597"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.562" endtime="20201115 21:59:56.597"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:56.601" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:56.600" endtime="20201115 21:59:56.601"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.598" endtime="20201115 21:59:56.601"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.562" endtime="20201115 21:59:56.602"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.561" endtime="20201115 21:59:56.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.602" endtime="20201115 21:59:56.604"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.560" endtime="20201115 21:59:56.604"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.558" endtime="20201115 21:59:56.605"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.534" endtime="20201115 21:59:56.605"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.609" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.618" endtime="20201115 21:59:56.632"></status>
</kw>
<msg timestamp="20201115 21:59:56.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.616" endtime="20201115 21:59:56.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.634" endtime="20201115 21:59:56.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.636" endtime="20201115 21:59:56.638"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.613" endtime="20201115 21:59:56.638"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.611" endtime="20201115 21:59:56.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.645" endtime="20201115 21:59:56.932"></status>
</kw>
<msg timestamp="20201115 21:59:56.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071042528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071048903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.644" endtime="20201115 21:59:56.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071042528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071048903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.936" endtime="20201115 21:59:56.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.944" endtime="20201115 21:59:56.946"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.641" endtime="20201115 21:59:56.946"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.639" endtime="20201115 21:59:56.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.951" level="INFO">${RESULT} = [{'time': 0.071048903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.071103111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.948" endtime="20201115 21:59:56.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.964" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:56.952" endtime="20201115 21:59:56.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.969" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:56.968" endtime="20201115 21:59:56.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.971" level="INFO">VALUE: [6.375000000002906e-06, 6.041999999997771e-06, 6.069999999996911e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.02800000000514e-06, 6.02800000000514e-06, 6.042000000011649e-06, 6.083000000003946e-06, 6.02800000000514e-06, 6.040999999998298e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.027000000005667e-06, 6.041999999997771e-06, 6.042000000011649e-06, 6.0139999999986316e-06, 6.0550000000048065e-06, 6.055999999990402e-06, 6.040999999998298e-06, 6.0139999999986316e-06, 5.958000000000352e-06, 5.985999999999492e-06, 6.026999999991789e-06, 6.041999999997771e-06, 6.125000000009595e-06, 6.0139999999986316e-06, 6.097000000010455e-06, 6.041999999997771e-06, 6.027000000005667e-06, 6.040999999998298e-06, 6.027000000005667e-06, 6.0410000000121755e-06, 6.042000000011649e-06, 6.041999999997771e-06, 6.097000000010455e-06, 6.027000000005667e-06, 6.02800000000514e-06, 6.0000000000060005e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.02800000000514e-06, 6.111000000003086e-06, 6.02800000000514e-06, 6.042000000011649e-06, 6.05600000000428e-06, 6.05600000000428e-06, 6.069999999996911e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.970" endtime="20201115 21:59:56.972"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.965" endtime="20201115 21:59:56.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.974" endtime="20201115 21:59:56.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.978" endtime="20201115 21:59:56.997"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.976" endtime="20201115 21:59:56.997"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.973" endtime="20201115 21:59:56.998"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.609" endtime="20201115 21:59:56.999"></status>
</kw>
<msg timestamp="20201115 21:59:56.999" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.008" endtime="20201115 21:59:57.020"></status>
</kw>
<msg timestamp="20201115 21:59:57.020" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.006" endtime="20201115 21:59:57.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.021" endtime="20201115 21:59:57.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.024" endtime="20201115 21:59:57.025"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.004" endtime="20201115 21:59:57.026"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.002" endtime="20201115 21:59:57.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.033" endtime="20201115 21:59:57.320"></status>
</kw>
<msg timestamp="20201115 21:59:57.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.031" endtime="20201115 21:59:57.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.324" endtime="20201115 21:59:57.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.333" endtime="20201115 21:59:57.334"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.029" endtime="20201115 21:59:57.335"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.027" endtime="20201115 21:59:57.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.339" level="INFO">${RESULT} = [{'time': 0.020183819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.020237361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:57.336" endtime="20201115 21:59:57.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.353" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:57.340" endtime="20201115 21:59:57.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.357" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:57.356" endtime="20201115 21:59:57.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.360" level="INFO">VALUE: [6.276999999998978e-06, 6.041999999997771e-06, 6.027000000002197e-06, 6.0279999999982015e-06, 6.055999999997341e-06, 6.0139999999986316e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.097000000000047e-06, 6.0279999999982015e-06, 6.0139999999986316e-06, 5.9589999999998255e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.026999999998728e-06, 5.986999999998965e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.055000000001337e-06, 5.999999999999062e-06, 6.000000000002531e-06, 6.042000000001241e-06, 6.042000000001241e-06, 5.971999999999922e-06, 6.041999999997771e-06, 5.999999999999062e-06, 6.026999999998728e-06, 6.014000000002101e-06, 6.027000000002197e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 6.026999999998728e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.028000000001671e-06, 5.999999999999062e-06, 6.014000000002101e-06, 6.027000000002197e-06, 6.014000000002101e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.358" endtime="20201115 21:59:57.360"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.354" endtime="20201115 21:59:57.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.363" endtime="20201115 21:59:57.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.367" endtime="20201115 21:59:57.386"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.365" endtime="20201115 21:59:57.386"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.361" endtime="20201115 21:59:57.387"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.999" endtime="20201115 21:59:57.387"></status>
</kw>
<msg timestamp="20201115 21:59:57.387" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.396" endtime="20201115 21:59:57.409"></status>
</kw>
<msg timestamp="20201115 21:59:57.409" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.395" endtime="20201115 21:59:57.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.412" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.411" endtime="20201115 21:59:57.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.413" endtime="20201115 21:59:57.415"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.392" endtime="20201115 21:59:57.415"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.390" endtime="20201115 21:59:57.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.422" endtime="20201115 21:59:57.710"></status>
</kw>
<msg timestamp="20201115 21:59:57.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197505, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 21:59:57.420" endtime="20201115 21:59:57.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197505, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 21:59:57.715" endtime="20201115 21:59:57.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.723" endtime="20201115 21:59:57.724"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.418" endtime="20201115 21:59:57.725"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.416" endtime="20201115 21:59:57.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.730" level="INFO">${RESULT} = [{'time': 0.0197505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.019801861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 21:59:57.726" endtime="20201115 21:59:57.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.744" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:57.731" endtime="20201115 21:59:57.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.750" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:57.748" endtime="20201115 21:59:57.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.752" level="INFO">VALUE: [6.292000000001491e-06, 6.028000000001671e-06, 6.012999999999158e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 6.042000000001241e-06, 5.971999999999922e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.028000000001671e-06, 6.0139999999986316e-06, 6.026999999998728e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.110999999999617e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.014000000002101e-06, 6.055000000001337e-06, 6.014000000002101e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.042000000001241e-06, 5.999999999999062e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.041000000001767e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 6.055999999997341e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 6.0279999999982015e-06, 6.026999999998728e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.0139999999986316e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.751" endtime="20201115 21:59:57.753"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.745" endtime="20201115 21:59:57.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.756" endtime="20201115 21:59:57.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.759" endtime="20201115 21:59:57.779"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.758" endtime="20201115 21:59:57.779"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.754" endtime="20201115 21:59:57.780"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.388" endtime="20201115 21:59:57.780"></status>
</kw>
<msg timestamp="20201115 21:59:57.780" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.789" endtime="20201115 21:59:57.802"></status>
</kw>
<msg timestamp="20201115 21:59:57.802" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.787" endtime="20201115 21:59:57.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.805" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.803" endtime="20201115 21:59:57.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.806" endtime="20201115 21:59:57.807"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.785" endtime="20201115 21:59:57.808"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.783" endtime="20201115 21:59:57.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.814" endtime="20201115 21:59:58.101"></status>
</kw>
<msg timestamp="20201115 21:59:58.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.813" endtime="20201115 21:59:58.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.105" endtime="20201115 21:59:58.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.113" endtime="20201115 21:59:58.115"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.810" endtime="20201115 21:59:58.116"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.809" endtime="20201115 21:59:58.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.120" level="INFO">${RESULT} = [{'time': 0.019736847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.019790681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:58.117" endtime="20201115 21:59:58.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.133" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:58.121" endtime="20201115 21:59:58.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.138" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:58.137" endtime="20201115 21:59:58.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.140" level="INFO">VALUE: [6.360999999999867e-06, 6.028000000001671e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.0279999999982015e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.012999999999158e-06, 6.0139999999986316e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.0139999999986316e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.0139999999986316e-06, 6.041999999997771e-06, 6.083000000000477e-06, 5.985999999999492e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.027000000002197e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.027000000002197e-06, 6.0279999999982015e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.139" endtime="20201115 21:59:58.141"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.134" endtime="20201115 21:59:58.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.144" endtime="20201115 21:59:58.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.148" endtime="20201115 21:59:58.168"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.146" endtime="20201115 21:59:58.168"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.142" endtime="20201115 21:59:58.169"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.781" endtime="20201115 21:59:58.169"></status>
</kw>
<msg timestamp="20201115 21:59:58.169" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.178" endtime="20201115 21:59:58.191"></status>
</kw>
<msg timestamp="20201115 21:59:58.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.176" endtime="20201115 21:59:58.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.192" endtime="20201115 21:59:58.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.195" endtime="20201115 21:59:58.196"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.174" endtime="20201115 21:59:58.197"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.172" endtime="20201115 21:59:58.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.204" endtime="20201115 21:59:58.489"></status>
</kw>
<msg timestamp="20201115 21:59:58.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.202" endtime="20201115 21:59:58.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.493" endtime="20201115 21:59:58.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.501" endtime="20201115 21:59:58.503"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.199" endtime="20201115 21:59:58.503"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.198" endtime="20201115 21:59:58.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.508" level="INFO">${RESULT} = [{'time': 0.019797819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.277000000002447e-06, 'source_diff': 6.277000000002447e-06}, {'time': 0.019849806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:58.504" endtime="20201115 21:59:58.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.521" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:58.509" endtime="20201115 21:59:58.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.526" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:58.525" endtime="20201115 21:59:58.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.528" level="INFO">VALUE: [6.277000000002447e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.055999999997341e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 5.999999999999062e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.0979999999995205e-06, 6.041000000001767e-06, 6.054999999997868e-06, 6.028000000001671e-06, 6.0839999999999506e-06, 6.028000000001671e-06, 6.026999999998728e-06, 6.055999999997341e-06, 6.026999999998728e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.056000000000811e-06, 5.986000000002961e-06, 6.097000000000047e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.054999999997868e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.527" endtime="20201115 21:59:58.529"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.522" endtime="20201115 21:59:58.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.532" endtime="20201115 21:59:58.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.535" endtime="20201115 21:59:58.554"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.533" endtime="20201115 21:59:58.555"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.530" endtime="20201115 21:59:58.555"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.170" endtime="20201115 21:59:58.556"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.608" endtime="20201115 21:59:58.556"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.607" endtime="20201115 21:59:58.556"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.558" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.567" endtime="20201115 21:59:58.580"></status>
</kw>
<msg timestamp="20201115 21:59:58.580" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.565" endtime="20201115 21:59:58.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.583" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.581" endtime="20201115 21:59:58.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.584" endtime="20201115 21:59:58.585"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.563" endtime="20201115 21:59:58.586"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.561" endtime="20201115 21:59:58.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.593" endtime="20201115 21:59:58.879"></status>
</kw>
<msg timestamp="20201115 21:59:58.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.591" endtime="20201115 21:59:58.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.883" endtime="20201115 21:59:58.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.892" endtime="20201115 21:59:58.893"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.588" endtime="20201115 21:59:58.894"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.587" endtime="20201115 21:59:58.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.898" level="INFO">${RESULT} = [{'time': 0.022207139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.022266653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:58.895" endtime="20201115 21:59:58.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.912" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:58.899" endtime="20201115 21:59:58.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.916" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:58.915" endtime="20201115 21:59:58.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.923" level="INFO">VALUE: [2.874999999999406e-06, 2.889000000002445e-06, 2.917000000001585e-06, 2.9020000000025414e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.889000000002445e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.915999999998642e-06, 2.8889999999989757e-06, 2.915999999998642e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.9169999999981155e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.917000000001585e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.903000000002015e-06, 2.9029999999985456e-06, 2.903000000002015e-06, 2.915999999998642e-06, 2.9169999999981155e-06, 2.847000000000266e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.917000000001585e-06, 2.903000000002015e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.8750000000028753e-06, 2.874999999999406e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.917" endtime="20201115 21:59:58.924"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.912" endtime="20201115 21:59:58.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.926" endtime="20201115 21:59:58.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.930" endtime="20201115 21:59:58.949"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.928" endtime="20201115 21:59:58.950"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.925" endtime="20201115 21:59:58.950"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.559" endtime="20201115 21:59:58.951"></status>
</kw>
<msg timestamp="20201115 21:59:58.951" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.960" endtime="20201115 21:59:58.974"></status>
</kw>
<msg timestamp="20201115 21:59:58.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.958" endtime="20201115 21:59:58.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.975" endtime="20201115 21:59:58.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.978" endtime="20201115 21:59:58.979"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.955" endtime="20201115 21:59:58.980"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.953" endtime="20201115 21:59:58.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.987" endtime="20201115 21:59:59.275"></status>
</kw>
<msg timestamp="20201115 21:59:59.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020331347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.985" endtime="20201115 21:59:59.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020331347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.279" endtime="20201115 21:59:59.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.287" endtime="20201115 21:59:59.289"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.983" endtime="20201115 21:59:59.290"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.981" endtime="20201115 21:59:59.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.294" level="INFO">${RESULT} = [{'time': 0.020334236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.02039525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 21:59:59.291" endtime="20201115 21:59:59.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.307" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:59.295" endtime="20201115 21:59:59.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.312" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:59.311" endtime="20201115 21:59:59.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.315" level="INFO">VALUE: [2.8889999999989757e-06, 2.8889999999989757e-06, 2.944000000001251e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.889000000002445e-06, 2.903000000002015e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.9029999999985456e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.8889999999989757e-06, 2.901999999999072e-06, 2.903000000002015e-06, 2.8340000000001697e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.8200000000006e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.931000000001155e-06, 2.8340000000001697e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.9020000000025414e-06, 2.8340000000001697e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.887999999999502e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.9160000000021113e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.313" endtime="20201115 21:59:59.315"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.309" endtime="20201115 21:59:59.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.318" endtime="20201115 21:59:59.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.321" endtime="20201115 21:59:59.341"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.320" endtime="20201115 21:59:59.341"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.316" endtime="20201115 21:59:59.342"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.951" endtime="20201115 21:59:59.342"></status>
</kw>
<msg timestamp="20201115 21:59:59.342" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.351" endtime="20201115 21:59:59.364"></status>
</kw>
<msg timestamp="20201115 21:59:59.364" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.350" endtime="20201115 21:59:59.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.365" endtime="20201115 21:59:59.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.368" endtime="20201115 21:59:59.370"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.347" endtime="20201115 21:59:59.371"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.345" endtime="20201115 21:59:59.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.378" endtime="20201115 21:59:59.662"></status>
</kw>
<msg timestamp="20201115 21:59:59.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020281028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.376" endtime="20201115 21:59:59.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020281028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.667" endtime="20201115 21:59:59.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.675" endtime="20201115 21:59:59.677"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.374" endtime="20201115 21:59:59.677"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.372" endtime="20201115 21:59:59.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.682" level="INFO">${RESULT} = [{'time': 0.020281028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.020341722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:59.678" endtime="20201115 21:59:59.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.695" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:59.683" endtime="20201115 21:59:59.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.700" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:59.699" endtime="20201115 21:59:59.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.702" level="INFO">VALUE: [2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.903000000002015e-06, 2.8339999999967003e-06, 2.887999999999502e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.8889999999989757e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.9169999999981155e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.917000000001585e-06, 2.8750000000028753e-06, 2.889000000002445e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.958000000000821e-06, 2.901999999999072e-06, 2.874999999999406e-06, 2.8339999999967003e-06, 2.9169999999981155e-06, 2.903000000002015e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.9160000000021113e-06, 2.889000000002445e-06, 2.887999999999502e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.944000000001251e-06, 2.819000000001126e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8200000000006e-06, 2.8889999999989757e-06, 2.929999999998212e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.8889999999989757e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.701" endtime="20201115 21:59:59.703"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.696" endtime="20201115 21:59:59.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.705" endtime="20201115 21:59:59.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.709" endtime="20201115 21:59:59.728"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.707" endtime="20201115 21:59:59.729"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.704" endtime="20201115 21:59:59.729"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.343" endtime="20201115 21:59:59.729"></status>
</kw>
<msg timestamp="20201115 21:59:59.730" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.738" endtime="20201115 21:59:59.752"></status>
</kw>
<msg timestamp="20201115 21:59:59.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.737" endtime="20201115 21:59:59.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.754" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.753" endtime="20201115 21:59:59.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.756" endtime="20201115 21:59:59.757"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.734" endtime="20201115 21:59:59.758"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.732" endtime="20201115 21:59:59.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.764" endtime="20201115 22:00:00.051"></status>
</kw>
<msg timestamp="20201115 22:00:00.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.763" endtime="20201115 22:00:00.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.055" endtime="20201115 22:00:00.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.064" endtime="20201115 22:00:00.065"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.760" endtime="20201115 22:00:00.066"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.759" endtime="20201115 22:00:00.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.070" level="INFO">${RESULT} = [{'time': 0.019676667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.019739722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:00.067" endtime="20201115 22:00:00.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.084" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:00.072" endtime="20201115 22:00:00.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.088" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:00.087" endtime="20201115 22:00:00.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.091" level="INFO">VALUE: [2.874999999999406e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.8750000000028753e-06, 2.889000000002445e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.917000000001585e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.9169999999981155e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.8889999999989757e-06, 2.901999999999072e-06, 2.889000000002445e-06, 2.889000000002445e-06, 2.917000000001585e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.903000000002015e-06, 2.903000000002015e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.8889999999989757e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.089" endtime="20201115 22:00:00.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.085" endtime="20201115 22:00:00.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.094" endtime="20201115 22:00:00.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.097" endtime="20201115 22:00:00.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.096" endtime="20201115 22:00:00.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.092" endtime="20201115 22:00:00.118"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.730" endtime="20201115 22:00:00.118"></status>
</kw>
<msg timestamp="20201115 22:00:00.118" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.127" endtime="20201115 22:00:00.141"></status>
</kw>
<msg timestamp="20201115 22:00:00.141" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.125" endtime="20201115 22:00:00.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.144" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.142" endtime="20201115 22:00:00.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.145" endtime="20201115 22:00:00.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.123" endtime="20201115 22:00:00.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.121" endtime="20201115 22:00:00.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.154" endtime="20201115 22:00:00.440"></status>
</kw>
<msg timestamp="20201115 22:00:00.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019695458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.152" endtime="20201115 22:00:00.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019695458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.445" endtime="20201115 22:00:00.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.453" endtime="20201115 22:00:00.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.150" endtime="20201115 22:00:00.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.148" endtime="20201115 22:00:00.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.460" level="INFO">${RESULT} = [{'time': 0.019695458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.019757222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:00.456" endtime="20201115 22:00:00.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.473" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:00.461" endtime="20201115 22:00:00.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.477" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:00.476" endtime="20201115 22:00:00.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.480" level="INFO">VALUE: [2.874999999999406e-06, 2.889000000002445e-06, 2.903000000002015e-06, 2.8750000000028753e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.9029999999985456e-06, 2.901999999999072e-06, 2.889000000002445e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.847000000000266e-06, 2.901999999999072e-06, 2.9160000000021113e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.9160000000021113e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.903000000002015e-06, 2.874999999999406e-06, 2.901999999999072e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.917000000001585e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.848000000003209e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.889000000002445e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.479" endtime="20201115 22:00:00.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.474" endtime="20201115 22:00:00.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.483" endtime="20201115 22:00:00.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.486" endtime="20201115 22:00:00.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.485" endtime="20201115 22:00:00.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.481" endtime="20201115 22:00:00.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.119" endtime="20201115 22:00:00.507"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.557" endtime="20201115 22:00:00.507"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.556" endtime="20201115 22:00:00.507"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.510" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.518" endtime="20201115 22:00:00.532"></status>
</kw>
<msg timestamp="20201115 22:00:00.533" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.517" endtime="20201115 22:00:00.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.534" endtime="20201115 22:00:00.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.536" endtime="20201115 22:00:00.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.514" endtime="20201115 22:00:00.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.512" endtime="20201115 22:00:00.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.546" endtime="20201115 22:00:00.834"></status>
</kw>
<msg timestamp="20201115 22:00:00.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.544" endtime="20201115 22:00:00.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.839" endtime="20201115 22:00:00.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.847" endtime="20201115 22:00:00.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.542" endtime="20201115 22:00:00.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.540" endtime="20201115 22:00:00.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.853" level="INFO">${RESULT} = [{'time': 0.022199167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.02226725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:00.850" endtime="20201115 22:00:00.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.867" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:00.854" endtime="20201115 22:00:00.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.871" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:00.870" endtime="20201115 22:00:00.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.874" level="INFO">VALUE: [3.111000000000086e-06, 3.0559999999978105e-06, 3.097000000000516e-06, 3.1669999999983656e-06, 3.1250000000031253e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.0969999999970466e-06, 3.111000000000086e-06, 3.1119999999995596e-06, 3.124999999999656e-06, 3.0979999999999897e-06, 3.05600000000128e-06, 3.111000000000086e-06, 3.0559999999978105e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.179999999998462e-06, 3.165999999998892e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.112000000003029e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1809999999979355e-06, 3.0969999999970466e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.111000000000086e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.872" endtime="20201115 22:00:00.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.867" endtime="20201115 22:00:00.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.877" endtime="20201115 22:00:00.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.880" endtime="20201115 22:00:00.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.879" endtime="20201115 22:00:00.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.875" endtime="20201115 22:00:00.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.510" endtime="20201115 22:00:00.901"></status>
</kw>
<msg timestamp="20201115 22:00:00.901" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.910" endtime="20201115 22:00:00.923"></status>
</kw>
<msg timestamp="20201115 22:00:00.923" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.908" endtime="20201115 22:00:00.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.926" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.924" endtime="20201115 22:00:00.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.927" endtime="20201115 22:00:00.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.905" endtime="20201115 22:00:00.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.903" endtime="20201115 22:00:00.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.936" endtime="20201115 22:00:01.222"></status>
</kw>
<msg timestamp="20201115 22:00:01.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:00.934" endtime="20201115 22:00:01.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:01.226" endtime="20201115 22:00:01.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.235" endtime="20201115 22:00:01.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.932" endtime="20201115 22:00:01.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.930" endtime="20201115 22:00:01.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.241" level="INFO">${RESULT} = [{'time': 0.0197385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.019809333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:01.238" endtime="20201115 22:00:01.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.255" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:01.242" endtime="20201115 22:00:01.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.259" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:01.258" endtime="20201115 22:00:01.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.262" level="INFO">VALUE: [3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1669999999983656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.07000000000085e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.0689999999979067e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1529999999987957e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1529999999987957e-06, 3.111000000000086e-06, 3.1250000000031253e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.153000000002265e-06, 3.124999999999656e-06, 3.1109999999966165e-06, 3.1389999999992257e-06, 3.1119999999995596e-06, 3.1119999999995596e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.0840000000004197e-06, 3.111000000000086e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.260" endtime="20201115 22:00:01.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.255" endtime="20201115 22:00:01.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.265" endtime="20201115 22:00:01.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.268" endtime="20201115 22:00:01.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.266" endtime="20201115 22:00:01.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.263" endtime="20201115 22:00:01.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.901" endtime="20201115 22:00:01.289"></status>
</kw>
<msg timestamp="20201115 22:00:01.289" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.298" endtime="20201115 22:00:01.312"></status>
</kw>
<msg timestamp="20201115 22:00:01.312" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.296" endtime="20201115 22:00:01.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.314" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.313" endtime="20201115 22:00:01.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.316" endtime="20201115 22:00:01.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.293" endtime="20201115 22:00:01.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.291" endtime="20201115 22:00:01.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.324" endtime="20201115 22:00:01.612"></status>
</kw>
<msg timestamp="20201115 22:00:01.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020129528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020132625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.323" endtime="20201115 22:00:01.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020129528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020132625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.616" endtime="20201115 22:00:01.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.625" endtime="20201115 22:00:01.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.320" endtime="20201115 22:00:01.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.319" endtime="20201115 22:00:01.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.631" level="INFO">${RESULT} = [{'time': 0.020132625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.020204333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.628" endtime="20201115 22:00:01.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.645" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:01.632" endtime="20201115 22:00:01.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.649" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:01.648" endtime="20201115 22:00:01.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.652" level="INFO">VALUE: [3.097000000000516e-06, 3.194000000001501e-06, 3.0979999999999897e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.153000000002265e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.1809999999979355e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.167000000001835e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.0969999999970466e-06, 3.0979999999999897e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.1529999999987957e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1669999999983656e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 3.1250000000031253e-06, 3.137999999999752e-06, 3.1250000000031253e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.04200000000171e-06, 3.0979999999999897e-06, 3.181000000001405e-06, 3.1109999999966165e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.137999999999752e-06, 3.111000000000086e-06, 3.026999999999197e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.124999999999656e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.650" endtime="20201115 22:00:01.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.646" endtime="20201115 22:00:01.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.655" endtime="20201115 22:00:01.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.658" endtime="20201115 22:00:01.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.657" endtime="20201115 22:00:01.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.653" endtime="20201115 22:00:01.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.289" endtime="20201115 22:00:01.679"></status>
</kw>
<msg timestamp="20201115 22:00:01.679" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.688" endtime="20201115 22:00:01.702"></status>
</kw>
<msg timestamp="20201115 22:00:01.702" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.687" endtime="20201115 22:00:01.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.705" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.703" endtime="20201115 22:00:01.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.706" endtime="20201115 22:00:01.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.684" endtime="20201115 22:00:01.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.682" endtime="20201115 22:00:01.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.715" endtime="20201115 22:00:02.000"></status>
</kw>
<msg timestamp="20201115 22:00:02.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.713" endtime="20201115 22:00:02.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.005" endtime="20201115 22:00:02.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.013" endtime="20201115 22:00:02.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.711" endtime="20201115 22:00:02.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.709" endtime="20201115 22:00:02.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.019" level="INFO">${RESULT} = [{'time': 0.020121333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.020189236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:02.016" endtime="20201115 22:00:02.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.033" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:02.020" endtime="20201115 22:00:02.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.037" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:02.036" endtime="20201115 22:00:02.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.040" level="INFO">VALUE: [3.0550000000018063e-06, 3.097000000000516e-06, 3.139000000002695e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.179999999998462e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.1250000000031253e-06, 3.139000000002695e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.124999999999656e-06, 3.1660000000023614e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1250000000031253e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.1119999999995596e-06, 3.151999999999322e-06, 3.179999999998462e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.038" endtime="20201115 22:00:02.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.034" endtime="20201115 22:00:02.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.043" endtime="20201115 22:00:02.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.047" endtime="20201115 22:00:02.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.045" endtime="20201115 22:00:02.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.041" endtime="20201115 22:00:02.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.680" endtime="20201115 22:00:02.067"></status>
</kw>
<msg timestamp="20201115 22:00:02.067" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.076" endtime="20201115 22:00:02.090"></status>
</kw>
<msg timestamp="20201115 22:00:02.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.075" endtime="20201115 22:00:02.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.093" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.091" endtime="20201115 22:00:02.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.094" endtime="20201115 22:00:02.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.072" endtime="20201115 22:00:02.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.070" endtime="20201115 22:00:02.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.103" endtime="20201115 22:00:02.398"></status>
</kw>
<msg timestamp="20201115 22:00:02.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019718569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.101" endtime="20201115 22:00:02.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019718569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.403" endtime="20201115 22:00:02.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.411" endtime="20201115 22:00:02.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.098" endtime="20201115 22:00:02.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.097" endtime="20201115 22:00:02.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.417" level="INFO">${RESULT} = [{'time': 0.019721694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1250000000031253e-06, 'source_diff': 3.1250000000031253e-06}, {'time': 0.019790875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:02.414" endtime="20201115 22:00:02.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.431" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:02.418" endtime="20201115 22:00:02.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.435" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:02.434" endtime="20201115 22:00:02.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.438" level="INFO">VALUE: [3.1250000000031253e-06, 3.111000000000086e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.04200000000171e-06, 3.1660000000023614e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.1529999999987957e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.0969999999970466e-06, 3.1119999999995596e-06, 3.124999999999656e-06, 3.1119999999995596e-06, 3.0979999999999897e-06, 3.0550000000018063e-06, 3.165999999998892e-06, 3.111000000000086e-06, 3.0969999999970466e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.167000000001835e-06, 3.1529999999987957e-06, 3.124999999999656e-06, 3.179999999998462e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1119999999995596e-06, 3.1119999999995596e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.1250000000031253e-06, 3.083000000000946e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.436" endtime="20201115 22:00:02.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.432" endtime="20201115 22:00:02.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.441" endtime="20201115 22:00:02.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.444" endtime="20201115 22:00:02.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.443" endtime="20201115 22:00:02.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.439" endtime="20201115 22:00:02.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.068" endtime="20201115 22:00:02.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.509" endtime="20201115 22:00:02.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.508" endtime="20201115 22:00:02.465"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.468" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.476" endtime="20201115 22:00:02.490"></status>
</kw>
<msg timestamp="20201115 22:00:02.490" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.475" endtime="20201115 22:00:02.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.493" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.491" endtime="20201115 22:00:02.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.494" endtime="20201115 22:00:02.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.472" endtime="20201115 22:00:02.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.470" endtime="20201115 22:00:02.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.503" endtime="20201115 22:00:02.789"></status>
</kw>
<msg timestamp="20201115 22:00:02.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.501" endtime="20201115 22:00:02.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.794" endtime="20201115 22:00:02.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.802" endtime="20201115 22:00:02.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.499" endtime="20201115 22:00:02.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.497" endtime="20201115 22:00:02.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.808" level="INFO">${RESULT} = [{'time': 0.021990542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3479999999967702e-06, 'source_diff': 3.3479999999967702e-06}, {'time': 0.022070319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:02.805" endtime="20201115 22:00:02.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.822" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:02.810" endtime="20201115 22:00:02.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.826" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:02.825" endtime="20201115 22:00:02.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.829" level="INFO">VALUE: [3.3479999999967702e-06, 3.333000000001196e-06, 3.403000000002515e-06, 3.3200000000011e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.3339999999972003e-06, 3.374999999999906e-06, 3.3480000000002397e-06, 3.361000000000336e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.361000000000336e-06, 3.319000000001626e-06, 3.3329999999977267e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.304999999998587e-06, 3.3340000000006698e-06, 3.361000000000336e-06, 3.333000000001196e-06, 3.30600000000153e-06, 3.347000000000766e-06, 3.319000000001626e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.319000000001626e-06, 3.319000000001626e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.4029999999990457e-06, 3.3469999999972966e-06, 3.3339999999972003e-06, 3.3200000000011e-06, 3.3339999999972003e-06, 3.3200000000011e-06, 3.3480000000002397e-06, 3.374999999999906e-06, 3.3189999999981568e-06, 3.3189999999981568e-06, 3.347000000000766e-06, 3.3329999999977267e-06, 3.3480000000002397e-06, 3.3480000000002397e-06, 3.3469999999972966e-06, 3.4029999999990457e-06, 3.3340000000006698e-06, 3.3339999999972003e-06, 3.3469999999972966e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.827" endtime="20201115 22:00:02.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.823" endtime="20201115 22:00:02.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.832" endtime="20201115 22:00:02.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.836" endtime="20201115 22:00:02.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.834" endtime="20201115 22:00:02.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.831" endtime="20201115 22:00:02.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.468" endtime="20201115 22:00:02.856"></status>
</kw>
<msg timestamp="20201115 22:00:02.857" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.865" endtime="20201115 22:00:02.879"></status>
</kw>
<msg timestamp="20201115 22:00:02.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.864" endtime="20201115 22:00:02.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.880" endtime="20201115 22:00:02.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.883" endtime="20201115 22:00:02.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.861" endtime="20201115 22:00:02.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.859" endtime="20201115 22:00:02.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.892" endtime="20201115 22:00:03.179"></status>
</kw>
<msg timestamp="20201115 22:00:03.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.890" endtime="20201115 22:00:03.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.184" endtime="20201115 22:00:03.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.192" endtime="20201115 22:00:03.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.888" endtime="20201115 22:00:03.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.886" endtime="20201115 22:00:03.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.199" level="INFO">${RESULT} = [{'time': 0.019671722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.019748403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.195" endtime="20201115 22:00:03.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.212" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:03.200" endtime="20201115 22:00:03.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.217" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:03.216" endtime="20201115 22:00:03.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.219" level="INFO">VALUE: [3.361000000000336e-06, 3.347000000000766e-06, 3.3329999999977267e-06, 3.3340000000006698e-06, 3.3329999999977267e-06, 3.3469999999972966e-06, 3.361000000000336e-06, 3.3480000000002397e-06, 3.2779999999989207e-06, 3.3480000000002397e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3059999999980605e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3480000000002397e-06, 3.319000000001626e-06, 3.361000000000336e-06, 3.3189999999981568e-06, 3.3619999999998096e-06, 3.3469999999972966e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.3200000000011e-06, 3.319000000001626e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.304999999998587e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.3469999999972966e-06, 3.3750000000033753e-06, 3.3329999999977267e-06, 3.3189999999981568e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.4029999999990457e-06, 3.3339999999972003e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.3480000000002397e-06, 3.3340000000006698e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.417000000002085e-06, 3.29200000000196e-06, 3.347000000000766e-06, 3.2779999999989207e-06, 3.333000000001196e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.218" endtime="20201115 22:00:03.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.213" endtime="20201115 22:00:03.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.222" endtime="20201115 22:00:03.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.226" endtime="20201115 22:00:03.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.224" endtime="20201115 22:00:03.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.221" endtime="20201115 22:00:03.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.857" endtime="20201115 22:00:03.246"></status>
</kw>
<msg timestamp="20201115 22:00:03.246" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.255" endtime="20201115 22:00:03.269"></status>
</kw>
<msg timestamp="20201115 22:00:03.270" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.254" endtime="20201115 22:00:03.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.272" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.271" endtime="20201115 22:00:03.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.273" endtime="20201115 22:00:03.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.251" endtime="20201115 22:00:03.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.249" endtime="20201115 22:00:03.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.282" endtime="20201115 22:00:03.570"></status>
</kw>
<msg timestamp="20201115 22:00:03.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019779444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.281" endtime="20201115 22:00:03.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019779444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.574" endtime="20201115 22:00:03.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.583" endtime="20201115 22:00:03.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.278" endtime="20201115 22:00:03.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.276" endtime="20201115 22:00:03.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.589" level="INFO">${RESULT} = [{'time': 0.019782792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.019859708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:03.586" endtime="20201115 22:00:03.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.603" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:03.591" endtime="20201115 22:00:03.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.607" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:03.606" endtime="20201115 22:00:03.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.610" level="INFO">VALUE: [3.3480000000002397e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.3469999999972966e-06, 3.3340000000006698e-06, 3.3889999999994758e-06, 3.3340000000006698e-06, 3.319000000001626e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3200000000011e-06, 3.3480000000002397e-06, 3.29200000000196e-06, 3.3329999999977267e-06, 3.347000000000766e-06, 3.3329999999977267e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.3199999999976304e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.347000000000766e-06, 3.3619999999998096e-06, 3.3050000000020563e-06, 3.333000000001196e-06, 3.4160000000026114e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.3200000000011e-06, 3.347000000000766e-06, 3.3329999999977267e-06, 3.333000000001196e-06, 3.2919999999984906e-06, 3.304999999998587e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.403000000002515e-06, 3.3329999999977267e-06, 3.3329999999977267e-06, 3.374999999999906e-06, 3.415999999999142e-06, 3.3059999999980605e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.3340000000006698e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.608" endtime="20201115 22:00:03.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.604" endtime="20201115 22:00:03.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.613" endtime="20201115 22:00:03.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.616" endtime="20201115 22:00:03.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.615" endtime="20201115 22:00:03.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.611" endtime="20201115 22:00:03.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.247" endtime="20201115 22:00:03.637"></status>
</kw>
<msg timestamp="20201115 22:00:03.637" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.646" endtime="20201115 22:00:03.659"></status>
</kw>
<msg timestamp="20201115 22:00:03.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.644" endtime="20201115 22:00:03.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.661" endtime="20201115 22:00:03.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.663" endtime="20201115 22:00:03.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.642" endtime="20201115 22:00:03.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.640" endtime="20201115 22:00:03.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.672" endtime="20201115 22:00:03.959"></status>
</kw>
<msg timestamp="20201115 22:00:03.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019733347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.671" endtime="20201115 22:00:03.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019733347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.964" endtime="20201115 22:00:03.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.979" endtime="20201115 22:00:03.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.668" endtime="20201115 22:00:03.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.667" endtime="20201115 22:00:03.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.986" level="INFO">${RESULT} = [{'time': 0.019733347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.019811083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:03.983" endtime="20201115 22:00:03.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.999" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:03.987" endtime="20201115 22:00:04.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.004" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:04.003" endtime="20201115 22:00:04.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.006" level="INFO">VALUE: [3.3329999999977267e-06, 3.347000000000766e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.374999999999906e-06, 3.3200000000011e-06, 3.361000000000336e-06, 3.30600000000153e-06, 3.333000000001196e-06, 3.3469999999972966e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.3200000000011e-06, 3.2639999999993508e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.29200000000196e-06, 3.3200000000011e-06, 3.3329999999977267e-06, 3.403000000002515e-06, 3.361000000000336e-06, 3.3199999999976304e-06, 3.361000000000336e-06, 3.3480000000002397e-06, 3.333000000001196e-06, 3.2639999999993508e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.361000000000336e-06, 3.304999999998587e-06, 3.347000000000766e-06, 3.3469999999972966e-06, 3.3200000000011e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.3469999999972966e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.3189999999981568e-06, 3.3469999999972966e-06, 3.3200000000011e-06, 3.347000000000766e-06, 3.3480000000002397e-06, 3.347000000000766e-06, 3.3890000000029452e-06, 3.29200000000196e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.005" endtime="20201115 22:00:04.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.001" endtime="20201115 22:00:04.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.010" endtime="20201115 22:00:04.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.013" endtime="20201115 22:00:04.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.011" endtime="20201115 22:00:04.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.008" endtime="20201115 22:00:04.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.638" endtime="20201115 22:00:04.034"></status>
</kw>
<msg timestamp="20201115 22:00:04.034" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.042" endtime="20201115 22:00:04.057"></status>
</kw>
<msg timestamp="20201115 22:00:04.058" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.041" endtime="20201115 22:00:04.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.059" endtime="20201115 22:00:04.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.061" endtime="20201115 22:00:04.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.038" endtime="20201115 22:00:04.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.036" endtime="20201115 22:00:04.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.070" endtime="20201115 22:00:04.357"></status>
</kw>
<msg timestamp="20201115 22:00:04.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.069" endtime="20201115 22:00:04.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.361" endtime="20201115 22:00:04.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.370" endtime="20201115 22:00:04.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.066" endtime="20201115 22:00:04.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.064" endtime="20201115 22:00:04.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.376" level="INFO">${RESULT} = [{'time': 0.019713556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.019790653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:04.373" endtime="20201115 22:00:04.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.389" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:04.377" endtime="20201115 22:00:04.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.394" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:04.393" endtime="20201115 22:00:04.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.396" level="INFO">VALUE: [3.3480000000002397e-06, 3.3339999999972003e-06, 3.3189999999981568e-06, 3.3890000000029452e-06, 3.333000000001196e-06, 3.319000000001626e-06, 3.3329999999977267e-06, 3.319000000001626e-06, 3.3889999999994758e-06, 3.3200000000011e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.374999999999906e-06, 3.3059999999980605e-06, 3.30600000000153e-06, 3.29200000000196e-06, 3.3479999999967702e-06, 3.3339999999972003e-06, 3.29200000000196e-06, 3.3200000000011e-06, 3.3329999999977267e-06, 3.3059999999980605e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.3329999999977267e-06, 3.3189999999981568e-06, 3.374999999999906e-06, 3.347000000000766e-06, 3.3469999999972966e-06, 3.3050000000020563e-06, 3.3339999999972003e-06, 3.347000000000766e-06, 3.347000000000766e-06, 3.3469999999972966e-06, 3.26400000000282e-06, 3.347000000000766e-06, 3.319000000001626e-06, 3.347000000000766e-06, 3.3199999999976304e-06, 3.319000000001626e-06, 3.3200000000011e-06, 3.3329999999977267e-06, 3.3329999999977267e-06, 3.3469999999972966e-06, 3.3469999999972966e-06, 3.361000000000336e-06, 3.319000000001626e-06, 3.2779999999989207e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.395" endtime="20201115 22:00:04.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.390" endtime="20201115 22:00:04.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.399" endtime="20201115 22:00:04.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.403" endtime="20201115 22:00:04.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.401" endtime="20201115 22:00:04.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.398" endtime="20201115 22:00:04.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.034" endtime="20201115 22:00:04.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.467" endtime="20201115 22:00:04.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.466" endtime="20201115 22:00:04.424"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.427" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.435" endtime="20201115 22:00:04.450"></status>
</kw>
<msg timestamp="20201115 22:00:04.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.434" endtime="20201115 22:00:04.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.453" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.452" endtime="20201115 22:00:04.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.454" endtime="20201115 22:00:04.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.431" endtime="20201115 22:00:04.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.429" endtime="20201115 22:00:04.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.463" endtime="20201115 22:00:04.752"></status>
</kw>
<msg timestamp="20201115 22:00:04.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022259361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.462" endtime="20201115 22:00:04.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022259361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.756" endtime="20201115 22:00:04.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.764" endtime="20201115 22:00:04.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.459" endtime="20201115 22:00:04.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.457" endtime="20201115 22:00:04.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.771" level="INFO">${RESULT} = [{'time': 0.022262931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.022349931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:04.767" endtime="20201115 22:00:04.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.784" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:04.772" endtime="20201115 22:00:04.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.789" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:04.788" endtime="20201115 22:00:04.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.791" level="INFO">VALUE: [3.57000000000135e-06, 3.5419999999987406e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.5699999999978804e-06, 3.54200000000221e-06, 3.55600000000178e-06, 3.5699999999978804e-06, 3.5690000000018762e-06, 3.5699999999978804e-06, 3.554999999998837e-06, 3.5419999999987406e-06, 3.5419999999987406e-06, 3.5690000000018762e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.54200000000221e-06, 3.540999999999267e-06, 3.5689999999984068e-06, 3.5279999999991707e-06, 3.5410000000027364e-06, 3.5550000000023063e-06, 3.57000000000135e-06, 3.540999999999267e-06, 3.486000000000461e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.5559999999983105e-06, 3.597000000001016e-06, 3.5699999999978804e-06, 3.554999999998837e-06, 3.554999999998837e-06, 3.57000000000135e-06, 3.554999999998837e-06, 3.6109999999971165e-06, 3.5690000000018762e-06, 3.5690000000018762e-06, 3.554999999998837e-06, 3.55600000000178e-06, 3.554999999998837e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.526999999999697e-06, 3.5550000000023063e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.6109999999971165e-06, 3.55600000000178e-06, 3.5689999999984068e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.790" endtime="20201115 22:00:04.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.785" endtime="20201115 22:00:04.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.794" endtime="20201115 22:00:04.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.797" endtime="20201115 22:00:04.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.796" endtime="20201115 22:00:04.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.793" endtime="20201115 22:00:04.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.427" endtime="20201115 22:00:04.818"></status>
</kw>
<msg timestamp="20201115 22:00:04.818" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.827" endtime="20201115 22:00:04.841"></status>
</kw>
<msg timestamp="20201115 22:00:04.842" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.826" endtime="20201115 22:00:04.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.845" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.843" endtime="20201115 22:00:04.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.846" endtime="20201115 22:00:04.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.823" endtime="20201115 22:00:04.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.821" endtime="20201115 22:00:04.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.855" endtime="20201115 22:00:05.141"></status>
</kw>
<msg timestamp="20201115 22:00:05.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.853" endtime="20201115 22:00:05.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.146" endtime="20201115 22:00:05.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.154" endtime="20201115 22:00:05.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.851" endtime="20201115 22:00:05.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.849" endtime="20201115 22:00:05.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.161" level="INFO">${RESULT} = [{'time': 0.019724583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.019813153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.157" endtime="20201115 22:00:05.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.174" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:05.162" endtime="20201115 22:00:05.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.178" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:05.177" endtime="20201115 22:00:05.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.181" level="INFO">VALUE: [3.554999999998837e-06, 3.6389999999997258e-06, 3.554999999998837e-06, 3.55600000000178e-06, 3.5699999999978804e-06, 3.5410000000027364e-06, 3.554999999998837e-06, 3.5279999999991707e-06, 3.5279999999991707e-06, 3.5550000000023063e-06, 3.5419999999987406e-06, 3.5829999999979767e-06, 3.5419999999987406e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.611000000000586e-06, 3.4999999999965614e-06, 3.5689999999984068e-06, 3.54200000000221e-06, 3.540999999999267e-06, 3.5690000000018762e-06, 3.5689999999984068e-06, 3.5559999999983105e-06, 3.5690000000018762e-06, 3.554999999998837e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.540999999999267e-06, 3.5829999999979767e-06, 3.5690000000018762e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.57000000000135e-06, 3.5969999999975466e-06, 3.554999999998837e-06, 3.54200000000221e-06, 3.5689999999984068e-06, 3.54200000000221e-06, 3.526999999999697e-06, 3.5690000000018762e-06, 3.57000000000135e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.54200000000221e-06, 3.5840000000009198e-06, 3.5690000000018762e-06, 3.554999999998837e-06, 3.54200000000221e-06, 3.5559999999983105e-06, 3.5550000000023063e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.179" endtime="20201115 22:00:05.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.175" endtime="20201115 22:00:05.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.184" endtime="20201115 22:00:05.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.187" endtime="20201115 22:00:05.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.186" endtime="20201115 22:00:05.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.182" endtime="20201115 22:00:05.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.819" endtime="20201115 22:00:05.208"></status>
</kw>
<msg timestamp="20201115 22:00:05.208" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.217" endtime="20201115 22:00:05.232"></status>
</kw>
<msg timestamp="20201115 22:00:05.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.215" endtime="20201115 22:00:05.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.235" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.233" endtime="20201115 22:00:05.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.236" endtime="20201115 22:00:05.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.213" endtime="20201115 22:00:05.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.211" endtime="20201115 22:00:05.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.245" endtime="20201115 22:00:05.533"></status>
</kw>
<msg timestamp="20201115 22:00:05.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.243" endtime="20201115 22:00:05.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.537" endtime="20201115 22:00:05.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.546" endtime="20201115 22:00:05.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.241" endtime="20201115 22:00:05.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.239" endtime="20201115 22:00:05.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.552" level="INFO">${RESULT} = [{'time': 0.020198347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.020284639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.549" endtime="20201115 22:00:05.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.566" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:05.553" endtime="20201115 22:00:05.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.570" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:05.569" endtime="20201115 22:00:05.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.573" level="INFO">VALUE: [3.540999999999267e-06, 3.55600000000178e-06, 3.540999999999267e-06, 3.597000000001016e-06, 3.5690000000018762e-06, 3.540999999999267e-06, 3.554999999998837e-06, 3.5550000000023063e-06, 3.5559999999983105e-06, 3.5690000000018762e-06, 3.5559999999983105e-06, 3.5690000000018762e-06, 3.625000000000156e-06, 3.57000000000135e-06, 3.5689999999984068e-06, 3.5559999999983105e-06, 3.5689999999984068e-06, 3.554999999998837e-06, 3.57000000000135e-06, 3.5550000000023063e-06, 3.5840000000009198e-06, 3.5839999999974503e-06, 3.5419999999987406e-06, 3.486000000000461e-06, 3.57000000000135e-06, 3.54200000000221e-06, 3.597000000001016e-06, 3.540999999999267e-06, 3.5839999999974503e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.611000000000586e-06, 3.5419999999987406e-06, 3.5699999999978804e-06, 3.5690000000018762e-06, 3.5559999999983105e-06, 3.5690000000018762e-06, 3.486000000000461e-06, 3.5690000000018762e-06, 3.625000000000156e-06, 3.54200000000221e-06, 3.554999999998837e-06, 3.5839999999974503e-06, 3.5840000000009198e-06, 3.5699999999978804e-06, 3.5279999999991707e-06, 3.5690000000018762e-06, 3.54200000000221e-06, 3.5419999999987406e-06, 3.5690000000018762e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.571" endtime="20201115 22:00:05.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.567" endtime="20201115 22:00:05.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.576" endtime="20201115 22:00:05.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.579" endtime="20201115 22:00:05.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.577" endtime="20201115 22:00:05.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.574" endtime="20201115 22:00:05.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.209" endtime="20201115 22:00:05.600"></status>
</kw>
<msg timestamp="20201115 22:00:05.600" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.609" endtime="20201115 22:00:05.623"></status>
</kw>
<msg timestamp="20201115 22:00:05.624" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.607" endtime="20201115 22:00:05.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.626" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.625" endtime="20201115 22:00:05.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.627" endtime="20201115 22:00:05.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.605" endtime="20201115 22:00:05.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.603" endtime="20201115 22:00:05.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.636" endtime="20201115 22:00:05.924"></status>
</kw>
<msg timestamp="20201115 22:00:05.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020147153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.635" endtime="20201115 22:00:05.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020147153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.928" endtime="20201115 22:00:05.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.936" endtime="20201115 22:00:05.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.632" endtime="20201115 22:00:05.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.630" endtime="20201115 22:00:05.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.943" level="INFO">${RESULT} = [{'time': 0.020147153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.020232819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:05.940" endtime="20201115 22:00:05.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.956" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:05.944" endtime="20201115 22:00:05.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.961" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:05.960" endtime="20201115 22:00:05.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.963" level="INFO">VALUE: [3.57000000000135e-06, 3.4719999999974216e-06, 3.5419999999987406e-06, 3.5419999999987406e-06, 3.554999999998837e-06, 3.611000000000586e-06, 3.554999999998837e-06, 3.5699999999978804e-06, 3.554999999998837e-06, 3.55600000000178e-06, 3.5689999999984068e-06, 3.5699999999978804e-06, 3.5559999999983105e-06, 3.57000000000135e-06, 3.5559999999983105e-06, 3.57000000000135e-06, 3.554999999998837e-06, 3.5699999999978804e-06, 3.597000000001016e-06, 3.5559999999983105e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.5550000000023063e-06, 3.5829999999979767e-06, 3.526999999999697e-06, 3.5690000000018762e-06, 3.540999999999267e-06, 3.55600000000178e-06, 3.6389999999997258e-06, 3.5840000000009198e-06, 3.5550000000023063e-06, 3.5419999999987406e-06, 3.55600000000178e-06, 3.5550000000023063e-06, 3.5839999999974503e-06, 3.5689999999984068e-06, 3.583000000001446e-06, 3.5690000000018762e-06, 3.5699999999978804e-06, 3.5559999999983105e-06, 3.57000000000135e-06, 3.554999999998837e-06, 3.54200000000221e-06, 3.5690000000018762e-06, 3.625000000000156e-06, 3.597000000001016e-06, 3.5559999999983105e-06, 3.500000000000031e-06, 3.583000000001446e-06, 3.554999999998837e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.962" endtime="20201115 22:00:05.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.957" endtime="20201115 22:00:05.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.966" endtime="20201115 22:00:05.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.970" endtime="20201115 22:00:05.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.968" endtime="20201115 22:00:05.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.965" endtime="20201115 22:00:05.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.601" endtime="20201115 22:00:05.991"></status>
</kw>
<msg timestamp="20201115 22:00:05.991" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.000" endtime="20201115 22:00:06.015"></status>
</kw>
<msg timestamp="20201115 22:00:06.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.998" endtime="20201115 22:00:06.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.016" endtime="20201115 22:00:06.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.019" endtime="20201115 22:00:06.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.996" endtime="20201115 22:00:06.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.993" endtime="20201115 22:00:06.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.028" endtime="20201115 22:00:06.313"></status>
</kw>
<msg timestamp="20201115 22:00:06.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.026" endtime="20201115 22:00:06.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.318" endtime="20201115 22:00:06.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.326" endtime="20201115 22:00:06.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.024" endtime="20201115 22:00:06.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.022" endtime="20201115 22:00:06.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.333" level="INFO">${RESULT} = [{'time': 0.019822375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.019910917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:06.329" endtime="20201115 22:00:06.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.346" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:06.334" endtime="20201115 22:00:06.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.350" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:06.349" endtime="20201115 22:00:06.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.353" level="INFO">VALUE: [3.5559999999983105e-06, 3.5419999999987406e-06, 3.5690000000018762e-06, 3.55600000000178e-06, 3.5419999999987406e-06, 3.5559999999983105e-06, 3.57000000000135e-06, 3.540999999999267e-06, 3.54200000000221e-06, 3.57000000000135e-06, 3.55600000000178e-06, 3.486000000000461e-06, 3.554999999998837e-06, 3.5419999999987406e-06, 3.625000000000156e-06, 3.55600000000178e-06, 3.5689999999984068e-06, 3.554999999998837e-06, 3.57000000000135e-06, 3.638000000000252e-06, 3.5559999999983105e-06, 3.5550000000023063e-06, 3.55600000000178e-06, 3.5550000000023063e-06, 3.5419999999987406e-06, 3.554999999998837e-06, 3.5419999999987406e-06, 3.5690000000018762e-06, 3.5689999999984068e-06, 3.5550000000023063e-06, 3.554999999998837e-06, 3.5699999999978804e-06, 3.5550000000023063e-06, 3.5139999999996008e-06, 3.5829999999979767e-06, 3.5840000000009198e-06, 3.54200000000221e-06, 3.526999999999697e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.5690000000018762e-06, 3.583000000001446e-06, 3.500000000000031e-06, 3.554999999998837e-06, 3.5829999999979767e-06, 3.5829999999979767e-06, 3.5840000000009198e-06, 3.5689999999984068e-06, 3.5689999999984068e-06, 3.500000000000031e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.352" endtime="20201115 22:00:06.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.347" endtime="20201115 22:00:06.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.356" endtime="20201115 22:00:06.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.360" endtime="20201115 22:00:06.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.358" endtime="20201115 22:00:06.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.355" endtime="20201115 22:00:06.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.992" endtime="20201115 22:00:06.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.425" endtime="20201115 22:00:06.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.425" endtime="20201115 22:00:06.381"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.383" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.392" endtime="20201115 22:00:06.406"></status>
</kw>
<msg timestamp="20201115 22:00:06.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.390" endtime="20201115 22:00:06.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.409" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.408" endtime="20201115 22:00:06.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.410" endtime="20201115 22:00:06.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.388" endtime="20201115 22:00:06.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.386" endtime="20201115 22:00:06.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.419" endtime="20201115 22:00:06.706"></status>
</kw>
<msg timestamp="20201115 22:00:06.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.418" endtime="20201115 22:00:06.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.711" endtime="20201115 22:00:06.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.719" endtime="20201115 22:00:06.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.415" endtime="20201115 22:00:06.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.413" endtime="20201115 22:00:06.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.726" level="INFO">${RESULT} = [{'time': 0.022133444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.022229889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:06.722" endtime="20201115 22:00:06.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.739" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:06.727" endtime="20201115 22:00:06.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.743" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:06.742" endtime="20201115 22:00:06.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.746" level="INFO">VALUE: [3.818999999998657e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.8059999999985605e-06, 3.832999999998227e-06, 3.763999999999851e-06, 3.80600000000203e-06, 3.7919999999989906e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.750000000000281e-06, 3.8199999999981304e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.833000000001696e-06, 3.7919999999989906e-06, 3.776999999999947e-06, 3.77800000000289e-06, 3.763000000000377e-06, 3.86200000000031e-06, 3.833000000001696e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.77800000000289e-06, 3.80600000000203e-06, 3.7779999999994207e-06, 3.8050000000025563e-06, 3.736000000000711e-06, 3.7779999999994207e-06, 3.763000000000377e-06, 3.79200000000246e-06, 3.7919999999989906e-06, 3.84799999999727e-06, 3.7779999999994207e-06, 3.804999999999087e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.6949999999980054e-06, 3.790999999999517e-06, 3.804999999999087e-06, 3.7779999999994207e-06, 3.80600000000203e-06, 3.7910000000029864e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.7919999999989906e-06, 3.790999999999517e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.745" endtime="20201115 22:00:06.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.740" endtime="20201115 22:00:06.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.750" endtime="20201115 22:00:06.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.753" endtime="20201115 22:00:06.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.751" endtime="20201115 22:00:06.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.748" endtime="20201115 22:00:06.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.384" endtime="20201115 22:00:06.774"></status>
</kw>
<msg timestamp="20201115 22:00:06.774" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.783" endtime="20201115 22:00:06.798"></status>
</kw>
<msg timestamp="20201115 22:00:06.798" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.781" endtime="20201115 22:00:06.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.799" endtime="20201115 22:00:06.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.802" endtime="20201115 22:00:06.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.778" endtime="20201115 22:00:06.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.776" endtime="20201115 22:00:06.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.811" endtime="20201115 22:00:07.098"></status>
</kw>
<msg timestamp="20201115 22:00:07.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.809" endtime="20201115 22:00:07.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.103" endtime="20201115 22:00:07.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.111" endtime="20201115 22:00:07.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.807" endtime="20201115 22:00:07.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.805" endtime="20201115 22:00:07.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.118" level="INFO">${RESULT} = [{'time': 0.019731458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.019827, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:07.114" endtime="20201115 22:00:07.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.131" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:07.118" endtime="20201115 22:00:07.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.136" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:07.135" endtime="20201115 22:00:07.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.138" level="INFO">VALUE: [3.776999999999947e-06, 3.80600000000203e-06, 3.763999999999851e-06, 3.8059999999985605e-06, 3.79200000000246e-06, 3.790999999999517e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.846999999997797e-06, 3.790999999999517e-06, 3.750000000000281e-06, 3.79200000000246e-06, 3.80600000000203e-06, 3.8059999999985605e-06, 3.79200000000246e-06, 3.7919999999989906e-06, 3.804999999999087e-06, 3.7910000000029864e-06, 3.804999999999087e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.763000000000377e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.7919999999989906e-06, 3.776999999999947e-06, 3.750000000000281e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.79200000000246e-06, 3.804999999999087e-06, 3.7919999999989906e-06, 3.763000000000377e-06, 3.80600000000203e-06, 3.832999999998227e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.80600000000203e-06, 3.776999999999947e-06, 3.818999999998657e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.776999999999947e-06, 3.7919999999989906e-06, 3.776999999999947e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.137" endtime="20201115 22:00:07.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.132" endtime="20201115 22:00:07.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.141" endtime="20201115 22:00:07.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.145" endtime="20201115 22:00:07.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.143" endtime="20201115 22:00:07.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.139" endtime="20201115 22:00:07.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.774" endtime="20201115 22:00:07.165"></status>
</kw>
<msg timestamp="20201115 22:00:07.165" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.174" endtime="20201115 22:00:07.189"></status>
</kw>
<msg timestamp="20201115 22:00:07.190" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.173" endtime="20201115 22:00:07.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.191" endtime="20201115 22:00:07.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.193" endtime="20201115 22:00:07.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.170" endtime="20201115 22:00:07.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.168" endtime="20201115 22:00:07.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.202" endtime="20201115 22:00:07.489"></status>
</kw>
<msg timestamp="20201115 22:00:07.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019768292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.201" endtime="20201115 22:00:07.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019768292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.494" endtime="20201115 22:00:07.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.502" endtime="20201115 22:00:07.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.198" endtime="20201115 22:00:07.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.196" endtime="20201115 22:00:07.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.509" level="INFO">${RESULT} = [{'time': 0.019772069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.019868486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:07.505" endtime="20201115 22:00:07.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.522" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:07.510" endtime="20201115 22:00:07.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.527" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:07.526" endtime="20201115 22:00:07.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.529" level="INFO">VALUE: [3.776999999999947e-06, 3.722000000001141e-06, 3.804999999999087e-06, 3.79200000000246e-06, 3.7919999999989906e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.79200000000246e-06, 3.80600000000203e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.8059999999985605e-06, 3.7779999999994207e-06, 3.7640000000033202e-06, 3.693999999998532e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.77800000000289e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.7910000000029864e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.833000000001696e-06, 3.819000000002126e-06, 3.7919999999989906e-06, 3.818999999998657e-06, 3.79200000000246e-06, 3.79200000000246e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.8059999999985605e-06, 3.80600000000203e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.77800000000289e-06, 3.763999999999851e-06, 3.776999999999947e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.80600000000203e-06, 3.8059999999985605e-06, 3.7779999999994207e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.528" endtime="20201115 22:00:07.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.523" endtime="20201115 22:00:07.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.532" endtime="20201115 22:00:07.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.536" endtime="20201115 22:00:07.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.534" endtime="20201115 22:00:07.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.531" endtime="20201115 22:00:07.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.166" endtime="20201115 22:00:07.556"></status>
</kw>
<msg timestamp="20201115 22:00:07.557" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.565" endtime="20201115 22:00:07.580"></status>
</kw>
<msg timestamp="20201115 22:00:07.580" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.564" endtime="20201115 22:00:07.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.581" endtime="20201115 22:00:07.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.584" endtime="20201115 22:00:07.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.561" endtime="20201115 22:00:07.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.559" endtime="20201115 22:00:07.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.593" endtime="20201115 22:00:07.880"></status>
</kw>
<msg timestamp="20201115 22:00:07.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.591" endtime="20201115 22:00:07.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.884" endtime="20201115 22:00:07.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.892" endtime="20201115 22:00:07.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.588" endtime="20201115 22:00:07.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.587" endtime="20201115 22:00:07.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.899" level="INFO">${RESULT} = [{'time': 0.019779931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.019876583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:07.896" endtime="20201115 22:00:07.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.913" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:07.900" endtime="20201115 22:00:07.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.917" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:07.916" endtime="20201115 22:00:07.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.920" level="INFO">VALUE: [3.7919999999989906e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.819000000002126e-06, 3.833000000001696e-06, 3.8059999999985605e-06, 3.804999999999087e-06, 3.7919999999989906e-06, 3.8059999999985605e-06, 3.77800000000289e-06, 3.7779999999994207e-06, 3.708000000001571e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.79200000000246e-06, 3.776999999999947e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.77800000000289e-06, 3.790999999999517e-06, 3.833000000001696e-06, 3.790999999999517e-06, 3.804999999999087e-06, 3.79200000000246e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.7359999999972415e-06, 3.804999999999087e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.80600000000203e-06, 3.7779999999994207e-06, 3.819000000002126e-06, 3.763999999999851e-06, 3.763000000000377e-06, 3.750000000000281e-06, 3.776999999999947e-06, 3.722000000001141e-06, 3.7919999999989906e-06, 3.7079999999981017e-06, 3.790999999999517e-06, 3.875000000000406e-06, 3.7779999999994207e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.918" endtime="20201115 22:00:07.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.913" endtime="20201115 22:00:07.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.923" endtime="20201115 22:00:07.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.926" endtime="20201115 22:00:07.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.925" endtime="20201115 22:00:07.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.921" endtime="20201115 22:00:07.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.557" endtime="20201115 22:00:07.947"></status>
</kw>
<msg timestamp="20201115 22:00:07.947" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.956" endtime="20201115 22:00:07.970"></status>
</kw>
<msg timestamp="20201115 22:00:07.970" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.954" endtime="20201115 22:00:07.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.973" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.971" endtime="20201115 22:00:07.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.974" endtime="20201115 22:00:07.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.952" endtime="20201115 22:00:07.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.949" endtime="20201115 22:00:07.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.983" endtime="20201115 22:00:08.268"></status>
</kw>
<msg timestamp="20201115 22:00:08.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019766236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.981" endtime="20201115 22:00:08.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019762444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019766236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.273" endtime="20201115 22:00:08.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.281" endtime="20201115 22:00:08.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.979" endtime="20201115 22:00:08.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.977" endtime="20201115 22:00:08.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.288" level="INFO">${RESULT} = [{'time': 0.019766236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.019863403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:08.284" endtime="20201115 22:00:08.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.301" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:08.289" endtime="20201115 22:00:08.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.305" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:08.304" endtime="20201115 22:00:08.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.308" level="INFO">VALUE: [3.7919999999989906e-06, 3.77800000000289e-06, 3.7779999999994207e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.7079999999981017e-06, 3.776999999999947e-06, 3.77800000000289e-06, 3.8059999999985605e-06, 3.7919999999989906e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.722000000001141e-06, 3.79200000000246e-06, 3.833000000001696e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.8059999999985605e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.804999999999087e-06, 3.7910000000029864e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.8059999999985605e-06, 3.776999999999947e-06, 3.818999999998657e-06, 3.776999999999947e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 3.7359999999972415e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.7919999999989906e-06, 3.833000000001696e-06]</msg>
<status status="PASS" starttime="20201115 22:00:08.306" endtime="20201115 22:00:08.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.302" endtime="20201115 22:00:08.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.311" endtime="20201115 22:00:08.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.314" endtime="20201115 22:00:08.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.313" endtime="20201115 22:00:08.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.309" endtime="20201115 22:00:08.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.947" endtime="20201115 22:00:08.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.382" endtime="20201115 22:00:08.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.381" endtime="20201115 22:00:08.335"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.338" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.346" endtime="20201115 22:00:08.361"></status>
</kw>
<msg timestamp="20201115 22:00:08.362" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.345" endtime="20201115 22:00:08.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.364" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.363" endtime="20201115 22:00:08.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.365" endtime="20201115 22:00:08.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.342" endtime="20201115 22:00:08.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.340" endtime="20201115 22:00:08.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.375" endtime="20201115 22:00:08.663"></status>
</kw>
<msg timestamp="20201115 22:00:08.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.373" endtime="20201115 22:00:08.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.667" endtime="20201115 22:00:08.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.675" endtime="20201115 22:00:08.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.371" endtime="20201115 22:00:08.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.369" endtime="20201115 22:00:08.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.681" level="INFO">${RESULT} = [{'time': 0.022237958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.022345653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:08.678" endtime="20201115 22:00:08.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.695" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:08.682" endtime="20201115 22:00:08.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.699" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:08.698" endtime="20201115 22:00:08.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.701" level="INFO">VALUE: [3.9859999999974915e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.014000000000101e-06, 3.943999999998782e-06, 4.07000000000185e-06, 4.014000000000101e-06, 3.987000000000435e-06, 4.014000000000101e-06, 4.027000000000197e-06, 4.014000000000101e-06, 4.040999999999767e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.027999999999671e-06, 4.02800000000314e-06, 4.014000000000101e-06, 4.000000000000531e-06, 3.972000000001391e-06, 4.041999999999241e-06, 4.014000000000101e-06, 4.014000000000101e-06, 3.9999999999970615e-06, 3.9999999999970615e-06, 4.027000000000197e-06, 4.014000000000101e-06, 3.9449999999982555e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.041999999999241e-06, 3.9999999999970615e-06, 4.014000000000101e-06, 4.054999999999337e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.08400000000142e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.041999999999241e-06, 4.014000000000101e-06]</msg>
<status status="PASS" starttime="20201115 22:00:08.700" endtime="20201115 22:00:08.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.695" endtime="20201115 22:00:08.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.705" endtime="20201115 22:00:08.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.708" endtime="20201115 22:00:08.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.706" endtime="20201115 22:00:08.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.703" endtime="20201115 22:00:08.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.338" endtime="20201115 22:00:08.728"></status>
</kw>
<msg timestamp="20201115 22:00:08.729" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.737" endtime="20201115 22:00:08.753"></status>
</kw>
<msg timestamp="20201115 22:00:08.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.736" endtime="20201115 22:00:08.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.756" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.754" endtime="20201115 22:00:08.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.757" endtime="20201115 22:00:08.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.733" endtime="20201115 22:00:08.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.731" endtime="20201115 22:00:08.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.766" endtime="20201115 22:00:09.054"></status>
</kw>
<msg timestamp="20201115 22:00:09.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.765" endtime="20201115 22:00:09.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.058" endtime="20201115 22:00:09.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.066" endtime="20201115 22:00:09.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.762" endtime="20201115 22:00:09.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.761" endtime="20201115 22:00:09.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.072" level="INFO">${RESULT} = [{'time': 0.019672847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.019780458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:09.069" endtime="20201115 22:00:09.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.086" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:09.073" endtime="20201115 22:00:09.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.090" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:09.089" endtime="20201115 22:00:09.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.093" level="INFO">VALUE: [4.027999999999671e-06, 4.014000000000101e-06, 4.068999999998907e-06, 4.04200000000271e-06, 4.083000000001946e-06, 4.02800000000314e-06, 3.971999999997922e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.027999999999671e-06, 3.986000000000961e-06, 3.987000000000435e-06, 4.027000000000197e-06, 4.000000000000531e-06, 4.014000000000101e-06, 3.9999999999970615e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.054999999999337e-06, 3.9999999999970615e-06, 4.014000000000101e-06, 4.041999999999241e-06, 4.014000000000101e-06, 4.083000000001946e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.958000000001821e-06, 4.000000000000531e-06, 4.054999999999337e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.014000000000101e-06, 3.9859999999974915e-06, 4.014000000000101e-06, 4.054999999999337e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.027000000000197e-06, 4.014000000000101e-06, 4.027999999999671e-06, 3.986000000000961e-06, 4.014000000000101e-06, 3.972000000001391e-06, 3.959000000001295e-06, 4.014000000000101e-06, 4.013999999996631e-06, 4.000000000000531e-06, 4.041999999999241e-06]</msg>
<status status="PASS" starttime="20201115 22:00:09.091" endtime="20201115 22:00:09.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.087" endtime="20201115 22:00:09.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.096" endtime="20201115 22:00:09.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.099" endtime="20201115 22:00:09.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.098" endtime="20201115 22:00:09.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.094" endtime="20201115 22:00:09.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.729" endtime="20201115 22:00:09.120"></status>
</kw>
<msg timestamp="20201115 22:00:09.120" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.133" endtime="20201115 22:00:09.148"></status>
</kw>
<msg timestamp="20201115 22:00:09.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.127" endtime="20201115 22:00:09.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.151" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.150" endtime="20201115 22:00:09.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.152" endtime="20201115 22:00:09.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.125" endtime="20201115 22:00:09.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.122" endtime="20201115 22:00:09.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.161" endtime="20201115 22:00:09.448"></status>
</kw>
<msg timestamp="20201115 22:00:09.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024131125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024135097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.160" endtime="20201115 22:00:09.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024131125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024135097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.452" endtime="20201115 22:00:09.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.460" endtime="20201115 22:00:09.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.157" endtime="20201115 22:00:09.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.155" endtime="20201115 22:00:09.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.467" level="INFO">${RESULT} = [{'time': 0.024135097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.024239792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:09.463" endtime="20201115 22:00:09.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.480" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:09.468" endtime="20201115 22:00:09.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.485" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:09.484" endtime="20201115 22:00:09.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.488" level="INFO">VALUE: [3.972000000001391e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.0699999999983805e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.02800000000314e-06, 4.013000000000627e-06, 3.916999999999116e-06, 3.9999999999970615e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.068999999998907e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 4.041999999999241e-06, 3.986000000000961e-06, 4.014000000000101e-06, 4.02800000000314e-06, 3.986000000000961e-06, 4.014000000000101e-06, 4.013000000000627e-06, 4.027000000000197e-06, 4.000000000000531e-06, 4.012999999997158e-06, 4.014000000000101e-06, 3.9999999999970615e-06, 4.055000000002806e-06, 3.986000000000961e-06, 4.014000000000101e-06, 3.959000000001295e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.027000000000197e-06, 4.000000000000531e-06]</msg>
<status status="PASS" starttime="20201115 22:00:09.486" endtime="20201115 22:00:09.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.481" endtime="20201115 22:00:09.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.491" endtime="20201115 22:00:09.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.495" endtime="20201115 22:00:09.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.493" endtime="20201115 22:00:09.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.489" endtime="20201115 22:00:09.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.120" endtime="20201115 22:00:09.515"></status>
</kw>
<msg timestamp="20201115 22:00:09.516" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.525" endtime="20201115 22:00:09.540"></status>
</kw>
<msg timestamp="20201115 22:00:09.540" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.523" endtime="20201115 22:00:09.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.541" endtime="20201115 22:00:09.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.544" endtime="20201115 22:00:09.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.521" endtime="20201115 22:00:09.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.519" endtime="20201115 22:00:09.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.553" endtime="20201115 22:00:09.840"></status>
</kw>
<msg timestamp="20201115 22:00:09.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.551" endtime="20201115 22:00:09.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.844" endtime="20201115 22:00:09.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.852" endtime="20201115 22:00:09.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.549" endtime="20201115 22:00:09.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.547" endtime="20201115 22:00:09.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.858" level="INFO">${RESULT} = [{'time': 0.020252792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.020358125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:09.855" endtime="20201115 22:00:09.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.872" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:09.859" endtime="20201115 22:00:09.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.876" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:09.875" endtime="20201115 22:00:09.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.878" level="INFO">VALUE: [4.014000000000101e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.040999999999767e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.014000000000101e-06, 3.9859999999974915e-06, 4.04200000000271e-06, 4.014000000000101e-06, 4.041999999999241e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.027000000000197e-06, 4.07000000000185e-06, 3.986000000000961e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.0559999999988106e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.014000000000101e-06, 3.959000000001295e-06, 3.972000000001391e-06, 4.014000000000101e-06, 4.014000000000101e-06, 3.986000000000961e-06, 4.0559999999988106e-06, 4.027999999999671e-06, 3.986000000000961e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.027000000000197e-06, 4.05600000000228e-06, 4.013000000000627e-06, 3.943999999998782e-06]</msg>
<status status="PASS" starttime="20201115 22:00:09.877" endtime="20201115 22:00:09.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.872" endtime="20201115 22:00:09.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.882" endtime="20201115 22:00:09.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.885" endtime="20201115 22:00:09.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.884" endtime="20201115 22:00:09.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.880" endtime="20201115 22:00:09.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.516" endtime="20201115 22:00:09.906"></status>
</kw>
<msg timestamp="20201115 22:00:09.906" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.915" endtime="20201115 22:00:09.930"></status>
</kw>
<msg timestamp="20201115 22:00:09.930" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.913" endtime="20201115 22:00:09.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.931" endtime="20201115 22:00:09.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.934" endtime="20201115 22:00:09.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.911" endtime="20201115 22:00:09.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.909" endtime="20201115 22:00:09.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.943" endtime="20201115 22:00:10.231"></status>
</kw>
<msg timestamp="20201115 22:00:10.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019703069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.941" endtime="20201115 22:00:10.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019703069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.235" endtime="20201115 22:00:10.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.243" endtime="20201115 22:00:10.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.939" endtime="20201115 22:00:10.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.937" endtime="20201115 22:00:10.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.250" level="INFO">${RESULT} = [{'time': 0.019707028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.959000000001295e-06, 'source_diff': 3.959000000001295e-06}, {'time': 0.019811958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:10.247" endtime="20201115 22:00:10.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.263" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:10.251" endtime="20201115 22:00:10.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.267" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:10.266" endtime="20201115 22:00:10.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.270" level="INFO">VALUE: [3.959000000001295e-06, 4.014000000000101e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.986000000000961e-06, 4.054999999999337e-06, 4.069000000002376e-06, 4.027999999999671e-06, 4.013000000000627e-06, 4.000000000000531e-06, 3.9999999999970615e-06, 4.014000000000101e-06, 4.040999999999767e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.013999999996631e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.054999999999337e-06, 4.041999999999241e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.014000000000101e-06, 4.013000000000627e-06, 4.013000000000627e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.014000000000101e-06, 3.9999999999970615e-06, 3.972000000001391e-06, 4.014000000000101e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.054999999999337e-06, 3.959000000001295e-06, 4.014000000000101e-06, 4.041999999999241e-06, 4.000000000000531e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.027999999999671e-06, 3.9999999999970615e-06, 4.069000000002376e-06]</msg>
<status status="PASS" starttime="20201115 22:00:10.268" endtime="20201115 22:00:10.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.264" endtime="20201115 22:00:10.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.273" endtime="20201115 22:00:10.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.277" endtime="20201115 22:00:10.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.275" endtime="20201115 22:00:10.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.272" endtime="20201115 22:00:10.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.907" endtime="20201115 22:00:10.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.336" endtime="20201115 22:00:10.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.336" endtime="20201115 22:00:10.298"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.300" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.309" endtime="20201115 22:00:10.325"></status>
</kw>
<msg timestamp="20201115 22:00:10.326" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.307" endtime="20201115 22:00:10.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.327" endtime="20201115 22:00:10.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.329" endtime="20201115 22:00:10.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.305" endtime="20201115 22:00:10.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.303" endtime="20201115 22:00:10.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.338" endtime="20201115 22:00:10.625"></status>
</kw>
<msg timestamp="20201115 22:00:10.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.337" endtime="20201115 22:00:10.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.629" endtime="20201115 22:00:10.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.637" endtime="20201115 22:00:10.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.334" endtime="20201115 22:00:10.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.332" endtime="20201115 22:00:10.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.644" level="INFO">${RESULT} = [{'time': 0.022293111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.022408306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:10.641" endtime="20201115 22:00:10.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.657" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:10.645" endtime="20201115 22:00:10.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.662" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:10.661" endtime="20201115 22:00:10.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.664" level="INFO">VALUE: [4.222000000001641e-06, 4.237000000000685e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.223000000001115e-06, 4.223000000001115e-06, 4.222000000001641e-06, 4.291999999999491e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.264000000000351e-06, 4.166999999999366e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.291999999999491e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.152000000000322e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.291999999999491e-06, 4.2499999999973115e-06, 4.195000000001975e-06, 4.223000000001115e-06, 4.221999999998172e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.237000000000685e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.166999999999366e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.207999999998602e-06]</msg>
<status status="PASS" starttime="20201115 22:00:10.663" endtime="20201115 22:00:10.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.658" endtime="20201115 22:00:10.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.668" endtime="20201115 22:00:10.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.671" endtime="20201115 22:00:10.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.669" endtime="20201115 22:00:10.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.666" endtime="20201115 22:00:10.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.301" endtime="20201115 22:00:10.692"></status>
</kw>
<msg timestamp="20201115 22:00:10.692" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.701" endtime="20201115 22:00:10.717"></status>
</kw>
<msg timestamp="20201115 22:00:10.717" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.699" endtime="20201115 22:00:10.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.718" endtime="20201115 22:00:10.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.721" endtime="20201115 22:00:10.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.696" endtime="20201115 22:00:10.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.694" endtime="20201115 22:00:10.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.730" endtime="20201115 22:00:11.016"></status>
</kw>
<msg timestamp="20201115 22:00:11.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019813486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.728" endtime="20201115 22:00:11.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019813486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.021" endtime="20201115 22:00:11.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.029" endtime="20201115 22:00:11.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.726" endtime="20201115 22:00:11.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.724" endtime="20201115 22:00:11.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.035" level="INFO">${RESULT} = [{'time': 0.019813486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.019929486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.032" endtime="20201115 22:00:11.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.048" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:11.036" endtime="20201115 22:00:11.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.053" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:11.052" endtime="20201115 22:00:11.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.056" level="INFO">VALUE: [4.208000000002071e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.2499999999973115e-06, 4.277000000000447e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.1949999999985055e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.209000000001545e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.305999999999061e-06, 4.237000000000685e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.2499999999973115e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.277000000000447e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.195000000001975e-06, 4.236000000001211e-06, 4.236000000001211e-06]</msg>
<status status="PASS" starttime="20201115 22:00:11.054" endtime="20201115 22:00:11.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.050" endtime="20201115 22:00:11.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.059" endtime="20201115 22:00:11.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.062" endtime="20201115 22:00:11.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.061" endtime="20201115 22:00:11.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.057" endtime="20201115 22:00:11.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.692" endtime="20201115 22:00:11.083"></status>
</kw>
<msg timestamp="20201115 22:00:11.083" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.092" endtime="20201115 22:00:11.108"></status>
</kw>
<msg timestamp="20201115 22:00:11.109" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.090" endtime="20201115 22:00:11.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.111" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.110" endtime="20201115 22:00:11.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.112" endtime="20201115 22:00:11.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.088" endtime="20201115 22:00:11.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.086" endtime="20201115 22:00:11.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.121" endtime="20201115 22:00:11.408"></status>
</kw>
<msg timestamp="20201115 22:00:11.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.120" endtime="20201115 22:00:11.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.412" endtime="20201115 22:00:11.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.420" endtime="20201115 22:00:11.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.117" endtime="20201115 22:00:11.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.115" endtime="20201115 22:00:11.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.427" level="INFO">${RESULT} = [{'time': 0.019730153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.019847333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.424" endtime="20201115 22:00:11.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.441" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:11.428" endtime="20201115 22:00:11.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.445" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:11.444" endtime="20201115 22:00:11.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.447" level="INFO">VALUE: [4.264000000000351e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.181000000002405e-06, 4.222000000001641e-06, 4.195000000001975e-06, 4.237000000000685e-06, 4.223000000001115e-06, 4.2359999999977416e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.2499999999973115e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.208000000002071e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.152000000000322e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.153000000003265e-06, 4.2499999999973115e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.181000000002405e-06, 4.236000000001211e-06]</msg>
<status status="PASS" starttime="20201115 22:00:11.446" endtime="20201115 22:00:11.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.441" endtime="20201115 22:00:11.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.451" endtime="20201115 22:00:11.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.454" endtime="20201115 22:00:11.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.452" endtime="20201115 22:00:11.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.449" endtime="20201115 22:00:11.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.084" endtime="20201115 22:00:11.475"></status>
</kw>
<msg timestamp="20201115 22:00:11.475" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.484" endtime="20201115 22:00:11.500"></status>
</kw>
<msg timestamp="20201115 22:00:11.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.482" endtime="20201115 22:00:11.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.501" endtime="20201115 22:00:11.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.504" endtime="20201115 22:00:11.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.479" endtime="20201115 22:00:11.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.477" endtime="20201115 22:00:11.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.514" endtime="20201115 22:00:11.802"></status>
</kw>
<msg timestamp="20201115 22:00:11.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019779611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.512" endtime="20201115 22:00:11.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019779611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.806" endtime="20201115 22:00:11.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.814" endtime="20201115 22:00:11.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.509" endtime="20201115 22:00:11.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.507" endtime="20201115 22:00:11.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.821" level="INFO">${RESULT} = [{'time': 0.019783861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.019900361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.818" endtime="20201115 22:00:11.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.834" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:11.822" endtime="20201115 22:00:11.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.839" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:11.838" endtime="20201115 22:00:11.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.841" level="INFO">VALUE: [4.250000000000781e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.237000000000685e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.166999999999366e-06, 4.277999999999921e-06, 4.1809999999989356e-06, 4.263000000000877e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.291999999999491e-06, 4.207999999998602e-06, 4.264000000000351e-06, 4.2499999999973115e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.305999999999061e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.223000000001115e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.236000000001211e-06]</msg>
<status status="PASS" starttime="20201115 22:00:11.840" endtime="20201115 22:00:11.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.835" endtime="20201115 22:00:11.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.844" endtime="20201115 22:00:11.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.848" endtime="20201115 22:00:11.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.846" endtime="20201115 22:00:11.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.843" endtime="20201115 22:00:11.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.475" endtime="20201115 22:00:11.868"></status>
</kw>
<msg timestamp="20201115 22:00:11.868" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.877" endtime="20201115 22:00:11.893"></status>
</kw>
<msg timestamp="20201115 22:00:11.893" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.876" endtime="20201115 22:00:11.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.894" endtime="20201115 22:00:11.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.896" endtime="20201115 22:00:11.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.873" endtime="20201115 22:00:11.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.871" endtime="20201115 22:00:11.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.905" endtime="20201115 22:00:12.192"></status>
</kw>
<msg timestamp="20201115 22:00:12.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.904" endtime="20201115 22:00:12.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.197" endtime="20201115 22:00:12.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.205" endtime="20201115 22:00:12.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.901" endtime="20201115 22:00:12.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.900" endtime="20201115 22:00:12.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.212" level="INFO">${RESULT} = [{'time': 0.019734847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.019852486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:12.208" endtime="20201115 22:00:12.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.225" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:12.213" endtime="20201115 22:00:12.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.229" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:12.228" endtime="20201115 22:00:12.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.232" level="INFO">VALUE: [4.221999999998172e-06, 4.304999999999587e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.277000000000447e-06, 4.236000000001211e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.237000000000685e-06, 4.237000000000685e-06, 4.237000000000685e-06, 4.237000000000685e-06, 4.2499999999973115e-06, 4.223000000001115e-06, 4.237000000000685e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.262999999997408e-06, 4.2499999999973115e-06, 4.208000000002071e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.208999999998075e-06, 4.221999999998172e-06]</msg>
<status status="PASS" starttime="20201115 22:00:12.231" endtime="20201115 22:00:12.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.226" endtime="20201115 22:00:12.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.235" endtime="20201115 22:00:12.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.238" endtime="20201115 22:00:12.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.237" endtime="20201115 22:00:12.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.233" endtime="20201115 22:00:12.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.869" endtime="20201115 22:00:12.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.299" endtime="20201115 22:00:12.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.298" endtime="20201115 22:00:12.259"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.262" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.270" endtime="20201115 22:00:12.287"></status>
</kw>
<msg timestamp="20201115 22:00:12.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.269" endtime="20201115 22:00:12.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.288" endtime="20201115 22:00:12.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.291" endtime="20201115 22:00:12.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.266" endtime="20201115 22:00:12.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.264" endtime="20201115 22:00:12.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.300" endtime="20201115 22:00:12.587"></status>
</kw>
<msg timestamp="20201115 22:00:12.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022069819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.298" endtime="20201115 22:00:12.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022069819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.592" endtime="20201115 22:00:12.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.600" endtime="20201115 22:00:12.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.296" endtime="20201115 22:00:12.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.294" endtime="20201115 22:00:12.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.606" level="INFO">${RESULT} = [{'time': 0.022074292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472999999997895e-06, 'source_diff': 4.472999999997895e-06}, {'time': 0.022201972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:12.603" endtime="20201115 22:00:12.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.620" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:12.607" endtime="20201115 22:00:12.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.624" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:12.623" endtime="20201115 22:00:12.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.627" level="INFO">VALUE: [4.472999999997895e-06, 4.500000000001031e-06, 4.443999999999282e-06, 4.514000000000601e-06, 4.444000000002751e-06, 4.458000000002321e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.457999999998852e-06, 4.458999999998325e-06, 4.486000000001461e-06, 4.473000000001365e-06, 4.403000000000046e-06, 4.458999999998325e-06, 4.458000000002321e-06, 4.486000000001461e-06, 4.458000000002321e-06, 4.458999999998325e-06, 4.471999999998422e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.458999999998325e-06, 4.429999999999712e-06, 4.458999999998325e-06, 4.458999999998325e-06, 4.513999999997131e-06, 4.473000000001365e-06, 4.458000000002321e-06, 4.473000000001365e-06, 4.487000000000935e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.445000000002225e-06, 4.486000000001461e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.472000000001891e-06, 4.375000000000906e-06, 4.443999999999282e-06, 4.485999999997992e-06, 4.528000000000171e-06, 4.445000000002225e-06, 4.485999999997992e-06, 4.459000000001795e-06]</msg>
<status status="PASS" starttime="20201115 22:00:12.625" endtime="20201115 22:00:12.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.621" endtime="20201115 22:00:12.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.630" endtime="20201115 22:00:12.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.633" endtime="20201115 22:00:12.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.632" endtime="20201115 22:00:12.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.628" endtime="20201115 22:00:12.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.262" endtime="20201115 22:00:12.654"></status>
</kw>
<msg timestamp="20201115 22:00:12.654" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.663" endtime="20201115 22:00:12.679"></status>
</kw>
<msg timestamp="20201115 22:00:12.680" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.661" endtime="20201115 22:00:12.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.681" endtime="20201115 22:00:12.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.684" endtime="20201115 22:00:12.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.659" endtime="20201115 22:00:12.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.657" endtime="20201115 22:00:12.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.693" endtime="20201115 22:00:12.979"></status>
</kw>
<msg timestamp="20201115 22:00:12.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.691" endtime="20201115 22:00:12.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.983" endtime="20201115 22:00:12.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.991" endtime="20201115 22:00:12.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.689" endtime="20201115 22:00:12.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.687" endtime="20201115 22:00:12.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.998" level="INFO">${RESULT} = [{'time': 0.019781611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.019909361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:12.994" endtime="20201115 22:00:12.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.011" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:12.999" endtime="20201115 22:00:13.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.015" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:13.014" endtime="20201115 22:00:13.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.018" level="INFO">VALUE: [4.458000000002321e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.473000000001365e-06, 4.471999999998422e-06, 4.4449999999987555e-06, 4.458999999998325e-06, 4.443999999999282e-06, 4.431000000002655e-06, 4.472000000001891e-06, 4.445000000002225e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.416000000000142e-06, 4.485999999997992e-06, 4.472000000001891e-06, 4.471999999998422e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.486000000001461e-06, 4.458000000002321e-06, 4.443999999999282e-06, 4.458999999998325e-06, 4.444000000002751e-06, 4.444000000002751e-06, 4.401999999997103e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.458000000002321e-06, 4.444000000002751e-06, 4.4449999999987555e-06, 4.459000000001795e-06, 4.4449999999987555e-06, 4.472000000001891e-06, 4.445000000002225e-06, 4.486000000001461e-06, 4.458999999998325e-06, 4.389000000000476e-06, 4.473000000001365e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 4.473000000001365e-06, 4.472000000001891e-06, 4.445000000002225e-06, 4.471999999998422e-06, 4.486000000001461e-06, 4.514000000000601e-06, 4.443999999999282e-06, 4.472000000001891e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.017" endtime="20201115 22:00:13.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.012" endtime="20201115 22:00:13.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.021" endtime="20201115 22:00:13.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.025" endtime="20201115 22:00:13.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.023" endtime="20201115 22:00:13.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.020" endtime="20201115 22:00:13.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.655" endtime="20201115 22:00:13.045"></status>
</kw>
<msg timestamp="20201115 22:00:13.045" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.055" endtime="20201115 22:00:13.071"></status>
</kw>
<msg timestamp="20201115 22:00:13.071" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.053" endtime="20201115 22:00:13.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.072" endtime="20201115 22:00:13.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.075" endtime="20201115 22:00:13.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.050" endtime="20201115 22:00:13.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.048" endtime="20201115 22:00:13.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.084" endtime="20201115 22:00:13.372"></status>
</kw>
<msg timestamp="20201115 22:00:13.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020301806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.082" endtime="20201115 22:00:13.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020301806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.376" endtime="20201115 22:00:13.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.384" endtime="20201115 22:00:13.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.080" endtime="20201115 22:00:13.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.078" endtime="20201115 22:00:13.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.390" level="INFO">${RESULT} = [{'time': 0.020301806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.020426236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:13.387" endtime="20201115 22:00:13.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.404" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:13.391" endtime="20201115 22:00:13.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.408" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:13.407" endtime="20201115 22:00:13.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.411" level="INFO">VALUE: [4.458999999998325e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.430999999999186e-06, 4.457999999998852e-06, 4.472000000001891e-06, 4.443999999999282e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.458000000002321e-06, 4.3749999999974365e-06, 4.444000000002751e-06, 4.457999999998852e-06, 4.4449999999987555e-06, 4.472000000001891e-06, 4.443999999999282e-06, 4.458999999998325e-06, 4.457999999998852e-06, 4.429999999999712e-06, 4.445000000002225e-06, 4.458000000002321e-06, 4.500000000001031e-06, 4.445000000002225e-06, 4.457999999998852e-06, 4.4449999999987555e-06, 4.485999999997992e-06, 4.445000000002225e-06, 4.471999999998422e-06, 4.471999999998422e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.416000000000142e-06, 4.458000000002321e-06, 4.472000000001891e-06, 4.4449999999987555e-06, 4.459000000001795e-06, 4.457999999998852e-06, 4.459000000001795e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.472000000001891e-06, 4.472000000001891e-06, 4.458999999998325e-06, 4.458000000002321e-06, 4.457999999998852e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.409" endtime="20201115 22:00:13.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.405" endtime="20201115 22:00:13.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.414" endtime="20201115 22:00:13.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.417" endtime="20201115 22:00:13.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.415" endtime="20201115 22:00:13.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.412" endtime="20201115 22:00:13.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.046" endtime="20201115 22:00:13.438"></status>
</kw>
<msg timestamp="20201115 22:00:13.438" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.447" endtime="20201115 22:00:13.464"></status>
</kw>
<msg timestamp="20201115 22:00:13.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.445" endtime="20201115 22:00:13.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.467" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.465" endtime="20201115 22:00:13.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.468" endtime="20201115 22:00:13.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.443" endtime="20201115 22:00:13.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.441" endtime="20201115 22:00:13.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.477" endtime="20201115 22:00:13.763"></status>
</kw>
<msg timestamp="20201115 22:00:13.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.475" endtime="20201115 22:00:13.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.767" endtime="20201115 22:00:13.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.775" endtime="20201115 22:00:13.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.472" endtime="20201115 22:00:13.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.471" endtime="20201115 22:00:13.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.782" level="INFO">${RESULT} = [{'time': 0.020135819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.020262264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:13.779" endtime="20201115 22:00:13.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.795" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:13.783" endtime="20201115 22:00:13.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.800" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:13.799" endtime="20201115 22:00:13.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.802" level="INFO">VALUE: [4.443999999999282e-06, 4.471999999998422e-06, 4.473000000001365e-06, 4.472999999997895e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.459000000001795e-06, 4.416999999999616e-06, 4.471999999998422e-06, 4.458000000002321e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.444000000002751e-06, 4.458000000002321e-06, 4.472999999997895e-06, 4.473000000001365e-06, 4.471999999998422e-06, 4.445000000002225e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.443999999999282e-06, 4.458999999998325e-06, 4.459000000001795e-06, 4.457999999998852e-06, 4.472999999997895e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.458999999998325e-06, 4.458000000002321e-06, 4.459000000001795e-06, 4.472000000001891e-06, 4.471999999998422e-06, 4.471999999998422e-06, 4.459000000001795e-06, 4.4449999999987555e-06, 4.472000000001891e-06, 4.416999999999616e-06, 4.486000000001461e-06, 4.473000000001365e-06, 4.444000000002751e-06, 4.458000000002321e-06, 4.486000000001461e-06, 4.486000000001461e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.472000000001891e-06, 4.459000000001795e-06, 4.500000000001031e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.801" endtime="20201115 22:00:13.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.796" endtime="20201115 22:00:13.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.805" endtime="20201115 22:00:13.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.809" endtime="20201115 22:00:13.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.807" endtime="20201115 22:00:13.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.804" endtime="20201115 22:00:13.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.439" endtime="20201115 22:00:13.830"></status>
</kw>
<msg timestamp="20201115 22:00:13.830" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.839" endtime="20201115 22:00:13.855"></status>
</kw>
<msg timestamp="20201115 22:00:13.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.837" endtime="20201115 22:00:13.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.858" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.857" endtime="20201115 22:00:13.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.859" endtime="20201115 22:00:13.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.835" endtime="20201115 22:00:13.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.832" endtime="20201115 22:00:13.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.868" endtime="20201115 22:00:14.156"></status>
</kw>
<msg timestamp="20201115 22:00:14.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.867" endtime="20201115 22:00:14.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.160" endtime="20201115 22:00:14.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.168" endtime="20201115 22:00:14.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.864" endtime="20201115 22:00:14.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.862" endtime="20201115 22:00:14.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.174" level="INFO">${RESULT} = [{'time': 0.019794014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.019920764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.171" endtime="20201115 22:00:14.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.188" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:14.175" endtime="20201115 22:00:14.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.192" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:14.191" endtime="20201115 22:00:14.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.195" level="INFO">VALUE: [4.457999999998852e-06, 4.457999999998852e-06, 4.458999999998325e-06, 4.471999999998422e-06, 4.458000000002321e-06, 4.459000000001795e-06, 4.443999999999282e-06, 4.458999999998325e-06, 4.445000000002225e-06, 4.486000000001461e-06, 4.472000000001891e-06, 4.458999999998325e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.528000000000171e-06, 4.471999999998422e-06, 4.472000000001891e-06, 4.458000000002321e-06, 4.458999999998325e-06, 4.486000000001461e-06, 4.457999999998852e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.444000000002751e-06, 4.472000000001891e-06, 4.416999999999616e-06, 4.487000000000935e-06, 4.429999999999712e-06, 4.472999999997895e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.459000000001795e-06, 4.471999999998422e-06, 4.458000000002321e-06, 4.443999999999282e-06, 4.429999999999712e-06, 4.472000000001891e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.471999999998422e-06, 4.514000000000601e-06, 4.403000000000046e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.472000000001891e-06]</msg>
<status status="PASS" starttime="20201115 22:00:14.193" endtime="20201115 22:00:14.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.188" endtime="20201115 22:00:14.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.202" endtime="20201115 22:00:14.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.205" endtime="20201115 22:00:14.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.204" endtime="20201115 22:00:14.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.200" endtime="20201115 22:00:14.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.830" endtime="20201115 22:00:14.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.260" endtime="20201115 22:00:14.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.260" endtime="20201115 22:00:14.226"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.229" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.237" endtime="20201115 22:00:14.254"></status>
</kw>
<msg timestamp="20201115 22:00:14.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.236" endtime="20201115 22:00:14.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.257" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.256" endtime="20201115 22:00:14.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.258" endtime="20201115 22:00:14.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.233" endtime="20201115 22:00:14.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.231" endtime="20201115 22:00:14.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.267" endtime="20201115 22:00:14.553"></status>
</kw>
<msg timestamp="20201115 22:00:14.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.265" endtime="20201115 22:00:14.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.557" endtime="20201115 22:00:14.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.566" endtime="20201115 22:00:14.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.263" endtime="20201115 22:00:14.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.261" endtime="20201115 22:00:14.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.573" level="INFO">${RESULT} = [{'time': 0.022091306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.709000000002045e-06, 'source_diff': 4.709000000002045e-06}, {'time': 0.022227597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.569" endtime="20201115 22:00:14.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.586" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:14.574" endtime="20201115 22:00:14.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.590" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:14.589" endtime="20201115 22:00:14.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.593" level="INFO">VALUE: [4.709000000002045e-06, 4.653000000000296e-06, 4.709000000002045e-06, 4.736000000001711e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.611000000001586e-06, 4.722000000002141e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.652999999996826e-06, 4.6949999999990055e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.708000000002571e-06, 4.679999999999962e-06, 4.7639999999973814e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.6949999999990055e-06, 4.709000000002045e-06, 4.7089999999985754e-06, 4.679999999999962e-06, 4.639000000000726e-06, 4.694000000003001e-06, 4.680999999999436e-06, 4.695000000002475e-06, 4.707999999999102e-06, 4.611000000001586e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.764000000000851e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.6949999999990055e-06, 4.6949999999990055e-06, 4.750000000001281e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.7089999999985754e-06, 4.708000000002571e-06]</msg>
<status status="PASS" starttime="20201115 22:00:14.592" endtime="20201115 22:00:14.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.587" endtime="20201115 22:00:14.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.597" endtime="20201115 22:00:14.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.600" endtime="20201115 22:00:14.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.598" endtime="20201115 22:00:14.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.595" endtime="20201115 22:00:14.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.229" endtime="20201115 22:00:14.621"></status>
</kw>
<msg timestamp="20201115 22:00:14.621" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.630" endtime="20201115 22:00:14.647"></status>
</kw>
<msg timestamp="20201115 22:00:14.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.628" endtime="20201115 22:00:14.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.648" endtime="20201115 22:00:14.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.651" endtime="20201115 22:00:14.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.625" endtime="20201115 22:00:14.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.623" endtime="20201115 22:00:14.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.660" endtime="20201115 22:00:14.948"></status>
</kw>
<msg timestamp="20201115 22:00:14.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020197528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.658" endtime="20201115 22:00:14.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020197528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.952" endtime="20201115 22:00:14.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.960" endtime="20201115 22:00:14.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.656" endtime="20201115 22:00:14.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.654" endtime="20201115 22:00:14.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.967" level="INFO">${RESULT} = [{'time': 0.020197528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.020335472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.963" endtime="20201115 22:00:14.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.980" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:14.967" endtime="20201115 22:00:14.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.985" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:14.984" endtime="20201115 22:00:14.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.987" level="INFO">VALUE: [4.680999999999436e-06, 4.653000000000296e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.708000000002571e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.736000000001711e-06, 4.709000000002045e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.6389999999972564e-06, 4.735999999998242e-06, 4.709000000002045e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.707999999999102e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.680000000003431e-06, 4.610999999998117e-06, 4.653000000000296e-06, 4.707999999999102e-06, 4.666000000000392e-06, 4.681000000002905e-06, 4.693999999999532e-06, 4.694000000003001e-06, 4.679999999999962e-06, 4.665999999996923e-06, 4.7639999999973814e-06, 4.625000000001156e-06, 4.680999999999436e-06, 4.721999999998672e-06, 4.7089999999985754e-06, 4.721999999998672e-06, 4.6949999999990055e-06, 4.722000000002141e-06, 4.639000000000726e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.737000000001185e-06, 4.6949999999990055e-06]</msg>
<status status="PASS" starttime="20201115 22:00:14.986" endtime="20201115 22:00:14.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.981" endtime="20201115 22:00:14.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.990" endtime="20201115 22:00:14.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.994" endtime="20201115 22:00:15.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.992" endtime="20201115 22:00:15.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.988" endtime="20201115 22:00:15.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.621" endtime="20201115 22:00:15.014"></status>
</kw>
<msg timestamp="20201115 22:00:15.014" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.023" endtime="20201115 22:00:15.040"></status>
</kw>
<msg timestamp="20201115 22:00:15.040" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.022" endtime="20201115 22:00:15.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.043" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.041" endtime="20201115 22:00:15.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.044" endtime="20201115 22:00:15.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.019" endtime="20201115 22:00:15.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.017" endtime="20201115 22:00:15.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.053" endtime="20201115 22:00:15.338"></status>
</kw>
<msg timestamp="20201115 22:00:15.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.051" endtime="20201115 22:00:15.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.343" endtime="20201115 22:00:15.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.351" endtime="20201115 22:00:15.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.048" endtime="20201115 22:00:15.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.047" endtime="20201115 22:00:15.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.357" level="INFO">${RESULT} = [{'time': 0.019919917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.020056958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:15.354" endtime="20201115 22:00:15.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.371" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:15.359" endtime="20201115 22:00:15.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.376" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:15.375" endtime="20201115 22:00:15.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.378" level="INFO">VALUE: [4.680999999999436e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.708000000002571e-06, 4.652999999996826e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.6249999999976865e-06, 4.721999999998672e-06, 4.695000000002475e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.707999999999102e-06, 4.722000000002141e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.708000000002571e-06, 4.6949999999990055e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.6949999999990055e-06, 4.707999999999102e-06, 4.680999999999436e-06, 4.707999999999102e-06, 4.736000000001711e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.764000000000851e-06, 4.693999999999532e-06, 4.735999999998242e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.750000000001281e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.694000000003001e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.693999999999532e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.377" endtime="20201115 22:00:15.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.372" endtime="20201115 22:00:15.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.381" endtime="20201115 22:00:15.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.385" endtime="20201115 22:00:15.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.383" endtime="20201115 22:00:15.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.380" endtime="20201115 22:00:15.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.015" endtime="20201115 22:00:15.405"></status>
</kw>
<msg timestamp="20201115 22:00:15.405" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.414" endtime="20201115 22:00:15.431"></status>
</kw>
<msg timestamp="20201115 22:00:15.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.413" endtime="20201115 22:00:15.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.433" endtime="20201115 22:00:15.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.435" endtime="20201115 22:00:15.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.410" endtime="20201115 22:00:15.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.408" endtime="20201115 22:00:15.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.444" endtime="20201115 22:00:15.731"></status>
</kw>
<msg timestamp="20201115 22:00:15.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019856194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.442" endtime="20201115 22:00:15.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019856194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.736" endtime="20201115 22:00:15.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.744" endtime="20201115 22:00:15.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.440" endtime="20201115 22:00:15.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.438" endtime="20201115 22:00:15.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.751" level="INFO">${RESULT} = [{'time': 0.019860875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.019996194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:15.747" endtime="20201115 22:00:15.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.764" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:15.752" endtime="20201115 22:00:15.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.769" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:15.768" endtime="20201115 22:00:15.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.771" level="INFO">VALUE: [4.680999999999436e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.6949999999990055e-06, 4.681000000002905e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.667000000003335e-06, 4.707999999999102e-06, 4.708000000002571e-06, 4.709000000002045e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.681000000002905e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.681000000002905e-06, 4.750000000001281e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.6949999999990055e-06, 4.680999999999436e-06, 4.708000000002571e-06, 4.680999999999436e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.764000000000851e-06, 4.666999999999866e-06, 4.7499999999978115e-06, 4.764000000000851e-06, 4.708000000002571e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.708000000002571e-06, 4.680999999999436e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.770" endtime="20201115 22:00:15.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.765" endtime="20201115 22:00:15.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.774" endtime="20201115 22:00:15.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.778" endtime="20201115 22:00:15.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.776" endtime="20201115 22:00:15.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.773" endtime="20201115 22:00:15.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.406" endtime="20201115 22:00:15.798"></status>
</kw>
<msg timestamp="20201115 22:00:15.798" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.807" endtime="20201115 22:00:15.824"></status>
</kw>
<msg timestamp="20201115 22:00:15.824" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.806" endtime="20201115 22:00:15.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.825" endtime="20201115 22:00:15.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.828" endtime="20201115 22:00:15.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.803" endtime="20201115 22:00:15.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.801" endtime="20201115 22:00:15.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.837" endtime="20201115 22:00:16.122"></status>
</kw>
<msg timestamp="20201115 22:00:16.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.835" endtime="20201115 22:00:16.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.127" endtime="20201115 22:00:16.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.135" endtime="20201115 22:00:16.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.833" endtime="20201115 22:00:16.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.831" endtime="20201115 22:00:16.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.142" level="INFO">${RESULT} = [{'time': 0.019888208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.020023083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:16.138" endtime="20201115 22:00:16.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.155" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:16.143" endtime="20201115 22:00:16.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.160" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:16.158" endtime="20201115 22:00:16.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.162" level="INFO">VALUE: [4.666000000000392e-06, 4.652000000000822e-06, 4.679999999999962e-06, 4.610999999998117e-06, 4.639000000000726e-06, 4.7089999999985754e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.721999999998672e-06, 4.679999999999962e-06, 4.6249999999976865e-06, 4.653000000000296e-06, 4.6949999999990055e-06, 4.707999999999102e-06, 4.693999999999532e-06, 4.681000000002905e-06, 4.665999999996923e-06, 4.652000000000822e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.667000000003335e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.707999999999102e-06, 4.653000000000296e-06, 4.7089999999985754e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.6249999999976865e-06, 4.693999999999532e-06, 4.723000000001615e-06, 4.693999999999532e-06, 4.6949999999990055e-06, 4.680999999999436e-06, 4.695000000002475e-06, 4.709000000002045e-06, 4.707999999999102e-06, 4.666999999999866e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.161" endtime="20201115 22:00:16.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.156" endtime="20201115 22:00:16.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.165" endtime="20201115 22:00:16.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.169" endtime="20201115 22:00:16.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.167" endtime="20201115 22:00:16.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.163" endtime="20201115 22:00:16.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.799" endtime="20201115 22:00:16.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.228" endtime="20201115 22:00:16.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.227" endtime="20201115 22:00:16.190"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.192" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.200" endtime="20201115 22:00:16.218"></status>
</kw>
<msg timestamp="20201115 22:00:16.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.199" endtime="20201115 22:00:16.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.219" endtime="20201115 22:00:16.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.222" endtime="20201115 22:00:16.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.196" endtime="20201115 22:00:16.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.194" endtime="20201115 22:00:16.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.231" endtime="20201115 22:00:16.518"></status>
</kw>
<msg timestamp="20201115 22:00:16.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022231611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.230" endtime="20201115 22:00:16.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022231611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.522" endtime="20201115 22:00:16.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.530" endtime="20201115 22:00:16.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.227" endtime="20201115 22:00:16.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.225" endtime="20201115 22:00:16.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.537" level="INFO">${RESULT} = [{'time': 0.022231611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.022376472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:16.534" endtime="20201115 22:00:16.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.550" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:16.538" endtime="20201115 22:00:16.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.555" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:16.554" endtime="20201115 22:00:16.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.557" level="INFO">VALUE: [4.8749999999979365e-06, 4.916000000000642e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.958000000002821e-06, 4.902999999997076e-06, 4.818999999999657e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.846999999998797e-06, 4.846999999998797e-06, 4.917000000000116e-06, 4.875000000001406e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.847000000002266e-06, 4.972999999998395e-06, 4.916000000000642e-06, 4.901999999997603e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.8889999999975065e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.889000000000976e-06, 4.902000000001072e-06, 4.860999999998367e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.902000000001072e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.8889999999975065e-06, 4.930000000000212e-06, 4.917000000000116e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.556" endtime="20201115 22:00:16.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.551" endtime="20201115 22:00:16.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.560" endtime="20201115 22:00:16.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.564" endtime="20201115 22:00:16.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.562" endtime="20201115 22:00:16.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.559" endtime="20201115 22:00:16.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.192" endtime="20201115 22:00:16.584"></status>
</kw>
<msg timestamp="20201115 22:00:16.585" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.594" endtime="20201115 22:00:16.612"></status>
</kw>
<msg timestamp="20201115 22:00:16.612" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.593" endtime="20201115 22:00:16.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.613" endtime="20201115 22:00:16.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.616" endtime="20201115 22:00:16.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.590" endtime="20201115 22:00:16.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.587" endtime="20201115 22:00:16.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.625" endtime="20201115 22:00:16.912"></status>
</kw>
<msg timestamp="20201115 22:00:16.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021106431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021111347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.624" endtime="20201115 22:00:16.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021106431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021111347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.916" endtime="20201115 22:00:16.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.924" endtime="20201115 22:00:16.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.621" endtime="20201115 22:00:16.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.620" endtime="20201115 22:00:16.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.931" level="INFO">${RESULT} = [{'time': 0.021111347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.021256333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:16.927" endtime="20201115 22:00:16.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.944" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:16.932" endtime="20201115 22:00:16.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.948" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:16.947" endtime="20201115 22:00:16.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.951" level="INFO">VALUE: [4.916000000000642e-06, 4.915999999997173e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.889000000000976e-06, 4.9589999999988255e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.889000000000976e-06, 4.8889999999975065e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.8749999999979365e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.903000000000546e-06, 4.902000000001072e-06, 4.917000000000116e-06, 4.902999999997076e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.902999999997076e-06, 4.917000000000116e-06, 4.903000000000546e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.949" endtime="20201115 22:00:16.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.945" endtime="20201115 22:00:16.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.954" endtime="20201115 22:00:16.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.957" endtime="20201115 22:00:16.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.956" endtime="20201115 22:00:16.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.952" endtime="20201115 22:00:16.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.585" endtime="20201115 22:00:16.978"></status>
</kw>
<msg timestamp="20201115 22:00:16.978" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.987" endtime="20201115 22:00:17.005"></status>
</kw>
<msg timestamp="20201115 22:00:17.005" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.985" endtime="20201115 22:00:17.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.008" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.006" endtime="20201115 22:00:17.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.009" endtime="20201115 22:00:17.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.983" endtime="20201115 22:00:17.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.981" endtime="20201115 22:00:17.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.018" endtime="20201115 22:00:17.304"></status>
</kw>
<msg timestamp="20201115 22:00:17.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020397972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.016" endtime="20201115 22:00:17.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020397972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.308" endtime="20201115 22:00:17.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.316" endtime="20201115 22:00:17.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.014" endtime="20201115 22:00:17.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.012" endtime="20201115 22:00:17.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.323" level="INFO">${RESULT} = [{'time': 0.020402875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.020547569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:17.320" endtime="20201115 22:00:17.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.336" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:17.324" endtime="20201115 22:00:17.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.341" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:17.339" endtime="20201115 22:00:17.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.343" level="INFO">VALUE: [4.903000000000546e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.901999999997603e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.916000000000642e-06, 4.846999999998797e-06, 4.917000000000116e-06, 4.888000000001502e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.931000000003155e-06, 4.902999999997076e-06, 4.917000000000116e-06, 4.861000000001836e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.888000000001502e-06, 4.8889999999975065e-06, 4.915999999997173e-06, 4.957999999999352e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.889000000000976e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.861000000001836e-06, 4.902999999997076e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.9449999999992555e-06, 4.846999999998797e-06, 4.902000000001072e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.9299999999967425e-06, 4.875000000001406e-06]</msg>
<status status="PASS" starttime="20201115 22:00:17.342" endtime="20201115 22:00:17.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.337" endtime="20201115 22:00:17.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.346" endtime="20201115 22:00:17.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.350" endtime="20201115 22:00:17.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.348" endtime="20201115 22:00:17.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.345" endtime="20201115 22:00:17.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.979" endtime="20201115 22:00:17.370"></status>
</kw>
<msg timestamp="20201115 22:00:17.371" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.380" endtime="20201115 22:00:17.396"></status>
</kw>
<msg timestamp="20201115 22:00:17.397" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.378" endtime="20201115 22:00:17.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.398" endtime="20201115 22:00:17.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.400" endtime="20201115 22:00:17.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.375" endtime="20201115 22:00:17.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.373" endtime="20201115 22:00:17.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.409" endtime="20201115 22:00:17.696"></status>
</kw>
<msg timestamp="20201115 22:00:17.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.408" endtime="20201115 22:00:17.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.700" endtime="20201115 22:00:17.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.708" endtime="20201115 22:00:17.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.405" endtime="20201115 22:00:17.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.404" endtime="20201115 22:00:17.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.715" level="INFO">${RESULT} = [{'time': 0.020252069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.020397167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:17.711" endtime="20201115 22:00:17.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.728" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:17.716" endtime="20201115 22:00:17.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.732" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:17.731" endtime="20201115 22:00:17.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.735" level="INFO">VALUE: [4.930000000000212e-06, 4.903000000000546e-06, 4.903000000000546e-06, 4.902999999997076e-06, 4.917000000000116e-06, 4.902000000001072e-06, 4.917000000000116e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.902000000001072e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.8749999999979365e-06, 4.943999999999782e-06, 4.902000000001072e-06, 4.971999999998922e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.875000000001406e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.889000000000976e-06, 4.902999999997076e-06, 4.888000000001502e-06, 4.875000000001406e-06, 4.846999999998797e-06, 4.916000000000642e-06, 4.916999999996646e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.930999999999686e-06]</msg>
<status status="PASS" starttime="20201115 22:00:17.734" endtime="20201115 22:00:17.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.729" endtime="20201115 22:00:17.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.738" endtime="20201115 22:00:17.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.742" endtime="20201115 22:00:17.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.740" endtime="20201115 22:00:17.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.736" endtime="20201115 22:00:17.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.371" endtime="20201115 22:00:17.762"></status>
</kw>
<msg timestamp="20201115 22:00:17.763" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.771" endtime="20201115 22:00:17.789"></status>
</kw>
<msg timestamp="20201115 22:00:17.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.770" endtime="20201115 22:00:17.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.791" endtime="20201115 22:00:17.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.793" endtime="20201115 22:00:17.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.767" endtime="20201115 22:00:17.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.765" endtime="20201115 22:00:17.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.802" endtime="20201115 22:00:18.089"></status>
</kw>
<msg timestamp="20201115 22:00:18.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.801" endtime="20201115 22:00:18.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.093" endtime="20201115 22:00:18.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.102" endtime="20201115 22:00:18.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.798" endtime="20201115 22:00:18.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.796" endtime="20201115 22:00:18.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.108" level="INFO">${RESULT} = [{'time': 0.019917097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.020063639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:18.105" endtime="20201115 22:00:18.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.121" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:18.109" endtime="20201115 22:00:18.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.126" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:18.125" endtime="20201115 22:00:18.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.128" level="INFO">VALUE: [4.903000000000546e-06, 4.861000000001836e-06, 4.902999999997076e-06, 4.903000000000546e-06, 4.832999999999227e-06, 4.917000000000116e-06, 4.971999999998922e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.888000000001502e-06, 4.902000000001072e-06, 4.818999999999657e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.889000000000976e-06, 4.902999999997076e-06, 4.902000000001072e-06, 4.972999999998395e-06, 4.917000000000116e-06, 4.860999999998367e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.916999999996646e-06, 4.915999999997173e-06, 4.930999999999686e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.902999999997076e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.889000000000976e-06, 4.889000000000976e-06, 4.901999999997603e-06, 4.902999999997076e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.943999999999782e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.84800000000174e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.901999999997603e-06, 4.903000000000546e-06]</msg>
<status status="PASS" starttime="20201115 22:00:18.127" endtime="20201115 22:00:18.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.122" endtime="20201115 22:00:18.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.132" endtime="20201115 22:00:18.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.135" endtime="20201115 22:00:18.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.134" endtime="20201115 22:00:18.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.130" endtime="20201115 22:00:18.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.763" endtime="20201115 22:00:18.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.191" endtime="20201115 22:00:18.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.190" endtime="20201115 22:00:18.156"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.159" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.167" endtime="20201115 22:00:18.186"></status>
</kw>
<msg timestamp="20201115 22:00:18.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.166" endtime="20201115 22:00:18.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.187" endtime="20201115 22:00:18.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.190" endtime="20201115 22:00:18.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.163" endtime="20201115 22:00:18.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.161" endtime="20201115 22:00:18.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.199" endtime="20201115 22:00:18.487"></status>
</kw>
<msg timestamp="20201115 22:00:18.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.197" endtime="20201115 22:00:18.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.492" endtime="20201115 22:00:18.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.500" endtime="20201115 22:00:18.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.194" endtime="20201115 22:00:18.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.193" endtime="20201115 22:00:18.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.506" level="INFO">${RESULT} = [{'time': 0.022211542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.02236725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:18.503" endtime="20201115 22:00:18.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.519" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:18.507" endtime="20201115 22:00:18.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.524" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:18.523" endtime="20201115 22:00:18.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.527" level="INFO">VALUE: [5.1949999999995056e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.2089999999990755e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.111000000002086e-06, 5.110999999998617e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.110999999998617e-06, 5.111000000002086e-06, 5.125000000001656e-06, 5.110999999998617e-06, 5.152999999997326e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.110999999998617e-06, 5.1249999999981866e-06, 5.11200000000156e-06, 5.0699999999993806e-06, 5.139000000001226e-06, 5.151999999997853e-06, 5.152000000001322e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.068999999999907e-06, 5.153000000000796e-06, 5.1799999999969926e-06, 5.138000000001752e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.180999999999936e-06, 5.1249999999981866e-06, 5.180000000000462e-06, 5.110999999998617e-06, 5.194000000000032e-06, 5.125000000001656e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.152999999997326e-06]</msg>
<status status="PASS" starttime="20201115 22:00:18.525" endtime="20201115 22:00:18.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.520" endtime="20201115 22:00:18.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.530" endtime="20201115 22:00:18.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.533" endtime="20201115 22:00:18.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.532" endtime="20201115 22:00:18.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.528" endtime="20201115 22:00:18.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.159" endtime="20201115 22:00:18.554"></status>
</kw>
<msg timestamp="20201115 22:00:18.554" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.563" endtime="20201115 22:00:18.581"></status>
</kw>
<msg timestamp="20201115 22:00:18.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.562" endtime="20201115 22:00:18.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.582" endtime="20201115 22:00:18.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.585" endtime="20201115 22:00:18.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.559" endtime="20201115 22:00:18.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.557" endtime="20201115 22:00:18.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.594" endtime="20201115 22:00:18.880"></status>
</kw>
<msg timestamp="20201115 22:00:18.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020035556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.592" endtime="20201115 22:00:18.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020035556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.885" endtime="20201115 22:00:18.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.893" endtime="20201115 22:00:18.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.590" endtime="20201115 22:00:18.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.588" endtime="20201115 22:00:18.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.899" level="INFO">${RESULT} = [{'time': 0.020035556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.020194264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:18.896" endtime="20201115 22:00:18.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.913" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:18.900" endtime="20201115 22:00:18.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.918" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:18.916" endtime="20201115 22:00:18.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.920" level="INFO">VALUE: [5.139000000001226e-06, 5.139000000001226e-06, 5.151999999997853e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.167000000000366e-06, 5.1249999999981866e-06, 5.152999999997326e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.111000000002086e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.110999999998617e-06, 5.152999999997326e-06, 5.151999999997853e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.11200000000156e-06, 5.151999999997853e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.138000000001752e-06, 5.139000000001226e-06, 5.138000000001752e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.096999999999047e-06, 5.111000000002086e-06, 5.096999999999047e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.152999999997326e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.139000000001226e-06]</msg>
<status status="PASS" starttime="20201115 22:00:18.919" endtime="20201115 22:00:18.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.914" endtime="20201115 22:00:18.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.923" endtime="20201115 22:00:18.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.927" endtime="20201115 22:00:18.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.925" endtime="20201115 22:00:18.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.921" endtime="20201115 22:00:18.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.555" endtime="20201115 22:00:18.947"></status>
</kw>
<msg timestamp="20201115 22:00:18.948" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.956" endtime="20201115 22:00:18.975"></status>
</kw>
<msg timestamp="20201115 22:00:18.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.955" endtime="20201115 22:00:18.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.976" endtime="20201115 22:00:18.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.979" endtime="20201115 22:00:18.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.952" endtime="20201115 22:00:18.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.950" endtime="20201115 22:00:18.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.988" endtime="20201115 22:00:19.275"></status>
</kw>
<msg timestamp="20201115 22:00:19.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.986" endtime="20201115 22:00:19.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.279" endtime="20201115 22:00:19.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.287" endtime="20201115 22:00:19.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.984" endtime="20201115 22:00:19.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.982" endtime="20201115 22:00:19.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.293" level="INFO">${RESULT} = [{'time': 0.020022139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.020180583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:19.290" endtime="20201115 22:00:19.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.311" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:19.299" endtime="20201115 22:00:19.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.316" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:19.315" endtime="20201115 22:00:19.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.318" level="INFO">VALUE: [5.125000000001656e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.207999999999602e-06, 5.1389999999977565e-06, 5.111000000002086e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.1389999999977565e-06, 5.137999999998283e-06, 5.139000000001226e-06, 5.138000000001752e-06, 5.137999999998283e-06, 5.137999999998283e-06, 5.138000000001752e-06, 5.125000000001656e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.1249999999981866e-06, 5.152999999997326e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.180999999999936e-06, 5.152999999997326e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.152999999997326e-06, 5.1389999999977565e-06, 5.111000000002086e-06]</msg>
<status status="PASS" starttime="20201115 22:00:19.317" endtime="20201115 22:00:19.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.312" endtime="20201115 22:00:19.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.321" endtime="20201115 22:00:19.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.325" endtime="20201115 22:00:19.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.323" endtime="20201115 22:00:19.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.320" endtime="20201115 22:00:19.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.948" endtime="20201115 22:00:19.345"></status>
</kw>
<msg timestamp="20201115 22:00:19.346" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.355" endtime="20201115 22:00:19.373"></status>
</kw>
<msg timestamp="20201115 22:00:19.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.353" endtime="20201115 22:00:19.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.376" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.374" endtime="20201115 22:00:19.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.377" endtime="20201115 22:00:19.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.350" endtime="20201115 22:00:19.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.348" endtime="20201115 22:00:19.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.386" endtime="20201115 22:00:19.674"></status>
</kw>
<msg timestamp="20201115 22:00:19.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020106333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.384" endtime="20201115 22:00:19.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020106333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.678" endtime="20201115 22:00:19.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.687" endtime="20201115 22:00:19.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.382" endtime="20201115 22:00:19.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.380" endtime="20201115 22:00:19.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.693" level="INFO">${RESULT} = [{'time': 0.020111472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.020269181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:19.690" endtime="20201115 22:00:19.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.706" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:19.694" endtime="20201115 22:00:19.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.711" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:19.710" endtime="20201115 22:00:19.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.714" level="INFO">VALUE: [5.1389999999977565e-06, 5.139000000001226e-06, 5.195000000002975e-06, 5.1389999999977565e-06, 5.1249999999981866e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.1249999999981866e-06, 5.180000000000462e-06, 5.165999999997423e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.096999999999047e-06, 5.096999999999047e-06, 5.139000000001226e-06, 5.180000000000462e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.055000000000337e-06, 5.139000000001226e-06, 5.207999999999602e-06, 5.125000000001656e-06, 5.09799999999852e-06, 5.125000000001656e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.138000000001752e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.110999999998617e-06, 5.097000000002516e-06, 5.068999999999907e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.139000000001226e-06]</msg>
<status status="PASS" starttime="20201115 22:00:19.712" endtime="20201115 22:00:19.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.707" endtime="20201115 22:00:19.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.717" endtime="20201115 22:00:19.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.720" endtime="20201115 22:00:19.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.718" endtime="20201115 22:00:19.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.715" endtime="20201115 22:00:19.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.346" endtime="20201115 22:00:19.741"></status>
</kw>
<msg timestamp="20201115 22:00:19.741" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.750" endtime="20201115 22:00:19.768"></status>
</kw>
<msg timestamp="20201115 22:00:19.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.748" endtime="20201115 22:00:19.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.769" endtime="20201115 22:00:19.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.772" endtime="20201115 22:00:19.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.746" endtime="20201115 22:00:19.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.744" endtime="20201115 22:00:19.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.781" endtime="20201115 22:00:20.067"></status>
</kw>
<msg timestamp="20201115 22:00:20.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019995375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.779" endtime="20201115 22:00:20.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019995375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.072" endtime="20201115 22:00:20.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.080" endtime="20201115 22:00:20.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.777" endtime="20201115 22:00:20.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.775" endtime="20201115 22:00:20.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.087" level="INFO">${RESULT} = [{'time': 0.019995375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.020152306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:20.083" endtime="20201115 22:00:20.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.100" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:20.088" endtime="20201115 22:00:20.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.104" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:20.103" endtime="20201115 22:00:20.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.107" level="INFO">VALUE: [5.153000000000796e-06, 5.1389999999977565e-06, 5.1249999999981866e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.110999999998617e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.223000000002115e-06, 5.110999999998617e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.096999999999047e-06, 5.110999999998617e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.111000000002086e-06, 5.1389999999977565e-06, 5.138000000001752e-06, 5.139000000001226e-06, 5.110999999998617e-06, 5.096999999999047e-06, 5.151999999997853e-06, 5.125000000001656e-06, 5.152000000001322e-06, 5.167000000000366e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.137999999998283e-06, 5.125000000001656e-06, 5.096999999999047e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.1249999999981866e-06, 5.110999999998617e-06]</msg>
<status status="PASS" starttime="20201115 22:00:20.106" endtime="20201115 22:00:20.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.101" endtime="20201115 22:00:20.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.110" endtime="20201115 22:00:20.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.113" endtime="20201115 22:00:20.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.112" endtime="20201115 22:00:20.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.108" endtime="20201115 22:00:20.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.741" endtime="20201115 22:00:20.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.157" endtime="20201115 22:00:20.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.157" endtime="20201115 22:00:20.134"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.137" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.145" endtime="20201115 22:00:20.164"></status>
</kw>
<msg timestamp="20201115 22:00:20.165" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.144" endtime="20201115 22:00:20.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.167" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.166" endtime="20201115 22:00:20.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.168" endtime="20201115 22:00:20.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.141" endtime="20201115 22:00:20.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.139" endtime="20201115 22:00:20.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.178" endtime="20201115 22:00:20.464"></status>
</kw>
<msg timestamp="20201115 22:00:20.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.176" endtime="20201115 22:00:20.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.468" endtime="20201115 22:00:20.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.477" endtime="20201115 22:00:20.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.174" endtime="20201115 22:00:20.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.172" endtime="20201115 22:00:20.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.483" level="INFO">${RESULT} = [{'time': 0.022266667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.022433778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:20.480" endtime="20201115 22:00:20.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.496" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:20.484" endtime="20201115 22:00:20.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.501" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:20.500" endtime="20201115 22:00:20.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.503" level="INFO">VALUE: [5.389000000001476e-06, 5.347000000002766e-06, 5.361000000002336e-06, 5.292000000000491e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.347000000002766e-06, 5.36199999999834e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.346999999999297e-06, 5.374999999998437e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.374999999998437e-06, 5.304999999997118e-06, 5.416999999997146e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.374999999998437e-06, 5.36199999999834e-06, 5.361000000002336e-06, 5.319999999999631e-06, 5.389000000001476e-06, 5.346999999999297e-06, 5.361000000002336e-06, 5.416000000001142e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.291000000001017e-06, 5.375000000001906e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.291000000001017e-06, 5.375000000001906e-06, 5.402999999997576e-06]</msg>
<status status="PASS" starttime="20201115 22:00:20.502" endtime="20201115 22:00:20.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.497" endtime="20201115 22:00:20.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.506" endtime="20201115 22:00:20.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.510" endtime="20201115 22:00:20.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.508" endtime="20201115 22:00:20.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.505" endtime="20201115 22:00:20.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.137" endtime="20201115 22:00:20.531"></status>
</kw>
<msg timestamp="20201115 22:00:20.531" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.540" endtime="20201115 22:00:20.558"></status>
</kw>
<msg timestamp="20201115 22:00:20.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.538" endtime="20201115 22:00:20.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.562" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.560" endtime="20201115 22:00:20.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.563" endtime="20201115 22:00:20.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.535" endtime="20201115 22:00:20.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.533" endtime="20201115 22:00:20.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.572" endtime="20201115 22:00:20.858"></status>
</kw>
<msg timestamp="20201115 22:00:20.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019940903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.570" endtime="20201115 22:00:20.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019940903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.862" endtime="20201115 22:00:20.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.871" endtime="20201115 22:00:20.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.568" endtime="20201115 22:00:20.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.566" endtime="20201115 22:00:20.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.877" level="INFO">${RESULT} = [{'time': 0.019940903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.020109986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:20.874" endtime="20201115 22:00:20.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.890" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:20.878" endtime="20201115 22:00:20.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.895" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:20.894" endtime="20201115 22:00:20.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.897" level="INFO">VALUE: [5.360999999998867e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.403000000001046e-06, 5.36199999999834e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.347000000002766e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.374999999998437e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.34799999999877e-06, 5.34799999999877e-06, 5.319999999999631e-06, 5.375000000001906e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.347000000002766e-06, 5.374999999998437e-06, 5.403000000001046e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.3889999999980065e-06, 5.305000000000587e-06, 5.402000000001572e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.292000000000491e-06, 5.361000000002336e-06, 5.319999999999631e-06, 5.360999999998867e-06, 5.36199999999834e-06, 5.36199999999834e-06, 5.347000000002766e-06, 5.306000000000061e-06, 5.346999999999297e-06]</msg>
<status status="PASS" starttime="20201115 22:00:20.896" endtime="20201115 22:00:20.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.891" endtime="20201115 22:00:20.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.901" endtime="20201115 22:00:20.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.904" endtime="20201115 22:00:20.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.902" endtime="20201115 22:00:20.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.899" endtime="20201115 22:00:20.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.531" endtime="20201115 22:00:20.924"></status>
</kw>
<msg timestamp="20201115 22:00:20.925" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.934" endtime="20201115 22:00:20.952"></status>
</kw>
<msg timestamp="20201115 22:00:20.953" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.932" endtime="20201115 22:00:20.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.954" endtime="20201115 22:00:20.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.956" endtime="20201115 22:00:20.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.929" endtime="20201115 22:00:20.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.927" endtime="20201115 22:00:20.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.965" endtime="20201115 22:00:21.254"></status>
</kw>
<msg timestamp="20201115 22:00:21.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020382431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.964" endtime="20201115 22:00:21.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020382431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.258" endtime="20201115 22:00:21.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.266" endtime="20201115 22:00:21.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.961" endtime="20201115 22:00:21.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.960" endtime="20201115 22:00:21.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.273" level="INFO">${RESULT} = [{'time': 0.020387722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.020554806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:21.269" endtime="20201115 22:00:21.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.286" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:21.273" endtime="20201115 22:00:21.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.290" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:21.289" endtime="20201115 22:00:21.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.293" level="INFO">VALUE: [5.291000000001017e-06, 5.374999999998437e-06, 5.3339999999992005e-06, 5.375000000001906e-06, 5.34799999999877e-06, 5.361000000002336e-06, 5.431000000000186e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.416000000001142e-06, 5.361000000002336e-06, 5.346999999999297e-06, 5.417000000000616e-06, 5.291999999997021e-06, 5.360999999998867e-06, 5.347000000002766e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.374999999998437e-06, 5.36200000000181e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.36199999999834e-06, 5.375000000001906e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.346999999999297e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.416000000001142e-06, 5.360999999998867e-06, 5.416000000001142e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.403000000001046e-06, 5.34799999999877e-06, 5.360999999998867e-06, 5.36200000000181e-06, 5.347000000002766e-06, 5.346999999999297e-06]</msg>
<status status="PASS" starttime="20201115 22:00:21.291" endtime="20201115 22:00:21.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.287" endtime="20201115 22:00:21.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.296" endtime="20201115 22:00:21.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.299" endtime="20201115 22:00:21.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.297" endtime="20201115 22:00:21.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.294" endtime="20201115 22:00:21.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.925" endtime="20201115 22:00:21.320"></status>
</kw>
<msg timestamp="20201115 22:00:21.320" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.329" endtime="20201115 22:00:21.348"></status>
</kw>
<msg timestamp="20201115 22:00:21.348" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.327" endtime="20201115 22:00:21.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.351" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.349" endtime="20201115 22:00:21.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.352" endtime="20201115 22:00:21.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.325" endtime="20201115 22:00:21.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.323" endtime="20201115 22:00:21.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.361" endtime="20201115 22:00:21.647"></status>
</kw>
<msg timestamp="20201115 22:00:21.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.359" endtime="20201115 22:00:21.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.651" endtime="20201115 22:00:21.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.660" endtime="20201115 22:00:21.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.357" endtime="20201115 22:00:21.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.355" endtime="20201115 22:00:21.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.667" level="INFO">${RESULT} = [{'time': 0.020275458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.020445167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:21.663" endtime="20201115 22:00:21.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.680" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:21.668" endtime="20201115 22:00:21.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.685" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:21.684" endtime="20201115 22:00:21.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.688" level="INFO">VALUE: [5.360999999998867e-06, 5.375000000001906e-06, 5.360999999998867e-06, 5.36200000000181e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.34799999999877e-06, 5.319000000000157e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.346999999999297e-06, 5.34799999999877e-06, 5.361000000002336e-06, 5.416999999997146e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.306000000000061e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.34799999999877e-06, 5.34800000000224e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.319999999999631e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.34799999999877e-06, 5.33400000000267e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.3889999999980065e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.34800000000224e-06, 5.291999999997021e-06, 5.360999999998867e-06, 5.347000000002766e-06, 5.346999999999297e-06]</msg>
<status status="PASS" starttime="20201115 22:00:21.686" endtime="20201115 22:00:21.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.681" endtime="20201115 22:00:21.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.691" endtime="20201115 22:00:21.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.694" endtime="20201115 22:00:21.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.693" endtime="20201115 22:00:21.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.689" endtime="20201115 22:00:21.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.321" endtime="20201115 22:00:21.715"></status>
</kw>
<msg timestamp="20201115 22:00:21.715" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.724" endtime="20201115 22:00:21.743"></status>
</kw>
<msg timestamp="20201115 22:00:21.743" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.723" endtime="20201115 22:00:21.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.744" endtime="20201115 22:00:21.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.747" endtime="20201115 22:00:21.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.720" endtime="20201115 22:00:21.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.718" endtime="20201115 22:00:21.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.756" endtime="20201115 22:00:22.042"></status>
</kw>
<msg timestamp="20201115 22:00:22.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.754" endtime="20201115 22:00:22.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.046" endtime="20201115 22:00:22.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.054" endtime="20201115 22:00:22.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.752" endtime="20201115 22:00:22.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.750" endtime="20201115 22:00:22.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.061" level="INFO">${RESULT} = [{'time': 0.019913528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.020080403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:22.058" endtime="20201115 22:00:22.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.074" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:22.062" endtime="20201115 22:00:22.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.079" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:22.078" endtime="20201115 22:00:22.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.081" level="INFO">VALUE: [5.389000000001476e-06, 5.374999999998437e-06, 5.346999999999297e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.360999999998867e-06, 5.306000000000061e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.36199999999834e-06, 5.34799999999877e-06, 5.374999999998437e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.347000000002766e-06, 5.291999999997021e-06, 5.375000000001906e-06, 5.332999999999727e-06, 5.374999999998437e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.416999999997146e-06, 5.361000000002336e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.416999999997146e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.36200000000181e-06, 5.374999999998437e-06, 5.361000000002336e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.403000000001046e-06, 5.374999999998437e-06, 5.319999999999631e-06, 5.374999999998437e-06, 5.374999999998437e-06, 5.444999999999756e-06, 5.346999999999297e-06]</msg>
<status status="PASS" starttime="20201115 22:00:22.080" endtime="20201115 22:00:22.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.075" endtime="20201115 22:00:22.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.085" endtime="20201115 22:00:22.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.088" endtime="20201115 22:00:22.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.087" endtime="20201115 22:00:22.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.083" endtime="20201115 22:00:22.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.716" endtime="20201115 22:00:22.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.136" endtime="20201115 22:00:22.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.135" endtime="20201115 22:00:22.109"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.111" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.120" endtime="20201115 22:00:22.139"></status>
</kw>
<msg timestamp="20201115 22:00:22.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.119" endtime="20201115 22:00:22.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.141" endtime="20201115 22:00:22.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.143" endtime="20201115 22:00:22.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.116" endtime="20201115 22:00:22.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.114" endtime="20201115 22:00:22.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.152" endtime="20201115 22:00:22.438"></status>
</kw>
<msg timestamp="20201115 22:00:22.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:22.151" endtime="20201115 22:00:22.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:22.443" endtime="20201115 22:00:22.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.451" endtime="20201115 22:00:22.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.148" endtime="20201115 22:00:22.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.147" endtime="20201115 22:00:22.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.457" level="INFO">${RESULT} = [{'time': 0.022461083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.022638972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:22.454" endtime="20201115 22:00:22.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.471" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:22.458" endtime="20201115 22:00:22.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.475" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:22.474" endtime="20201115 22:00:22.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.478" level="INFO">VALUE: [5.582999999999977e-06, 5.528000000001171e-06, 5.610999999999117e-06, 5.625000000002156e-06, 5.569999999999881e-06, 5.639000000001726e-06, 5.596999999999547e-06, 5.597000000003016e-06, 5.624999999998687e-06, 5.59800000000249e-06, 5.597000000003016e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.596999999999547e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.625000000002156e-06, 5.58400000000292e-06, 5.59800000000249e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.542000000000741e-06, 5.5839999999994505e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.569999999999881e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.6529999999978264e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.624999999998687e-06, 5.5839999999994505e-06, 5.58400000000292e-06, 5.597000000003016e-06, 5.569999999999881e-06, 5.569999999999881e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.5839999999994505e-06, 5.569999999999881e-06, 5.583000000003446e-06, 5.58400000000292e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.596999999999547e-06]</msg>
<status status="PASS" starttime="20201115 22:00:22.476" endtime="20201115 22:00:22.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.471" endtime="20201115 22:00:22.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.481" endtime="20201115 22:00:22.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.485" endtime="20201115 22:00:22.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.483" endtime="20201115 22:00:22.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.480" endtime="20201115 22:00:22.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.112" endtime="20201115 22:00:22.505"></status>
</kw>
<msg timestamp="20201115 22:00:22.505" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.514" endtime="20201115 22:00:22.533"></status>
</kw>
<msg timestamp="20201115 22:00:22.534" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.513" endtime="20201115 22:00:22.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.536" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.535" endtime="20201115 22:00:22.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.537" endtime="20201115 22:00:22.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.510" endtime="20201115 22:00:22.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.508" endtime="20201115 22:00:22.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.546" endtime="20201115 22:00:22.834"></status>
</kw>
<msg timestamp="20201115 22:00:22.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.545" endtime="20201115 22:00:22.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.838" endtime="20201115 22:00:22.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.847" endtime="20201115 22:00:22.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.542" endtime="20201115 22:00:22.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.541" endtime="20201115 22:00:22.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.853" level="INFO">${RESULT} = [{'time': 0.019918153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569999999999881e-06, 'source_diff': 5.569999999999881e-06}, {'time': 0.020096889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:22.850" endtime="20201115 22:00:22.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.866" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:22.854" endtime="20201115 22:00:22.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.871" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:22.870" endtime="20201115 22:00:22.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.874" level="INFO">VALUE: [5.569999999999881e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.610999999999117e-06, 5.499999999998562e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.61199999999859e-06, 5.569999999999881e-06, 5.569999999999881e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.527999999997701e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.653000000001296e-06, 5.625000000002156e-06, 5.5839999999994505e-06, 5.597000000003016e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.59800000000249e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.6389999999982565e-06, 5.542000000000741e-06, 5.5839999999994505e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.582999999999977e-06]</msg>
<status status="PASS" starttime="20201115 22:00:22.872" endtime="20201115 22:00:22.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.868" endtime="20201115 22:00:22.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.877" endtime="20201115 22:00:22.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.880" endtime="20201115 22:00:22.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.879" endtime="20201115 22:00:22.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.875" endtime="20201115 22:00:22.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.506" endtime="20201115 22:00:22.901"></status>
</kw>
<msg timestamp="20201115 22:00:22.901" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.910" endtime="20201115 22:00:22.929"></status>
</kw>
<msg timestamp="20201115 22:00:22.929" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.908" endtime="20201115 22:00:22.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.930" endtime="20201115 22:00:22.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.933" endtime="20201115 22:00:22.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.906" endtime="20201115 22:00:22.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.904" endtime="20201115 22:00:22.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.942" endtime="20201115 22:00:23.228"></status>
</kw>
<msg timestamp="20201115 22:00:23.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019856125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.940" endtime="20201115 22:00:23.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019856125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.232" endtime="20201115 22:00:23.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.240" endtime="20201115 22:00:23.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.937" endtime="20201115 22:00:23.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.936" endtime="20201115 22:00:23.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.247" level="INFO">${RESULT} = [{'time': 0.019861708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.020041222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:23.244" endtime="20201115 22:00:23.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.261" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:23.248" endtime="20201115 22:00:23.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.265" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:23.264" endtime="20201115 22:00:23.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.268" level="INFO">VALUE: [5.582999999999977e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.61199999999859e-06, 5.582999999999977e-06, 5.597000000003016e-06, 5.583000000003446e-06, 5.542000000000741e-06, 5.58400000000292e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.59800000000249e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.59800000000249e-06, 5.582999999999977e-06, 5.58400000000292e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.556000000000311e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.58400000000292e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.611000000002586e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.542000000000741e-06, 5.58400000000292e-06, 5.596999999999547e-06, 5.59800000000249e-06, 5.610999999999117e-06, 5.569999999999881e-06, 5.596999999999547e-06, 5.5839999999994505e-06, 5.582999999999977e-06]</msg>
<status status="PASS" starttime="20201115 22:00:23.266" endtime="20201115 22:00:23.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.261" endtime="20201115 22:00:23.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.271" endtime="20201115 22:00:23.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.274" endtime="20201115 22:00:23.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.273" endtime="20201115 22:00:23.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.269" endtime="20201115 22:00:23.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.902" endtime="20201115 22:00:23.295"></status>
</kw>
<msg timestamp="20201115 22:00:23.295" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.304" endtime="20201115 22:00:23.323"></status>
</kw>
<msg timestamp="20201115 22:00:23.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.302" endtime="20201115 22:00:23.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.325" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.324" endtime="20201115 22:00:23.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.327" endtime="20201115 22:00:23.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.300" endtime="20201115 22:00:23.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.298" endtime="20201115 22:00:23.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.335" endtime="20201115 22:00:23.622"></status>
</kw>
<msg timestamp="20201115 22:00:23.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019928653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.334" endtime="20201115 22:00:23.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019928653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.626" endtime="20201115 22:00:23.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.634" endtime="20201115 22:00:23.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.331" endtime="20201115 22:00:23.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.330" endtime="20201115 22:00:23.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.641" level="INFO">${RESULT} = [{'time': 0.019934236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.020112222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:23.638" endtime="20201115 22:00:23.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.654" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:23.642" endtime="20201115 22:00:23.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.659" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:23.658" endtime="20201115 22:00:23.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.661" level="INFO">VALUE: [5.582999999999977e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.528000000001171e-06, 5.582999999999977e-06, 5.59800000000249e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.5979999999990204e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.610999999999117e-06, 5.666999999997396e-06, 5.597000000003016e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.624999999998687e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.61199999999859e-06, 5.596999999999547e-06, 5.569999999999881e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.556000000000311e-06, 5.637999999998783e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.5839999999994505e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.59800000000249e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.596999999999547e-06]</msg>
<status status="PASS" starttime="20201115 22:00:23.660" endtime="20201115 22:00:23.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.655" endtime="20201115 22:00:23.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.664" endtime="20201115 22:00:23.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.668" endtime="20201115 22:00:23.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.666" endtime="20201115 22:00:23.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.663" endtime="20201115 22:00:23.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.295" endtime="20201115 22:00:23.689"></status>
</kw>
<msg timestamp="20201115 22:00:23.689" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.699" endtime="20201115 22:00:23.718"></status>
</kw>
<msg timestamp="20201115 22:00:23.719" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.697" endtime="20201115 22:00:23.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.721" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.720" endtime="20201115 22:00:23.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.722" endtime="20201115 22:00:23.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.694" endtime="20201115 22:00:23.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.692" endtime="20201115 22:00:23.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.731" endtime="20201115 22:00:24.017"></status>
</kw>
<msg timestamp="20201115 22:00:24.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021406875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021412458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.730" endtime="20201115 22:00:24.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021406875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021412458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.022" endtime="20201115 22:00:24.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.030" endtime="20201115 22:00:24.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.727" endtime="20201115 22:00:24.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.725" endtime="20201115 22:00:24.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.037" level="INFO">${RESULT} = [{'time': 0.021412458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.021592056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:24.034" endtime="20201115 22:00:24.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.050" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:24.038" endtime="20201115 22:00:24.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.055" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:24.054" endtime="20201115 22:00:24.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.057" level="INFO">VALUE: [5.582999999999977e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.58400000000292e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.596999999999547e-06, 5.569000000000407e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.59800000000249e-06, 5.596999999999547e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.5839999999994505e-06, 5.582999999999977e-06, 5.639000000001726e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.5839999999994505e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.5839999999994505e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.569000000000407e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.653000000001296e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.597000000003016e-06, 5.5839999999994505e-06, 5.569999999999881e-06, 5.5979999999990204e-06, 5.5839999999994505e-06, 5.569999999999881e-06, 5.611000000002586e-06]</msg>
<status status="PASS" starttime="20201115 22:00:24.056" endtime="20201115 22:00:24.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.051" endtime="20201115 22:00:24.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.060" endtime="20201115 22:00:24.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.063" endtime="20201115 22:00:24.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.062" endtime="20201115 22:00:24.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.058" endtime="20201115 22:00:24.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.690" endtime="20201115 22:00:24.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.110" endtime="20201115 22:00:24.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.110" endtime="20201115 22:00:24.085"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.087" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.095" endtime="20201115 22:00:24.114"></status>
</kw>
<msg timestamp="20201115 22:00:24.115" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.094" endtime="20201115 22:00:24.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.117" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.116" endtime="20201115 22:00:24.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.118" endtime="20201115 22:00:24.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.091" endtime="20201115 22:00:24.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.089" endtime="20201115 22:00:24.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.128" endtime="20201115 22:00:24.415"></status>
</kw>
<msg timestamp="20201115 22:00:24.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.126" endtime="20201115 22:00:24.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.420" endtime="20201115 22:00:24.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.427" endtime="20201115 22:00:24.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.124" endtime="20201115 22:00:24.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.122" endtime="20201115 22:00:24.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.434" level="INFO">${RESULT} = [{'time': 0.022277194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791000000001517e-06, 'source_diff': 5.791000000001517e-06}, {'time': 0.022467194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:24.431" endtime="20201115 22:00:24.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.447" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:24.435" endtime="20201115 22:00:24.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.452" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:24.451" endtime="20201115 22:00:24.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.454" level="INFO">VALUE: [5.791000000001517e-06, 5.762999999998908e-06, 5.819000000000657e-06, 5.8479999999992704e-06, 5.749999999998812e-06, 5.874999999998937e-06, 5.860999999999367e-06, 5.819000000000657e-06, 5.846999999999797e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.806000000000561e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.86199999999884e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.805000000001087e-06, 5.804999999997618e-06, 5.819000000000657e-06, 5.736000000002711e-06, 5.820000000000131e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.805999999997091e-06, 5.792000000000991e-06, 5.7639999999983815e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.7639999999983815e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.846999999999797e-06, 5.805000000001087e-06, 5.833000000000227e-06, 5.764000000001851e-06, 5.804999999997618e-06, 5.819999999996661e-06, 5.833999999996231e-06]</msg>
<status status="PASS" starttime="20201115 22:00:24.453" endtime="20201115 22:00:24.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.448" endtime="20201115 22:00:24.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.457" endtime="20201115 22:00:24.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.461" endtime="20201115 22:00:24.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.459" endtime="20201115 22:00:24.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.456" endtime="20201115 22:00:24.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.087" endtime="20201115 22:00:24.481"></status>
</kw>
<msg timestamp="20201115 22:00:24.482" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.490" endtime="20201115 22:00:24.510"></status>
</kw>
<msg timestamp="20201115 22:00:24.510" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.489" endtime="20201115 22:00:24.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.517" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.511" endtime="20201115 22:00:24.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.519" endtime="20201115 22:00:24.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.486" endtime="20201115 22:00:24.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.484" endtime="20201115 22:00:24.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.528" endtime="20201115 22:00:24.814"></status>
</kw>
<msg timestamp="20201115 22:00:24.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.526" endtime="20201115 22:00:24.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019861153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.818" endtime="20201115 22:00:24.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.826" endtime="20201115 22:00:24.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.524" endtime="20201115 22:00:24.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.522" endtime="20201115 22:00:24.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.832" level="INFO">${RESULT} = [{'time': 0.019861153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.020052278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:24.829" endtime="20201115 22:00:24.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.846" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:24.833" endtime="20201115 22:00:24.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.850" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:24.849" endtime="20201115 22:00:24.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.853" level="INFO">VALUE: [5.820000000000131e-06, 5.806000000000561e-06, 5.83400000000317e-06, 5.806000000000561e-06, 5.8339999999997005e-06, 5.860999999999367e-06, 5.806000000000561e-06, 5.791999999997521e-06, 5.860999999999367e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.806000000000561e-06, 5.805000000001087e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.7779999999979514e-06, 5.805999999997091e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.806000000000561e-06, 5.804999999997618e-06, 5.819000000000657e-06, 5.846999999999797e-06, 5.820000000000131e-06, 5.806000000000561e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.791999999997521e-06, 5.792000000000991e-06, 5.805999999997091e-06, 5.833000000000227e-06, 5.778000000001421e-06, 5.8329999999967574e-06, 5.820000000000131e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.874999999998937e-06, 5.792000000000991e-06, 5.846999999999797e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.804999999997618e-06, 5.8479999999992704e-06, 5.806000000000561e-06, 5.805999999997091e-06, 5.820000000000131e-06]</msg>
<status status="PASS" starttime="20201115 22:00:24.851" endtime="20201115 22:00:24.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.846" endtime="20201115 22:00:24.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.856" endtime="20201115 22:00:24.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.859" endtime="20201115 22:00:24.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.857" endtime="20201115 22:00:24.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.854" endtime="20201115 22:00:24.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.482" endtime="20201115 22:00:24.880"></status>
</kw>
<msg timestamp="20201115 22:00:24.880" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.889" endtime="20201115 22:00:24.909"></status>
</kw>
<msg timestamp="20201115 22:00:24.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.887" endtime="20201115 22:00:24.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.912" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.910" endtime="20201115 22:00:24.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.913" endtime="20201115 22:00:24.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.885" endtime="20201115 22:00:24.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.882" endtime="20201115 22:00:24.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.922" endtime="20201115 22:00:25.208"></status>
</kw>
<msg timestamp="20201115 22:00:25.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:24.920" endtime="20201115 22:00:25.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:25.212" endtime="20201115 22:00:25.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.220" endtime="20201115 22:00:25.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.917" endtime="20201115 22:00:25.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.916" endtime="20201115 22:00:25.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.227" level="INFO">${RESULT} = [{'time': 0.020412833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.020603069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.223" endtime="20201115 22:00:25.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.240" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:25.227" endtime="20201115 22:00:25.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.244" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:25.243" endtime="20201115 22:00:25.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.247" level="INFO">VALUE: [5.8329999999967574e-06, 5.750000000002281e-06, 5.806000000000561e-06, 5.750000000002281e-06, 5.819000000000657e-06, 5.874999999998937e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.791000000001517e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.791000000001517e-06, 5.820000000000131e-06, 5.83400000000317e-06, 5.819000000000657e-06, 5.721999999999672e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.778000000001421e-06, 5.736000000002711e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.8339999999997005e-06, 5.847000000003266e-06, 5.749999999998812e-06, 5.806000000000561e-06, 5.791000000001517e-06, 5.804999999997618e-06, 5.8339999999997005e-06, 5.860999999999367e-06, 5.820000000000131e-06, 5.790999999998048e-06, 5.806000000000561e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.846999999999797e-06, 5.820000000000131e-06, 5.777000000001947e-06, 5.806000000000561e-06, 5.805999999997091e-06, 5.805999999997091e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.806000000000561e-06, 5.778000000001421e-06, 5.749999999998812e-06, 5.8479999999992704e-06]</msg>
<status status="PASS" starttime="20201115 22:00:25.245" endtime="20201115 22:00:25.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.241" endtime="20201115 22:00:25.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.250" endtime="20201115 22:00:25.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.253" endtime="20201115 22:00:25.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.252" endtime="20201115 22:00:25.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.248" endtime="20201115 22:00:25.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.880" endtime="20201115 22:00:25.274"></status>
</kw>
<msg timestamp="20201115 22:00:25.274" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.283" endtime="20201115 22:00:25.303"></status>
</kw>
<msg timestamp="20201115 22:00:25.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.282" endtime="20201115 22:00:25.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.306" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.304" endtime="20201115 22:00:25.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.307" endtime="20201115 22:00:25.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.279" endtime="20201115 22:00:25.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.277" endtime="20201115 22:00:25.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.316" endtime="20201115 22:00:25.601"></status>
</kw>
<msg timestamp="20201115 22:00:25.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020252569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.314" endtime="20201115 22:00:25.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020252569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.606" endtime="20201115 22:00:25.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.614" endtime="20201115 22:00:25.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.312" endtime="20201115 22:00:25.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.310" endtime="20201115 22:00:25.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.620" level="INFO">${RESULT} = [{'time': 0.020258361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.020450056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:25.617" endtime="20201115 22:00:25.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.633" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:25.621" endtime="20201115 22:00:25.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.638" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:25.637" endtime="20201115 22:00:25.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.640" level="INFO">VALUE: [5.791999999997521e-06, 5.806000000000561e-06, 5.805000000001087e-06, 5.8339999999997005e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.790999999998048e-06, 5.805000000001087e-06, 5.847000000003266e-06, 5.833000000000227e-06, 5.8889999999985065e-06, 5.791000000001517e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.8339999999997005e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.805999999997091e-06, 5.8189999999971875e-06, 5.8339999999997005e-06, 5.7779999999979514e-06, 5.8889999999985065e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.791999999997521e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.8339999999997005e-06, 5.778000000001421e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.791000000001517e-06, 5.819000000000657e-06, 5.846999999999797e-06, 5.820000000000131e-06, 5.805999999997091e-06, 5.820000000000131e-06, 5.791999999997521e-06, 5.721999999999672e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.806000000000561e-06]</msg>
<status status="PASS" starttime="20201115 22:00:25.639" endtime="20201115 22:00:25.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.634" endtime="20201115 22:00:25.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.644" endtime="20201115 22:00:25.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.647" endtime="20201115 22:00:25.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.646" endtime="20201115 22:00:25.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.642" endtime="20201115 22:00:25.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.275" endtime="20201115 22:00:25.668"></status>
</kw>
<msg timestamp="20201115 22:00:25.668" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.677" endtime="20201115 22:00:25.697"></status>
</kw>
<msg timestamp="20201115 22:00:25.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.676" endtime="20201115 22:00:25.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.700" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.698" endtime="20201115 22:00:25.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.701" endtime="20201115 22:00:25.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.673" endtime="20201115 22:00:25.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.671" endtime="20201115 22:00:25.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.710" endtime="20201115 22:00:25.997"></status>
</kw>
<msg timestamp="20201115 22:00:26.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019986542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019992306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.708" endtime="20201115 22:00:26.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019986542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019992306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.002" endtime="20201115 22:00:26.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.010" endtime="20201115 22:00:26.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.706" endtime="20201115 22:00:26.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.704" endtime="20201115 22:00:26.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.016" level="INFO">${RESULT} = [{'time': 0.019992306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.020183819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:26.013" endtime="20201115 22:00:26.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.029" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:26.017" endtime="20201115 22:00:26.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.034" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:26.033" endtime="20201115 22:00:26.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.036" level="INFO">VALUE: [5.764000000001851e-06, 5.8189999999971875e-06, 5.7779999999979514e-06, 5.846999999999797e-06, 5.805000000001087e-06, 5.820000000000131e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.791000000001517e-06, 5.806000000000561e-06, 5.874999999998937e-06, 5.806000000000561e-06, 5.749999999998812e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.763000000002377e-06, 5.806000000000561e-06, 5.861000000002836e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.806000000000561e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.7779999999979514e-06, 5.846999999999797e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.846999999999797e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.8189999999971875e-06, 5.778000000001421e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.846999999999797e-06, 5.819000000000657e-06, 5.804999999997618e-06, 5.820000000000131e-06, 5.820000000000131e-06]</msg>
<status status="PASS" starttime="20201115 22:00:26.035" endtime="20201115 22:00:26.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.030" endtime="20201115 22:00:26.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.040" endtime="20201115 22:00:26.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.043" endtime="20201115 22:00:26.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.042" endtime="20201115 22:00:26.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.038" endtime="20201115 22:00:26.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.669" endtime="20201115 22:00:26.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.086" endtime="20201115 22:00:26.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.085" endtime="20201115 22:00:26.064"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.066" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.075" endtime="20201115 22:00:26.096"></status>
</kw>
<msg timestamp="20201115 22:00:26.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.074" endtime="20201115 22:00:26.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.099" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.097" endtime="20201115 22:00:26.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.100" endtime="20201115 22:00:26.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.071" endtime="20201115 22:00:26.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.069" endtime="20201115 22:00:26.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.109" endtime="20201115 22:00:26.394"></status>
</kw>
<msg timestamp="20201115 22:00:26.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.107" endtime="20201115 22:00:26.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.398" endtime="20201115 22:00:26.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.407" endtime="20201115 22:00:26.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.105" endtime="20201115 22:00:26.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.103" endtime="20201115 22:00:26.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.413" level="INFO">${RESULT} = [{'time': 0.022391556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.022593556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:26.410" endtime="20201115 22:00:26.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.426" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:26.414" endtime="20201115 22:00:26.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.431" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:26.430" endtime="20201115 22:00:26.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.434" level="INFO">VALUE: [6.042000000001241e-06, 6.028000000001671e-06, 6.0979999999995205e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 5.9589999999998255e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 5.958000000000352e-06, 6.041000000001767e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.026999999998728e-06, 5.999999999999062e-06, 6.055999999997341e-06, 6.014000000002101e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.041000000001767e-06, 5.999999999999062e-06, 6.111000000003086e-06, 6.056000000000811e-06, 6.041000000001767e-06, 5.9589999999998255e-06, 6.056000000000811e-06, 6.0139999999986316e-06, 6.083000000000477e-06, 6.014000000002101e-06, 6.041999999997771e-06, 6.000000000002531e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.027000000002197e-06, 6.0139999999986316e-06, 6.026999999998728e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.026999999998728e-06, 6.02800000000514e-06, 6.04200000000471e-06, 6.0279999999982015e-06, 5.999999999999062e-06]</msg>
<status status="PASS" starttime="20201115 22:00:26.432" endtime="20201115 22:00:26.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.427" endtime="20201115 22:00:26.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.437" endtime="20201115 22:00:26.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.440" endtime="20201115 22:00:26.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.439" endtime="20201115 22:00:26.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.435" endtime="20201115 22:00:26.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.067" endtime="20201115 22:00:26.461"></status>
</kw>
<msg timestamp="20201115 22:00:26.461" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.470" endtime="20201115 22:00:26.490"></status>
</kw>
<msg timestamp="20201115 22:00:26.490" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.468" endtime="20201115 22:00:26.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.493" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.491" endtime="20201115 22:00:26.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.494" endtime="20201115 22:00:26.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.466" endtime="20201115 22:00:26.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.464" endtime="20201115 22:00:26.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.503" endtime="20201115 22:00:26.789"></status>
</kw>
<msg timestamp="20201115 22:00:26.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.501" endtime="20201115 22:00:26.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.793" endtime="20201115 22:00:26.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.801" endtime="20201115 22:00:26.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.499" endtime="20201115 22:00:26.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.497" endtime="20201115 22:00:26.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.808" level="INFO">${RESULT} = [{'time': 0.019877722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.020078222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:26.805" endtime="20201115 22:00:26.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.821" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:26.809" endtime="20201115 22:00:26.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.826" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:26.825" endtime="20201115 22:00:26.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.829" level="INFO">VALUE: [6.014000000002101e-06, 6.0279999999982015e-06, 6.0139999999986316e-06, 6.041999999997771e-06, 5.985999999999492e-06, 6.027000000002197e-06, 6.027000000002197e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.0279999999982015e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.026999999998728e-06, 6.0979999999995205e-06, 6.040999999998298e-06, 6.026999999998728e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.014000000002101e-06, 6.0139999999986316e-06, 6.040999999998298e-06, 5.9439999999973125e-06, 6.028000000001671e-06, 6.042000000001241e-06, 5.971999999999922e-06, 5.999999999999062e-06, 6.111000000003086e-06, 6.054999999997868e-06, 6.000000000002531e-06, 6.0279999999982015e-06, 6.110999999999617e-06, 6.055999999997341e-06, 6.09800000000299e-06, 6.027000000002197e-06, 6.027000000002197e-06, 5.973000000002865e-06, 6.055000000001337e-06, 6.055999999997341e-06, 5.999999999999062e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.026999999998728e-06]</msg>
<status status="PASS" starttime="20201115 22:00:26.827" endtime="20201115 22:00:26.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.823" endtime="20201115 22:00:26.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.832" endtime="20201115 22:00:26.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.835" endtime="20201115 22:00:26.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.834" endtime="20201115 22:00:26.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.830" endtime="20201115 22:00:26.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.462" endtime="20201115 22:00:26.856"></status>
</kw>
<msg timestamp="20201115 22:00:26.856" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.865" endtime="20201115 22:00:26.885"></status>
</kw>
<msg timestamp="20201115 22:00:26.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.863" endtime="20201115 22:00:26.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.888" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.887" endtime="20201115 22:00:26.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.889" endtime="20201115 22:00:26.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.861" endtime="20201115 22:00:26.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.858" endtime="20201115 22:00:26.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.898" endtime="20201115 22:00:27.184"></status>
</kw>
<msg timestamp="20201115 22:00:27.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:26.897" endtime="20201115 22:00:27.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:27.188" endtime="20201115 22:00:27.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.196" endtime="20201115 22:00:27.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.894" endtime="20201115 22:00:27.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.892" endtime="20201115 22:00:27.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.203" level="INFO">${RESULT} = [{'time': 0.019877014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.020076958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:27.200" endtime="20201115 22:00:27.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.217" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:27.204" endtime="20201115 22:00:27.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.221" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:27.220" endtime="20201115 22:00:27.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.224" level="INFO">VALUE: [6.0139999999986316e-06, 6.026999999998728e-06, 5.971999999999922e-06, 5.986000000002961e-06, 6.042000000001241e-06, 6.041000000001767e-06, 5.958000000000352e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.0139999999986316e-06, 6.026999999998728e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.0139999999986316e-06, 6.0279999999982015e-06, 6.055999999997341e-06, 6.027000000002197e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.042000000001241e-06, 5.999999999999062e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.0139999999986316e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 6.028000000001671e-06, 6.028000000001671e-06, 5.985999999999492e-06, 6.000000000002531e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.026999999998728e-06, 6.0279999999982015e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.013000000002627e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.028000000001671e-06, 6.042000000001241e-06]</msg>
<status status="PASS" starttime="20201115 22:00:27.222" endtime="20201115 22:00:27.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.218" endtime="20201115 22:00:27.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.227" endtime="20201115 22:00:27.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.230" endtime="20201115 22:00:27.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.229" endtime="20201115 22:00:27.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.225" endtime="20201115 22:00:27.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.856" endtime="20201115 22:00:27.251"></status>
</kw>
<msg timestamp="20201115 22:00:27.251" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.260" endtime="20201115 22:00:27.280"></status>
</kw>
<msg timestamp="20201115 22:00:27.281" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.258" endtime="20201115 22:00:27.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.283" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.282" endtime="20201115 22:00:27.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.284" endtime="20201115 22:00:27.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.256" endtime="20201115 22:00:27.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.254" endtime="20201115 22:00:27.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.293" endtime="20201115 22:00:27.580"></status>
</kw>
<msg timestamp="20201115 22:00:27.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.292" endtime="20201115 22:00:27.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.585" endtime="20201115 22:00:27.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.593" endtime="20201115 22:00:27.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.289" endtime="20201115 22:00:27.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.287" endtime="20201115 22:00:27.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.600" level="INFO">${RESULT} = [{'time': 0.019847694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.020048764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:27.596" endtime="20201115 22:00:27.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.613" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:27.601" endtime="20201115 22:00:27.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.617" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:27.616" endtime="20201115 22:00:27.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.620" level="INFO">VALUE: [5.958000000000352e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.041000000001767e-06, 6.026999999998728e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.026999999998728e-06, 5.985999999999492e-06, 6.041999999997771e-06, 6.027000000002197e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.0139999999986316e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.026999999998728e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.000000000002531e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.042000000001241e-06, 5.985999999999492e-06, 6.0139999999986316e-06, 6.042000000001241e-06]</msg>
<status status="PASS" starttime="20201115 22:00:27.618" endtime="20201115 22:00:27.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.614" endtime="20201115 22:00:27.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.623" endtime="20201115 22:00:27.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.626" endtime="20201115 22:00:27.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.625" endtime="20201115 22:00:27.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.621" endtime="20201115 22:00:27.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.252" endtime="20201115 22:00:27.647"></status>
</kw>
<msg timestamp="20201115 22:00:27.647" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.656" endtime="20201115 22:00:27.676"></status>
</kw>
<msg timestamp="20201115 22:00:27.676" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.654" endtime="20201115 22:00:27.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.679" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.677" endtime="20201115 22:00:27.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.680" endtime="20201115 22:00:27.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.652" endtime="20201115 22:00:27.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.650" endtime="20201115 22:00:27.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.689" endtime="20201115 22:00:27.975"></status>
</kw>
<msg timestamp="20201115 22:00:27.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.687" endtime="20201115 22:00:27.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.979" endtime="20201115 22:00:27.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.987" endtime="20201115 22:00:27.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.685" endtime="20201115 22:00:27.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.683" endtime="20201115 22:00:27.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.994" level="INFO">${RESULT} = [{'time': 0.019852944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.020054444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:27.991" endtime="20201115 22:00:27.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.007" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:27.995" endtime="20201115 22:00:28.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.012" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:28.011" endtime="20201115 22:00:28.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.014" level="INFO">VALUE: [6.041000000001767e-06, 6.027000000002197e-06, 6.042000000001241e-06, 6.055000000001337e-06, 5.971999999999922e-06, 6.0279999999982015e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.0139999999986316e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 5.971999999999922e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.042000000001241e-06, 5.9729999999993955e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.028000000001671e-06, 6.055000000001337e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.0139999999986316e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.026999999998728e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.027000000002197e-06, 6.0279999999982015e-06, 6.042000000001241e-06]</msg>
<status status="PASS" starttime="20201115 22:00:28.013" endtime="20201115 22:00:28.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.008" endtime="20201115 22:00:28.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.017" endtime="20201115 22:00:28.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.021" endtime="20201115 22:00:28.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.019" endtime="20201115 22:00:28.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.016" endtime="20201115 22:00:28.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.648" endtime="20201115 22:00:28.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.065" endtime="20201115 22:00:28.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.065" endtime="20201115 22:00:28.042"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.044" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.053" endtime="20201115 22:00:28.073"></status>
</kw>
<msg timestamp="20201115 22:00:28.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.051" endtime="20201115 22:00:28.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.076" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.075" endtime="20201115 22:00:28.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.077" endtime="20201115 22:00:28.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.048" endtime="20201115 22:00:28.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.046" endtime="20201115 22:00:28.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.087" endtime="20201115 22:00:28.373"></status>
</kw>
<msg timestamp="20201115 22:00:28.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.085" endtime="20201115 22:00:28.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.377" endtime="20201115 22:00:28.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.386" endtime="20201115 22:00:28.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.083" endtime="20201115 22:00:28.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.081" endtime="20201115 22:00:28.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.392" level="INFO">${RESULT} = [{'time': 0.022117292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.02233025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:28.389" endtime="20201115 22:00:28.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.406" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:28.393" endtime="20201115 22:00:28.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.410" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:28.409" endtime="20201115 22:00:28.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.413" level="INFO">VALUE: [6.249999999999312e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.262999999999408e-06, 6.2779999999984515e-06, 6.2779999999984515e-06, 6.2779999999984515e-06, 6.278000000001921e-06, 6.278000000001921e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.2639999999988816e-06, 6.250000000002781e-06, 6.249999999999312e-06, 6.2779999999984515e-06, 6.278000000001921e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.306000000001061e-06, 6.278000000001921e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.305000000001587e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.291999999998021e-06, 6.278000000001921e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.306000000001061e-06, 6.264000000002351e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.236000000006681e-06, 6.249999999999312e-06, 6.333000000004196e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2779999999984515e-06, 6.2779999999984515e-06]</msg>
<status status="PASS" starttime="20201115 22:00:28.411" endtime="20201115 22:00:28.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.407" endtime="20201115 22:00:28.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.416" endtime="20201115 22:00:28.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.419" endtime="20201115 22:00:28.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.418" endtime="20201115 22:00:28.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.414" endtime="20201115 22:00:28.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.044" endtime="20201115 22:00:28.440"></status>
</kw>
<msg timestamp="20201115 22:00:28.440" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.449" endtime="20201115 22:00:28.470"></status>
</kw>
<msg timestamp="20201115 22:00:28.470" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.447" endtime="20201115 22:00:28.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.473" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.471" endtime="20201115 22:00:28.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.474" endtime="20201115 22:00:28.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.445" endtime="20201115 22:00:28.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.443" endtime="20201115 22:00:28.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.483" endtime="20201115 22:00:28.771"></status>
</kw>
<msg timestamp="20201115 22:00:28.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019952528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.482" endtime="20201115 22:00:28.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019952528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.775" endtime="20201115 22:00:28.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.783" endtime="20201115 22:00:28.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.479" endtime="20201115 22:00:28.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.478" endtime="20201115 22:00:28.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.790" level="INFO">${RESULT} = [{'time': 0.019958792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.020172431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.786" endtime="20201115 22:00:28.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.803" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:28.791" endtime="20201115 22:00:28.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.808" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:28.807" endtime="20201115 22:00:28.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.810" level="INFO">VALUE: [6.2639999999988816e-06, 6.250000000002781e-06, 6.262999999999408e-06, 6.264000000002351e-06, 6.278000000001921e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.249999999999312e-06, 6.276999999998978e-06, 6.318999999997688e-06, 6.276999999998978e-06, 6.262999999999408e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.264000000002351e-06, 6.264000000002351e-06, 6.264000000002351e-06, 6.2639999999988816e-06, 6.278000000001921e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.278000000001921e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.250000000002781e-06, 6.222000000000172e-06, 6.305999999997591e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.306000000001061e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.304999999998118e-06, 6.250000000002781e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.222000000000172e-06, 6.264000000002351e-06, 6.2779999999984515e-06, 6.319000000001157e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.290999999998548e-06, 6.262999999999408e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.250000000002781e-06]</msg>
<status status="PASS" starttime="20201115 22:00:28.809" endtime="20201115 22:00:28.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.804" endtime="20201115 22:00:28.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.813" endtime="20201115 22:00:28.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.817" endtime="20201115 22:00:28.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.815" endtime="20201115 22:00:28.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.812" endtime="20201115 22:00:28.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.441" endtime="20201115 22:00:28.837"></status>
</kw>
<msg timestamp="20201115 22:00:28.837" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.847" endtime="20201115 22:00:28.868"></status>
</kw>
<msg timestamp="20201115 22:00:28.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.845" endtime="20201115 22:00:28.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.871" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.869" endtime="20201115 22:00:28.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.872" endtime="20201115 22:00:28.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.842" endtime="20201115 22:00:28.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.840" endtime="20201115 22:00:28.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.881" endtime="20201115 22:00:29.168"></status>
</kw>
<msg timestamp="20201115 22:00:29.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020419722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.879" endtime="20201115 22:00:29.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020419722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.172" endtime="20201115 22:00:29.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.180" endtime="20201115 22:00:29.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.877" endtime="20201115 22:00:29.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.875" endtime="20201115 22:00:29.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.187" level="INFO">${RESULT} = [{'time': 0.020425972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.020640694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:29.184" endtime="20201115 22:00:29.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.200" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:29.188" endtime="20201115 22:00:29.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.205" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:29.204" endtime="20201115 22:00:29.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.207" level="INFO">VALUE: [6.249999999999312e-06, 6.208000000000602e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.292000000001491e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.305000000001587e-06, 6.194000000001032e-06, 6.2639999999988816e-06, 6.195000000000506e-06, 6.291999999998021e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.278000000001921e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.235999999999742e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.276999999998978e-06, 6.264000000002351e-06, 6.304999999998118e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.250000000002781e-06, 6.292000000001491e-06, 6.2639999999988816e-06, 6.262999999999408e-06, 6.291999999998021e-06, 6.250000000002781e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.250000000002781e-06, 6.277000000002447e-06, 6.264000000002351e-06, 6.276999999998978e-06, 6.276999999998978e-06, 6.2779999999984515e-06, 6.305000000001587e-06]</msg>
<status status="PASS" starttime="20201115 22:00:29.206" endtime="20201115 22:00:29.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.201" endtime="20201115 22:00:29.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.210" endtime="20201115 22:00:29.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.214" endtime="20201115 22:00:29.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.212" endtime="20201115 22:00:29.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.209" endtime="20201115 22:00:29.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.838" endtime="20201115 22:00:29.234"></status>
</kw>
<msg timestamp="20201115 22:00:29.235" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.244" endtime="20201115 22:00:29.264"></status>
</kw>
<msg timestamp="20201115 22:00:29.265" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.242" endtime="20201115 22:00:29.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.267" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.266" endtime="20201115 22:00:29.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.268" endtime="20201115 22:00:29.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.239" endtime="20201115 22:00:29.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.237" endtime="20201115 22:00:29.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.277" endtime="20201115 22:00:29.564"></status>
</kw>
<msg timestamp="20201115 22:00:29.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020320014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.276" endtime="20201115 22:00:29.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020320014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.568" endtime="20201115 22:00:29.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.576" endtime="20201115 22:00:29.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.273" endtime="20201115 22:00:29.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.271" endtime="20201115 22:00:29.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.583" level="INFO">${RESULT} = [{'time': 0.020326292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.020539208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:29.579" endtime="20201115 22:00:29.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.596" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:29.584" endtime="20201115 22:00:29.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.601" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:29.600" endtime="20201115 22:00:29.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.603" level="INFO">VALUE: [6.2779999999984515e-06, 6.290999999998548e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.276999999998978e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.333000000000727e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.276999999998978e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.276999999998978e-06, 6.291000000002017e-06, 6.262999999999408e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.2639999999988816e-06, 6.262999999999408e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.250000000002781e-06, 6.291999999998021e-06, 6.250000000002781e-06, 6.264000000002351e-06, 6.306000000001061e-06, 6.278000000001921e-06, 6.2639999999988816e-06, 6.276999999998978e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.250000000002781e-06, 6.222000000000172e-06, 6.264000000002351e-06, 6.249999999999312e-06, 6.2229999999996455e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201115 22:00:29.602" endtime="20201115 22:00:29.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.597" endtime="20201115 22:00:29.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.606" endtime="20201115 22:00:29.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.779" endtime="20201115 22:00:29.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.777" endtime="20201115 22:00:29.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.604" endtime="20201115 22:00:29.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.235" endtime="20201115 22:00:29.800"></status>
</kw>
<msg timestamp="20201115 22:00:29.800" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.809" endtime="20201115 22:00:29.830"></status>
</kw>
<msg timestamp="20201115 22:00:29.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.807" endtime="20201115 22:00:29.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.831" endtime="20201115 22:00:29.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.834" endtime="20201115 22:00:29.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.805" endtime="20201115 22:00:29.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.803" endtime="20201115 22:00:29.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.843" endtime="20201115 22:00:30.145"></status>
</kw>
<msg timestamp="20201115 22:00:30.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.841" endtime="20201115 22:00:30.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.149" endtime="20201115 22:00:30.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.157" endtime="20201115 22:00:30.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.838" endtime="20201115 22:00:30.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.837" endtime="20201115 22:00:30.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.164" level="INFO">${RESULT} = [{'time': 0.020185611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.020399736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:30.161" endtime="20201115 22:00:30.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.178" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:30.165" endtime="20201115 22:00:30.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.182" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:30.181" endtime="20201115 22:00:30.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.185" level="INFO">VALUE: [6.2779999999984515e-06, 6.250000000002781e-06, 6.291999999998021e-06, 6.262999999999408e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.264000000002351e-06, 6.304999999998118e-06, 6.250000000002781e-06, 6.319000000001157e-06, 6.306000000001061e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2229999999996455e-06, 6.264000000002351e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.264000000002351e-06, 6.278000000001921e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.276999999998978e-06, 6.2639999999988816e-06, 6.262999999999408e-06, 6.2079999999971325e-06, 6.2639999999988816e-06, 6.305000000001587e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.306000000001061e-06, 6.292000000001491e-06, 6.2639999999988816e-06, 6.250000000002781e-06, 6.278000000001921e-06, 6.264000000002351e-06, 6.304999999998118e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.291999999998021e-06, 6.2639999999988816e-06, 6.2079999999971325e-06, 6.222000000000172e-06, 6.264000000002351e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201115 22:00:30.183" endtime="20201115 22:00:30.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.179" endtime="20201115 22:00:30.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.188" endtime="20201115 22:00:30.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.192" endtime="20201115 22:00:30.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.190" endtime="20201115 22:00:30.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.187" endtime="20201115 22:00:30.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.801" endtime="20201115 22:00:30.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.043" endtime="20201115 22:00:30.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.042" endtime="20201115 22:00:30.213"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.215" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.224" endtime="20201115 22:00:30.245"></status>
</kw>
<msg timestamp="20201115 22:00:30.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.222" endtime="20201115 22:00:30.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.246" endtime="20201115 22:00:30.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.249" endtime="20201115 22:00:30.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.219" endtime="20201115 22:00:30.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.217" endtime="20201115 22:00:30.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.258" endtime="20201115 22:00:30.544"></status>
</kw>
<msg timestamp="20201115 22:00:30.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.256" endtime="20201115 22:00:30.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.548" endtime="20201115 22:00:30.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.556" endtime="20201115 22:00:30.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.254" endtime="20201115 22:00:30.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.252" endtime="20201115 22:00:30.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.563" level="INFO">${RESULT} = [{'time': 0.022207694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.022430944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:30.559" endtime="20201115 22:00:30.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.576" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:30.564" endtime="20201115 22:00:30.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.581" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:30.580" endtime="20201115 22:00:30.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.584" level="INFO">VALUE: [6.485999999999992e-06, 6.430000000001712e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.542000000001741e-06, 6.485999999999992e-06, 6.486999999999465e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.4029999999985765e-06, 6.444000000001282e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.4729999999998955e-06, 6.472000000000422e-06, 6.486999999999465e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.500000000003031e-06, 6.500000000003031e-06, 6.486999999999465e-06, 6.514000000002601e-06, 6.540999999998798e-06, 6.540999999998798e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.417000000001616e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.4729999999998955e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.472000000000422e-06]</msg>
<status status="PASS" starttime="20201115 22:00:30.582" endtime="20201115 22:00:30.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.577" endtime="20201115 22:00:30.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.587" endtime="20201115 22:00:30.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.590" endtime="20201115 22:00:30.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.588" endtime="20201115 22:00:30.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.585" endtime="20201115 22:00:30.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.215" endtime="20201115 22:00:30.611"></status>
</kw>
<msg timestamp="20201115 22:00:30.611" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.620" endtime="20201115 22:00:30.641"></status>
</kw>
<msg timestamp="20201115 22:00:30.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.618" endtime="20201115 22:00:30.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.643" endtime="20201115 22:00:30.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.645" endtime="20201115 22:00:30.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.616" endtime="20201115 22:00:30.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.614" endtime="20201115 22:00:30.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.654" endtime="20201115 22:00:30.942"></status>
</kw>
<msg timestamp="20201115 22:00:30.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.653" endtime="20201115 22:00:30.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.946" endtime="20201115 22:00:30.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.955" endtime="20201115 22:00:30.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.650" endtime="20201115 22:00:30.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.648" endtime="20201115 22:00:30.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.961" level="INFO">${RESULT} = [{'time': 0.020005306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.020231597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:30.958" endtime="20201115 22:00:30.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.018" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:30.962" endtime="20201115 22:00:31.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.023" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:31.022" endtime="20201115 22:00:31.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.025" level="INFO">VALUE: [6.486999999999465e-06, 6.444000000001282e-06, 6.485999999999992e-06, 6.540999999998798e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.458000000000852e-06, 6.514000000002601e-06, 6.540999999998798e-06, 6.444000000001282e-06, 6.444000000001282e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.542000000001741e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.526999999999228e-06, 6.485999999999992e-06, 6.4729999999998955e-06, 6.472000000000422e-06, 6.472000000000422e-06, 6.5279999999987015e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.500000000003031e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.4729999999998955e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.513999999999132e-06]</msg>
<status status="PASS" starttime="20201115 22:00:31.024" endtime="20201115 22:00:31.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.019" endtime="20201115 22:00:31.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.028" endtime="20201115 22:00:31.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.032" endtime="20201115 22:00:31.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.030" endtime="20201115 22:00:31.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.027" endtime="20201115 22:00:31.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.611" endtime="20201115 22:00:31.052"></status>
</kw>
<msg timestamp="20201115 22:00:31.052" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.062" endtime="20201115 22:00:31.083"></status>
</kw>
<msg timestamp="20201115 22:00:31.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.060" endtime="20201115 22:00:31.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.086" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.084" endtime="20201115 22:00:31.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.087" endtime="20201115 22:00:31.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.057" endtime="20201115 22:00:31.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.055" endtime="20201115 22:00:31.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.096" endtime="20201115 22:00:31.380"></status>
</kw>
<msg timestamp="20201115 22:00:31.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020518583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020525069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.094" endtime="20201115 22:00:31.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020518583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020525069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.384" endtime="20201115 22:00:31.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.393" endtime="20201115 22:00:31.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.092" endtime="20201115 22:00:31.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.090" endtime="20201115 22:00:31.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.399" level="INFO">${RESULT} = [{'time': 0.020525069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.020751778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:31.396" endtime="20201115 22:00:31.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.413" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:31.401" endtime="20201115 22:00:31.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.417" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:31.416" endtime="20201115 22:00:31.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.420" level="INFO">VALUE: [6.485999999999992e-06, 6.471999999996952e-06, 6.500000000003031e-06, 6.485999999999992e-06, 6.4729999999998955e-06, 6.486999999999465e-06, 6.485999999999992e-06, 6.471999999996952e-06, 6.472000000000422e-06, 6.471999999996952e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.486999999999465e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.458000000000852e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.471999999996952e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.556000000001311e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.486999999999465e-06, 6.472000000000422e-06, 6.4579999999973825e-06, 6.500000000003031e-06, 6.499999999999562e-06, 6.526999999999228e-06, 6.472000000000422e-06, 6.486999999999465e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.4729999999998955e-06, 6.485999999999992e-06, 6.415999999998673e-06, 6.416000000002142e-06, 6.485999999999992e-06, 6.403000000002046e-06, 6.485999999999992e-06]</msg>
<status status="PASS" starttime="20201115 22:00:31.418" endtime="20201115 22:00:31.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.414" endtime="20201115 22:00:31.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.423" endtime="20201115 22:00:31.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.426" endtime="20201115 22:00:31.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.425" endtime="20201115 22:00:31.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.421" endtime="20201115 22:00:31.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.053" endtime="20201115 22:00:31.447"></status>
</kw>
<msg timestamp="20201115 22:00:31.447" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.457" endtime="20201115 22:00:31.478"></status>
</kw>
<msg timestamp="20201115 22:00:31.479" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.455" endtime="20201115 22:00:31.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.481" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.480" endtime="20201115 22:00:31.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.482" endtime="20201115 22:00:31.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.452" endtime="20201115 22:00:31.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.450" endtime="20201115 22:00:31.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.491" endtime="20201115 22:00:31.777"></status>
</kw>
<msg timestamp="20201115 22:00:31.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020670639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020677139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.490" endtime="20201115 22:00:31.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020670639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020677139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.781" endtime="20201115 22:00:31.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.790" endtime="20201115 22:00:31.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.487" endtime="20201115 22:00:31.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.485" endtime="20201115 22:00:31.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.797" level="INFO">${RESULT} = [{'time': 0.020677139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.020903458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:31.793" endtime="20201115 22:00:31.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.810" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:31.797" endtime="20201115 22:00:31.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.815" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:31.814" endtime="20201115 22:00:31.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.818" level="INFO">VALUE: [6.499999999999562e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.556000000001311e-06, 6.5279999999987015e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.458000000000852e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.415999999998673e-06, 6.4729999999998955e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.514000000002601e-06, 6.485999999999992e-06, 6.471999999996952e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.430999999997716e-06, 6.458000000000852e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.443999999997813e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.445000000000756e-06, 6.4729999999998955e-06, 6.472000000000422e-06, 6.4729999999998955e-06, 6.485999999999992e-06, 6.500000000003031e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.485999999999992e-06]</msg>
<status status="PASS" starttime="20201115 22:00:31.816" endtime="20201115 22:00:31.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.811" endtime="20201115 22:00:31.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.821" endtime="20201115 22:00:31.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.825" endtime="20201115 22:00:31.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.823" endtime="20201115 22:00:31.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.819" endtime="20201115 22:00:31.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.448" endtime="20201115 22:00:31.845"></status>
</kw>
<msg timestamp="20201115 22:00:31.846" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.854" endtime="20201115 22:00:31.876"></status>
</kw>
<msg timestamp="20201115 22:00:31.876" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.853" endtime="20201115 22:00:31.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.877" endtime="20201115 22:00:31.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.880" endtime="20201115 22:00:31.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.850" endtime="20201115 22:00:31.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.848" endtime="20201115 22:00:31.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.889" endtime="20201115 22:00:32.176"></status>
</kw>
<msg timestamp="20201115 22:00:32.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020738472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020744986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.887" endtime="20201115 22:00:32.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020738472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020744986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.180" endtime="20201115 22:00:32.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.189" endtime="20201115 22:00:32.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.885" endtime="20201115 22:00:32.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.883" endtime="20201115 22:00:32.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.195" level="INFO">${RESULT} = [{'time': 0.020744986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.020972097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:32.192" endtime="20201115 22:00:32.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.209" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:32.196" endtime="20201115 22:00:32.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.213" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:32.212" endtime="20201115 22:00:32.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.216" level="INFO">VALUE: [6.513999999999132e-06, 6.485999999999992e-06, 6.486999999999465e-06, 6.485999999999992e-06, 6.486999999999465e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.4579999999973825e-06, 6.472000000000422e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.500000000003031e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.512999999999658e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.431000000001186e-06, 6.416999999998146e-06, 6.541999999998271e-06, 6.499999999999562e-06, 6.471999999996952e-06, 6.472000000000422e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.4579999999973825e-06, 6.443999999997813e-06, 6.486999999999465e-06, 6.485999999999992e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.445000000000756e-06]</msg>
<status status="PASS" starttime="20201115 22:00:32.214" endtime="20201115 22:00:32.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.210" endtime="20201115 22:00:32.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.219" endtime="20201115 22:00:32.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.222" endtime="20201115 22:00:32.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.221" endtime="20201115 22:00:32.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.217" endtime="20201115 22:00:32.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.846" endtime="20201115 22:00:32.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.214" endtime="20201115 22:00:32.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.213" endtime="20201115 22:00:32.243"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.245" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.254" endtime="20201115 22:00:32.276"></status>
</kw>
<msg timestamp="20201115 22:00:32.277" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.253" endtime="20201115 22:00:32.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.278" endtime="20201115 22:00:32.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.280" endtime="20201115 22:00:32.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.250" endtime="20201115 22:00:32.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.248" endtime="20201115 22:00:32.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.290" endtime="20201115 22:00:32.576"></status>
</kw>
<msg timestamp="20201115 22:00:32.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022993042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02299975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:32.288" endtime="20201115 22:00:32.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022993042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02299975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:32.580" endtime="20201115 22:00:32.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.588" endtime="20201115 22:00:32.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.286" endtime="20201115 22:00:32.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.284" endtime="20201115 22:00:32.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.595" level="INFO">${RESULT} = [{'time': 0.02299975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.023237569, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:32.592" endtime="20201115 22:00:32.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.609" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:32.596" endtime="20201115 22:00:32.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.614" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:32.613" endtime="20201115 22:00:32.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.616" level="INFO">VALUE: [6.7079999999976325e-06, 6.722000000000672e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.693999999998063e-06, 6.653000000002296e-06, 6.790999999999048e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.7230000000001455e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.7369999999997154e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 6.639000000002726e-06, 6.709000000000576e-06, 6.763999999999382e-06, 6.708000000001102e-06, 6.7219999999972024e-06, 6.693999999998063e-06, 6.7219999999972024e-06, 6.7079999999976325e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.680999999997966e-06, 6.709000000000576e-06, 6.749999999999812e-06, 6.666000000002392e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.638999999995787e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.638999999995787e-06, 6.708000000001102e-06, 6.694999999994067e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.722000000000672e-06]</msg>
<status status="PASS" starttime="20201115 22:00:32.615" endtime="20201115 22:00:32.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.610" endtime="20201115 22:00:32.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.619" endtime="20201115 22:00:32.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.623" endtime="20201115 22:00:32.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.621" endtime="20201115 22:00:32.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.618" endtime="20201115 22:00:32.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.246" endtime="20201115 22:00:32.643"></status>
</kw>
<msg timestamp="20201115 22:00:32.644" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.652" endtime="20201115 22:00:32.674"></status>
</kw>
<msg timestamp="20201115 22:00:32.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.651" endtime="20201115 22:00:32.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.677" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.675" endtime="20201115 22:00:32.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.678" endtime="20201115 22:00:32.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.648" endtime="20201115 22:00:32.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.646" endtime="20201115 22:00:32.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.688" endtime="20201115 22:00:32.973"></status>
</kw>
<msg timestamp="20201115 22:00:32.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.687" endtime="20201115 22:00:32.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.977" endtime="20201115 22:00:32.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.985" endtime="20201115 22:00:32.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.684" endtime="20201115 22:00:32.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.682" endtime="20201115 22:00:32.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.992" level="INFO">${RESULT} = [{'time': 0.019921903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.020159403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:32.988" endtime="20201115 22:00:32.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.005" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:32.993" endtime="20201115 22:00:33.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.010" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:33.009" endtime="20201115 22:00:33.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.012" level="INFO">VALUE: [6.722000000000672e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.7219999999972024e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.653000000002296e-06, 6.708000000001102e-06, 6.749999999999812e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.695000000001006e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.763999999999382e-06, 6.7219999999972024e-06, 6.709000000000576e-06, 6.694999999997536e-06, 6.7230000000001455e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.7079999999976325e-06, 6.7079999999976325e-06, 6.736000000000242e-06, 6.7219999999972024e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.7230000000001455e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.6529999999988265e-06, 6.735999999996772e-06, 6.736000000000242e-06, 6.679999999998493e-06, 6.709000000000576e-06, 6.709000000000576e-06, 6.679999999998493e-06, 6.7219999999972024e-06, 6.695000000001006e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.708000000001102e-06]</msg>
<status status="PASS" starttime="20201115 22:00:33.011" endtime="20201115 22:00:33.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.006" endtime="20201115 22:00:33.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.015" endtime="20201115 22:00:33.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.019" endtime="20201115 22:00:33.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.017" endtime="20201115 22:00:33.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.014" endtime="20201115 22:00:33.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.644" endtime="20201115 22:00:33.039"></status>
</kw>
<msg timestamp="20201115 22:00:33.039" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.049" endtime="20201115 22:00:33.071"></status>
</kw>
<msg timestamp="20201115 22:00:33.071" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.047" endtime="20201115 22:00:33.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.073" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.072" endtime="20201115 22:00:33.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.074" endtime="20201115 22:00:33.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.044" endtime="20201115 22:00:33.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.042" endtime="20201115 22:00:33.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.084" endtime="20201115 22:00:33.370"></status>
</kw>
<msg timestamp="20201115 22:00:33.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020463778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.083" endtime="20201115 22:00:33.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020463778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.374" endtime="20201115 22:00:33.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.383" endtime="20201115 22:00:33.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.080" endtime="20201115 22:00:33.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.079" endtime="20201115 22:00:33.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.389" level="INFO">${RESULT} = [{'time': 0.020470486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.020707306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:33.386" endtime="20201115 22:00:33.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.403" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:33.390" endtime="20201115 22:00:33.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.407" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:33.406" endtime="20201115 22:00:33.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.410" level="INFO">VALUE: [6.708000000001102e-06, 6.7230000000001455e-06, 6.693999999998063e-06, 6.694000000001532e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.7079999999976325e-06, 6.763999999999382e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.7219999999972024e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.708999999997106e-06, 6.7230000000001455e-06, 6.708000000001102e-06, 6.7219999999972024e-06, 6.7919999999985214e-06, 6.7369999999997154e-06, 6.7219999999972024e-06, 6.7219999999972024e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.7369999999997154e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.792000000001991e-06, 6.736000000000242e-06, 6.7079999999976325e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.7230000000001455e-06, 6.709000000000576e-06, 6.694000000001532e-06, 6.749999999999812e-06, 6.693999999998063e-06, 6.790999999999048e-06, 6.764000000002851e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.708000000001102e-06]</msg>
<status status="PASS" starttime="20201115 22:00:33.408" endtime="20201115 22:00:33.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.404" endtime="20201115 22:00:33.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.413" endtime="20201115 22:00:33.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.416" endtime="20201115 22:00:33.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.414" endtime="20201115 22:00:33.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.411" endtime="20201115 22:00:33.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.040" endtime="20201115 22:00:33.437"></status>
</kw>
<msg timestamp="20201115 22:00:33.437" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.446" endtime="20201115 22:00:33.468"></status>
</kw>
<msg timestamp="20201115 22:00:33.469" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.445" endtime="20201115 22:00:33.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.471" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.470" endtime="20201115 22:00:33.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.472" endtime="20201115 22:00:33.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.442" endtime="20201115 22:00:33.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.440" endtime="20201115 22:00:33.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.482" endtime="20201115 22:00:33.768"></status>
</kw>
<msg timestamp="20201115 22:00:33.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.481" endtime="20201115 22:00:33.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.773" endtime="20201115 22:00:33.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.781" endtime="20201115 22:00:33.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.478" endtime="20201115 22:00:33.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.476" endtime="20201115 22:00:33.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.787" level="INFO">${RESULT} = [{'time': 0.020351556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.020587722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:33.784" endtime="20201115 22:00:33.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.801" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:33.788" endtime="20201115 22:00:33.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.805" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:33.804" endtime="20201115 22:00:33.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.808" level="INFO">VALUE: [6.749999999999812e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.694999999997536e-06, 6.708000000001102e-06, 6.680000000001962e-06, 6.7230000000001455e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.665999999998923e-06, 6.709000000000576e-06, 6.667000000001866e-06, 6.6529999999988265e-06, 6.7079999999976325e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.792000000001991e-06, 6.7230000000001455e-06, 6.695000000001006e-06, 6.7079999999976325e-06, 6.7079999999976325e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.764000000002851e-06, 6.681000000001436e-06, 6.736000000000242e-06, 6.653000000002296e-06, 6.7230000000001455e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.653000000002296e-06, 6.665999999998923e-06, 6.708000000001102e-06, 6.7219999999972024e-06, 6.666000000002392e-06, 6.7219999999972024e-06, 6.708000000001102e-06, 6.667000000001866e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.7079999999976325e-06, 6.693999999998063e-06, 6.7230000000001455e-06, 6.708000000001102e-06, 6.763999999999382e-06]</msg>
<status status="PASS" starttime="20201115 22:00:33.806" endtime="20201115 22:00:33.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.802" endtime="20201115 22:00:33.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.811" endtime="20201115 22:00:33.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.815" endtime="20201115 22:00:33.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.813" endtime="20201115 22:00:33.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.809" endtime="20201115 22:00:33.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.438" endtime="20201115 22:00:33.835"></status>
</kw>
<msg timestamp="20201115 22:00:33.835" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.845" endtime="20201115 22:00:33.867"></status>
</kw>
<msg timestamp="20201115 22:00:33.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.843" endtime="20201115 22:00:33.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.870" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.869" endtime="20201115 22:00:33.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.871" endtime="20201115 22:00:33.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.840" endtime="20201115 22:00:33.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.838" endtime="20201115 22:00:33.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.881" endtime="20201115 22:00:34.166"></status>
</kw>
<msg timestamp="20201115 22:00:34.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020805556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020812264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.880" endtime="20201115 22:00:34.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020805556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020812264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.170" endtime="20201115 22:00:34.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.178" endtime="20201115 22:00:34.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.877" endtime="20201115 22:00:34.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.875" endtime="20201115 22:00:34.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.185" level="INFO">${RESULT} = [{'time': 0.020812264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.021048514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:34.182" endtime="20201115 22:00:34.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.199" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:34.186" endtime="20201115 22:00:34.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.204" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:34.203" endtime="20201115 22:00:34.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.206" level="INFO">VALUE: [6.708000000001102e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.6669999999983964e-06, 6.694999999997536e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.681000000001436e-06, 6.804999999998618e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.694000000001532e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.764000000002851e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.7230000000001455e-06, 6.708000000001102e-06]</msg>
<status status="PASS" starttime="20201115 22:00:34.205" endtime="20201115 22:00:34.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.200" endtime="20201115 22:00:34.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.210" endtime="20201115 22:00:34.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.213" endtime="20201115 22:00:34.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.212" endtime="20201115 22:00:34.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.208" endtime="20201115 22:00:34.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.836" endtime="20201115 22:00:34.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.244" endtime="20201115 22:00:34.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.244" endtime="20201115 22:00:34.234"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.237" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.245" endtime="20201115 22:00:34.268"></status>
</kw>
<msg timestamp="20201115 22:00:34.268" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.244" endtime="20201115 22:00:34.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.269" endtime="20201115 22:00:34.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.272" endtime="20201115 22:00:34.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.241" endtime="20201115 22:00:34.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.239" endtime="20201115 22:00:34.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.281" endtime="20201115 22:00:34.566"></status>
</kw>
<msg timestamp="20201115 22:00:34.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.279" endtime="20201115 22:00:34.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.570" endtime="20201115 22:00:34.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.578" endtime="20201115 22:00:34.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.276" endtime="20201115 22:00:34.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.275" endtime="20201115 22:00:34.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.585" level="INFO">${RESULT} = [{'time': 0.022239514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944999999997786e-06, 'source_diff': 6.944999999997786e-06}, {'time': 0.022488528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:34.582" endtime="20201115 22:00:34.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.598" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:34.586" endtime="20201115 22:00:34.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.603" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:34.602" endtime="20201115 22:00:34.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.610" level="INFO">VALUE: [6.944999999997786e-06, 6.945000000001256e-06, 6.930999999998216e-06, 6.959000000000826e-06, 6.929999999998743e-06, 6.944999999997786e-06, 6.944999999997786e-06, 6.9730000000003955e-06, 6.931000000001686e-06, 6.958000000001352e-06, 6.9169999999986465e-06, 6.944000000001782e-06, 7.013999999999632e-06, 6.931000000001686e-06, 6.930999999998216e-06, 6.929999999998743e-06, 6.944999999997786e-06, 6.930000000002212e-06, 6.944999999997786e-06, 6.985999999997022e-06, 6.944000000001782e-06, 6.9169999999986465e-06, 6.915999999999173e-06, 6.929999999998743e-06, 6.972000000000922e-06, 6.930999999998216e-06, 6.943999999998313e-06, 6.986000000000492e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.944999999997786e-06, 6.959000000000826e-06, 6.9029999999990765e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.944000000001782e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.930000000002212e-06, 6.917000000002116e-06, 6.929999999995273e-06, 6.931000000001686e-06, 6.958000000001352e-06, 6.944999999994317e-06, 6.972000000000922e-06, 6.958000000001352e-06, 6.945000000001256e-06]</msg>
<status status="PASS" starttime="20201115 22:00:34.604" endtime="20201115 22:00:34.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.599" endtime="20201115 22:00:34.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.613" endtime="20201115 22:00:34.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.616" endtime="20201115 22:00:34.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.615" endtime="20201115 22:00:34.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.611" endtime="20201115 22:00:34.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.237" endtime="20201115 22:00:34.637"></status>
</kw>
<msg timestamp="20201115 22:00:34.637" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.646" endtime="20201115 22:00:34.669"></status>
</kw>
<msg timestamp="20201115 22:00:34.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.645" endtime="20201115 22:00:34.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.671" endtime="20201115 22:00:34.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.673" endtime="20201115 22:00:34.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.642" endtime="20201115 22:00:34.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.640" endtime="20201115 22:00:34.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.683" endtime="20201115 22:00:34.968"></status>
</kw>
<msg timestamp="20201115 22:00:34.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019909764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.681" endtime="20201115 22:00:34.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019909764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.973" endtime="20201115 22:00:34.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.981" endtime="20201115 22:00:34.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.679" endtime="20201115 22:00:34.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.677" endtime="20201115 22:00:34.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.987" level="INFO">${RESULT} = [{'time': 0.019916694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.929999999998743e-06, 'source_diff': 6.929999999998743e-06}, {'time': 0.020167014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:34.984" endtime="20201115 22:00:34.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.001" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:34.988" endtime="20201115 22:00:35.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.006" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:35.005" endtime="20201115 22:00:35.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.008" level="INFO">VALUE: [6.929999999998743e-06, 6.917000000002116e-06, 6.986000000000492e-06, 6.930000000002212e-06, 6.901999999999603e-06, 6.929999999998743e-06, 6.958000000001352e-06, 6.931000000001686e-06, 6.888999999999507e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.943999999998313e-06, 6.9579999999978825e-06, 6.930999999998216e-06, 6.945000000001256e-06, 6.888999999999507e-06, 6.931000000001686e-06, 6.929999999998743e-06, 6.9169999999986465e-06, 6.931000000001686e-06, 6.930999999998216e-06, 6.944999999997786e-06, 6.959000000000826e-06, 6.931000000001686e-06, 6.986000000000492e-06, 6.874999999999937e-06, 6.930999999998216e-06, 6.944999999997786e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.944999999997786e-06, 6.959000000000826e-06, 6.916000000002642e-06, 6.9579999999978825e-06, 6.944999999997786e-06, 6.958999999997356e-06, 6.944000000001782e-06, 6.929999999998743e-06, 6.930999999998216e-06, 6.9169999999986465e-06, 6.917000000002116e-06, 6.931000000001686e-06, 6.931000000001686e-06, 6.930999999998216e-06, 6.944000000001782e-06, 6.9579999999978825e-06, 6.917000000002116e-06, 6.958000000001352e-06, 6.931000000001686e-06, 6.945000000001256e-06]</msg>
<status status="PASS" starttime="20201115 22:00:35.007" endtime="20201115 22:00:35.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.002" endtime="20201115 22:00:35.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.011" endtime="20201115 22:00:35.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.015" endtime="20201115 22:00:35.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.013" endtime="20201115 22:00:35.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.010" endtime="20201115 22:00:35.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.638" endtime="20201115 22:00:35.035"></status>
</kw>
<msg timestamp="20201115 22:00:35.035" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.044" endtime="20201115 22:00:35.067"></status>
</kw>
<msg timestamp="20201115 22:00:35.067" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.043" endtime="20201115 22:00:35.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.068" endtime="20201115 22:00:35.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.071" endtime="20201115 22:00:35.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.040" endtime="20201115 22:00:35.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.038" endtime="20201115 22:00:35.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.081" endtime="20201115 22:00:35.365"></status>
</kw>
<msg timestamp="20201115 22:00:35.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019908153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.079" endtime="20201115 22:00:35.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019908153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.369" endtime="20201115 22:00:35.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.377" endtime="20201115 22:00:35.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.077" endtime="20201115 22:00:35.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.075" endtime="20201115 22:00:35.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.384" level="INFO">${RESULT} = [{'time': 0.019908153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.020158847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:35.381" endtime="20201115 22:00:35.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.398" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:35.385" endtime="20201115 22:00:35.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.402" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:35.401" endtime="20201115 22:00:35.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.405" level="INFO">VALUE: [6.945000000001256e-06, 6.944000000001782e-06, 7.013999999999632e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.944999999997786e-06, 6.944000000001782e-06, 6.930000000002212e-06, 6.944000000001782e-06, 6.931000000001686e-06, 6.929999999998743e-06, 6.930999999998216e-06, 6.931000000001686e-06, 6.917000000002116e-06, 6.944000000001782e-06, 6.931000000001686e-06, 6.9579999999978825e-06, 6.930000000002212e-06, 6.930000000002212e-06, 6.9169999999986465e-06, 6.917000000002116e-06, 7.013000000000158e-06, 6.944000000001782e-06, 6.929999999998743e-06, 6.930000000002212e-06, 6.929999999998743e-06, 6.944999999997786e-06, 6.915999999999173e-06, 6.929999999998743e-06, 6.9169999999986465e-06, 6.944000000001782e-06, 6.959000000000826e-06, 6.986000000000492e-06, 6.874999999999937e-06, 6.972000000000922e-06, 6.930999999998216e-06, 6.931000000001686e-06, 6.944000000001782e-06, 6.9169999999986465e-06, 6.930000000002212e-06, 6.9169999999986465e-06, 6.9730000000003955e-06, 6.888999999999507e-06, 6.931000000001686e-06, 6.9169999999986465e-06, 6.929999999998743e-06, 6.917000000002116e-06, 6.917000000002116e-06, 6.929999999995273e-06, 6.944000000001782e-06]</msg>
<status status="PASS" starttime="20201115 22:00:35.404" endtime="20201115 22:00:35.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.399" endtime="20201115 22:00:35.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.408" endtime="20201115 22:00:35.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.411" endtime="20201115 22:00:35.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.410" endtime="20201115 22:00:35.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.406" endtime="20201115 22:00:35.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.036" endtime="20201115 22:00:35.432"></status>
</kw>
<msg timestamp="20201115 22:00:35.432" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.441" endtime="20201115 22:00:35.463"></status>
</kw>
<msg timestamp="20201115 22:00:35.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.439" endtime="20201115 22:00:35.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.466" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.465" endtime="20201115 22:00:35.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.467" endtime="20201115 22:00:35.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.437" endtime="20201115 22:00:35.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.435" endtime="20201115 22:00:35.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.477" endtime="20201115 22:00:35.762"></status>
</kw>
<msg timestamp="20201115 22:00:35.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.476" endtime="20201115 22:00:35.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.766" endtime="20201115 22:00:35.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.775" endtime="20201115 22:00:35.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.473" endtime="20201115 22:00:35.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.471" endtime="20201115 22:00:35.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.781" level="INFO">${RESULT} = [{'time': 0.020003458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.999999999996592e-06, 'source_diff': 6.999999999996592e-06}, {'time': 0.020251653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:35.778" endtime="20201115 22:00:35.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.796" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:35.782" endtime="20201115 22:00:35.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.800" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:35.799" endtime="20201115 22:00:35.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.803" level="INFO">VALUE: [6.999999999996592e-06, 6.986000000000492e-06, 6.917000000002116e-06, 6.945000000001256e-06, 6.930999999998216e-06, 6.943999999998313e-06, 6.931000000001686e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.930999999998216e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.9730000000003955e-06, 6.931000000001686e-06, 6.958999999997356e-06, 6.931000000001686e-06, 6.9029999999990765e-06, 6.943999999998313e-06, 6.944000000001782e-06, 6.930999999998216e-06, 6.9730000000003955e-06, 6.943999999998313e-06, 6.943999999998313e-06, 7.000000000000062e-06, 6.929999999998743e-06, 6.944000000001782e-06, 6.930999999998216e-06, 6.874999999999937e-06, 6.986000000000492e-06, 6.915999999999173e-06, 6.945000000001256e-06, 6.929999999998743e-06, 6.930000000002212e-06, 6.943999999998313e-06, 6.931000000001686e-06, 6.9169999999986465e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.930999999998216e-06, 6.929999999998743e-06, 6.917000000002116e-06, 6.9169999999986465e-06, 6.915999999999173e-06, 6.916000000002642e-06, 6.929999999995273e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.931000000001686e-06]</msg>
<status status="PASS" starttime="20201115 22:00:35.801" endtime="20201115 22:00:35.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.796" endtime="20201115 22:00:35.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.806" endtime="20201115 22:00:35.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.809" endtime="20201115 22:00:35.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.807" endtime="20201115 22:00:35.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.804" endtime="20201115 22:00:35.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.433" endtime="20201115 22:00:35.830"></status>
</kw>
<msg timestamp="20201115 22:00:35.830" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.839" endtime="20201115 22:00:35.861"></status>
</kw>
<msg timestamp="20201115 22:00:35.861" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.837" endtime="20201115 22:00:35.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.863" endtime="20201115 22:00:35.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.865" endtime="20201115 22:00:35.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.834" endtime="20201115 22:00:35.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.832" endtime="20201115 22:00:35.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.876" endtime="20201115 22:00:36.161"></status>
</kw>
<msg timestamp="20201115 22:00:36.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019987736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.874" endtime="20201115 22:00:36.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019987736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.166" endtime="20201115 22:00:36.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.174" endtime="20201115 22:00:36.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.871" endtime="20201115 22:00:36.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.869" endtime="20201115 22:00:36.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.181" level="INFO">${RESULT} = [{'time': 0.019987736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.929999999998743e-06, 'source_diff': 6.929999999998743e-06}, {'time': 0.020237736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:36.177" endtime="20201115 22:00:36.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.194" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:36.182" endtime="20201115 22:00:36.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.198" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:36.197" endtime="20201115 22:00:36.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.201" level="INFO">VALUE: [6.929999999998743e-06, 6.943999999998313e-06, 6.943999999998313e-06, 6.943999999998313e-06, 6.9579999999978825e-06, 6.958000000001352e-06, 6.888999999999507e-06, 6.945000000001256e-06, 6.903000000002546e-06, 6.930000000002212e-06, 6.9029999999990765e-06, 6.943999999998313e-06, 6.986000000000492e-06, 6.945000000001256e-06, 6.944999999997786e-06, 6.943999999998313e-06, 6.943999999998313e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.929999999998743e-06, 6.931000000001686e-06, 6.9869999999999655e-06, 6.929999999998743e-06, 6.972000000000922e-06, 6.943999999998313e-06, 6.944000000001782e-06, 6.943999999998313e-06, 6.930000000002212e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.972000000000922e-06, 6.930999999998216e-06, 6.9579999999978825e-06, 6.929999999998743e-06, 6.930000000002212e-06, 6.929999999998743e-06, 6.943999999998313e-06, 6.931000000001686e-06, 6.943999999998313e-06, 6.944000000001782e-06, 6.930999999998216e-06, 6.959000000000826e-06, 6.9719999999974525e-06, 6.944999999997786e-06, 6.944000000001782e-06, 6.957999999994413e-06, 6.959000000000826e-06, 6.915999999995703e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.200" endtime="20201115 22:00:36.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.195" endtime="20201115 22:00:36.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.204" endtime="20201115 22:00:36.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.207" endtime="20201115 22:00:36.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.206" endtime="20201115 22:00:36.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.202" endtime="20201115 22:00:36.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.830" endtime="20201115 22:00:36.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.235" endtime="20201115 22:00:36.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.235" endtime="20201115 22:00:36.228"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.231" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.239" endtime="20201115 22:00:36.263"></status>
</kw>
<msg timestamp="20201115 22:00:36.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.238" endtime="20201115 22:00:36.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.264" endtime="20201115 22:00:36.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.267" endtime="20201115 22:00:36.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.235" endtime="20201115 22:00:36.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.233" endtime="20201115 22:00:36.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.276" endtime="20201115 22:00:36.561"></status>
</kw>
<msg timestamp="20201115 22:00:36.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022309917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.275" endtime="20201115 22:00:36.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022309917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.565" endtime="20201115 22:00:36.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.574" endtime="20201115 22:00:36.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.272" endtime="20201115 22:00:36.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.270" endtime="20201115 22:00:36.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.580" level="INFO">${RESULT} = [{'time': 0.022317014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.022577944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:36.577" endtime="20201115 22:00:36.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.594" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:36.581" endtime="20201115 22:00:36.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.598" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:36.597" endtime="20201115 22:00:36.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.601" level="INFO">VALUE: [7.097000000001047e-06, 7.165999999999423e-06, 7.138999999999757e-06, 7.153000000002796e-06, 7.1529999999993266e-06, 7.125000000000187e-06, 7.151999999999853e-06, 7.1669999999988965e-06, 7.167000000002366e-06, 7.111000000000617e-06, 7.1529999999993266e-06, 7.165999999999423e-06, 7.1529999999993266e-06, 7.153000000002796e-06, 7.181000000001936e-06, 7.151999999999853e-06, 7.151999999999853e-06, 7.1669999999988965e-06, 7.165999999999423e-06, 7.165999999999423e-06, 7.167000000002366e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.195000000001506e-06, 7.165999999999423e-06, 7.1669999999988965e-06, 7.180000000002462e-06, 7.180999999998466e-06, 7.151999999999853e-06, 7.151999999999853e-06, 7.181000000001936e-06, 7.167000000002366e-06, 7.1669999999988965e-06, 7.151999999999853e-06, 7.166000000002892e-06, 7.221999999994233e-06, 7.083999999997481e-06, 7.153000000002796e-06, 7.179999999995523e-06, 7.152999999995857e-06, 7.167000000002366e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.110999999997147e-06, 7.1519999999963835e-06, 7.167000000002366e-06, 7.166000000002892e-06, 7.167000000002366e-06, 7.166000000002892e-06, 7.167000000002366e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.599" endtime="20201115 22:00:36.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.594" endtime="20201115 22:00:36.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.604" endtime="20201115 22:00:36.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.607" endtime="20201115 22:00:36.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.606" endtime="20201115 22:00:36.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.602" endtime="20201115 22:00:36.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.231" endtime="20201115 22:00:36.628"></status>
</kw>
<msg timestamp="20201115 22:00:36.628" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.637" endtime="20201115 22:00:36.660"></status>
</kw>
<msg timestamp="20201115 22:00:36.661" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.635" endtime="20201115 22:00:36.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.664" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.662" endtime="20201115 22:00:36.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.665" endtime="20201115 22:00:36.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.633" endtime="20201115 22:00:36.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.630" endtime="20201115 22:00:36.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.675" endtime="20201115 22:00:36.961"></status>
</kw>
<msg timestamp="20201115 22:00:36.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.673" endtime="20201115 22:00:36.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019914917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.965" endtime="20201115 22:00:36.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.973" endtime="20201115 22:00:36.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.671" endtime="20201115 22:00:36.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.669" endtime="20201115 22:00:36.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.980" level="INFO">${RESULT} = [{'time': 0.019914917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.020177625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:36.976" endtime="20201115 22:00:36.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.993" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:36.981" endtime="20201115 22:00:36.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.997" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:36.996" endtime="20201115 22:00:36.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.000" level="INFO">VALUE: [7.1529999999993266e-06, 7.167000000002366e-06, 7.165999999999423e-06, 7.1529999999993266e-06, 7.209000000001076e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.1669999999988965e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.195000000001506e-06, 7.180999999998466e-06, 7.151999999999853e-06, 7.111000000000617e-06, 7.1529999999993266e-06, 7.1669999999988965e-06, 7.165999999999423e-06, 7.151999999999853e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.167000000002366e-06, 7.167000000002366e-06, 7.180999999998466e-06, 7.180999999998466e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.151999999999853e-06, 7.138000000000283e-06, 7.138999999999757e-06, 7.208000000001602e-06, 7.180999999998466e-06, 7.1529999999993266e-06, 7.165999999999423e-06, 7.208999999997606e-06, 7.180999999998466e-06, 7.180999999998466e-06, 7.179999999998993e-06, 7.151999999999853e-06, 7.125000000000187e-06, 7.1669999999988965e-06, 7.151999999999853e-06, 7.151999999999853e-06, 7.111000000000617e-06, 7.1529999999993266e-06, 7.152999999995857e-06, 7.167000000002366e-06, 7.166000000002892e-06, 7.152999999995857e-06, 7.167000000002366e-06, 7.167000000002366e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.999" endtime="20201115 22:00:37.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.994" endtime="20201115 22:00:37.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.003" endtime="20201115 22:00:37.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.007" endtime="20201115 22:00:37.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.005" endtime="20201115 22:00:37.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.002" endtime="20201115 22:00:37.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.628" endtime="20201115 22:00:37.027"></status>
</kw>
<msg timestamp="20201115 22:00:37.027" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.037" endtime="20201115 22:00:37.059"></status>
</kw>
<msg timestamp="20201115 22:00:37.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.035" endtime="20201115 22:00:37.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.061" endtime="20201115 22:00:37.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.063" endtime="20201115 22:00:37.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.032" endtime="20201115 22:00:37.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.030" endtime="20201115 22:00:37.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.073" endtime="20201115 22:00:37.359"></status>
</kw>
<msg timestamp="20201115 22:00:37.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020397917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.072" endtime="20201115 22:00:37.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020397917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.363" endtime="20201115 22:00:37.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.372" endtime="20201115 22:00:37.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.069" endtime="20201115 22:00:37.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.067" endtime="20201115 22:00:37.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.378" level="INFO">${RESULT} = [{'time': 0.020405069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.151999999999853e-06, 'source_diff': 7.151999999999853e-06}, {'time': 0.020669444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:37.375" endtime="20201115 22:00:37.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.393" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:37.379" endtime="20201115 22:00:37.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.397" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:37.396" endtime="20201115 22:00:37.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.400" level="INFO">VALUE: [7.151999999999853e-06, 7.138000000000283e-06, 7.151999999999853e-06, 7.181000000001936e-06, 7.1529999999993266e-06, 7.181000000001936e-06, 7.193999999998563e-06, 7.167000000002366e-06, 7.1529999999993266e-06, 7.1669999999988965e-06, 7.165999999999423e-06, 7.165999999999423e-06, 7.167000000002366e-06, 7.1529999999993266e-06, 7.180999999998466e-06, 7.165999999999423e-06, 7.250000000000312e-06, 7.153000000002796e-06, 7.165999999999423e-06, 7.181000000001936e-06, 7.1669999999988965e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.110999999997147e-06, 7.165999999999423e-06, 7.250000000000312e-06, 7.1669999999988965e-06, 7.180999999998466e-06, 7.2219999999977025e-06, 7.180000000002462e-06, 7.1529999999993266e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.139000000003226e-06, 7.1669999999988965e-06, 7.194000000002032e-06, 7.1529999999993266e-06, 7.166000000002892e-06, 7.179999999998993e-06, 7.165999999999423e-06, 7.1669999999988965e-06, 7.167000000002366e-06, 7.194000000002032e-06, 7.0829999999980076e-06, 7.153000000002796e-06, 7.167000000002366e-06, 7.152999999995857e-06, 7.138999999996287e-06, 7.153000000002796e-06, 7.153000000002796e-06]</msg>
<status status="PASS" starttime="20201115 22:00:37.398" endtime="20201115 22:00:37.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.394" endtime="20201115 22:00:37.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.403" endtime="20201115 22:00:37.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.406" endtime="20201115 22:00:37.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.405" endtime="20201115 22:00:37.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.401" endtime="20201115 22:00:37.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.028" endtime="20201115 22:00:37.427"></status>
</kw>
<msg timestamp="20201115 22:00:37.427" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.436" endtime="20201115 22:00:37.460"></status>
</kw>
<msg timestamp="20201115 22:00:37.460" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.435" endtime="20201115 22:00:37.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.462" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.461" endtime="20201115 22:00:37.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.464" endtime="20201115 22:00:37.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.432" endtime="20201115 22:00:37.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.430" endtime="20201115 22:00:37.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.473" endtime="20201115 22:00:37.759"></status>
</kw>
<msg timestamp="20201115 22:00:37.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.472" endtime="20201115 22:00:37.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.764" endtime="20201115 22:00:37.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.772" endtime="20201115 22:00:37.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.469" endtime="20201115 22:00:37.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.468" endtime="20201115 22:00:37.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.778" level="INFO">${RESULT} = [{'time': 0.020263736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.020526236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:37.775" endtime="20201115 22:00:37.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.792" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:37.779" endtime="20201115 22:00:37.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.796" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:37.795" endtime="20201115 22:00:37.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.799" level="INFO">VALUE: [7.222000000001172e-06, 7.1669999999988965e-06, 7.151999999999853e-06, 7.166000000002892e-06, 7.1669999999988965e-06, 7.1529999999993266e-06, 7.165999999999423e-06, 7.1529999999993266e-06, 7.179999999998993e-06, 7.1529999999993266e-06, 7.180999999998466e-06, 7.1669999999988965e-06, 7.153000000002796e-06, 7.151999999999853e-06, 7.179999999998993e-06, 7.1529999999993266e-06, 7.180999999998466e-06, 7.138999999999757e-06, 7.153000000002796e-06, 7.1669999999988965e-06, 7.138999999999757e-06, 7.165999999999423e-06, 7.194000000002032e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.084000000000951e-06, 7.181000000001936e-06, 7.165999999999423e-06, 7.167000000002366e-06, 7.138999999999757e-06, 7.1669999999988965e-06, 7.181000000001936e-06, 7.181000000001936e-06, 7.1529999999993266e-06, 7.180999999998466e-06, 7.179999999998993e-06, 7.179999999998993e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.208000000001602e-06, 7.222000000001172e-06, 7.179999999995523e-06, 7.181000000001936e-06, 7.0969999999975775e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.166999999995427e-06, 7.166999999995427e-06, 7.124999999996717e-06]</msg>
<status status="PASS" starttime="20201115 22:00:37.797" endtime="20201115 22:00:37.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.793" endtime="20201115 22:00:37.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.802" endtime="20201115 22:00:37.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.806" endtime="20201115 22:00:37.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.804" endtime="20201115 22:00:37.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.800" endtime="20201115 22:00:37.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.428" endtime="20201115 22:00:37.826"></status>
</kw>
<msg timestamp="20201115 22:00:37.827" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.836" endtime="20201115 22:00:37.858"></status>
</kw>
<msg timestamp="20201115 22:00:37.859" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.834" endtime="20201115 22:00:37.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.861" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.860" endtime="20201115 22:00:37.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.863" endtime="20201115 22:00:37.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.831" endtime="20201115 22:00:37.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.829" endtime="20201115 22:00:37.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.872" endtime="20201115 22:00:38.158"></status>
</kw>
<msg timestamp="20201115 22:00:38.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.871" endtime="20201115 22:00:38.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.163" endtime="20201115 22:00:38.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.171" endtime="20201115 22:00:38.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.868" endtime="20201115 22:00:38.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.867" endtime="20201115 22:00:38.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.177" level="INFO">${RESULT} = [{'time': 0.019932472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.020193278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:38.174" endtime="20201115 22:00:38.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.191" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:38.178" endtime="20201115 22:00:38.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.195" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:38.194" endtime="20201115 22:00:38.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.198" level="INFO">VALUE: [7.179999999998993e-06, 7.1529999999993266e-06, 7.179999999998993e-06, 7.1529999999993266e-06, 7.138999999999757e-06, 7.139000000003226e-06, 7.208000000001602e-06, 7.194999999998036e-06, 7.138999999999757e-06, 7.1669999999988965e-06, 7.153000000002796e-06, 7.165999999999423e-06, 7.167000000002366e-06, 7.180999999998466e-06, 7.180000000002462e-06, 7.181000000001936e-06, 7.0969999999975775e-06, 7.181000000001936e-06, 7.167000000002366e-06, 7.1669999999988965e-06, 7.138999999999757e-06, 7.097000000001047e-06, 7.181000000001936e-06, 7.1669999999988965e-06, 7.235999999997272e-06, 7.138999999999757e-06, 7.167000000002366e-06, 7.1529999999993266e-06, 7.181000000001936e-06, 7.1669999999988965e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.167000000002366e-06, 7.179999999998993e-06, 7.151999999999853e-06, 7.179999999998993e-06, 7.097000000001047e-06, 7.180999999998466e-06, 7.153000000002796e-06, 7.165999999999423e-06, 7.139000000003226e-06, 7.179999999998993e-06, 7.1669999999988965e-06, 7.181000000001936e-06, 7.152000000003322e-06, 7.139000000003226e-06, 7.181000000001936e-06, 7.153000000002796e-06, 7.181000000001936e-06, 7.165999999995953e-06]</msg>
<status status="PASS" starttime="20201115 22:00:38.196" endtime="20201115 22:00:38.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.192" endtime="20201115 22:00:38.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.201" endtime="20201115 22:00:38.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.205" endtime="20201115 22:00:38.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.203" endtime="20201115 22:00:38.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.200" endtime="20201115 22:00:38.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.827" endtime="20201115 22:00:38.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.230" endtime="20201115 22:00:38.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.229" endtime="20201115 22:00:38.226"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.228" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.237" endtime="20201115 22:00:38.260"></status>
</kw>
<msg timestamp="20201115 22:00:38.261" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.235" endtime="20201115 22:00:38.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.262" endtime="20201115 22:00:38.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.264" endtime="20201115 22:00:38.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.232" endtime="20201115 22:00:38.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.230" endtime="20201115 22:00:38.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.273" endtime="20201115 22:00:38.559"></status>
</kw>
<msg timestamp="20201115 22:00:38.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.272" endtime="20201115 22:00:38.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.563" endtime="20201115 22:00:38.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.572" endtime="20201115 22:00:38.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.269" endtime="20201115 22:00:38.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.267" endtime="20201115 22:00:38.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.578" level="INFO">${RESULT} = [{'time': 0.022309208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.022585681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:38.575" endtime="20201115 22:00:38.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.592" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:38.579" endtime="20201115 22:00:38.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.596" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:38.595" endtime="20201115 22:00:38.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.599" level="INFO">VALUE: [7.375000000000437e-06, 7.389000000000007e-06, 7.472000000001422e-06, 7.375000000000437e-06, 7.402999999999577e-06, 7.389000000000007e-06, 7.416000000003142e-06, 7.402999999999577e-06, 7.389000000000007e-06, 7.319000000002157e-06, 7.402999999999577e-06, 7.445000000001756e-06, 7.388000000000533e-06, 7.389000000000007e-06, 7.4169999999991465e-06, 7.375000000000437e-06, 7.361000000000867e-06, 7.375000000000437e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.334000000001201e-06, 7.402000000000103e-06, 7.402000000000103e-06, 7.389000000000007e-06, 7.415999999999673e-06, 7.389000000000007e-06, 7.374999999996967e-06, 7.389000000000007e-06, 7.361000000000867e-06, 7.374999999996967e-06, 7.374999999996967e-06, 7.389000000000007e-06, 7.402000000000103e-06, 7.360999999997397e-06, 7.388999999996537e-06, 7.388999999996537e-06, 7.389000000003476e-06, 7.374999999996967e-06, 7.389000000003476e-06, 7.403000000003046e-06, 7.388999999996537e-06, 7.389000000003476e-06, 7.402999999996107e-06, 7.375000000003906e-06, 7.388999999996537e-06, 7.388999999996537e-06, 7.471999999994483e-06, 7.403000000003046e-06, 7.388999999996537e-06, 7.389000000003476e-06]</msg>
<status status="PASS" starttime="20201115 22:00:38.597" endtime="20201115 22:00:38.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.593" endtime="20201115 22:00:38.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.602" endtime="20201115 22:00:38.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.606" endtime="20201115 22:00:38.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.604" endtime="20201115 22:00:38.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.601" endtime="20201115 22:00:38.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.228" endtime="20201115 22:00:38.626"></status>
</kw>
<msg timestamp="20201115 22:00:38.627" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.635" endtime="20201115 22:00:38.659"></status>
</kw>
<msg timestamp="20201115 22:00:38.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.634" endtime="20201115 22:00:38.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.661" endtime="20201115 22:00:38.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.663" endtime="20201115 22:00:38.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.631" endtime="20201115 22:00:38.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.629" endtime="20201115 22:00:38.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.673" endtime="20201115 22:00:38.959"></status>
</kw>
<msg timestamp="20201115 22:00:38.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.671" endtime="20201115 22:00:38.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.963" endtime="20201115 22:00:38.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.971" endtime="20201115 22:00:38.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.669" endtime="20201115 22:00:38.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.667" endtime="20201115 22:00:38.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.978" level="INFO">${RESULT} = [{'time': 0.019988069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.020263153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:38.975" endtime="20201115 22:00:38.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.992" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:38.979" endtime="20201115 22:00:38.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.997" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:38.996" endtime="20201115 22:00:38.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.000" level="INFO">VALUE: [7.375000000000437e-06, 7.3469999999978275e-06, 7.458000000001852e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.361000000000867e-06, 7.389000000000007e-06, 7.333000000001727e-06, 7.389000000000007e-06, 7.361000000000867e-06, 7.375000000000437e-06, 7.443999999998813e-06, 7.375000000000437e-06, 7.375000000000437e-06, 7.347000000001297e-06, 7.347000000001297e-06, 7.389000000000007e-06, 7.4169999999991465e-06, 7.374999999996967e-06, 7.389000000000007e-06, 7.402000000000103e-06, 7.347000000001297e-06, 7.374999999996967e-06, 7.389000000000007e-06, 7.332999999998258e-06, 7.388000000000533e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.402999999999577e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.3620000000003405e-06, 7.361000000000867e-06, 7.443999999998813e-06, 7.417000000002616e-06, 7.375000000000437e-06, 7.3880000000040025e-06, 7.389000000003476e-06, 7.444000000002282e-06, 7.388999999996537e-06, 7.389000000003476e-06, 7.389000000003476e-06, 7.403000000003046e-06, 7.459000000001326e-06]</msg>
<status status="PASS" starttime="20201115 22:00:38.999" endtime="20201115 22:00:39.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.994" endtime="20201115 22:00:39.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.003" endtime="20201115 22:00:39.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.007" endtime="20201115 22:00:39.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.005" endtime="20201115 22:00:39.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.002" endtime="20201115 22:00:39.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.627" endtime="20201115 22:00:39.027"></status>
</kw>
<msg timestamp="20201115 22:00:39.028" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.036" endtime="20201115 22:00:39.061"></status>
</kw>
<msg timestamp="20201115 22:00:39.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.035" endtime="20201115 22:00:39.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.063" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.062" endtime="20201115 22:00:39.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.064" endtime="20201115 22:00:39.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.032" endtime="20201115 22:00:39.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.030" endtime="20201115 22:00:39.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.074" endtime="20201115 22:00:39.359"></status>
</kw>
<msg timestamp="20201115 22:00:39.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:39.073" endtime="20201115 22:00:39.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:39.363" endtime="20201115 22:00:39.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.371" endtime="20201115 22:00:39.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.070" endtime="20201115 22:00:39.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.069" endtime="20201115 22:00:39.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.378" level="INFO">${RESULT} = [{'time': 0.020040389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.020315403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:39.374" endtime="20201115 22:00:39.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.391" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:39.379" endtime="20201115 22:00:39.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.396" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:39.395" endtime="20201115 22:00:39.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.398" level="INFO">VALUE: [7.389000000000007e-06, 7.375000000000437e-06, 7.4719999999979525e-06, 7.417000000002616e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.402999999999577e-06, 7.402000000000103e-06, 7.416000000003142e-06, 7.389000000000007e-06, 7.430999999998716e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.444999999998286e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.361000000000867e-06, 7.375000000000437e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.444000000002282e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.402999999999577e-06, 7.319000000002157e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.318999999998688e-06, 7.443999999998813e-06, 7.374999999996967e-06, 7.360999999997397e-06, 7.387999999997064e-06, 7.360999999997397e-06, 7.389000000003476e-06, 7.445000000001756e-06, 7.3190000000056266e-06, 7.389000000003476e-06, 7.3469999999978275e-06]</msg>
<status status="PASS" starttime="20201115 22:00:39.397" endtime="20201115 22:00:39.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.392" endtime="20201115 22:00:39.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.401" endtime="20201115 22:00:39.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.405" endtime="20201115 22:00:39.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.403" endtime="20201115 22:00:39.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.400" endtime="20201115 22:00:39.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.028" endtime="20201115 22:00:39.425"></status>
</kw>
<msg timestamp="20201115 22:00:39.426" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.435" endtime="20201115 22:00:39.458"></status>
</kw>
<msg timestamp="20201115 22:00:39.459" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.433" endtime="20201115 22:00:39.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.460" endtime="20201115 22:00:39.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.462" endtime="20201115 22:00:39.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.430" endtime="20201115 22:00:39.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.428" endtime="20201115 22:00:39.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.472" endtime="20201115 22:00:39.758"></status>
</kw>
<msg timestamp="20201115 22:00:39.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.471" endtime="20201115 22:00:39.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.762" endtime="20201115 22:00:39.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.775" endtime="20201115 22:00:39.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.468" endtime="20201115 22:00:39.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.466" endtime="20201115 22:00:39.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.781" level="INFO">${RESULT} = [{'time': 0.020069569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.388000000000533e-06, 'source_diff': 7.388000000000533e-06}, {'time': 0.020346486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:39.778" endtime="20201115 22:00:39.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.795" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:39.782" endtime="20201115 22:00:39.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.799" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:39.798" endtime="20201115 22:00:39.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.802" level="INFO">VALUE: [7.388000000000533e-06, 7.402999999999577e-06, 7.389000000000007e-06, 7.347000000001297e-06, 7.375000000000437e-06, 7.458000000001852e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.4169999999991465e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.361000000000867e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.4169999999991465e-06, 7.402999999999577e-06, 7.3620000000003405e-06, 7.402000000000103e-06, 7.402999999999577e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.402000000000103e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.402999999999577e-06, 7.388000000000533e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.361000000000867e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.402999999999577e-06, 7.402999999999577e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.361999999996871e-06, 7.458000000001852e-06, 7.389000000003476e-06, 7.403000000003046e-06, 7.429999999995773e-06, 7.361000000004336e-06, 7.402999999996107e-06, 7.388999999996537e-06, 7.389000000003476e-06]</msg>
<status status="PASS" starttime="20201115 22:00:39.800" endtime="20201115 22:00:39.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.796" endtime="20201115 22:00:39.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.805" endtime="20201115 22:00:39.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.808" endtime="20201115 22:00:39.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.807" endtime="20201115 22:00:39.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.803" endtime="20201115 22:00:39.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.426" endtime="20201115 22:00:39.829"></status>
</kw>
<msg timestamp="20201115 22:00:39.829" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.838" endtime="20201115 22:00:39.861"></status>
</kw>
<msg timestamp="20201115 22:00:39.862" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.836" endtime="20201115 22:00:39.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.863" endtime="20201115 22:00:39.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.865" endtime="20201115 22:00:39.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.834" endtime="20201115 22:00:39.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.832" endtime="20201115 22:00:39.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.875" endtime="20201115 22:00:40.161"></status>
</kw>
<msg timestamp="20201115 22:00:40.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019874403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.873" endtime="20201115 22:00:40.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019874403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.166" endtime="20201115 22:00:40.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.174" endtime="20201115 22:00:40.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.871" endtime="20201115 22:00:40.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.869" endtime="20201115 22:00:40.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.181" level="INFO">${RESULT} = [{'time': 0.019874403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.020147875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:40.177" endtime="20201115 22:00:40.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.194" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:40.182" endtime="20201115 22:00:40.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.199" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:40.198" endtime="20201115 22:00:40.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.201" level="INFO">VALUE: [7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.361000000000867e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.388000000000533e-06, 7.361000000000867e-06, 7.458999999997856e-06, 7.375000000000437e-06, 7.334000000001201e-06, 7.403000000003046e-06, 7.389000000000007e-06, 7.431000000002186e-06, 7.389000000000007e-06, 7.402999999999577e-06, 7.360999999997397e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.402999999999577e-06, 7.388000000000533e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.402999999999577e-06, 7.402000000000103e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.360999999997397e-06, 7.389000000000007e-06, 7.402999999999577e-06, 7.389000000000007e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.304999999999118e-06, 7.389000000000007e-06, 7.333000000001727e-06, 7.402999999999577e-06, 7.388000000000533e-06, 7.416000000003142e-06, 7.360999999997397e-06, 7.388999999996537e-06, 7.389000000003476e-06, 7.3469999999978275e-06, 7.360999999997397e-06, 7.374999999996967e-06, 7.389000000003476e-06]</msg>
<status status="PASS" starttime="20201115 22:00:40.200" endtime="20201115 22:00:40.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.195" endtime="20201115 22:00:40.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.204" endtime="20201115 22:00:40.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.208" endtime="20201115 22:00:40.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.206" endtime="20201115 22:00:40.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.203" endtime="20201115 22:00:40.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.830" endtime="20201115 22:00:40.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.227" endtime="20201115 22:00:40.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.226" endtime="20201115 22:00:40.229"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.231" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.240" endtime="20201115 22:00:40.264"></status>
</kw>
<msg timestamp="20201115 22:00:40.264" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.238" endtime="20201115 22:00:40.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.267" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.265" endtime="20201115 22:00:40.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.268" endtime="20201115 22:00:40.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.235" endtime="20201115 22:00:40.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.233" endtime="20201115 22:00:40.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.277" endtime="20201115 22:00:40.563"></status>
</kw>
<msg timestamp="20201115 22:00:40.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.276" endtime="20201115 22:00:40.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.567" endtime="20201115 22:00:40.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.575" endtime="20201115 22:00:40.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.273" endtime="20201115 22:00:40.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.272" endtime="20201115 22:00:40.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.582" level="INFO">${RESULT} = [{'time': 0.022339542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.02262875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:40.578" endtime="20201115 22:00:40.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.596" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:40.583" endtime="20201115 22:00:40.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.601" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:40.600" endtime="20201115 22:00:40.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.603" level="INFO">VALUE: [7.611000000001117e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.584000000001451e-06, 7.6120000000005905e-06, 7.6109999999976474e-06, 7.625000000000687e-06, 7.652999999999827e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.597000000001547e-06, 7.695000000002006e-06, 7.639000000000257e-06, 7.582999999998508e-06, 7.639000000000257e-06, 7.582999999998508e-06, 7.652999999999827e-06, 7.583999999997981e-06, 7.597000000001547e-06, 7.6109999999976474e-06, 7.611000000001117e-06, 7.6109999999976474e-06, 7.6120000000005905e-06, 7.597000000001547e-06, 7.611000000001117e-06, 7.665999999999923e-06, 7.681000000002436e-06, 7.597000000001547e-06, 7.625000000000687e-06, 7.5969999999980775e-06, 7.624999999997217e-06, 7.5830000000054465e-06, 7.5969999999980775e-06, 7.597000000005016e-06, 7.6109999999976474e-06, 7.5969999999980775e-06, 7.611000000004586e-06, 7.681000000002436e-06, 7.540999999999798e-06, 7.625000000004156e-06, 7.59800000000449e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.611000000004586e-06, 7.61200000000406e-06, 7.597000000005016e-06, 7.625000000004156e-06, 7.582999999998508e-06, 7.569999999998411e-06]</msg>
<status status="PASS" starttime="20201115 22:00:40.602" endtime="20201115 22:00:40.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.597" endtime="20201115 22:00:40.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.606" endtime="20201115 22:00:40.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.609" endtime="20201115 22:00:40.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.608" endtime="20201115 22:00:40.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.604" endtime="20201115 22:00:40.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.231" endtime="20201115 22:00:40.630"></status>
</kw>
<msg timestamp="20201115 22:00:40.630" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.639" endtime="20201115 22:00:40.664"></status>
</kw>
<msg timestamp="20201115 22:00:40.665" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.638" endtime="20201115 22:00:40.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.666" endtime="20201115 22:00:40.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.669" endtime="20201115 22:00:40.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.635" endtime="20201115 22:00:40.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.633" endtime="20201115 22:00:40.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.678" endtime="20201115 22:00:40.963"></status>
</kw>
<msg timestamp="20201115 22:00:40.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020125319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.677" endtime="20201115 22:00:40.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020125319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.967" endtime="20201115 22:00:40.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.975" endtime="20201115 22:00:40.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.674" endtime="20201115 22:00:40.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.673" endtime="20201115 22:00:40.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.982" level="INFO">${RESULT} = [{'time': 0.020125319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.020412847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:40.979" endtime="20201115 22:00:40.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.995" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:40.983" endtime="20201115 22:00:40.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.000" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:40.999" endtime="20201115 22:00:41.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.003" level="INFO">VALUE: [7.6109999999976474e-06, 7.597000000001547e-06, 7.597000000001547e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.597000000001547e-06, 7.680999999998966e-06, 7.597999999997551e-06, 7.6109999999976474e-06, 7.597000000001547e-06, 7.624999999997217e-06, 7.6120000000005905e-06, 7.597000000001547e-06, 7.6109999999976474e-06, 7.570000000001881e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.597000000001547e-06, 7.611000000001117e-06, 7.6109999999976474e-06, 7.556000000002311e-06, 7.667000000002866e-06, 7.625000000000687e-06, 7.6109999999976474e-06, 7.611000000001117e-06, 7.6120000000005905e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.611000000001117e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.5419999999992715e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.597000000005016e-06, 7.611000000004586e-06, 7.624999999997217e-06, 7.625000000004156e-06, 7.6109999999976474e-06, 7.582999999998508e-06, 7.6109999999976474e-06, 7.611000000004586e-06, 7.611000000004586e-06, 7.582999999998508e-06, 7.6109999999976474e-06]</msg>
<status status="PASS" starttime="20201115 22:00:41.001" endtime="20201115 22:00:41.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.996" endtime="20201115 22:00:41.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.006" endtime="20201115 22:00:41.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.009" endtime="20201115 22:00:41.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.007" endtime="20201115 22:00:41.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.004" endtime="20201115 22:00:41.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.631" endtime="20201115 22:00:41.030"></status>
</kw>
<msg timestamp="20201115 22:00:41.030" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.039" endtime="20201115 22:00:41.063"></status>
</kw>
<msg timestamp="20201115 22:00:41.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.037" endtime="20201115 22:00:41.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.065" endtime="20201115 22:00:41.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.067" endtime="20201115 22:00:41.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.035" endtime="20201115 22:00:41.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.032" endtime="20201115 22:00:41.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.077" endtime="20201115 22:00:41.363"></status>
</kw>
<msg timestamp="20201115 22:00:41.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020435014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.075" endtime="20201115 22:00:41.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020435014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.367" endtime="20201115 22:00:41.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.375" endtime="20201115 22:00:41.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.073" endtime="20201115 22:00:41.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.071" endtime="20201115 22:00:41.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.382" level="INFO">${RESULT} = [{'time': 0.020435014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597000000001547e-06, 'source_diff': 7.597000000001547e-06}, {'time': 0.020721847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:41.378" endtime="20201115 22:00:41.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.395" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:41.383" endtime="20201115 22:00:41.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.399" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:41.398" endtime="20201115 22:00:41.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.402" level="INFO">VALUE: [7.597000000001547e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.624999999997217e-06, 7.6109999999976474e-06, 7.625000000000687e-06, 7.624999999997217e-06, 7.6120000000005905e-06, 7.597000000001547e-06, 7.652999999999827e-06, 7.5419999999992715e-06, 7.6120000000005905e-06, 7.583000000001977e-06, 7.639000000000257e-06, 7.611000000001117e-06, 7.583999999997981e-06, 7.624999999997217e-06, 7.6109999999976474e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.597000000001547e-06, 7.611000000001117e-06, 7.597000000001547e-06, 7.611000000001117e-06, 7.597000000001547e-06, 7.555999999998841e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.583999999997981e-06, 7.639000000000257e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.5969999999980775e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.6109999999976474e-06, 7.625000000004156e-06, 7.6109999999976474e-06, 7.624999999997217e-06, 7.611000000004586e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.5969999999980775e-06, 7.638999999996787e-06, 7.624999999997217e-06, 7.625000000004156e-06, 7.624999999997217e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201115 22:00:41.401" endtime="20201115 22:00:41.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.396" endtime="20201115 22:00:41.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.405" endtime="20201115 22:00:41.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.408" endtime="20201115 22:00:41.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.407" endtime="20201115 22:00:41.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.403" endtime="20201115 22:00:41.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.030" endtime="20201115 22:00:41.429"></status>
</kw>
<msg timestamp="20201115 22:00:41.430" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.438" endtime="20201115 22:00:41.463"></status>
</kw>
<msg timestamp="20201115 22:00:41.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.437" endtime="20201115 22:00:41.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.466" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.465" endtime="20201115 22:00:41.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.467" endtime="20201115 22:00:41.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.434" endtime="20201115 22:00:41.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.432" endtime="20201115 22:00:41.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.477" endtime="20201115 22:00:41.763"></status>
</kw>
<msg timestamp="20201115 22:00:41.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020396764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.476" endtime="20201115 22:00:41.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020396764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.767" endtime="20201115 22:00:41.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.775" endtime="20201115 22:00:41.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.473" endtime="20201115 22:00:41.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.472" endtime="20201115 22:00:41.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.782" level="INFO">${RESULT} = [{'time': 0.020404375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.020691222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:41.779" endtime="20201115 22:00:41.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.795" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:41.783" endtime="20201115 22:00:41.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.800" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:41.799" endtime="20201115 22:00:41.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.802" level="INFO">VALUE: [7.6109999999976474e-06, 7.5969999999980775e-06, 7.556000000002311e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.6109999999976474e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.583999999997981e-06, 7.598000000001021e-06, 7.611000000001117e-06, 7.570000000001881e-06, 7.611000000001117e-06, 7.624999999997217e-06, 7.6109999999976474e-06, 7.5969999999980775e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.624999999997217e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.624999999997217e-06, 7.584000000001451e-06, 7.611000000001117e-06, 7.6109999999976474e-06, 7.624999999997217e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.597000000001547e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.624999999997217e-06, 7.611000000001117e-06, 7.542000000002741e-06, 7.583000000001977e-06, 7.597000000005016e-06, 7.625000000004156e-06, 7.638999999996787e-06, 7.597000000005016e-06, 7.569999999998411e-06, 7.624999999997217e-06, 7.583999999997981e-06, 7.5969999999980775e-06, 7.6109999999976474e-06, 7.624999999997217e-06, 7.527000000000228e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201115 22:00:41.801" endtime="20201115 22:00:41.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.796" endtime="20201115 22:00:41.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.806" endtime="20201115 22:00:41.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.809" endtime="20201115 22:00:41.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.808" endtime="20201115 22:00:41.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.804" endtime="20201115 22:00:41.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.430" endtime="20201115 22:00:41.830"></status>
</kw>
<msg timestamp="20201115 22:00:41.830" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.839" endtime="20201115 22:00:41.864"></status>
</kw>
<msg timestamp="20201115 22:00:41.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.837" endtime="20201115 22:00:41.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.867" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.865" endtime="20201115 22:00:41.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.868" endtime="20201115 22:00:41.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.835" endtime="20201115 22:00:41.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.833" endtime="20201115 22:00:41.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.878" endtime="20201115 22:00:42.164"></status>
</kw>
<msg timestamp="20201115 22:00:42.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.876" endtime="20201115 22:00:42.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.168" endtime="20201115 22:00:42.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.176" endtime="20201115 22:00:42.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.874" endtime="20201115 22:00:42.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.872" endtime="20201115 22:00:42.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.183" level="INFO">${RESULT} = [{'time': 0.019931014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.020221292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.179" endtime="20201115 22:00:42.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.197" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:42.184" endtime="20201115 22:00:42.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.202" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:42.201" endtime="20201115 22:00:42.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.204" level="INFO">VALUE: [7.611000000001117e-06, 7.597999999997551e-06, 7.556000000002311e-06, 7.611000000001117e-06, 7.5969999999980775e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.582999999998508e-06, 7.625000000000687e-06, 7.568999999998938e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.584000000001451e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.639000000000257e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.598000000001021e-06, 7.6109999999976474e-06, 7.665999999999923e-06, 7.6109999999976474e-06, 7.598000000001021e-06, 7.5969999999980775e-06, 7.6109999999976474e-06, 7.624999999997217e-06, 7.665999999999923e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.665999999999923e-06, 7.6109999999976474e-06, 7.598000000001021e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.6109999999976474e-06, 7.611000000001117e-06, 7.625000000004156e-06, 7.611000000004586e-06, 7.625000000004156e-06, 7.6109999999976474e-06, 7.611000000004586e-06, 7.597999999997551e-06, 7.59800000000449e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.597999999997551e-06]</msg>
<status status="PASS" starttime="20201115 22:00:42.203" endtime="20201115 22:00:42.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.198" endtime="20201115 22:00:42.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.208" endtime="20201115 22:00:42.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.211" endtime="20201115 22:00:42.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.209" endtime="20201115 22:00:42.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.206" endtime="20201115 22:00:42.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.831" endtime="20201115 22:00:42.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.230" endtime="20201115 22:00:42.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.229" endtime="20201115 22:00:42.232"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.234" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.243" endtime="20201115 22:00:42.268"></status>
</kw>
<msg timestamp="20201115 22:00:42.268" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.241" endtime="20201115 22:00:42.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.269" endtime="20201115 22:00:42.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.272" endtime="20201115 22:00:42.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.239" endtime="20201115 22:00:42.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.237" endtime="20201115 22:00:42.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.281" endtime="20201115 22:00:42.565"></status>
</kw>
<msg timestamp="20201115 22:00:42.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022169556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.279" endtime="20201115 22:00:42.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022169556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.570" endtime="20201115 22:00:42.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.578" endtime="20201115 22:00:42.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.277" endtime="20201115 22:00:42.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.275" endtime="20201115 22:00:42.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.584" level="INFO">${RESULT} = [{'time': 0.022177417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.022480708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.581" endtime="20201115 22:00:42.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.598" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:42.585" endtime="20201115 22:00:42.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.602" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:42.601" endtime="20201115 22:00:42.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.605" level="INFO">VALUE: [7.861000000001367e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.777999999999952e-06, 7.847999999997801e-06, 7.846999999998328e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.846999999998328e-06, 7.846999999998328e-06, 7.846999999998328e-06, 7.832999999998758e-06, 7.791999999999522e-06, 7.860999999997897e-06, 7.916000000000173e-06, 7.833999999998231e-06, 7.860999999997897e-06, 7.847000000001797e-06, 7.804999999999618e-06, 7.832999999998758e-06, 7.777999999999952e-06, 7.860999999997897e-06, 7.8340000000017e-06, 7.806000000002561e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7.8340000000017e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.805999999999091e-06, 7.860999999997897e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.84800000000474e-06, 7.846999999998328e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.847000000005266e-06, 7.805999999999091e-06, 7.86200000000431e-06, 7.847999999997801e-06, 7.819999999998661e-06, 7.846999999998328e-06, 7.846999999998328e-06, 7.83400000000517e-06]</msg>
<status status="PASS" starttime="20201115 22:00:42.603" endtime="20201115 22:00:42.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.599" endtime="20201115 22:00:42.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.608" endtime="20201115 22:00:42.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.612" endtime="20201115 22:00:42.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.610" endtime="20201115 22:00:42.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.607" endtime="20201115 22:00:42.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.235" endtime="20201115 22:00:42.632"></status>
</kw>
<msg timestamp="20201115 22:00:42.633" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.641" endtime="20201115 22:00:42.667"></status>
</kw>
<msg timestamp="20201115 22:00:42.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.640" endtime="20201115 22:00:42.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.668" endtime="20201115 22:00:42.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.671" endtime="20201115 22:00:42.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.637" endtime="20201115 22:00:42.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.635" endtime="20201115 22:00:42.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.681" endtime="20201115 22:00:42.963"></status>
</kw>
<msg timestamp="20201115 22:00:42.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.679" endtime="20201115 22:00:42.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.968" endtime="20201115 22:00:42.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.976" endtime="20201115 22:00:42.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.677" endtime="20201115 22:00:42.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.675" endtime="20201115 22:00:42.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.983" level="INFO">${RESULT} = [{'time': 0.020079569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.776999999997009e-06, 'source_diff': 7.776999999997009e-06}, {'time': 0.020381903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.980" endtime="20201115 22:00:42.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.997" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:42.984" endtime="20201115 22:00:42.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.002" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:43.001" endtime="20201115 22:00:43.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.004" level="INFO">VALUE: [7.776999999997009e-06, 7.833999999998231e-06, 7.846999999998328e-06, 7.82000000000213e-06, 7.833999999998231e-06, 7.861000000001367e-06, 7.791999999999522e-06, 7.833000000002227e-06, 7.847000000001797e-06, 7.847000000001797e-06, 7.846999999998328e-06, 7.916999999999647e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.860999999997897e-06, 7.8340000000017e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.861000000001367e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.861000000001367e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.916999999999647e-06, 7.860999999997897e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.819000000002657e-06, 7.861000000001367e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.805999999999091e-06, 7.805999999999091e-06, 7.84800000000474e-06, 7.916999999996177e-06, 7.80600000000603e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.847999999997801e-06, 7.791000000000048e-06, 7.86200000000431e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.832999999998758e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.003" endtime="20201115 22:00:43.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.998" endtime="20201115 22:00:43.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.007" endtime="20201115 22:00:43.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.011" endtime="20201115 22:00:43.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.009" endtime="20201115 22:00:43.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.006" endtime="20201115 22:00:43.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.633" endtime="20201115 22:00:43.032"></status>
</kw>
<msg timestamp="20201115 22:00:43.032" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.041" endtime="20201115 22:00:43.066"></status>
</kw>
<msg timestamp="20201115 22:00:43.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.039" endtime="20201115 22:00:43.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.069" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.068" endtime="20201115 22:00:43.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.070" endtime="20201115 22:00:43.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.036" endtime="20201115 22:00:43.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.034" endtime="20201115 22:00:43.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.080" endtime="20201115 22:00:43.364"></status>
</kw>
<msg timestamp="20201115 22:00:43.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020092306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.078" endtime="20201115 22:00:43.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020092306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.368" endtime="20201115 22:00:43.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.376" endtime="20201115 22:00:43.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.076" endtime="20201115 22:00:43.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.074" endtime="20201115 22:00:43.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.383" level="INFO">${RESULT} = [{'time': 0.020092306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.86200000000084e-06, 'source_diff': 7.86200000000084e-06}, {'time': 0.020394167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:43.380" endtime="20201115 22:00:43.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.397" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:43.384" endtime="20201115 22:00:43.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.401" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:43.400" endtime="20201115 22:00:43.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.404" level="INFO">VALUE: [7.86200000000084e-06, 7.82000000000213e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.846999999998328e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.860999999997897e-06, 7.847000000001797e-06, 7.82000000000213e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.8340000000017e-06, 7.846999999998328e-06, 7.819000000002657e-06, 7.847000000001797e-06, 7.819999999998661e-06, 7.833000000002227e-06, 7.805999999999091e-06, 7.833000000002227e-06, 7.819000000002657e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.833999999998231e-06, 7.84800000000127e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.875000000000937e-06, 7.847000000001797e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.83400000000517e-06, 7.84800000000474e-06, 7.833999999998231e-06, 7.805999999999091e-06, 7.888999999997037e-06, 7.846999999998328e-06, 7.832999999998758e-06, 7.860999999997897e-06, 7.833999999998231e-06, 7.846999999998328e-06, 7.832999999998758e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.402" endtime="20201115 22:00:43.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.398" endtime="20201115 22:00:43.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.407" endtime="20201115 22:00:43.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.410" endtime="20201115 22:00:43.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.409" endtime="20201115 22:00:43.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.405" endtime="20201115 22:00:43.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.032" endtime="20201115 22:00:43.431"></status>
</kw>
<msg timestamp="20201115 22:00:43.431" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.440" endtime="20201115 22:00:43.465"></status>
</kw>
<msg timestamp="20201115 22:00:43.466" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.438" endtime="20201115 22:00:43.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.468" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.467" endtime="20201115 22:00:43.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.469" endtime="20201115 22:00:43.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.436" endtime="20201115 22:00:43.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.434" endtime="20201115 22:00:43.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.479" endtime="20201115 22:00:43.765"></status>
</kw>
<msg timestamp="20201115 22:00:43.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019965125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.477" endtime="20201115 22:00:43.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019965125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019972944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.770" endtime="20201115 22:00:43.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.778" endtime="20201115 22:00:43.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.475" endtime="20201115 22:00:43.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.473" endtime="20201115 22:00:43.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.785" level="INFO">${RESULT} = [{'time': 0.019972944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.020273264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:43.781" endtime="20201115 22:00:43.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.799" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:43.786" endtime="20201115 22:00:43.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.804" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:43.803" endtime="20201115 22:00:43.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.806" level="INFO">VALUE: [7.818999999999188e-06, 7.846999999998328e-06, 7.889000000000507e-06, 7.833000000002227e-06, 7.846999999998328e-06, 7.847000000001797e-06, 7.791999999999522e-06, 7.847000000001797e-06, 7.833999999998231e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.847000000001797e-06, 7.860999999997897e-06, 7.861000000001367e-06, 7.833000000002227e-06, 7.777999999999952e-06, 7.8340000000017e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.8340000000017e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.861000000001367e-06, 7.750000000000812e-06, 7.833000000002227e-06, 7.847000000001797e-06, 7.860999999997897e-06, 7.847000000001797e-06, 7.846999999998328e-06, 7.82000000000213e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.804999999999618e-06, 7.846999999998328e-06, 7.846999999998328e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.902000000004072e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.833000000005697e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.763999999993443e-06, 7.846999999998328e-06, 7.84800000000474e-06, 7.84800000000474e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.805" endtime="20201115 22:00:43.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.800" endtime="20201115 22:00:43.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.809" endtime="20201115 22:00:43.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.813" endtime="20201115 22:00:43.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.811" endtime="20201115 22:00:43.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.808" endtime="20201115 22:00:43.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.432" endtime="20201115 22:00:43.833"></status>
</kw>
<msg timestamp="20201115 22:00:43.833" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.842" endtime="20201115 22:00:43.867"></status>
</kw>
<msg timestamp="20201115 22:00:43.867" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.841" endtime="20201115 22:00:43.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.870" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.868" endtime="20201115 22:00:43.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.871" endtime="20201115 22:00:43.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.838" endtime="20201115 22:00:43.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.836" endtime="20201115 22:00:43.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.881" endtime="20201115 22:00:44.167"></status>
</kw>
<msg timestamp="20201115 22:00:44.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.879" endtime="20201115 22:00:44.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.172" endtime="20201115 22:00:44.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.180" endtime="20201115 22:00:44.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.877" endtime="20201115 22:00:44.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.875" endtime="20201115 22:00:44.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.187" level="INFO">${RESULT} = [{'time': 0.019951472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.020253986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.183" endtime="20201115 22:00:44.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.200" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:44.188" endtime="20201115 22:00:44.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.205" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:44.204" endtime="20201115 22:00:44.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.207" level="INFO">VALUE: [7.847000000001797e-06, 7.875000000000937e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.8340000000017e-06, 7.860999999997897e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.847000000001797e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.82000000000213e-06, 7.861000000001367e-06, 7.861000000001367e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.791000000000048e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.861000000001367e-06, 7.82000000000213e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.861000000001367e-06, 7.84800000000127e-06, 7.847000000001797e-06, 7.846999999998328e-06, 7.847000000001797e-06, 7.902000000000603e-06, 7.818999999999188e-06, 7.84800000000127e-06, 7.847999999997801e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.847999999997801e-06, 7.832999999998758e-06, 7.889000000003976e-06, 7.846999999998328e-06, 7.833999999998231e-06, 7.83400000000517e-06, 7.818999999999188e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.846999999998328e-06, 7.847000000005266e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.206" endtime="20201115 22:00:44.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.201" endtime="20201115 22:00:44.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.210" endtime="20201115 22:00:44.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.214" endtime="20201115 22:00:44.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.212" endtime="20201115 22:00:44.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.209" endtime="20201115 22:00:44.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.834" endtime="20201115 22:00:44.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.233" endtime="20201115 22:00:44.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.232" endtime="20201115 22:00:44.235"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.237" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.246" endtime="20201115 22:00:44.271"></status>
</kw>
<msg timestamp="20201115 22:00:44.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.244" endtime="20201115 22:00:44.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.274" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.272" endtime="20201115 22:00:44.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.275" endtime="20201115 22:00:44.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.242" endtime="20201115 22:00:44.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.239" endtime="20201115 22:00:44.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.284" endtime="20201115 22:00:44.570"></status>
</kw>
<msg timestamp="20201115 22:00:44.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.283" endtime="20201115 22:00:44.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.574" endtime="20201115 22:00:44.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.582" endtime="20201115 22:00:44.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.280" endtime="20201115 22:00:44.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.278" endtime="20201115 22:00:44.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.589" level="INFO">${RESULT} = [{'time': 0.022219069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.022534833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.586" endtime="20201115 22:00:44.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.602" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:44.590" endtime="20201115 22:00:44.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.607" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:44.606" endtime="20201115 22:00:44.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.609" level="INFO">VALUE: [8.041000000000298e-06, 8.041000000000298e-06, 8.041000000000298e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.041000000000298e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.041999999999772e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.125000000001187e-06, 8.041000000000298e-06, 8.014000000000632e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.055999999999341e-06, 7.971999999998453e-06, 7.999999999997592e-06, 8.068999999999438e-06, 8.083000000002477e-06, 8.055999999999341e-06, 7.985999999998022e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.07000000000585e-06, 8.041000000000298e-06, 8.139000000004226e-06, 8.069000000006377e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.000000000001062e-06, 8.069000000006377e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.055999999999341e-06, 8.069999999998911e-06, 8.082999999999008e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.608" endtime="20201115 22:00:44.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.603" endtime="20201115 22:00:44.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.612" endtime="20201115 22:00:44.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.616" endtime="20201115 22:00:44.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.614" endtime="20201115 22:00:44.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.611" endtime="20201115 22:00:44.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.237" endtime="20201115 22:00:44.636"></status>
</kw>
<msg timestamp="20201115 22:00:44.637" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.645" endtime="20201115 22:00:44.671"></status>
</kw>
<msg timestamp="20201115 22:00:44.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.644" endtime="20201115 22:00:44.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.673" endtime="20201115 22:00:44.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.676" endtime="20201115 22:00:44.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.641" endtime="20201115 22:00:44.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.639" endtime="20201115 22:00:44.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.685" endtime="20201115 22:00:44.971"></status>
</kw>
<msg timestamp="20201115 22:00:44.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.684" endtime="20201115 22:00:44.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.975" endtime="20201115 22:00:44.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.983" endtime="20201115 22:00:44.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.681" endtime="20201115 22:00:44.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.680" endtime="20201115 22:00:44.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.990" level="INFO">${RESULT} = [{'time': 0.019921667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.020236125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.986" endtime="20201115 22:00:44.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.003" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:44.991" endtime="20201115 22:00:45.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.008" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:45.007" endtime="20201115 22:00:45.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.011" level="INFO">VALUE: [8.055999999999341e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.069000000002907e-06, 8.082999999999008e-06, 8.028000000000202e-06, 8.054999999999868e-06, 8.041000000000298e-06, 8.054999999999868e-06, 7.999999999997592e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.028000000000202e-06, 8.082999999999008e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.054999999999868e-06, 8.083999999998481e-06, 8.069999999998911e-06, 8.028000000000202e-06, 8.08400000000195e-06, 8.097999999998051e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.040999999996828e-06, 8.041000000000298e-06, 8.014000000000632e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.054999999999868e-06, 8.110999999998147e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.138999999997287e-06, 8.05600000000628e-06, 8.000000000001062e-06, 8.083999999998481e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.041999999999772e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.009" endtime="20201115 22:00:45.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.004" endtime="20201115 22:00:45.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.014" endtime="20201115 22:00:45.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.018" endtime="20201115 22:00:45.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.016" endtime="20201115 22:00:45.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.012" endtime="20201115 22:00:45.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.637" endtime="20201115 22:00:45.039"></status>
</kw>
<msg timestamp="20201115 22:00:45.039" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.048" endtime="20201115 22:00:45.074"></status>
</kw>
<msg timestamp="20201115 22:00:45.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.046" endtime="20201115 22:00:45.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.077" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.075" endtime="20201115 22:00:45.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.078" endtime="20201115 22:00:45.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.044" endtime="20201115 22:00:45.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.042" endtime="20201115 22:00:45.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.088" endtime="20201115 22:00:45.373"></status>
</kw>
<msg timestamp="20201115 22:00:45.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020575069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.086" endtime="20201115 22:00:45.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020575069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.377" endtime="20201115 22:00:45.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.385" endtime="20201115 22:00:45.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.084" endtime="20201115 22:00:45.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.082" endtime="20201115 22:00:45.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.392" level="INFO">${RESULT} = [{'time': 0.020583139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.020896347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:45.388" endtime="20201115 22:00:45.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.406" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:45.393" endtime="20201115 22:00:45.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.411" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:45.410" endtime="20201115 22:00:45.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.413" level="INFO">VALUE: [8.069999999998911e-06, 8.082999999999008e-06, 7.986000000001492e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.027999999996732e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.055999999999341e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.069000000002907e-06, 8.041999999999772e-06, 8.083999999998481e-06, 8.125000000001187e-06, 7.986000000001492e-06, 8.083999999998481e-06, 8.083999999998481e-06, 8.138999999997287e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.054999999999868e-06, 8.055999999999341e-06, 7.999999999997592e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.069999999998911e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.083000000005947e-06, 8.026999999993789e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.07000000000585e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.412" endtime="20201115 22:00:45.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.407" endtime="20201115 22:00:45.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.416" endtime="20201115 22:00:45.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.420" endtime="20201115 22:00:45.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.418" endtime="20201115 22:00:45.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.415" endtime="20201115 22:00:45.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.040" endtime="20201115 22:00:45.440"></status>
</kw>
<msg timestamp="20201115 22:00:45.440" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.450" endtime="20201115 22:00:45.475"></status>
</kw>
<msg timestamp="20201115 22:00:45.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.448" endtime="20201115 22:00:45.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.478" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.477" endtime="20201115 22:00:45.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.479" endtime="20201115 22:00:45.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.445" endtime="20201115 22:00:45.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.443" endtime="20201115 22:00:45.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.489" endtime="20201115 22:00:45.775"></status>
</kw>
<msg timestamp="20201115 22:00:45.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020314069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020322125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.488" endtime="20201115 22:00:45.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020314069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020322125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.779" endtime="20201115 22:00:45.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.787" endtime="20201115 22:00:45.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.485" endtime="20201115 22:00:45.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.483" endtime="20201115 22:00:45.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.794" level="INFO">${RESULT} = [{'time': 0.020322125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.020636264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:45.791" endtime="20201115 22:00:45.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.807" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:45.795" endtime="20201115 22:00:45.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.812" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:45.811" endtime="20201115 22:00:45.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.814" level="INFO">VALUE: [8.055999999999341e-06, 8.125000000001187e-06, 8.068999999999438e-06, 8.014000000000632e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.069000000002907e-06, 8.055999999999341e-06, 8.054999999999868e-06, 8.054999999999868e-06, 8.097000000002047e-06, 8.068999999999438e-06, 8.056000000002811e-06, 8.055999999999341e-06, 8.069999999998911e-06, 8.041999999999772e-06, 8.056000000002811e-06, 8.056000000002811e-06, 8.083999999998481e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.097000000002047e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.014000000000632e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.013000000001158e-06, 8.027000000000728e-06, 8.069999999998911e-06, 7.999999999997592e-06, 8.082999999999008e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.000000000001062e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.124999999997717e-06, 8.055999999999341e-06, 8.083000000005947e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.138999999997287e-06, 8.139000000004226e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.813" endtime="20201115 22:00:45.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.808" endtime="20201115 22:00:45.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.817" endtime="20201115 22:00:45.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.821" endtime="20201115 22:00:45.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.820" endtime="20201115 22:00:45.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.816" endtime="20201115 22:00:45.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.441" endtime="20201115 22:00:45.842"></status>
</kw>
<msg timestamp="20201115 22:00:45.842" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.851" endtime="20201115 22:00:45.877"></status>
</kw>
<msg timestamp="20201115 22:00:45.877" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.849" endtime="20201115 22:00:45.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.878" endtime="20201115 22:00:45.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.881" endtime="20201115 22:00:45.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.847" endtime="20201115 22:00:45.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.845" endtime="20201115 22:00:45.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.891" endtime="20201115 22:00:46.177"></status>
</kw>
<msg timestamp="20201115 22:00:46.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019939792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.889" endtime="20201115 22:00:46.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019939792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.181" endtime="20201115 22:00:46.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.190" endtime="20201115 22:00:46.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.887" endtime="20201115 22:00:46.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.885" endtime="20201115 22:00:46.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.196" level="INFO">${RESULT} = [{'time': 0.019947847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.020261625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:46.193" endtime="20201115 22:00:46.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.210" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:46.197" endtime="20201115 22:00:46.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.214" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:46.213" endtime="20201115 22:00:46.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.217" level="INFO">VALUE: [8.054999999999868e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.042000000003241e-06, 8.000000000001062e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.054999999999868e-06, 8.041999999999772e-06, 8.083000000002477e-06, 8.054999999999868e-06, 8.07000000000238e-06, 8.041999999999772e-06, 8.125000000001187e-06, 8.041999999999772e-06, 8.055999999999341e-06, 8.068999999999438e-06, 8.055999999999341e-06, 8.028000000000202e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.054999999999868e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.054999999999868e-06, 8.040999999996828e-06, 8.055999999999341e-06, 8.096999999998578e-06, 8.054999999999868e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.028000000000202e-06, 7.986000000001492e-06, 8.054999999999868e-06, 8.041999999999772e-06, 8.014000000000632e-06, 8.069999999998911e-06, 8.041000000000298e-06, 8.05600000000628e-06, 8.014000000000632e-06, 8.054999999999868e-06, 8.05600000000628e-06, 8.054999999999868e-06, 8.05600000000628e-06, 8.055999999999341e-06, 8.125000000004656e-06]</msg>
<status status="PASS" starttime="20201115 22:00:46.215" endtime="20201115 22:00:46.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.211" endtime="20201115 22:00:46.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.220" endtime="20201115 22:00:46.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.224" endtime="20201115 22:00:46.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.222" endtime="20201115 22:00:46.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.218" endtime="20201115 22:00:46.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.843" endtime="20201115 22:00:46.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.236" endtime="20201115 22:00:46.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.235" endtime="20201115 22:00:46.245"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.606" endtime="20201115 22:00:46.245"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.249" endtime="20201115 22:00:46.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.247" endtime="20201115 22:00:46.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.246" endtime="20201115 22:00:46.269"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:56.532" endtime="20201115 22:00:46.270" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.277" endtime="20201115 22:00:46.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.276" endtime="20201115 22:00:46.297"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.311" endtime="20201115 22:00:46.329"></status>
</kw>
<msg timestamp="20201115 22:00:46.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.310" endtime="20201115 22:00:46.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.332" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.331" endtime="20201115 22:00:46.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.335" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:46.333" endtime="20201115 22:00:46.335"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:46.307" endtime="20201115 22:00:46.336"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:46.304" endtime="20201115 22:00:46.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.302" endtime="20201115 22:00:46.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:46.341" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:46.340" endtime="20201115 22:00:46.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.338" endtime="20201115 22:00:46.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.301" endtime="20201115 22:00:46.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.301" endtime="20201115 22:00:46.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.342" endtime="20201115 22:00:46.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.299" endtime="20201115 22:00:46.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.298" endtime="20201115 22:00:46.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.274" endtime="20201115 22:00:46.345"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.348" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.357" endtime="20201115 22:00:46.370"></status>
</kw>
<msg timestamp="20201115 22:00:46.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.356" endtime="20201115 22:00:46.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.372" endtime="20201115 22:00:46.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.374" endtime="20201115 22:00:46.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.353" endtime="20201115 22:00:46.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.351" endtime="20201115 22:00:46.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.384" endtime="20201115 22:00:46.670"></status>
</kw>
<msg timestamp="20201115 22:00:46.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070713931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070718514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.383" endtime="20201115 22:00:46.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070713931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070718514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.675" endtime="20201115 22:00:46.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.683" endtime="20201115 22:00:46.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.379" endtime="20201115 22:00:46.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.377" endtime="20201115 22:00:46.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.689" level="INFO">${RESULT} = [{'time': 0.070718514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.070773472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:46.686" endtime="20201115 22:00:46.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.703" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:46.690" endtime="20201115 22:00:46.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.707" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:46.706" endtime="20201115 22:00:46.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.710" level="INFO">VALUE: [4.583000000002446e-06, 4.583000000002446e-06, 4.55600000000278e-06, 4.597999999994551e-06, 4.570000000009289e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.596999999995077e-06, 4.58400000000192e-06, 4.568999999995937e-06, 4.570000000009289e-06, 4.568999999995937e-06, 4.5829999999885684e-06, 4.583000000002446e-06, 4.55600000000278e-06, 4.568999999995937e-06, 4.597000000008955e-06, 4.52800000000364e-06, 4.568999999995937e-06, 4.5829999999885684e-06, 4.583000000002446e-06, 4.597000000008955e-06, 4.5000000000045e-06, 4.597000000008955e-06, 4.55600000000278e-06, 4.55600000000278e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.555000000003306e-06, 4.526999999990289e-06, 4.58400000000192e-06, 4.55600000000278e-06, 4.58400000000192e-06, 4.568999999995937e-06, 4.555999999988902e-06, 4.569999999995411e-06, 4.52800000000364e-06, 4.611000000001586e-06, 4.5279999999897624e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.596999999995077e-06, 4.541999999996271e-06, 4.611000000001586e-06, 4.568999999995937e-06, 4.569000000009815e-06, 4.569000000009815e-06, 4.569999999995411e-06, 4.570000000009289e-06, 4.583000000002446e-06]</msg>
<status status="PASS" starttime="20201115 22:00:46.708" endtime="20201115 22:00:46.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.704" endtime="20201115 22:00:46.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.713" endtime="20201115 22:00:46.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.716" endtime="20201115 22:00:46.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.715" endtime="20201115 22:00:46.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.711" endtime="20201115 22:00:46.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.349" endtime="20201115 22:00:46.737"></status>
</kw>
<msg timestamp="20201115 22:00:46.737" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.746" endtime="20201115 22:00:46.759"></status>
</kw>
<msg timestamp="20201115 22:00:46.760" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.745" endtime="20201115 22:00:46.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.762" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.761" endtime="20201115 22:00:46.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.763" endtime="20201115 22:00:46.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.742" endtime="20201115 22:00:46.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.740" endtime="20201115 22:00:46.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.774" endtime="20201115 22:00:47.061"></status>
</kw>
<msg timestamp="20201115 22:00:47.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.771" endtime="20201115 22:00:47.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.065" endtime="20201115 22:00:47.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.074" endtime="20201115 22:00:47.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.768" endtime="20201115 22:00:47.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.766" endtime="20201115 22:00:47.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.081" level="INFO">${RESULT} = [{'time': 0.020142292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.020194778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:47.077" endtime="20201115 22:00:47.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.094" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:47.082" endtime="20201115 22:00:47.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.098" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.097" endtime="20201115 22:00:47.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.101" level="INFO">VALUE: [4.5699999999988805e-06, 4.5839999999984504e-06, 4.5839999999984504e-06, 4.554999999999837e-06, 4.5699999999988805e-06, 4.554999999999837e-06, 4.5839999999984504e-06, 4.596999999998547e-06, 4.5699999999988805e-06, 4.569000000002876e-06, 4.582999999998977e-06, 4.485999999997992e-06, 4.57000000000235e-06, 4.5699999999988805e-06, 4.583000000002446e-06, 4.57000000000235e-06, 4.568999999999407e-06, 4.582999999998977e-06, 4.58400000000192e-06, 4.528000000000171e-06, 4.554999999999837e-06, 4.568999999999407e-06, 4.4999999999975615e-06, 4.554999999999837e-06, 4.514000000000601e-06, 4.596999999998547e-06, 4.55600000000278e-06, 4.5699999999988805e-06, 4.568999999999407e-06, 4.513999999997131e-06, 4.554999999999837e-06, 4.597000000002016e-06, 4.568999999999407e-06, 4.57000000000235e-06, 4.569000000002876e-06, 4.57000000000235e-06, 4.568999999999407e-06, 4.57000000000235e-06, 4.57000000000235e-06, 4.5699999999988805e-06, 4.55600000000278e-06, 4.582999999998977e-06, 4.554999999999837e-06, 4.514000000000601e-06, 4.5839999999984504e-06, 4.582999999998977e-06, 4.625000000001156e-06, 4.569000000002876e-06, 4.5699999999988805e-06, 4.568999999999407e-06]</msg>
<status status="PASS" starttime="20201115 22:00:47.099" endtime="20201115 22:00:47.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.095" endtime="20201115 22:00:47.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.104" endtime="20201115 22:00:47.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.108" endtime="20201115 22:00:47.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.106" endtime="20201115 22:00:47.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.103" endtime="20201115 22:00:47.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.738" endtime="20201115 22:00:47.128"></status>
</kw>
<msg timestamp="20201115 22:00:47.129" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.137" endtime="20201115 22:00:47.150"></status>
</kw>
<msg timestamp="20201115 22:00:47.150" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.136" endtime="20201115 22:00:47.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.152" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.151" endtime="20201115 22:00:47.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.154" endtime="20201115 22:00:47.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.133" endtime="20201115 22:00:47.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.131" endtime="20201115 22:00:47.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.163" endtime="20201115 22:00:47.449"></status>
</kw>
<msg timestamp="20201115 22:00:47.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019919361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019923889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.161" endtime="20201115 22:00:47.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019919361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019923889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.454" endtime="20201115 22:00:47.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.462" endtime="20201115 22:00:47.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.158" endtime="20201115 22:00:47.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.157" endtime="20201115 22:00:47.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.469" level="INFO">${RESULT} = [{'time': 0.019923889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.019975361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:47.465" endtime="20201115 22:00:47.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.482" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:47.470" endtime="20201115 22:00:47.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.486" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.485" endtime="20201115 22:00:47.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.489" level="INFO">VALUE: [4.528000000000171e-06, 4.568999999999407e-06, 4.58400000000192e-06, 4.5699999999988805e-06, 4.582999999998977e-06, 4.568999999999407e-06, 4.583000000002446e-06, 4.582999999998977e-06, 4.596999999998547e-06, 4.5839999999984504e-06, 4.568999999999407e-06, 4.5699999999988805e-06, 4.582999999998977e-06, 4.5699999999988805e-06, 4.582999999998977e-06, 4.568999999999407e-06, 4.555999999999311e-06, 4.568999999999407e-06, 4.583000000002446e-06, 4.500000000001031e-06, 4.568999999999407e-06, 4.5699999999988805e-06, 4.568999999999407e-06, 4.611000000001586e-06, 4.500000000001031e-06, 4.582999999998977e-06, 4.597000000002016e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.582999999998977e-06, 4.554999999999837e-06, 4.597000000002016e-06, 4.554999999999837e-06, 4.596999999998547e-06, 4.568999999999407e-06, 4.582999999998977e-06, 4.555999999999311e-06, 4.5839999999984504e-06, 4.5699999999988805e-06, 4.568999999999407e-06, 4.568999999999407e-06, 4.583000000002446e-06, 4.611000000001586e-06, 4.582999999998977e-06, 4.568999999999407e-06, 4.5839999999984504e-06, 4.555999999999311e-06, 4.555999999999311e-06, 4.5699999999988805e-06, 4.55600000000278e-06]</msg>
<status status="PASS" starttime="20201115 22:00:47.487" endtime="20201115 22:00:47.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.483" endtime="20201115 22:00:47.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.492" endtime="20201115 22:00:47.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.496" endtime="20201115 22:00:47.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.494" endtime="20201115 22:00:47.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.491" endtime="20201115 22:00:47.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.129" endtime="20201115 22:00:47.516"></status>
</kw>
<msg timestamp="20201115 22:00:47.517" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.525" endtime="20201115 22:00:47.539"></status>
</kw>
<msg timestamp="20201115 22:00:47.539" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.524" endtime="20201115 22:00:47.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.542" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.540" endtime="20201115 22:00:47.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.543" endtime="20201115 22:00:47.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.521" endtime="20201115 22:00:47.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.519" endtime="20201115 22:00:47.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.552" endtime="20201115 22:00:47.838"></status>
</kw>
<msg timestamp="20201115 22:00:47.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019992, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:47.550" endtime="20201115 22:00:47.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019992, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:47.843" endtime="20201115 22:00:47.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.851" endtime="20201115 22:00:47.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.547" endtime="20201115 22:00:47.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.546" endtime="20201115 22:00:47.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.857" level="INFO">${RESULT} = [{'time': 0.019992, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.020046847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:47.854" endtime="20201115 22:00:47.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.871" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:47.858" endtime="20201115 22:00:47.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.875" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.874" endtime="20201115 22:00:47.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.878" level="INFO">VALUE: [4.568999999999407e-06, 4.582999999998977e-06, 4.582999999998977e-06, 4.582999999998977e-06, 4.582999999998977e-06, 4.59799999999802e-06, 4.597000000002016e-06, 4.5699999999988805e-06, 4.554999999999837e-06, 4.582999999998977e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.610999999998117e-06, 4.541000000000267e-06, 4.569000000002876e-06, 4.57000000000235e-06, 4.5699999999988805e-06, 4.582999999998977e-06, 4.58400000000192e-06, 4.610999999998117e-06, 4.568999999999407e-06, 4.55600000000278e-06, 4.5699999999988805e-06, 4.555999999999311e-06, 4.582999999998977e-06, 4.555999999999311e-06, 4.5699999999988805e-06, 4.5699999999988805e-06, 4.5699999999988805e-06, 4.568999999999407e-06, 4.568999999999407e-06, 4.554999999999837e-06, 4.58400000000192e-06, 4.58400000000192e-06, 4.57000000000235e-06, 4.554999999999837e-06, 4.55600000000278e-06, 4.528000000000171e-06, 4.5699999999988805e-06, 4.541999999999741e-06, 4.596999999998547e-06, 4.5699999999988805e-06, 4.596999999998547e-06, 4.59800000000149e-06, 4.528000000000171e-06, 4.568999999999407e-06, 4.610999999998117e-06, 4.582999999998977e-06, 4.568999999999407e-06, 4.500000000001031e-06]</msg>
<status status="PASS" starttime="20201115 22:00:47.876" endtime="20201115 22:00:47.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.872" endtime="20201115 22:00:47.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.881" endtime="20201115 22:00:47.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.885" endtime="20201115 22:00:47.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.883" endtime="20201115 22:00:47.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.880" endtime="20201115 22:00:47.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.517" endtime="20201115 22:00:47.905"></status>
</kw>
<msg timestamp="20201115 22:00:47.905" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.914" endtime="20201115 22:00:47.928"></status>
</kw>
<msg timestamp="20201115 22:00:47.928" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.913" endtime="20201115 22:00:47.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.931" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.929" endtime="20201115 22:00:47.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.932" endtime="20201115 22:00:47.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.910" endtime="20201115 22:00:47.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.908" endtime="20201115 22:00:47.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.940" endtime="20201115 22:00:48.227"></status>
</kw>
<msg timestamp="20201115 22:00:48.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020161056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:47.939" endtime="20201115 22:00:48.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020161056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:48.232" endtime="20201115 22:00:48.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.240" endtime="20201115 22:00:48.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.936" endtime="20201115 22:00:48.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.935" endtime="20201115 22:00:48.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.247" level="INFO">${RESULT} = [{'time': 0.020161056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.020216083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:48.243" endtime="20201115 22:00:48.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.260" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:48.248" endtime="20201115 22:00:48.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.264" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.263" endtime="20201115 22:00:48.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.267" level="INFO">VALUE: [4.555999999999311e-06, 4.568999999999407e-06, 4.6249999999976865e-06, 4.582999999998977e-06, 4.568999999999407e-06, 4.514000000000601e-06, 4.568999999999407e-06, 4.5699999999988805e-06, 4.610999999998117e-06, 4.528000000000171e-06, 4.5839999999984504e-06, 4.568999999999407e-06, 4.596999999998547e-06, 4.568999999999407e-06, 4.5839999999984504e-06, 4.555999999999311e-06, 4.58400000000192e-06, 4.582999999998977e-06, 4.611000000001586e-06, 4.555999999999311e-06, 4.568999999999407e-06, 4.57000000000235e-06, 4.555999999999311e-06, 4.582999999998977e-06, 4.527000000000697e-06, 4.5699999999988805e-06, 4.568999999999407e-06, 4.4999999999975615e-06, 4.554999999999837e-06, 4.568999999999407e-06, 4.568999999999407e-06, 4.5699999999988805e-06, 4.5839999999984504e-06, 4.5699999999988805e-06, 4.569000000002876e-06, 4.555999999999311e-06, 4.568999999999407e-06, 4.582999999998977e-06, 4.596999999998547e-06, 4.568999999999407e-06, 4.597000000002016e-06, 4.5699999999988805e-06, 4.596999999998547e-06, 4.59800000000149e-06, 4.582999999998977e-06, 4.583000000002446e-06, 4.55600000000278e-06, 4.6389999999972564e-06, 4.569000000002876e-06, 4.58400000000192e-06]</msg>
<status status="PASS" starttime="20201115 22:00:48.265" endtime="20201115 22:00:48.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.261" endtime="20201115 22:00:48.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.270" endtime="20201115 22:00:48.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.274" endtime="20201115 22:00:48.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.272" endtime="20201115 22:00:48.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.269" endtime="20201115 22:00:48.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.906" endtime="20201115 22:00:48.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.347" endtime="20201115 22:00:48.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.346" endtime="20201115 22:00:48.295"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.297" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.306" endtime="20201115 22:00:48.319"></status>
</kw>
<msg timestamp="20201115 22:00:48.320" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.304" endtime="20201115 22:00:48.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.321" endtime="20201115 22:00:48.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.323" endtime="20201115 22:00:48.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.302" endtime="20201115 22:00:48.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.300" endtime="20201115 22:00:48.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.332" endtime="20201115 22:00:48.619"></status>
</kw>
<msg timestamp="20201115 22:00:48.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.331" endtime="20201115 22:00:48.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.623" endtime="20201115 22:00:48.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.631" endtime="20201115 22:00:48.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.328" endtime="20201115 22:00:48.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.326" endtime="20201115 22:00:48.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.638" level="INFO">${RESULT} = [{'time': 0.022330944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.776999999999478e-06, 'source_diff': 6.776999999999478e-06}, {'time': 0.022394708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:48.635" endtime="20201115 22:00:48.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.651" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:48.639" endtime="20201115 22:00:48.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.656" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.655" endtime="20201115 22:00:48.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.659" level="INFO">VALUE: [6.776999999999478e-06, 6.736000000000242e-06, 6.792000000001991e-06, 6.776999999999478e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.819000000001657e-06, 6.805999999998091e-06, 6.820000000001131e-06, 6.792000000001991e-06, 6.791000000002517e-06, 6.804999999998618e-06, 6.8469999999973274e-06, 6.805999999998091e-06, 6.792000000001991e-06, 6.790999999999048e-06, 6.790999999999048e-06, 6.804999999998618e-06, 6.776999999999478e-06, 6.804999999998618e-06, 6.778000000002421e-06, 6.7779999999989515e-06, 6.805000000002087e-06, 6.778000000002421e-06, 6.804999999998618e-06, 6.776999999999478e-06, 6.7779999999989515e-06, 6.806000000001561e-06, 6.819999999997661e-06, 6.792000000001991e-06, 6.7919999999985214e-06, 6.804999999998618e-06, 6.7779999999989515e-06, 6.792000000001991e-06, 6.7779999999989515e-06, 6.778000000002421e-06, 6.792000000001991e-06, 6.7919999999985214e-06, 6.792000000001991e-06, 6.834000000000701e-06, 6.792000000001991e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.791000000002517e-06, 6.778000000002421e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.776999999999478e-06]</msg>
<status status="PASS" starttime="20201115 22:00:48.657" endtime="20201115 22:00:48.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.652" endtime="20201115 22:00:48.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.662" endtime="20201115 22:00:48.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.665" endtime="20201115 22:00:48.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.664" endtime="20201115 22:00:48.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.660" endtime="20201115 22:00:48.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.297" endtime="20201115 22:00:48.686"></status>
</kw>
<msg timestamp="20201115 22:00:48.686" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.695" endtime="20201115 22:00:48.709"></status>
</kw>
<msg timestamp="20201115 22:00:48.710" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.693" endtime="20201115 22:00:48.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.712" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.711" endtime="20201115 22:00:48.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.713" endtime="20201115 22:00:48.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.691" endtime="20201115 22:00:48.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.689" endtime="20201115 22:00:48.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.722" endtime="20201115 22:00:49.008"></status>
</kw>
<msg timestamp="20201115 22:00:49.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.721" endtime="20201115 22:00:49.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.012" endtime="20201115 22:00:49.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.021" endtime="20201115 22:00:49.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.718" endtime="20201115 22:00:49.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.717" endtime="20201115 22:00:49.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.027" level="INFO">${RESULT} = [{'time': 0.020072972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.020134208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.024" endtime="20201115 22:00:49.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.040" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:49.028" endtime="20201115 22:00:49.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.045" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.044" endtime="20201115 22:00:49.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.048" level="INFO">VALUE: [6.805000000002087e-06, 6.763999999999382e-06, 6.792000000001991e-06, 6.7779999999989515e-06, 6.790999999999048e-06, 6.7919999999985214e-06, 6.7779999999989515e-06, 6.806000000001561e-06, 6.791000000002517e-06, 6.7919999999985214e-06, 6.776999999999478e-06, 6.847000000000797e-06, 6.805999999998091e-06, 6.806000000001561e-06, 6.804999999998618e-06, 6.792000000001991e-06, 6.806000000001561e-06, 6.7919999999985214e-06, 6.804999999998618e-06, 6.806000000001561e-06, 6.778000000002421e-06, 6.7919999999985214e-06, 6.805000000002087e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.847999999996801e-06, 6.749999999999812e-06, 6.804999999998618e-06, 6.792000000001991e-06, 6.805000000002087e-06, 6.806000000001561e-06, 6.847000000000797e-06, 6.806000000001561e-06, 6.834000000000701e-06, 6.806000000001561e-06, 6.792000000001991e-06, 6.763999999999382e-06, 6.764000000002851e-06, 6.791000000002517e-06, 6.7919999999985214e-06, 6.790999999999048e-06, 6.7779999999989515e-06, 6.778000000002421e-06, 6.804999999998618e-06, 6.7919999999985214e-06, 6.778000000002421e-06, 6.708000000001102e-06, 6.7919999999985214e-06, 6.7779999999989515e-06, 6.804999999998618e-06]</msg>
<status status="PASS" starttime="20201115 22:00:49.046" endtime="20201115 22:00:49.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.042" endtime="20201115 22:00:49.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.051" endtime="20201115 22:00:49.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.054" endtime="20201115 22:00:49.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.053" endtime="20201115 22:00:49.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.049" endtime="20201115 22:00:49.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.686" endtime="20201115 22:00:49.075"></status>
</kw>
<msg timestamp="20201115 22:00:49.075" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.085" endtime="20201115 22:00:49.100"></status>
</kw>
<msg timestamp="20201115 22:00:49.100" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.083" endtime="20201115 22:00:49.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.101" endtime="20201115 22:00:49.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.104" endtime="20201115 22:00:49.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.080" endtime="20201115 22:00:49.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.078" endtime="20201115 22:00:49.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.113" endtime="20201115 22:00:49.399"></status>
</kw>
<msg timestamp="20201115 22:00:49.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020618042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.111" endtime="20201115 22:00:49.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020618042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.403" endtime="20201115 22:00:49.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.411" endtime="20201115 22:00:49.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.109" endtime="20201115 22:00:49.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.107" endtime="20201115 22:00:49.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.418" level="INFO">${RESULT} = [{'time': 0.020624819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.776999999999478e-06, 'source_diff': 6.776999999999478e-06}, {'time': 0.020685097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.415" endtime="20201115 22:00:49.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.432" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:49.419" endtime="20201115 22:00:49.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.436" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.435" endtime="20201115 22:00:49.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.438" level="INFO">VALUE: [6.776999999999478e-06, 6.7779999999989515e-06, 6.762999999999908e-06, 6.791000000002517e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.7779999999989515e-06, 6.722000000000672e-06, 6.7779999999989515e-06, 6.776999999999478e-06, 6.778000000002421e-06, 6.776999999999478e-06, 6.792000000001991e-06, 6.792000000001991e-06, 6.778000000002421e-06, 6.790999999999048e-06, 6.7919999999985214e-06, 6.790999999999048e-06, 6.790999999999048e-06, 6.7779999999989515e-06, 6.861000000000367e-06, 6.776999999999478e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.7779999999989515e-06, 6.792000000001991e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.7919999999985214e-06, 6.722000000000672e-06, 6.7919999999985214e-06, 6.7919999999985214e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.790999999999048e-06, 6.805000000002087e-06, 6.7219999999972024e-06, 6.805000000002087e-06, 6.7919999999985214e-06, 6.7919999999985214e-06, 6.778000000002421e-06, 6.736000000000242e-06, 6.791000000002517e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.776999999999478e-06, 6.804999999998618e-06]</msg>
<status status="PASS" starttime="20201115 22:00:49.437" endtime="20201115 22:00:49.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.432" endtime="20201115 22:00:49.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.442" endtime="20201115 22:00:49.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.445" endtime="20201115 22:00:49.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.443" endtime="20201115 22:00:49.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.440" endtime="20201115 22:00:49.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.076" endtime="20201115 22:00:49.466"></status>
</kw>
<msg timestamp="20201115 22:00:49.466" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.475" endtime="20201115 22:00:49.489"></status>
</kw>
<msg timestamp="20201115 22:00:49.489" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.473" endtime="20201115 22:00:49.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.490" endtime="20201115 22:00:49.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.493" endtime="20201115 22:00:49.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.470" endtime="20201115 22:00:49.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.468" endtime="20201115 22:00:49.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.502" endtime="20201115 22:00:49.787"></status>
</kw>
<msg timestamp="20201115 22:00:49.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019987306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.500" endtime="20201115 22:00:49.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019987306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.792" endtime="20201115 22:00:49.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.800" endtime="20201115 22:00:49.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.498" endtime="20201115 22:00:49.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.496" endtime="20201115 22:00:49.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.807" level="INFO">${RESULT} = [{'time': 0.019987306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.020048736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:49.804" endtime="20201115 22:00:49.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.820" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:49.808" endtime="20201115 22:00:49.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.825" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.824" endtime="20201115 22:00:49.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.827" level="INFO">VALUE: [6.7919999999985214e-06, 6.778000000002421e-06, 6.7779999999989515e-06, 6.792000000001991e-06, 6.7919999999985214e-06, 6.778000000002421e-06, 6.806000000001561e-06, 6.790999999999048e-06, 6.792000000001991e-06, 6.792000000001991e-06, 6.790999999999048e-06, 6.7779999999989515e-06, 6.792000000001991e-06, 6.7919999999985214e-06, 6.763999999999382e-06, 6.805000000002087e-06, 6.820000000001131e-06, 6.7779999999989515e-06, 6.790999999999048e-06, 6.806000000001561e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.804999999998618e-06, 6.776999999999478e-06, 6.790999999999048e-06, 6.764000000002851e-06, 6.736000000000242e-06, 6.7919999999985214e-06, 6.8469999999973274e-06, 6.819000000001657e-06, 6.778000000002421e-06, 6.763999999999382e-06, 6.792000000001991e-06, 6.749999999999812e-06, 6.790999999999048e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.806000000001561e-06, 6.790999999999048e-06, 6.7919999999985214e-06, 6.790999999999048e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.805000000002087e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.7779999999989515e-06]</msg>
<status status="PASS" starttime="20201115 22:00:49.826" endtime="20201115 22:00:49.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.821" endtime="20201115 22:00:49.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.830" endtime="20201115 22:00:49.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.834" endtime="20201115 22:00:49.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.832" endtime="20201115 22:00:49.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.829" endtime="20201115 22:00:49.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.466" endtime="20201115 22:00:49.854"></status>
</kw>
<msg timestamp="20201115 22:00:49.855" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.864" endtime="20201115 22:00:49.877"></status>
</kw>
<msg timestamp="20201115 22:00:49.877" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.862" endtime="20201115 22:00:49.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.878" endtime="20201115 22:00:49.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.881" endtime="20201115 22:00:49.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.859" endtime="20201115 22:00:49.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.857" endtime="20201115 22:00:49.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.890" endtime="20201115 22:00:50.177"></status>
</kw>
<msg timestamp="20201115 22:00:50.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020026264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.888" endtime="20201115 22:00:50.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020026264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.186" endtime="20201115 22:00:50.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.194" endtime="20201115 22:00:50.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.885" endtime="20201115 22:00:50.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.884" endtime="20201115 22:00:50.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.201" level="INFO">${RESULT} = [{'time': 0.020026264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.020089625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.197" endtime="20201115 22:00:50.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.214" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:50.202" endtime="20201115 22:00:50.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.218" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.217" endtime="20201115 22:00:50.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.221" level="INFO">VALUE: [6.805999999998091e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.819000000001657e-06, 6.763999999999382e-06, 6.776999999999478e-06, 6.804999999998618e-06, 6.709000000000576e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.833000000001227e-06, 6.8469999999973274e-06, 6.7779999999989515e-06, 6.776999999999478e-06, 6.847000000000797e-06, 6.834000000000701e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.805999999998091e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.790999999999048e-06, 6.777000000002947e-06, 6.806000000001561e-06, 6.805999999998091e-06, 6.805999999998091e-06, 6.804999999998618e-06, 6.7369999999997154e-06, 6.792000000001991e-06, 6.7779999999989515e-06, 6.776999999999478e-06, 6.833000000001227e-06, 6.7919999999985214e-06, 6.7779999999989515e-06, 6.792000000001991e-06, 6.749999999999812e-06, 6.833000000001227e-06, 6.790999999999048e-06, 6.790999999999048e-06, 6.790999999999048e-06, 6.847000000000797e-06, 6.7779999999989515e-06, 6.806000000001561e-06, 6.7919999999985214e-06]</msg>
<status status="PASS" starttime="20201115 22:00:50.220" endtime="20201115 22:00:50.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.215" endtime="20201115 22:00:50.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.224" endtime="20201115 22:00:50.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.227" endtime="20201115 22:00:50.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.226" endtime="20201115 22:00:50.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.222" endtime="20201115 22:00:50.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.855" endtime="20201115 22:00:50.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.296" endtime="20201115 22:00:50.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.295" endtime="20201115 22:00:50.248"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.251" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.259" endtime="20201115 22:00:50.273"></status>
</kw>
<msg timestamp="20201115 22:00:50.274" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.258" endtime="20201115 22:00:50.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.275" endtime="20201115 22:00:50.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.277" endtime="20201115 22:00:50.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.255" endtime="20201115 22:00:50.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.253" endtime="20201115 22:00:50.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.286" endtime="20201115 22:00:50.573"></status>
</kw>
<msg timestamp="20201115 22:00:50.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.285" endtime="20201115 22:00:50.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.578" endtime="20201115 22:00:50.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.586" endtime="20201115 22:00:50.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.282" endtime="20201115 22:00:50.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.281" endtime="20201115 22:00:50.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.593" level="INFO">${RESULT} = [{'time': 0.022286319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.022357861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.589" endtime="20201115 22:00:50.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.606" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:50.594" endtime="20201115 22:00:50.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.610" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.609" endtime="20201115 22:00:50.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.613" level="INFO">VALUE: [6.943999999998313e-06, 6.972000000000922e-06, 7.000000000000062e-06, 6.930999999998216e-06, 6.888999999999507e-06, 6.972000000000922e-06, 6.943999999998313e-06, 6.943999999998313e-06, 6.944000000001782e-06, 6.9579999999978825e-06, 6.958000000001352e-06, 6.958000000001352e-06, 7.000000000000062e-06, 6.943999999998313e-06, 6.945000000001256e-06, 6.888999999999507e-06, 6.972000000000922e-06, 6.931000000001686e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.9029999999990765e-06, 6.958000000001352e-06, 6.958999999997356e-06, 6.943999999998313e-06, 6.943999999998313e-06, 6.888000000000033e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.943999999998313e-06, 6.945000000001256e-06, 6.943999999998313e-06, 6.972000000000922e-06, 6.874999999999937e-06, 7.000000000000062e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.9719999999974525e-06, 6.959000000000826e-06, 6.9579999999978825e-06, 6.959000000000826e-06, 6.944999999997786e-06, 6.944999999997786e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.930999999998216e-06, 6.9869999999999655e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.972000000000922e-06]</msg>
<status status="PASS" starttime="20201115 22:00:50.611" endtime="20201115 22:00:50.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.607" endtime="20201115 22:00:50.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.616" endtime="20201115 22:00:50.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.619" endtime="20201115 22:00:50.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.618" endtime="20201115 22:00:50.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.614" endtime="20201115 22:00:50.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.251" endtime="20201115 22:00:50.640"></status>
</kw>
<msg timestamp="20201115 22:00:50.640" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.649" endtime="20201115 22:00:50.664"></status>
</kw>
<msg timestamp="20201115 22:00:50.664" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.647" endtime="20201115 22:00:50.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.665" endtime="20201115 22:00:50.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.668" endtime="20201115 22:00:50.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.645" endtime="20201115 22:00:50.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.643" endtime="20201115 22:00:50.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.677" endtime="20201115 22:00:50.963"></status>
</kw>
<msg timestamp="20201115 22:00:50.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019992319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.675" endtime="20201115 22:00:50.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019992319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.968" endtime="20201115 22:00:50.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.976" endtime="20201115 22:00:50.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.673" endtime="20201115 22:00:50.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.671" endtime="20201115 22:00:50.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.983" level="INFO">${RESULT} = [{'time': 0.019999278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958999999997356e-06, 'source_diff': 6.958999999997356e-06}, {'time': 0.020072056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.979" endtime="20201115 22:00:50.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.996" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:50.984" endtime="20201115 22:00:50.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.000" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.999" endtime="20201115 22:00:51.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.003" level="INFO">VALUE: [6.958999999997356e-06, 6.945000000001256e-06, 6.943999999998313e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.930000000002212e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.944000000001782e-06, 6.874999999999937e-06, 6.958999999997356e-06, 6.943999999998313e-06, 6.9730000000003955e-06, 6.959000000000826e-06, 6.959000000000826e-06, 6.944999999997786e-06, 6.943999999998313e-06, 6.959000000000826e-06, 7.000000000000062e-06, 6.959000000000826e-06, 6.9579999999978825e-06, 6.944000000001782e-06, 6.9169999999986465e-06, 6.930000000002212e-06, 6.958999999997356e-06, 7.026999999999728e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.959000000000826e-06, 6.9579999999978825e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.959000000000826e-06, 6.9719999999974525e-06, 6.930999999998216e-06, 6.958000000001352e-06, 6.958999999997356e-06, 6.986000000000492e-06, 6.9869999999999655e-06, 6.944999999997786e-06, 6.958000000001352e-06, 6.901999999999603e-06, 7.028000000002671e-06, 6.943999999998313e-06, 6.9719999999974525e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.9579999999978825e-06, 6.945000000001256e-06]</msg>
<status status="PASS" starttime="20201115 22:00:51.001" endtime="20201115 22:00:51.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.997" endtime="20201115 22:00:51.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.006" endtime="20201115 22:00:51.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.009" endtime="20201115 22:00:51.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.008" endtime="20201115 22:00:51.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.004" endtime="20201115 22:00:51.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.641" endtime="20201115 22:00:51.030"></status>
</kw>
<msg timestamp="20201115 22:00:51.030" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.039" endtime="20201115 22:00:51.054"></status>
</kw>
<msg timestamp="20201115 22:00:51.054" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.037" endtime="20201115 22:00:51.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.057" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.055" endtime="20201115 22:00:51.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.058" endtime="20201115 22:00:51.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.035" endtime="20201115 22:00:51.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.033" endtime="20201115 22:00:51.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.067" endtime="20201115 22:00:51.354"></status>
</kw>
<msg timestamp="20201115 22:00:51.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020622861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.065" endtime="20201115 22:00:51.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020622861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.358" endtime="20201115 22:00:51.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.366" endtime="20201115 22:00:51.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.063" endtime="20201115 22:00:51.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.061" endtime="20201115 22:00:51.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.373" level="INFO">${RESULT} = [{'time': 0.020629806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.020702528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:51.370" endtime="20201115 22:00:51.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.386" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:51.374" endtime="20201115 22:00:51.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.391" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.390" endtime="20201115 22:00:51.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.393" level="INFO">VALUE: [6.945000000001256e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.958000000001352e-06, 6.931000000001686e-06, 6.945000000001256e-06, 7.000000000000062e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.945000000001256e-06, 6.972000000000922e-06, 6.943999999998313e-06, 6.972000000000922e-06, 6.958999999997356e-06, 6.943999999998313e-06, 6.9719999999974525e-06, 6.944999999997786e-06, 7.000000000000062e-06, 6.944000000001782e-06, 6.943999999998313e-06, 6.945000000001256e-06, 6.930999999998216e-06, 7.000000000000062e-06, 6.945000000001256e-06, 6.9579999999978825e-06, 6.929999999998743e-06, 6.9579999999978825e-06, 6.959000000000826e-06, 6.930000000002212e-06, 6.917000000002116e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.929999999998743e-06, 6.930000000002212e-06, 6.9719999999974525e-06, 6.9579999999978825e-06, 7.000000000000062e-06, 6.888999999999507e-06, 6.930000000002212e-06, 6.944000000001782e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.943999999998313e-06, 6.943999999998313e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 22:00:51.392" endtime="20201115 22:00:51.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.387" endtime="20201115 22:00:51.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.396" endtime="20201115 22:00:51.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.400" endtime="20201115 22:00:51.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.398" endtime="20201115 22:00:51.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.395" endtime="20201115 22:00:51.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.031" endtime="20201115 22:00:51.421"></status>
</kw>
<msg timestamp="20201115 22:00:51.421" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.430" endtime="20201115 22:00:51.444"></status>
</kw>
<msg timestamp="20201115 22:00:51.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.428" endtime="20201115 22:00:51.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.446" endtime="20201115 22:00:51.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.448" endtime="20201115 22:00:51.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.425" endtime="20201115 22:00:51.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.423" endtime="20201115 22:00:51.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.457" endtime="20201115 22:00:51.744"></status>
</kw>
<msg timestamp="20201115 22:00:51.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.455" endtime="20201115 22:00:51.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.748" endtime="20201115 22:00:51.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.757" endtime="20201115 22:00:51.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.453" endtime="20201115 22:00:51.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.451" endtime="20201115 22:00:51.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.763" level="INFO">${RESULT} = [{'time': 0.020459361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.020530958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:51.760" endtime="20201115 22:00:51.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.777" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:51.764" endtime="20201115 22:00:51.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.781" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.780" endtime="20201115 22:00:51.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.784" level="INFO">VALUE: [6.943999999998313e-06, 6.943999999998313e-06, 6.944999999997786e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 7.000000000000062e-06, 6.944999999997786e-06, 6.958000000001352e-06, 6.959000000000826e-06, 6.944000000001782e-06, 7.0279999999992016e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.943999999998313e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.930999999998216e-06, 6.945000000001256e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.943999999998313e-06, 6.944000000001782e-06, 6.888999999999507e-06, 6.944000000001782e-06, 6.931000000001686e-06, 6.888999999999507e-06, 6.958000000001352e-06, 6.943999999998313e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.972000000000922e-06, 6.944999999997786e-06, 6.944999999997786e-06, 6.930999999998216e-06, 6.915999999999173e-06, 6.972000000000922e-06, 6.930000000002212e-06, 6.959000000000826e-06, 6.944999999997786e-06, 6.944999999997786e-06, 6.945000000001256e-06, 6.944999999997786e-06, 6.958000000001352e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.944000000001782e-06]</msg>
<status status="PASS" starttime="20201115 22:00:51.782" endtime="20201115 22:00:51.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.778" endtime="20201115 22:00:51.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.787" endtime="20201115 22:00:51.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.791" endtime="20201115 22:00:51.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.789" endtime="20201115 22:00:51.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.785" endtime="20201115 22:00:51.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.421" endtime="20201115 22:00:51.811"></status>
</kw>
<msg timestamp="20201115 22:00:51.811" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.820" endtime="20201115 22:00:51.835"></status>
</kw>
<msg timestamp="20201115 22:00:51.835" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.819" endtime="20201115 22:00:51.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.837" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.836" endtime="20201115 22:00:51.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.839" endtime="20201115 22:00:51.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.816" endtime="20201115 22:00:51.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.814" endtime="20201115 22:00:51.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.847" endtime="20201115 22:00:52.134"></status>
</kw>
<msg timestamp="20201115 22:00:52.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020034458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.846" endtime="20201115 22:00:52.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020034458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.138" endtime="20201115 22:00:52.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.146" endtime="20201115 22:00:52.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.843" endtime="20201115 22:00:52.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.842" endtime="20201115 22:00:52.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.153" level="INFO">${RESULT} = [{'time': 0.020034458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.020106431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:52.150" endtime="20201115 22:00:52.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.166" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:52.154" endtime="20201115 22:00:52.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.171" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.170" endtime="20201115 22:00:52.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.173" level="INFO">VALUE: [6.944000000001782e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.929999999998743e-06, 6.944999999997786e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.945000000001256e-06, 6.930000000002212e-06, 6.929999999998743e-06, 6.929999999998743e-06, 6.958000000001352e-06, 6.943999999998313e-06, 6.972999999996926e-06, 6.929999999998743e-06, 6.959000000000826e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.929999999998743e-06, 6.944999999997786e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.930000000002212e-06, 6.9719999999974525e-06, 6.9719999999974525e-06, 6.943999999998313e-06, 6.944999999997786e-06, 6.972000000000922e-06, 6.9579999999978825e-06, 6.874999999999937e-06, 6.943999999998313e-06, 6.944000000001782e-06, 6.972000000000922e-06, 6.9029999999990765e-06, 6.972000000000922e-06, 6.958000000001352e-06, 6.929999999998743e-06, 6.931000000001686e-06, 6.944999999997786e-06, 7.013999999999632e-06, 6.958999999997356e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.943999999998313e-06, 6.944000000001782e-06, 6.901999999999603e-06, 6.944000000001782e-06, 6.986000000000492e-06, 6.929999999998743e-06, 6.930999999998216e-06]</msg>
<status status="PASS" starttime="20201115 22:00:52.172" endtime="20201115 22:00:52.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.167" endtime="20201115 22:00:52.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.177" endtime="20201115 22:00:52.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.180" endtime="20201115 22:00:52.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.179" endtime="20201115 22:00:52.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.175" endtime="20201115 22:00:52.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.812" endtime="20201115 22:00:52.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.250" endtime="20201115 22:00:52.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.249" endtime="20201115 22:00:52.201"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.203" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.212" endtime="20201115 22:00:52.227"></status>
</kw>
<msg timestamp="20201115 22:00:52.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.211" endtime="20201115 22:00:52.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.229" endtime="20201115 22:00:52.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.231" endtime="20201115 22:00:52.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.208" endtime="20201115 22:00:52.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.206" endtime="20201115 22:00:52.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.240" endtime="20201115 22:00:52.526"></status>
</kw>
<msg timestamp="20201115 22:00:52.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.239" endtime="20201115 22:00:52.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.531" endtime="20201115 22:00:52.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.539" endtime="20201115 22:00:52.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.236" endtime="20201115 22:00:52.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.235" endtime="20201115 22:00:52.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.546" level="INFO">${RESULT} = [{'time': 0.022294833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.022374444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:52.542" endtime="20201115 22:00:52.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.559" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:52.547" endtime="20201115 22:00:52.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.563" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.562" endtime="20201115 22:00:52.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.566" level="INFO">VALUE: [7.054999999998868e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.153000000002796e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.0969999999975775e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.0980000000005206e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.110999999997147e-06, 7.124999999996717e-06, 7.055000000002337e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.138000000000283e-06, 7.1120000000000905e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.068999999998438e-06, 7.111000000000617e-06, 7.0969999999975775e-06, 7.125000000000187e-06, 7.0969999999975775e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.083000000001477e-06]</msg>
<status status="PASS" starttime="20201115 22:00:52.564" endtime="20201115 22:00:52.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.560" endtime="20201115 22:00:52.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.569" endtime="20201115 22:00:52.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.573" endtime="20201115 22:00:52.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.571" endtime="20201115 22:00:52.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.568" endtime="20201115 22:00:52.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.204" endtime="20201115 22:00:52.593"></status>
</kw>
<msg timestamp="20201115 22:00:52.594" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.602" endtime="20201115 22:00:52.618"></status>
</kw>
<msg timestamp="20201115 22:00:52.618" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.601" endtime="20201115 22:00:52.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.621" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.619" endtime="20201115 22:00:52.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.622" endtime="20201115 22:00:52.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.598" endtime="20201115 22:00:52.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.596" endtime="20201115 22:00:52.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.631" endtime="20201115 22:00:52.917"></status>
</kw>
<msg timestamp="20201115 22:00:52.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.629" endtime="20201115 22:00:52.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.921" endtime="20201115 22:00:52.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.929" endtime="20201115 22:00:52.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.627" endtime="20201115 22:00:52.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.625" endtime="20201115 22:00:52.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.936" level="INFO">${RESULT} = [{'time': 0.020099611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.020179847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:52.933" endtime="20201115 22:00:52.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.949" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:52.937" endtime="20201115 22:00:52.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.954" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.953" endtime="20201115 22:00:52.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.957" level="INFO">VALUE: [7.1529999999993266e-06, 7.111000000000617e-06, 7.0980000000005206e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.055999999998341e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.083000000001477e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.1120000000000905e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.0969999999975775e-06, 7.125000000000187e-06, 7.0969999999975775e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.1669999999988965e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.0980000000005206e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.0980000000005206e-06, 7.125000000000187e-06, 7.151999999999853e-06, 7.097000000001047e-06, 7.068999999998438e-06, 7.0969999999975775e-06, 7.1120000000000905e-06, 7.097000000001047e-06, 7.054999999998868e-06, 7.125000000000187e-06, 7.1529999999993266e-06, 7.125000000000187e-06, 7.125000000000187e-06]</msg>
<status status="PASS" starttime="20201115 22:00:52.955" endtime="20201115 22:00:52.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.951" endtime="20201115 22:00:52.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.960" endtime="20201115 22:00:52.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.963" endtime="20201115 22:00:52.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.962" endtime="20201115 22:00:52.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.958" endtime="20201115 22:00:52.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.594" endtime="20201115 22:00:52.984"></status>
</kw>
<msg timestamp="20201115 22:00:52.984" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.993" endtime="20201115 22:00:53.007"></status>
</kw>
<msg timestamp="20201115 22:00:53.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.991" endtime="20201115 22:00:53.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.008" endtime="20201115 22:00:53.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.011" endtime="20201115 22:00:53.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.989" endtime="20201115 22:00:53.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.987" endtime="20201115 22:00:53.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.020" endtime="20201115 22:00:53.307"></status>
</kw>
<msg timestamp="20201115 22:00:53.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.018" endtime="20201115 22:00:53.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.311" endtime="20201115 22:00:53.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.319" endtime="20201115 22:00:53.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.016" endtime="20201115 22:00:53.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.014" endtime="20201115 22:00:53.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.326" level="INFO">${RESULT} = [{'time': 0.020018694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.020097778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:53.323" endtime="20201115 22:00:53.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.340" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:53.327" endtime="20201115 22:00:53.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.344" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.343" endtime="20201115 22:00:53.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.346" level="INFO">VALUE: [7.125000000000187e-06, 7.111000000000617e-06, 7.097999999997051e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.083000000001477e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.110999999997147e-06, 7.1529999999993266e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.1120000000000905e-06, 7.125000000000187e-06, 7.0980000000005206e-06, 7.097000000001047e-06, 7.138999999999757e-06, 7.0969999999975775e-06, 7.097000000001047e-06, 7.069999999997911e-06, 7.138999999999757e-06, 7.1120000000000905e-06, 7.056000000001811e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.110999999997147e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.0969999999975775e-06, 7.097000000001047e-06, 7.0980000000005206e-06, 7.097000000001047e-06, 7.0980000000005206e-06, 7.125000000000187e-06, 7.083000000001477e-06, 7.111000000000617e-06, 7.0980000000005206e-06, 7.208000000001602e-06, 7.138999999999757e-06, 7.1120000000000905e-06]</msg>
<status status="PASS" starttime="20201115 22:00:53.345" endtime="20201115 22:00:53.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.340" endtime="20201115 22:00:53.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.350" endtime="20201115 22:00:53.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.353" endtime="20201115 22:00:53.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.352" endtime="20201115 22:00:53.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.348" endtime="20201115 22:00:53.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.985" endtime="20201115 22:00:53.374"></status>
</kw>
<msg timestamp="20201115 22:00:53.374" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.383" endtime="20201115 22:00:53.397"></status>
</kw>
<msg timestamp="20201115 22:00:53.397" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.381" endtime="20201115 22:00:53.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.399" endtime="20201115 22:00:53.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.401" endtime="20201115 22:00:53.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.378" endtime="20201115 22:00:53.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.376" endtime="20201115 22:00:53.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.410" endtime="20201115 22:00:53.696"></status>
</kw>
<msg timestamp="20201115 22:00:53.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.408" endtime="20201115 22:00:53.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.700" endtime="20201115 22:00:53.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.708" endtime="20201115 22:00:53.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.406" endtime="20201115 22:00:53.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.404" endtime="20201115 22:00:53.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.715" level="INFO">${RESULT} = [{'time': 0.020040014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.020120667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:53.712" endtime="20201115 22:00:53.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.728" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:53.716" endtime="20201115 22:00:53.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.733" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.732" endtime="20201115 22:00:53.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.735" level="INFO">VALUE: [7.124999999996717e-06, 7.097999999997051e-06, 7.111000000000617e-06, 7.110999999997147e-06, 7.0980000000005206e-06, 7.0969999999975775e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.124999999996717e-06, 7.0829999999980076e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.1120000000000905e-06, 7.125000000000187e-06, 7.194999999998036e-06, 7.151999999999853e-06, 7.180000000002462e-06, 7.110999999997147e-06, 7.097999999997051e-06, 7.179999999998993e-06, 7.125000000000187e-06, 7.1529999999993266e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.110999999997147e-06, 7.056000000001811e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.097000000001047e-06]</msg>
<status status="PASS" starttime="20201115 22:00:53.734" endtime="20201115 22:00:53.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.729" endtime="20201115 22:00:53.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.739" endtime="20201115 22:00:53.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.742" endtime="20201115 22:00:53.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.740" endtime="20201115 22:00:53.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.737" endtime="20201115 22:00:53.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.374" endtime="20201115 22:00:53.763"></status>
</kw>
<msg timestamp="20201115 22:00:53.763" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.772" endtime="20201115 22:00:53.786"></status>
</kw>
<msg timestamp="20201115 22:00:53.787" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.770" endtime="20201115 22:00:53.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.788" endtime="20201115 22:00:53.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.790" endtime="20201115 22:00:53.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.767" endtime="20201115 22:00:53.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.765" endtime="20201115 22:00:53.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.799" endtime="20201115 22:00:54.084"></status>
</kw>
<msg timestamp="20201115 22:00:54.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020025083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.797" endtime="20201115 22:00:54.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020017986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020025083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.088" endtime="20201115 22:00:54.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.097" endtime="20201115 22:00:54.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.795" endtime="20201115 22:00:54.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.793" endtime="20201115 22:00:54.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.103" level="INFO">${RESULT} = [{'time': 0.020025083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.020106611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:54.100" endtime="20201115 22:00:54.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.117" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:54.104" endtime="20201115 22:00:54.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.121" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.120" endtime="20201115 22:00:54.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.124" level="INFO">VALUE: [7.0969999999975775e-06, 7.097000000001047e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.1120000000000905e-06, 7.125000000000187e-06, 7.138000000000283e-06, 7.055999999998341e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.070000000001381e-06, 7.125000000000187e-06, 7.1669999999988965e-06, 7.097000000001047e-06, 7.070000000001381e-06, 7.125000000000187e-06, 7.097000000001047e-06, 7.097000000001047e-06, 7.1120000000000905e-06, 7.125000000000187e-06, 7.0969999999975775e-06, 7.083000000001477e-06, 7.125000000000187e-06, 7.070000000001381e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.110999999997147e-06, 7.054999999998868e-06, 7.0829999999980076e-06, 7.110999999997147e-06, 7.084000000000951e-06, 7.0969999999975775e-06, 7.111000000000617e-06, 7.056000000001811e-06, 7.110999999997147e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.069999999997911e-06, 7.054999999998868e-06, 7.138999999999757e-06, 7.167000000002366e-06, 7.125000000000187e-06, 7.1669999999988965e-06, 7.0969999999975775e-06, 7.111000000000617e-06, 7.1669999999988965e-06, 7.097000000001047e-06]</msg>
<status status="PASS" starttime="20201115 22:00:54.122" endtime="20201115 22:00:54.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.118" endtime="20201115 22:00:54.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.127" endtime="20201115 22:00:54.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.130" endtime="20201115 22:00:54.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.129" endtime="20201115 22:00:54.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.125" endtime="20201115 22:00:54.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.763" endtime="20201115 22:00:54.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.202" endtime="20201115 22:00:54.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.202" endtime="20201115 22:00:54.152"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.154" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.163" endtime="20201115 22:00:54.178"></status>
</kw>
<msg timestamp="20201115 22:00:54.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.161" endtime="20201115 22:00:54.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.179" endtime="20201115 22:00:54.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.182" endtime="20201115 22:00:54.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.158" endtime="20201115 22:00:54.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.156" endtime="20201115 22:00:54.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.191" endtime="20201115 22:00:54.478"></status>
</kw>
<msg timestamp="20201115 22:00:54.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.189" endtime="20201115 22:00:54.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.482" endtime="20201115 22:00:54.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.490" endtime="20201115 22:00:54.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.187" endtime="20201115 22:00:54.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.185" endtime="20201115 22:00:54.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.497" level="INFO">${RESULT} = [{'time': 0.022896833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.022987778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:54.494" endtime="20201115 22:00:54.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.510" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:54.498" endtime="20201115 22:00:54.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.515" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.514" endtime="20201115 22:00:54.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.517" level="INFO">VALUE: [7.276999999999978e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.304999999999118e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.334000000001201e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.305000000002587e-06, 7.2779999999994516e-06, 7.332999999998258e-06, 7.278000000002921e-06, 7.2779999999994516e-06, 7.2919999999990215e-06, 7.290999999999548e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.276999999999978e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.319000000002157e-06, 7.276999999999978e-06, 7.250000000000312e-06, 7.276999999999978e-06]</msg>
<status status="PASS" starttime="20201115 22:00:54.516" endtime="20201115 22:00:54.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.511" endtime="20201115 22:00:54.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.520" endtime="20201115 22:00:54.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.524" endtime="20201115 22:00:54.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.522" endtime="20201115 22:00:54.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.519" endtime="20201115 22:00:54.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.154" endtime="20201115 22:00:54.544"></status>
</kw>
<msg timestamp="20201115 22:00:54.545" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.553" endtime="20201115 22:00:54.568"></status>
</kw>
<msg timestamp="20201115 22:00:54.568" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.552" endtime="20201115 22:00:54.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.571" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.569" endtime="20201115 22:00:54.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.572" endtime="20201115 22:00:54.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.549" endtime="20201115 22:00:54.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.547" endtime="20201115 22:00:54.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.581" endtime="20201115 22:00:54.870"></status>
</kw>
<msg timestamp="20201115 22:00:54.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020102014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.580" endtime="20201115 22:00:54.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020102014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.874" endtime="20201115 22:00:54.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.882" endtime="20201115 22:00:54.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.577" endtime="20201115 22:00:54.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.575" endtime="20201115 22:00:54.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.889" level="INFO">${RESULT} = [{'time': 0.020109222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.020199097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:54.885" endtime="20201115 22:00:54.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.902" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:54.890" endtime="20201115 22:00:54.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.907" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.906" endtime="20201115 22:00:54.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.909" level="INFO">VALUE: [7.2079999999981326e-06, 7.332999999998258e-06, 7.2779999999994516e-06, 7.319000000002157e-06, 7.263999999999882e-06, 7.305999999998591e-06, 7.276999999999978e-06, 7.276999999999978e-06, 7.263000000000408e-06, 7.2629999999969386e-06, 7.263999999999882e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.305999999998591e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.276999999999978e-06, 7.290999999999548e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.278000000002921e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.263999999999882e-06, 7.347000000001297e-06, 7.263999999999882e-06, 7.263000000000408e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.208000000001602e-06, 7.263999999999882e-06, 7.278000000002921e-06, 7.318999999998688e-06, 7.278000000002921e-06]</msg>
<status status="PASS" starttime="20201115 22:00:54.908" endtime="20201115 22:00:54.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.903" endtime="20201115 22:00:54.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.912" endtime="20201115 22:00:54.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.916" endtime="20201115 22:00:54.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.914" endtime="20201115 22:00:54.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.911" endtime="20201115 22:00:54.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.545" endtime="20201115 22:00:54.936"></status>
</kw>
<msg timestamp="20201115 22:00:54.936" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.946" endtime="20201115 22:00:54.961"></status>
</kw>
<msg timestamp="20201115 22:00:54.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.944" endtime="20201115 22:00:54.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.964" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.962" endtime="20201115 22:00:54.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.965" endtime="20201115 22:00:54.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.941" endtime="20201115 22:00:54.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.939" endtime="20201115 22:00:54.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.974" endtime="20201115 22:00:55.260"></status>
</kw>
<msg timestamp="20201115 22:00:55.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020564181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020571444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.972" endtime="20201115 22:00:55.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020564181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020571444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.264" endtime="20201115 22:00:55.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.272" endtime="20201115 22:00:55.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.969" endtime="20201115 22:00:55.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.968" endtime="20201115 22:00:55.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.279" level="INFO">${RESULT} = [{'time': 0.020571444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263000000000408e-06, 'source_diff': 7.263000000000408e-06}, {'time': 0.020658722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:55.276" endtime="20201115 22:00:55.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.292" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:55.280" endtime="20201115 22:00:55.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.297" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.296" endtime="20201115 22:00:55.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.299" level="INFO">VALUE: [7.263000000000408e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.278000000002921e-06, 7.2919999999990215e-06, 7.263999999999882e-06, 7.2919999999990215e-06, 7.278000000002921e-06, 7.2779999999994516e-06, 7.347000000001297e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.193999999998563e-06, 7.292000000002491e-06, 7.320000000001631e-06, 7.263999999999882e-06, 7.333000000001727e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.332999999998258e-06, 7.320000000001631e-06, 7.2629999999969386e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.318999999998688e-06, 7.2779999999994516e-06, 7.318999999998688e-06, 7.263999999999882e-06, 7.235999999997272e-06, 7.236000000000742e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.306000000002061e-06, 7.306000000002061e-06, 7.263000000000408e-06, 7.263000000000408e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.2779999999994516e-06]</msg>
<status status="PASS" starttime="20201115 22:00:55.298" endtime="20201115 22:00:55.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.293" endtime="20201115 22:00:55.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.302" endtime="20201115 22:00:55.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.306" endtime="20201115 22:00:55.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.304" endtime="20201115 22:00:55.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.301" endtime="20201115 22:00:55.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.937" endtime="20201115 22:00:55.330"></status>
</kw>
<msg timestamp="20201115 22:00:55.330" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.339" endtime="20201115 22:00:55.355"></status>
</kw>
<msg timestamp="20201115 22:00:55.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.338" endtime="20201115 22:00:55.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.356" endtime="20201115 22:00:55.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.359" endtime="20201115 22:00:55.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.335" endtime="20201115 22:00:55.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.333" endtime="20201115 22:00:55.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.367" endtime="20201115 22:00:55.654"></status>
</kw>
<msg timestamp="20201115 22:00:55.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024166139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024173403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.366" endtime="20201115 22:00:55.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024166139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024173403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.658" endtime="20201115 22:00:55.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.666" endtime="20201115 22:00:55.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.363" endtime="20201115 22:00:55.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.362" endtime="20201115 22:00:55.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.673" level="INFO">${RESULT} = [{'time': 0.024173403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.024261528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:55.670" endtime="20201115 22:00:55.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.686" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:55.674" endtime="20201115 22:00:55.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.691" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.690" endtime="20201115 22:00:55.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.693" level="INFO">VALUE: [7.263999999999882e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.2219999999977025e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.263999999999882e-06, 7.2919999999990215e-06, 7.222000000001172e-06, 7.334000000001201e-06, 7.222000000001172e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.235999999997272e-06, 7.2919999999990215e-06, 7.263000000000408e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.278000000002921e-06, 7.2779999999994516e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.276999999999978e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.208000000001602e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.305000000002587e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.278000000002921e-06, 7.278000000002921e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.319999999998161e-06, 7.2779999999994516e-06, 7.2079999999981326e-06, 7.3469999999978275e-06]</msg>
<status status="PASS" starttime="20201115 22:00:55.692" endtime="20201115 22:00:55.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.687" endtime="20201115 22:00:55.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.697" endtime="20201115 22:00:55.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.700" endtime="20201115 22:00:55.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.699" endtime="20201115 22:00:55.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.695" endtime="20201115 22:00:55.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.331" endtime="20201115 22:00:55.721"></status>
</kw>
<msg timestamp="20201115 22:00:55.721" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.730" endtime="20201115 22:00:55.745"></status>
</kw>
<msg timestamp="20201115 22:00:55.745" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.728" endtime="20201115 22:00:55.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.746" endtime="20201115 22:00:55.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.749" endtime="20201115 22:00:55.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.726" endtime="20201115 22:00:55.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.724" endtime="20201115 22:00:55.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.758" endtime="20201115 22:00:56.044"></status>
</kw>
<msg timestamp="20201115 22:00:56.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020012667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020019972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.756" endtime="20201115 22:00:56.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020012667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020019972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.048" endtime="20201115 22:00:56.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.057" endtime="20201115 22:00:56.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.754" endtime="20201115 22:00:56.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.752" endtime="20201115 22:00:56.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.064" level="INFO">${RESULT} = [{'time': 0.020019972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.020109764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:56.060" endtime="20201115 22:00:56.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.077" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:56.064" endtime="20201115 22:00:56.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.081" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.080" endtime="20201115 22:00:56.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.084" level="INFO">VALUE: [7.304999999999118e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.304999999999118e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.290999999999548e-06, 7.2919999999990215e-06, 7.319000000002157e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.305999999998591e-06, 7.2919999999990215e-06, 7.277000000003447e-06, 7.222000000001172e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.222000000001172e-06, 7.2779999999994516e-06, 7.292000000002491e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.2919999999990215e-06, 7.263000000000408e-06, 7.305999999998591e-06, 7.236000000000742e-06, 7.290999999999548e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.348000000000771e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.306000000002061e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.361000000000867e-06, 7.2779999999994516e-06, 7.278000000002921e-06, 7.290999999999548e-06, 7.250000000000312e-06, 7.2779999999994516e-06]</msg>
<status status="PASS" starttime="20201115 22:00:56.082" endtime="20201115 22:00:56.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.078" endtime="20201115 22:00:56.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.087" endtime="20201115 22:00:56.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.091" endtime="20201115 22:00:56.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.089" endtime="20201115 22:00:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.086" endtime="20201115 22:00:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.722" endtime="20201115 22:00:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.153" endtime="20201115 22:00:56.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.152" endtime="20201115 22:00:56.112"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.114" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.123" endtime="20201115 22:00:56.138"></status>
</kw>
<msg timestamp="20201115 22:00:56.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.121" endtime="20201115 22:00:56.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.141" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.139" endtime="20201115 22:00:56.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.142" endtime="20201115 22:00:56.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.119" endtime="20201115 22:00:56.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.116" endtime="20201115 22:00:56.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.151" endtime="20201115 22:00:56.439"></status>
</kw>
<msg timestamp="20201115 22:00:56.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.149" endtime="20201115 22:00:56.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.443" endtime="20201115 22:00:56.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.451" endtime="20201115 22:00:56.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.147" endtime="20201115 22:00:56.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.145" endtime="20201115 22:00:56.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.458" level="INFO">${RESULT} = [{'time': 0.022414028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.444999999998286e-06, 'source_diff': 7.444999999998286e-06}, {'time': 0.022511292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:56.454" endtime="20201115 22:00:56.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.471" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:56.459" endtime="20201115 22:00:56.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.475" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.474" endtime="20201115 22:00:56.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.478" level="INFO">VALUE: [7.444999999998286e-06, 7.389000000000007e-06, 7.444999999998286e-06, 7.430999999998716e-06, 7.415999999999673e-06, 7.458999999997856e-06, 7.443999999998813e-06, 7.429999999999243e-06, 7.430999999998716e-06, 7.429999999999243e-06, 7.444000000002282e-06, 7.429999999999243e-06, 7.4169999999991465e-06, 7.347000000001297e-06, 7.4169999999991465e-06, 7.458000000001852e-06, 7.499999999997092e-06, 7.4169999999991465e-06, 7.459000000001326e-06, 7.429999999999243e-06, 7.445000000001756e-06, 7.429999999999243e-06, 7.431000000002186e-06, 7.443999999998813e-06, 7.444000000002282e-06, 7.458999999997856e-06, 7.445000000001756e-06, 7.429999999999243e-06, 7.444999999998286e-06, 7.430999999998716e-06, 7.4169999999991465e-06, 7.443999999998813e-06, 7.444999999998286e-06, 7.388999999996537e-06, 7.459000000001326e-06, 7.4169999999991465e-06, 7.445000000001756e-06, 7.444999999998286e-06, 7.431000000002186e-06, 7.415999999999673e-06, 7.430000000002712e-06, 7.458000000001852e-06, 7.445000000001756e-06, 7.444999999998286e-06, 7.430999999998716e-06, 7.4169999999991465e-06, 7.417000000002616e-06, 7.429999999999243e-06, 7.430000000002712e-06, 7.429999999999243e-06]</msg>
<status status="PASS" starttime="20201115 22:00:56.476" endtime="20201115 22:00:56.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.472" endtime="20201115 22:00:56.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.481" endtime="20201115 22:00:56.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.485" endtime="20201115 22:00:56.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.483" endtime="20201115 22:00:56.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.480" endtime="20201115 22:00:56.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.115" endtime="20201115 22:00:56.505"></status>
</kw>
<msg timestamp="20201115 22:00:56.506" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.514" endtime="20201115 22:00:56.529"></status>
</kw>
<msg timestamp="20201115 22:00:56.530" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.513" endtime="20201115 22:00:56.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.531" endtime="20201115 22:00:56.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.533" endtime="20201115 22:00:56.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.510" endtime="20201115 22:00:56.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.508" endtime="20201115 22:00:56.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.542" endtime="20201115 22:00:56.829"></status>
</kw>
<msg timestamp="20201115 22:00:56.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019985903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.541" endtime="20201115 22:00:56.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019985903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.833" endtime="20201115 22:00:56.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.842" endtime="20201115 22:00:56.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.538" endtime="20201115 22:00:56.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.536" endtime="20201115 22:00:56.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.848" level="INFO">${RESULT} = [{'time': 0.019985903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.0200825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:56.845" endtime="20201115 22:00:56.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.862" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:56.849" endtime="20201115 22:00:56.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.866" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.865" endtime="20201115 22:00:56.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.869" level="INFO">VALUE: [7.4169999999991465e-06, 7.443999999998813e-06, 7.444000000002282e-06, 7.402999999999577e-06, 7.431000000002186e-06, 7.458000000001852e-06, 7.443999999998813e-06, 7.472000000001422e-06, 7.444999999998286e-06, 7.430999999998716e-06, 7.443999999998813e-06, 7.443999999998813e-06, 7.444999999998286e-06, 7.416000000003142e-06, 7.444999999998286e-06, 7.389000000000007e-06, 7.429999999999243e-06, 7.499999999997092e-06, 7.443999999998813e-06, 7.445000000001756e-06, 7.389000000000007e-06, 7.443999999998813e-06, 7.458000000001852e-06, 7.458000000001852e-06, 7.429999999999243e-06, 7.361000000000867e-06, 7.4719999999979525e-06, 7.459000000001326e-06, 7.430999999998716e-06, 7.389000000000007e-06, 7.444999999998286e-06, 7.444999999998286e-06, 7.4719999999979525e-06, 7.430999999998716e-06, 7.415999999999673e-06, 7.443999999998813e-06, 7.444999999998286e-06, 7.431000000002186e-06, 7.443999999998813e-06, 7.430999999998716e-06, 7.444000000002282e-06, 7.445000000001756e-06, 7.499999999997092e-06, 7.417000000002616e-06, 7.429999999999243e-06, 7.443999999998813e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.429999999999243e-06, 7.444999999998286e-06]</msg>
<status status="PASS" starttime="20201115 22:00:56.867" endtime="20201115 22:00:56.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.863" endtime="20201115 22:00:56.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.872" endtime="20201115 22:00:56.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.875" endtime="20201115 22:00:56.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.874" endtime="20201115 22:00:56.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.870" endtime="20201115 22:00:56.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.506" endtime="20201115 22:00:56.896"></status>
</kw>
<msg timestamp="20201115 22:00:56.896" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.905" endtime="20201115 22:00:56.921"></status>
</kw>
<msg timestamp="20201115 22:00:56.921" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.904" endtime="20201115 22:00:56.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.922" endtime="20201115 22:00:56.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.925" endtime="20201115 22:00:56.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.901" endtime="20201115 22:00:56.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.899" endtime="20201115 22:00:56.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.934" endtime="20201115 22:00:57.220"></status>
</kw>
<msg timestamp="20201115 22:00:57.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020065764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.932" endtime="20201115 22:00:57.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020065764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.225" endtime="20201115 22:00:57.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.233" endtime="20201115 22:00:57.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.929" endtime="20201115 22:00:57.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.928" endtime="20201115 22:00:57.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.240" level="INFO">${RESULT} = [{'time': 0.020065764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.457999999998383e-06, 'source_diff': 7.457999999998383e-06}, {'time': 0.020162764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:57.236" endtime="20201115 22:00:57.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.253" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:57.241" endtime="20201115 22:00:57.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.258" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.257" endtime="20201115 22:00:57.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.260" level="INFO">VALUE: [7.457999999998383e-06, 7.4169999999991465e-06, 7.430999999998716e-06, 7.472000000001422e-06, 7.430999999998716e-06, 7.444000000002282e-06, 7.444000000002282e-06, 7.443999999998813e-06, 7.444999999998286e-06, 7.444999999998286e-06, 7.4719999999979525e-06, 7.430999999998716e-06, 7.429999999999243e-06, 7.444000000002282e-06, 7.459000000001326e-06, 7.459000000001326e-06, 7.389000000000007e-06, 7.431000000002186e-06, 7.4169999999991465e-06, 7.443999999998813e-06, 7.444000000002282e-06, 7.443999999998813e-06, 7.444999999998286e-06, 7.429999999999243e-06, 7.429999999999243e-06, 7.431000000002186e-06, 7.513000000000658e-06, 7.430999999998716e-06, 7.4719999999979525e-06, 7.459000000001326e-06, 7.528000000003171e-06, 7.444999999998286e-06, 7.445000000001756e-06, 7.444000000002282e-06, 7.389000000000007e-06, 7.457999999998383e-06, 7.445000000001756e-06, 7.430999999998716e-06, 7.444000000002282e-06, 7.429999999999243e-06, 7.472000000001422e-06, 7.430000000002712e-06, 7.443999999998813e-06, 7.415999999999673e-06, 7.444000000002282e-06, 7.443999999998813e-06, 7.429999999999243e-06, 7.430999999998716e-06, 7.445000000001756e-06, 7.389000000000007e-06]</msg>
<status status="PASS" starttime="20201115 22:00:57.259" endtime="20201115 22:00:57.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.254" endtime="20201115 22:00:57.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.263" endtime="20201115 22:00:57.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.267" endtime="20201115 22:00:57.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.265" endtime="20201115 22:00:57.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.262" endtime="20201115 22:00:57.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.897" endtime="20201115 22:00:57.287"></status>
</kw>
<msg timestamp="20201115 22:00:57.287" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.296" endtime="20201115 22:00:57.311"></status>
</kw>
<msg timestamp="20201115 22:00:57.311" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.295" endtime="20201115 22:00:57.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.314" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.312" endtime="20201115 22:00:57.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.315" endtime="20201115 22:00:57.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.292" endtime="20201115 22:00:57.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.290" endtime="20201115 22:00:57.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.324" endtime="20201115 22:00:57.610"></status>
</kw>
<msg timestamp="20201115 22:00:57.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020097542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.322" endtime="20201115 22:00:57.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020097542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.614" endtime="20201115 22:00:57.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.623" endtime="20201115 22:00:57.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.320" endtime="20201115 22:00:57.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.318" endtime="20201115 22:00:57.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.629" level="INFO">${RESULT} = [{'time': 0.020104972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.020202861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:57.626" endtime="20201115 22:00:57.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.644" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:57.630" endtime="20201115 22:00:57.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.648" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.647" endtime="20201115 22:00:57.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.651" level="INFO">VALUE: [7.429999999999243e-06, 7.429999999999243e-06, 7.430999999998716e-06, 7.445000000001756e-06, 7.429999999999243e-06, 7.402999999999577e-06, 7.443999999998813e-06, 7.444000000002282e-06, 7.4169999999991465e-06, 7.457999999998383e-06, 7.445000000001756e-06, 7.457999999998383e-06, 7.445000000001756e-06, 7.402999999999577e-06, 7.431000000002186e-06, 7.430000000002712e-06, 7.457999999998383e-06, 7.458000000001852e-06, 7.444000000002282e-06, 7.415999999999673e-06, 7.445000000001756e-06, 7.430999999998716e-06, 7.457999999998383e-06, 7.417000000002616e-06, 7.415999999999673e-06, 7.4719999999979525e-06, 7.431000000002186e-06, 7.429999999999243e-06, 7.443999999998813e-06, 7.486000000000992e-06, 7.443999999998813e-06, 7.444000000002282e-06, 7.430999999998716e-06, 7.402999999999577e-06, 7.445000000001756e-06, 7.458000000001852e-06, 7.4719999999979525e-06, 7.429999999999243e-06, 7.473000000000896e-06, 7.430999999998716e-06, 7.430999999998716e-06, 7.444000000002282e-06, 7.429999999999243e-06, 7.431000000002186e-06, 7.458000000001852e-06, 7.430999999998716e-06, 7.457999999998383e-06, 7.429999999999243e-06, 7.458000000001852e-06, 7.443999999998813e-06]</msg>
<status status="PASS" starttime="20201115 22:00:57.650" endtime="20201115 22:00:57.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.645" endtime="20201115 22:00:57.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.654" endtime="20201115 22:00:57.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.657" endtime="20201115 22:00:57.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.656" endtime="20201115 22:00:57.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.652" endtime="20201115 22:00:57.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.288" endtime="20201115 22:00:57.678"></status>
</kw>
<msg timestamp="20201115 22:00:57.678" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.687" endtime="20201115 22:00:57.702"></status>
</kw>
<msg timestamp="20201115 22:00:57.703" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.686" endtime="20201115 22:00:57.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.705" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.704" endtime="20201115 22:00:57.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.706" endtime="20201115 22:00:57.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.683" endtime="20201115 22:00:57.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.681" endtime="20201115 22:00:57.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.715" endtime="20201115 22:00:58.003"></status>
</kw>
<msg timestamp="20201115 22:00:58.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.714" endtime="20201115 22:00:58.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.007" endtime="20201115 22:00:58.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.016" endtime="20201115 22:00:58.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.711" endtime="20201115 22:00:58.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.709" endtime="20201115 22:00:58.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.023" level="INFO">${RESULT} = [{'time': 0.020139625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.020237708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:58.019" endtime="20201115 22:00:58.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.036" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:58.024" endtime="20201115 22:00:58.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.040" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.039" endtime="20201115 22:00:58.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.043" level="INFO">VALUE: [7.431000000002186e-06, 7.429999999999243e-06, 7.402999999999577e-06, 7.429999999999243e-06, 7.430999999998716e-06, 7.443999999998813e-06, 7.4169999999991465e-06, 7.429999999999243e-06, 7.443999999998813e-06, 7.431000000002186e-06, 7.486000000000992e-06, 7.444999999998286e-06, 7.431000000002186e-06, 7.473000000000896e-06, 7.430999999998716e-06, 7.443999999998813e-06, 7.389000000000007e-06, 7.486000000000992e-06, 7.431000000002186e-06, 7.444000000002282e-06, 7.431000000002186e-06, 7.527999999999702e-06, 7.458999999997856e-06, 7.402999999999577e-06, 7.457999999998383e-06, 7.402999999999577e-06, 7.430999999998716e-06, 7.443999999998813e-06, 7.443999999998813e-06, 7.430999999998716e-06, 7.443999999998813e-06, 7.389000000000007e-06, 7.444000000002282e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.430999999998716e-06, 7.429999999999243e-06, 7.445000000001756e-06, 7.444000000002282e-06, 7.429999999999243e-06, 7.430999999998716e-06, 7.445000000001756e-06, 7.4169999999991465e-06, 7.444999999998286e-06, 7.429999999999243e-06, 7.429999999999243e-06, 7.445000000001756e-06, 7.431000000002186e-06, 7.444999999998286e-06, 7.431000000002186e-06]</msg>
<status status="PASS" starttime="20201115 22:00:58.041" endtime="20201115 22:00:58.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.037" endtime="20201115 22:00:58.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.046" endtime="20201115 22:00:58.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.050" endtime="20201115 22:00:58.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.048" endtime="20201115 22:00:58.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.044" endtime="20201115 22:00:58.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.679" endtime="20201115 22:00:58.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.113" endtime="20201115 22:00:58.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.112" endtime="20201115 22:00:58.072"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.074" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.083" endtime="20201115 22:00:58.099"></status>
</kw>
<msg timestamp="20201115 22:00:58.099" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.081" endtime="20201115 22:00:58.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.100" endtime="20201115 22:00:58.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.103" endtime="20201115 22:00:58.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.079" endtime="20201115 22:00:58.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.077" endtime="20201115 22:00:58.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.112" endtime="20201115 22:00:58.400"></status>
</kw>
<msg timestamp="20201115 22:00:58.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.111" endtime="20201115 22:00:58.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.404" endtime="20201115 22:00:58.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.412" endtime="20201115 22:00:58.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.108" endtime="20201115 22:00:58.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.106" endtime="20201115 22:00:58.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.419" level="INFO">${RESULT} = [{'time': 0.022492403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597000000001547e-06, 'source_diff': 7.597000000001547e-06}, {'time': 0.022602208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:58.415" endtime="20201115 22:00:58.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.432" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:58.420" endtime="20201115 22:00:58.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.436" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.435" endtime="20201115 22:00:58.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.439" level="INFO">VALUE: [7.597000000001547e-06, 7.639000000000257e-06, 7.584000000001451e-06, 7.5969999999980775e-06, 7.597000000001547e-06, 7.611000000001117e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.6109999999976474e-06, 7.5969999999980775e-06, 7.541000000003267e-06, 7.6109999999976474e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.584000000001451e-06, 7.5969999999980775e-06, 7.582999999998508e-06, 7.584000000001451e-06, 7.554999999999368e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.598000000001021e-06, 7.5969999999980775e-06, 7.597000000001547e-06, 7.611000000001117e-06, 7.583000000001977e-06, 7.5969999999980775e-06, 7.666999999999397e-06, 7.583000000001977e-06, 7.681000000002436e-06, 7.611000000001117e-06, 7.597000000001547e-06, 7.5969999999980775e-06, 7.597000000001547e-06, 7.597000000001547e-06, 7.5969999999980775e-06, 7.624999999997217e-06, 7.597000000001547e-06, 7.542000000002741e-06, 7.611000000001117e-06, 7.582999999998508e-06, 7.555000000002837e-06, 7.6120000000005905e-06, 7.598000000001021e-06, 7.598000000001021e-06, 7.611000000001117e-06, 7.597000000001547e-06, 7.556000000002311e-06, 7.597000000001547e-06]</msg>
<status status="PASS" starttime="20201115 22:00:58.438" endtime="20201115 22:00:58.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.433" endtime="20201115 22:00:58.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.442" endtime="20201115 22:00:58.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.446" endtime="20201115 22:00:58.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.444" endtime="20201115 22:00:58.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.440" endtime="20201115 22:00:58.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.075" endtime="20201115 22:00:58.466"></status>
</kw>
<msg timestamp="20201115 22:00:58.466" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.476" endtime="20201115 22:00:58.492"></status>
</kw>
<msg timestamp="20201115 22:00:58.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.474" endtime="20201115 22:00:58.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.493" endtime="20201115 22:00:58.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.496" endtime="20201115 22:00:58.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.472" endtime="20201115 22:00:58.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.469" endtime="20201115 22:00:58.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.505" endtime="20201115 22:00:58.791"></status>
</kw>
<msg timestamp="20201115 22:00:58.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020969681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.504" endtime="20201115 22:00:58.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020969681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.795" endtime="20201115 22:00:58.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.804" endtime="20201115 22:00:58.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.501" endtime="20201115 22:00:58.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.499" endtime="20201115 22:00:58.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.810" level="INFO">${RESULT} = [{'time': 0.020977264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.021085917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:58.807" endtime="20201115 22:00:58.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.823" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:58.811" endtime="20201115 22:00:58.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.828" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.827" endtime="20201115 22:00:58.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.830" level="INFO">VALUE: [7.582999999998508e-06, 7.625000000000687e-06, 7.5969999999980775e-06, 7.583000000001977e-06, 7.582999999998508e-06, 7.583000000001977e-06, 7.527000000000228e-06, 7.611000000001117e-06, 7.597000000001547e-06, 7.527000000000228e-06, 7.597000000001547e-06, 7.624999999997217e-06, 7.625000000000687e-06, 7.597000000001547e-06, 7.597000000001547e-06, 7.695000000002006e-06, 7.598000000001021e-06, 7.583000000001977e-06, 7.598000000001021e-06, 7.582999999998508e-06, 7.624999999997217e-06, 7.597000000001547e-06, 7.666999999999397e-06, 7.611000000001117e-06, 7.570000000001881e-06, 7.652999999999827e-06, 7.5969999999980775e-06, 7.597000000001547e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.582999999998508e-06, 7.5969999999980775e-06, 7.582999999998508e-06, 7.5419999999992715e-06, 7.679999999999493e-06, 7.583000000001977e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.583000000001977e-06, 7.611000000001117e-06, 7.584000000001451e-06, 7.597000000001547e-06, 7.597000000001547e-06, 7.570000000001881e-06, 7.625000000000687e-06, 7.6109999999976474e-06, 7.598000000001021e-06]</msg>
<status status="PASS" starttime="20201115 22:00:58.829" endtime="20201115 22:00:58.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.824" endtime="20201115 22:00:58.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.833" endtime="20201115 22:00:58.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.837" endtime="20201115 22:00:58.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.835" endtime="20201115 22:00:58.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.832" endtime="20201115 22:00:58.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.467" endtime="20201115 22:00:58.857"></status>
</kw>
<msg timestamp="20201115 22:00:58.858" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.867" endtime="20201115 22:00:58.883"></status>
</kw>
<msg timestamp="20201115 22:00:58.884" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.865" endtime="20201115 22:00:58.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.885" endtime="20201115 22:00:58.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.887" endtime="20201115 22:00:58.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.862" endtime="20201115 22:00:58.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.860" endtime="20201115 22:00:58.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.896" endtime="20201115 22:00:59.181"></status>
</kw>
<msg timestamp="20201115 22:00:59.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020943528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020951139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.894" endtime="20201115 22:00:59.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020943528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020951139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.185" endtime="20201115 22:00:59.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.194" endtime="20201115 22:00:59.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.892" endtime="20201115 22:00:59.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.890" endtime="20201115 22:00:59.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.200" level="INFO">${RESULT} = [{'time': 0.020951139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.021060083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:59.197" endtime="20201115 22:00:59.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.214" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:59.201" endtime="20201115 22:00:59.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.218" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.217" endtime="20201115 22:00:59.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.221" level="INFO">VALUE: [7.611000000001117e-06, 7.597000000001547e-06, 7.597000000001547e-06, 7.625000000000687e-06, 7.5969999999980775e-06, 7.5969999999980775e-06, 7.5969999999980775e-06, 7.695000000002006e-06, 7.597999999997551e-06, 7.6109999999976474e-06, 7.5969999999980775e-06, 7.554999999999368e-06, 7.583000000001977e-06, 7.597999999997551e-06, 7.583999999997981e-06, 7.598000000001021e-06, 7.583999999997981e-06, 7.6120000000005905e-06, 7.611999999997121e-06, 7.584000000001451e-06, 7.584000000001451e-06, 7.597000000001547e-06, 7.569999999998411e-06, 7.6109999999976474e-06, 7.624999999997217e-06, 7.5969999999980775e-06, 7.611000000001117e-06, 7.6109999999976474e-06, 7.582999999998508e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.5969999999980775e-06, 7.583999999997981e-06, 7.597999999997551e-06, 7.568999999998938e-06, 7.6109999999976474e-06, 7.6120000000005905e-06, 7.582999999998508e-06, 7.6120000000005905e-06, 7.556000000002311e-06, 7.625000000000687e-06, 7.666000000003392e-06, 7.6109999999976474e-06, 7.598000000001021e-06, 7.652999999999827e-06, 7.584000000001451e-06, 7.611000000001117e-06, 7.582999999998508e-06, 7.611000000001117e-06]</msg>
<status status="PASS" starttime="20201115 22:00:59.220" endtime="20201115 22:00:59.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.215" endtime="20201115 22:00:59.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.225" endtime="20201115 22:00:59.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.229" endtime="20201115 22:00:59.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.227" endtime="20201115 22:00:59.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.223" endtime="20201115 22:00:59.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.858" endtime="20201115 22:00:59.249"></status>
</kw>
<msg timestamp="20201115 22:00:59.250" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.259" endtime="20201115 22:00:59.275"></status>
</kw>
<msg timestamp="20201115 22:00:59.275" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.257" endtime="20201115 22:00:59.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.278" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.276" endtime="20201115 22:00:59.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.279" endtime="20201115 22:00:59.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.255" endtime="20201115 22:00:59.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.253" endtime="20201115 22:00:59.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.288" endtime="20201115 22:00:59.576"></status>
</kw>
<msg timestamp="20201115 22:00:59.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:59.286" endtime="20201115 22:00:59.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:59.580" endtime="20201115 22:00:59.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.588" endtime="20201115 22:00:59.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.284" endtime="20201115 22:00:59.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.282" endtime="20201115 22:00:59.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.595" level="INFO">${RESULT} = [{'time': 0.0204885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.020598083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:59.592" endtime="20201115 22:00:59.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.608" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:59.596" endtime="20201115 22:00:59.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.613" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.612" endtime="20201115 22:00:59.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.615" level="INFO">VALUE: [7.582999999998508e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.582999999998508e-06, 7.611000000001117e-06, 7.583000000001977e-06, 7.611000000001117e-06, 7.5969999999980775e-06, 7.583000000001977e-06, 7.639000000000257e-06, 7.597000000001547e-06, 7.583000000001977e-06, 7.5969999999980775e-06, 7.5969999999980775e-06, 7.6120000000005905e-06, 7.583000000001977e-06, 7.569000000002407e-06, 7.514000000000132e-06, 7.598000000001021e-06, 7.611000000001117e-06, 7.5969999999980775e-06, 7.597000000001547e-06, 7.5969999999980775e-06, 7.5419999999992715e-06, 7.597000000001547e-06, 7.582999999998508e-06, 7.597000000001547e-06, 7.582999999998508e-06, 7.5969999999980775e-06, 7.597000000001547e-06, 7.583000000001977e-06, 7.625000000000687e-06, 7.666999999999397e-06, 7.597000000001547e-06, 7.597000000001547e-06, 7.667000000002866e-06, 7.666999999999397e-06, 7.583000000001977e-06, 7.598000000001021e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.638999999996787e-06, 7.639000000000257e-06, 7.555999999998841e-06, 7.6109999999976474e-06, 7.583999999997981e-06, 7.554999999999368e-06, 7.597000000001547e-06, 7.5969999999980775e-06]</msg>
<status status="PASS" starttime="20201115 22:00:59.614" endtime="20201115 22:00:59.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.609" endtime="20201115 22:00:59.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.618" endtime="20201115 22:00:59.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.622" endtime="20201115 22:00:59.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.621" endtime="20201115 22:00:59.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.617" endtime="20201115 22:00:59.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.251" endtime="20201115 22:00:59.643"></status>
</kw>
<msg timestamp="20201115 22:00:59.643" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.652" endtime="20201115 22:00:59.667"></status>
</kw>
<msg timestamp="20201115 22:00:59.668" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.650" endtime="20201115 22:00:59.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.669" endtime="20201115 22:00:59.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.672" endtime="20201115 22:00:59.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.648" endtime="20201115 22:00:59.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.645" endtime="20201115 22:00:59.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.681" endtime="20201115 22:00:59.967"></status>
</kw>
<msg timestamp="20201115 22:00:59.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.679" endtime="20201115 22:00:59.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.971" endtime="20201115 22:00:59.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.979" endtime="20201115 22:00:59.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.677" endtime="20201115 22:00:59.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.675" endtime="20201115 22:00:59.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.986" level="INFO">${RESULT} = [{'time': 0.019982292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.02009225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:59.982" endtime="20201115 22:00:59.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.999" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:59.987" endtime="20201115 22:00:59.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.003" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.002" endtime="20201115 22:01:00.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.006" level="INFO">VALUE: [7.555999999998841e-06, 7.6109999999976474e-06, 7.6120000000005905e-06, 7.6120000000005905e-06, 7.611000000001117e-06, 7.666999999999397e-06, 7.639000000000257e-06, 7.582999999998508e-06, 7.5969999999980775e-06, 7.611000000001117e-06, 7.554999999999368e-06, 7.597000000001547e-06, 7.639000000000257e-06, 7.583999999997981e-06, 7.597000000001547e-06, 7.582999999998508e-06, 7.611000000001117e-06, 7.611000000001117e-06, 7.5969999999980775e-06, 7.625000000000687e-06, 7.624999999997217e-06, 7.611000000001117e-06, 7.598000000001021e-06, 7.597000000001547e-06, 7.583000000001977e-06, 7.554999999999368e-06, 7.597999999997551e-06, 7.555999999998841e-06, 7.6109999999976474e-06, 7.598000000001021e-06, 7.584000000001451e-06, 7.6120000000005905e-06, 7.598000000001021e-06, 7.597000000001547e-06, 7.611000000001117e-06, 7.666999999999397e-06, 7.597000000001547e-06, 7.624999999997217e-06, 7.582999999998508e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.582999999998508e-06, 7.583000000001977e-06, 7.611000000001117e-06, 7.5969999999980775e-06, 7.584000000001451e-06, 7.583000000001977e-06, 7.611000000001117e-06, 7.597000000001547e-06, 7.597999999997551e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.005" endtime="20201115 22:01:00.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.000" endtime="20201115 22:01:00.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.009" endtime="20201115 22:01:00.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.013" endtime="20201115 22:01:00.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.011" endtime="20201115 22:01:00.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.008" endtime="20201115 22:01:00.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.643" endtime="20201115 22:01:00.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.073" endtime="20201115 22:01:00.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.072" endtime="20201115 22:01:00.034"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.036" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.045" endtime="20201115 22:01:00.061"></status>
</kw>
<msg timestamp="20201115 22:01:00.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.043" endtime="20201115 22:01:00.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.063" endtime="20201115 22:01:00.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.065" endtime="20201115 22:01:00.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.041" endtime="20201115 22:01:00.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.039" endtime="20201115 22:01:00.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.074" endtime="20201115 22:01:00.361"></status>
</kw>
<msg timestamp="20201115 22:01:00.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.073" endtime="20201115 22:01:00.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.365" endtime="20201115 22:01:00.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.373" endtime="20201115 22:01:00.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.070" endtime="20201115 22:01:00.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.068" endtime="20201115 22:01:00.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.380" level="INFO">${RESULT} = [{'time': 0.022311486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.022428847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:00.377" endtime="20201115 22:01:00.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.394" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:00.381" endtime="20201115 22:01:00.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.398" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.397" endtime="20201115 22:01:00.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.405" level="INFO">VALUE: [7.749999999997342e-06, 7.749999999997342e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.791999999999522e-06, 7.721999999998203e-06, 7.763999999996912e-06, 7.806000000002561e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.735999999997772e-06, 7.750000000000812e-06, 7.721999999998203e-06, 7.721999999998203e-06, 7.804999999999618e-06, 7.750000000000812e-06, 7.694999999998536e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.749999999997342e-06, 7.805999999999091e-06, 7.764000000000382e-06, 7.763000000000908e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.679999999999493e-06, 7.694999999998536e-06, 7.736000000001242e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.736999999997246e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.736000000001242e-06, 7.708999999998106e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.749999999997342e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.749999999997342e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.399" endtime="20201115 22:01:00.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.395" endtime="20201115 22:01:00.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.409" endtime="20201115 22:01:00.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.412" endtime="20201115 22:01:00.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.411" endtime="20201115 22:01:00.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.407" endtime="20201115 22:01:00.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.037" endtime="20201115 22:01:00.433"></status>
</kw>
<msg timestamp="20201115 22:01:00.433" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.442" endtime="20201115 22:01:00.458"></status>
</kw>
<msg timestamp="20201115 22:01:00.458" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.440" endtime="20201115 22:01:00.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.459" endtime="20201115 22:01:00.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.462" endtime="20201115 22:01:00.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.438" endtime="20201115 22:01:00.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.436" endtime="20201115 22:01:00.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.471" endtime="20201115 22:01:00.757"></status>
</kw>
<msg timestamp="20201115 22:01:00.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020073319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020081083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.469" endtime="20201115 22:01:00.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020073319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020081083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.761" endtime="20201115 22:01:00.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.769" endtime="20201115 22:01:00.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.467" endtime="20201115 22:01:00.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.465" endtime="20201115 22:01:00.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.776" level="INFO">${RESULT} = [{'time': 0.020081083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.020200875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:00.773" endtime="20201115 22:01:00.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.789" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:00.777" endtime="20201115 22:01:00.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.794" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.793" endtime="20201115 22:01:00.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.797" level="INFO">VALUE: [7.764000000000382e-06, 7.764000000000382e-06, 7.735999999997772e-06, 7.791000000000048e-06, 7.805999999999091e-06, 7.721999999998203e-06, 7.750000000000812e-06, 7.763000000000908e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.832999999998758e-06, 7.749999999997342e-06, 7.764000000000382e-06, 7.777000000000478e-06, 7.735999999997772e-06, 7.791000000000048e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.749999999997342e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.708999999998106e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.737000000000716e-06, 7.763000000000908e-06, 7.804999999999618e-06, 7.763000000000908e-06, 7.721999999998203e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.791000000000048e-06, 7.763999999996912e-06, 7.764000000000382e-06, 7.764000000000382e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.795" endtime="20201115 22:01:00.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.791" endtime="20201115 22:01:00.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.800" endtime="20201115 22:01:00.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.803" endtime="20201115 22:01:00.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.802" endtime="20201115 22:01:00.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.798" endtime="20201115 22:01:00.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.433" endtime="20201115 22:01:00.824"></status>
</kw>
<msg timestamp="20201115 22:01:00.824" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.833" endtime="20201115 22:01:00.849"></status>
</kw>
<msg timestamp="20201115 22:01:00.850" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.831" endtime="20201115 22:01:00.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.852" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.851" endtime="20201115 22:01:00.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.853" endtime="20201115 22:01:00.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.829" endtime="20201115 22:01:00.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.826" endtime="20201115 22:01:00.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.862" endtime="20201115 22:01:01.150"></status>
</kw>
<msg timestamp="20201115 22:01:01.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.861" endtime="20201115 22:01:01.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.154" endtime="20201115 22:01:01.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.162" endtime="20201115 22:01:01.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.858" endtime="20201115 22:01:01.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.856" endtime="20201115 22:01:01.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.169" level="INFO">${RESULT} = [{'time': 0.019959139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.020077028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.165" endtime="20201115 22:01:01.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.182" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:01.170" endtime="20201115 22:01:01.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.187" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.186" endtime="20201115 22:01:01.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.189" level="INFO">VALUE: [7.791999999999522e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.763000000000908e-06, 7.749999999997342e-06, 7.749999999997342e-06, 7.764000000000382e-06, 7.763999999996912e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.735999999997772e-06, 7.777999999999952e-06, 7.791999999999522e-06, 7.764000000000382e-06, 7.681000000002436e-06, 7.764000000000382e-06, 7.791000000000048e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.791000000000048e-06, 7.791999999999522e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.805999999999091e-06, 7.777000000000478e-06, 7.777999999999952e-06, 7.763999999996912e-06, 7.764000000000382e-06, 7.707999999998633e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.763999999996912e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.804999999999618e-06, 7.750000000000812e-06, 7.819999999998661e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.805999999999091e-06, 7.749999999997342e-06, 7.750000000000812e-06, 7.777999999999952e-06]</msg>
<status status="PASS" starttime="20201115 22:01:01.188" endtime="20201115 22:01:01.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.183" endtime="20201115 22:01:01.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.193" endtime="20201115 22:01:01.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.196" endtime="20201115 22:01:01.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.194" endtime="20201115 22:01:01.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.191" endtime="20201115 22:01:01.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.824" endtime="20201115 22:01:01.216"></status>
</kw>
<msg timestamp="20201115 22:01:01.217" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.225" endtime="20201115 22:01:01.242"></status>
</kw>
<msg timestamp="20201115 22:01:01.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.224" endtime="20201115 22:01:01.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.244" endtime="20201115 22:01:01.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.246" endtime="20201115 22:01:01.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.221" endtime="20201115 22:01:01.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.219" endtime="20201115 22:01:01.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.256" endtime="20201115 22:01:01.545"></status>
</kw>
<msg timestamp="20201115 22:01:01.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02000925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:01.255" endtime="20201115 22:01:01.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02000925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:01.549" endtime="20201115 22:01:01.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.558" endtime="20201115 22:01:01.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.252" endtime="20201115 22:01:01.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.250" endtime="20201115 22:01:01.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.565" level="INFO">${RESULT} = [{'time': 0.02000925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.020127083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:01.562" endtime="20201115 22:01:01.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.579" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:01.566" endtime="20201115 22:01:01.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.584" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.582" endtime="20201115 22:01:01.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.586" level="INFO">VALUE: [7.777999999999952e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.722000000001672e-06, 7.764000000000382e-06, 7.762999999997439e-06, 7.750000000000812e-06, 7.693999999999063e-06, 7.764000000000382e-06, 7.721999999998203e-06, 7.763000000000908e-06, 7.763999999996912e-06, 7.763999999996912e-06, 7.791999999999522e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.763000000000908e-06, 7.707999999998633e-06, 7.819999999998661e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.708000000002102e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.762999999997439e-06, 7.764000000000382e-06, 7.693999999999063e-06, 7.763000000000908e-06, 7.749999999997342e-06, 7.763999999996912e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.762999999997439e-06, 7.777999999999952e-06, 7.749999999997342e-06, 7.763000000000908e-06, 7.777999999999952e-06, 7.777000000000478e-06, 7.763999999996912e-06, 7.791999999999522e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.763999999996912e-06, 7.764000000000382e-06]</msg>
<status status="PASS" starttime="20201115 22:01:01.585" endtime="20201115 22:01:01.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.580" endtime="20201115 22:01:01.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.589" endtime="20201115 22:01:01.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.593" endtime="20201115 22:01:01.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.591" endtime="20201115 22:01:01.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.588" endtime="20201115 22:01:01.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.217" endtime="20201115 22:01:01.614"></status>
</kw>
<msg timestamp="20201115 22:01:01.614" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.623" endtime="20201115 22:01:01.640"></status>
</kw>
<msg timestamp="20201115 22:01:01.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.622" endtime="20201115 22:01:01.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.643" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.642" endtime="20201115 22:01:01.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.644" endtime="20201115 22:01:01.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.619" endtime="20201115 22:01:01.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.617" endtime="20201115 22:01:01.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.654" endtime="20201115 22:01:01.964"></status>
</kw>
<msg timestamp="20201115 22:01:01.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020690847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020698611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.652" endtime="20201115 22:01:01.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020690847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020698611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.968" endtime="20201115 22:01:01.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.976" endtime="20201115 22:01:01.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.649" endtime="20201115 22:01:01.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.647" endtime="20201115 22:01:01.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.983" level="INFO">${RESULT} = [{'time': 0.020698611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.020815056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.980" endtime="20201115 22:01:01.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.997" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:01.984" endtime="20201115 22:01:01.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.001" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.000" endtime="20201115 22:01:02.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.004" level="INFO">VALUE: [7.764000000000382e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.84800000000127e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.694999999998536e-06, 7.764000000000382e-06, 7.805999999999091e-06, 7.764000000000382e-06, 7.762999999997439e-06, 7.707999999998633e-06, 7.764000000000382e-06, 7.818999999999188e-06, 7.749999999997342e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.749999999997342e-06, 7.818999999999188e-06, 7.749999999997342e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.709000000001576e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.763999999996912e-06, 7.708999999998106e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.791999999999522e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.002" endtime="20201115 22:01:02.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.998" endtime="20201115 22:01:02.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.007" endtime="20201115 22:01:02.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.010" endtime="20201115 22:01:02.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.009" endtime="20201115 22:01:02.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.005" endtime="20201115 22:01:02.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.615" endtime="20201115 22:01:02.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.035" endtime="20201115 22:01:02.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.034" endtime="20201115 22:01:02.032"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.034" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.043" endtime="20201115 22:01:02.059"></status>
</kw>
<msg timestamp="20201115 22:01:02.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.041" endtime="20201115 22:01:02.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.060" endtime="20201115 22:01:02.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.063" endtime="20201115 22:01:02.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.038" endtime="20201115 22:01:02.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.036" endtime="20201115 22:01:02.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.073" endtime="20201115 22:01:02.362"></status>
</kw>
<msg timestamp="20201115 22:01:02.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022751639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.071" endtime="20201115 22:01:02.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022751639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.366" endtime="20201115 22:01:02.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.374" endtime="20201115 22:01:02.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.068" endtime="20201115 22:01:02.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.066" endtime="20201115 22:01:02.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.381" level="INFO">${RESULT} = [{'time': 0.022751639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.022878542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.377" endtime="20201115 22:01:02.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.394" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:02.382" endtime="20201115 22:01:02.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.399" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.398" endtime="20201115 22:01:02.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.401" level="INFO">VALUE: [7.916999999999647e-06, 7.889000000000507e-06, 7.930999999999216e-06, 7.84800000000127e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.889000000000507e-06, 7.916999999999647e-06, 7.903000000000077e-06, 7.944000000002782e-06, 7.915999999996703e-06, 7.930999999999216e-06, 7.973000000001396e-06, 7.902000000000603e-06, 7.930999999999216e-06, 7.930999999999216e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.903000000000077e-06, 7.929999999999743e-06, 7.875000000000937e-06, 7.957999999998883e-06, 7.847000000001797e-06, 7.958000000002352e-06, 7.957999999998883e-06, 7.901999999997134e-06, 7.930999999999216e-06, 7.931000000002686e-06, 7.860999999997897e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.943999999999313e-06, 7.944999999998786e-06, 7.930999999999216e-06, 7.930999999999216e-06, 7.943999999999313e-06, 7.931000000002686e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.943999999999313e-06, 7.916999999999647e-06, 7.931000000002686e-06, 7.916000000000173e-06, 8.014000000000632e-06, 7.930999999999216e-06, 7.958000000002352e-06, 7.875000000000937e-06, 7.930999999999216e-06, 7.929999999999743e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.400" endtime="20201115 22:01:02.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.395" endtime="20201115 22:01:02.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.404" endtime="20201115 22:01:02.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.408" endtime="20201115 22:01:02.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.406" endtime="20201115 22:01:02.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.403" endtime="20201115 22:01:02.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.034" endtime="20201115 22:01:02.428"></status>
</kw>
<msg timestamp="20201115 22:01:02.429" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.438" endtime="20201115 22:01:02.454"></status>
</kw>
<msg timestamp="20201115 22:01:02.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.436" endtime="20201115 22:01:02.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.457" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.456" endtime="20201115 22:01:02.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.459" endtime="20201115 22:01:02.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.433" endtime="20201115 22:01:02.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.431" endtime="20201115 22:01:02.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.468" endtime="20201115 22:01:02.772"></status>
</kw>
<msg timestamp="20201115 22:01:02.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020225056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:02.466" endtime="20201115 22:01:02.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020225056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:02.776" endtime="20201115 22:01:02.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.784" endtime="20201115 22:01:02.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.464" endtime="20201115 22:01:02.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.462" endtime="20201115 22:01:02.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.791" level="INFO">${RESULT} = [{'time': 0.020233, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.020361014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:02.788" endtime="20201115 22:01:02.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.805" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:02.792" endtime="20201115 22:01:02.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.809" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.808" endtime="20201115 22:01:02.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.812" level="INFO">VALUE: [7.943999999999313e-06, 7.916999999999647e-06, 7.931000000002686e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.944999999998786e-06, 7.958000000002352e-06, 7.916999999999647e-06, 7.916000000000173e-06, 7.930999999999216e-06, 7.874999999997467e-06, 7.901999999997134e-06, 7.943999999999313e-06, 7.916000000000173e-06, 7.958000000002352e-06, 7.929999999999743e-06, 7.971999999998453e-06, 7.943999999999313e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.903000000000077e-06, 7.887999999997564e-06, 7.889000000000507e-06, 7.999999999997592e-06, 8.014000000000632e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.902000000000603e-06, 8.000000000001062e-06, 7.945000000002256e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.903000000000077e-06, 7.930999999999216e-06, 7.889000000000507e-06, 7.944999999998786e-06, 7.931000000002686e-06, 7.930999999999216e-06, 7.888999999997037e-06, 7.943999999999313e-06, 7.929999999999743e-06, 7.957999999998883e-06, 7.917000000003116e-06, 7.957999999998883e-06, 7.916999999999647e-06, 7.930000000003212e-06, 7.986000000001492e-06, 7.930000000003212e-06, 7.916999999999647e-06, 7.916999999999647e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.810" endtime="20201115 22:01:02.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.806" endtime="20201115 22:01:02.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.815" endtime="20201115 22:01:02.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.818" endtime="20201115 22:01:02.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.817" endtime="20201115 22:01:02.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.813" endtime="20201115 22:01:02.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.429" endtime="20201115 22:01:02.839"></status>
</kw>
<msg timestamp="20201115 22:01:02.839" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.849" endtime="20201115 22:01:02.866"></status>
</kw>
<msg timestamp="20201115 22:01:02.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.847" endtime="20201115 22:01:02.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.869" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.867" endtime="20201115 22:01:02.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.870" endtime="20201115 22:01:02.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.844" endtime="20201115 22:01:02.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.842" endtime="20201115 22:01:02.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.879" endtime="20201115 22:01:03.166"></status>
</kw>
<msg timestamp="20201115 22:01:03.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020911722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020919625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.877" endtime="20201115 22:01:03.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020911722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020919625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.170" endtime="20201115 22:01:03.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.179" endtime="20201115 22:01:03.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.875" endtime="20201115 22:01:03.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.873" endtime="20201115 22:01:03.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.185" level="INFO">${RESULT} = [{'time': 0.020919625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.021046361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:03.182" endtime="20201115 22:01:03.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.199" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:03.186" endtime="20201115 22:01:03.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.203" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.202" endtime="20201115 22:01:03.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.206" level="INFO">VALUE: [7.903000000000077e-06, 7.889000000000507e-06, 7.929999999999743e-06, 7.930999999999216e-06, 7.903000000000077e-06, 7.916999999999647e-06, 7.916000000000173e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.931000000002686e-06, 7.931000000002686e-06, 7.944999999998786e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.929999999999743e-06, 7.916000000000173e-06, 7.931000000002686e-06, 7.959000000001826e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.916000000000173e-06, 7.903000000000077e-06, 7.945000000002256e-06, 7.930999999999216e-06, 7.860999999997897e-06, 7.902000000000603e-06, 7.943999999999313e-06, 7.874999999997467e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.944999999998786e-06, 7.943999999999313e-06, 7.903000000000077e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.931000000002686e-06, 7.86200000000084e-06, 7.929999999999743e-06, 7.916000000000173e-06, 7.945000000002256e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.888000000001033e-06, 7.916000000000173e-06, 7.888999999997037e-06, 7.916000000000173e-06]</msg>
<status status="PASS" starttime="20201115 22:01:03.205" endtime="20201115 22:01:03.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.200" endtime="20201115 22:01:03.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.209" endtime="20201115 22:01:03.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.212" endtime="20201115 22:01:03.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.211" endtime="20201115 22:01:03.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.207" endtime="20201115 22:01:03.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.840" endtime="20201115 22:01:03.233"></status>
</kw>
<msg timestamp="20201115 22:01:03.234" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.243" endtime="20201115 22:01:03.260"></status>
</kw>
<msg timestamp="20201115 22:01:03.260" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.241" endtime="20201115 22:01:03.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.261" endtime="20201115 22:01:03.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.264" endtime="20201115 22:01:03.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.238" endtime="20201115 22:01:03.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.236" endtime="20201115 22:01:03.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.281" endtime="20201115 22:01:03.581"></status>
</kw>
<msg timestamp="20201115 22:01:03.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020559792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.271" endtime="20201115 22:01:03.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020559792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.585" endtime="20201115 22:01:03.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.593" endtime="20201115 22:01:03.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.269" endtime="20201115 22:01:03.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.267" endtime="20201115 22:01:03.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.600" level="INFO">${RESULT} = [{'time': 0.020559792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.020689528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:03.596" endtime="20201115 22:01:03.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.613" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:03.601" endtime="20201115 22:01:03.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.617" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.616" endtime="20201115 22:01:03.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.620" level="INFO">VALUE: [7.916999999999647e-06, 7.930999999999216e-06, 7.930999999999216e-06, 7.929999999999743e-06, 7.931000000002686e-06, 7.916999999999647e-06, 7.944000000002782e-06, 7.916000000000173e-06, 7.929999999999743e-06, 7.957999999998883e-06, 7.929999999999743e-06, 7.931000000002686e-06, 7.916999999999647e-06, 7.917000000003116e-06, 7.929999999999743e-06, 7.929999999999743e-06, 7.929999999999743e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.929999999999743e-06, 7.875000000000937e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.971999999998453e-06, 7.916000000000173e-06, 7.903000000000077e-06, 7.902000000000603e-06, 7.903000000000077e-06, 7.916000000000173e-06, 8.000000000001062e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.917000000003116e-06, 7.929999999999743e-06, 7.916000000000173e-06, 7.943999999999313e-06, 7.929999999999743e-06, 7.916000000000173e-06, 7.958999999998356e-06, 7.847000000001797e-06, 7.931000000002686e-06, 7.902000000000603e-06, 7.930999999999216e-06, 7.945000000002256e-06, 7.930999999999216e-06, 7.929999999999743e-06, 7.916000000000173e-06, 7.916000000000173e-06, 7.944999999998786e-06]</msg>
<status status="PASS" starttime="20201115 22:01:03.619" endtime="20201115 22:01:03.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.614" endtime="20201115 22:01:03.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.623" endtime="20201115 22:01:03.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.627" endtime="20201115 22:01:03.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.625" endtime="20201115 22:01:03.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.621" endtime="20201115 22:01:03.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.234" endtime="20201115 22:01:03.648"></status>
</kw>
<msg timestamp="20201115 22:01:03.648" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.657" endtime="20201115 22:01:03.674"></status>
</kw>
<msg timestamp="20201115 22:01:03.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.655" endtime="20201115 22:01:03.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.676" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.675" endtime="20201115 22:01:03.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.678" endtime="20201115 22:01:03.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.653" endtime="20201115 22:01:03.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.650" endtime="20201115 22:01:03.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.686" endtime="20201115 22:01:03.973"></status>
</kw>
<msg timestamp="20201115 22:01:03.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.685" endtime="20201115 22:01:03.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.977" endtime="20201115 22:01:03.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.985" endtime="20201115 22:01:03.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.682" endtime="20201115 22:01:03.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.681" endtime="20201115 22:01:03.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.992" level="INFO">${RESULT} = [{'time': 0.020089528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.020219333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:03.988" endtime="20201115 22:01:03.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.005" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:03.993" endtime="20201115 22:01:04.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.010" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.009" endtime="20201115 22:01:04.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.012" level="INFO">VALUE: [7.903000000000077e-06, 7.943999999999313e-06, 7.917000000003116e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.931000000002686e-06, 7.861000000001367e-06, 7.916000000000173e-06, 7.971999999998453e-06, 7.915999999996703e-06, 7.916999999999647e-06, 7.971999999998453e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.971999999998453e-06, 7.888999999997037e-06, 7.943999999999313e-06, 7.875000000000937e-06, 7.916999999999647e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.973000000001396e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.929999999999743e-06, 7.943999999999313e-06, 7.916999999999647e-06, 7.861000000001367e-06, 7.944999999998786e-06, 7.916000000000173e-06, 7.958000000002352e-06, 7.916000000000173e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.903000000000077e-06, 7.916999999999647e-06, 7.943999999999313e-06, 7.929999999999743e-06, 7.931000000002686e-06, 7.944999999998786e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.959000000001826e-06, 7.958000000002352e-06, 7.846999999998328e-06, 7.929999999999743e-06, 7.929999999999743e-06, 7.945000000002256e-06, 7.943999999999313e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.011" endtime="20201115 22:01:04.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.006" endtime="20201115 22:01:04.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.016" endtime="20201115 22:01:04.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.019" endtime="20201115 22:01:04.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.018" endtime="20201115 22:01:04.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.014" endtime="20201115 22:01:04.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.648" endtime="20201115 22:01:04.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.033" endtime="20201115 22:01:04.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.032" endtime="20201115 22:01:04.040"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.042" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.051" endtime="20201115 22:01:04.069"></status>
</kw>
<msg timestamp="20201115 22:01:04.069" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.050" endtime="20201115 22:01:04.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.072" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.070" endtime="20201115 22:01:04.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.073" endtime="20201115 22:01:04.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.047" endtime="20201115 22:01:04.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.045" endtime="20201115 22:01:04.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.082" endtime="20201115 22:01:04.369"></status>
</kw>
<msg timestamp="20201115 22:01:04.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.080" endtime="20201115 22:01:04.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.374" endtime="20201115 22:01:04.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.382" endtime="20201115 22:01:04.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.078" endtime="20201115 22:01:04.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.076" endtime="20201115 22:01:04.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.388" level="INFO">${RESULT} = [{'time': 0.022489681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.11200000000109e-06, 'source_diff': 8.11200000000109e-06}, {'time': 0.022627486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:04.385" endtime="20201115 22:01:04.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.402" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:04.389" endtime="20201115 22:01:04.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.406" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.405" endtime="20201115 22:01:04.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.409" level="INFO">VALUE: [8.11200000000109e-06, 8.082999999999008e-06, 8.110999999998147e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.139000000000757e-06, 8.069000000002907e-06, 8.096999999998578e-06, 8.09800000000152e-06, 8.097999999998051e-06, 8.083000000002477e-06, 8.069999999998911e-06, 8.09800000000152e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.08400000000195e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.139000000000757e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.083999999998481e-06, 8.097000000002047e-06, 8.111000000001617e-06, 8.054999999999868e-06, 8.096999999998578e-06, 8.028000000000202e-06, 8.083000000002477e-06, 8.068999999999438e-06, 8.083999999998481e-06, 8.166999999999897e-06, 8.179999999999993e-06, 8.153000000000327e-06, 8.083999999998481e-06, 8.055999999999341e-06, 8.083999999998481e-06, 8.111000000001617e-06, 8.083999999998481e-06, 8.083999999998481e-06, 8.083999999998481e-06, 8.083999999998481e-06, 8.097000000002047e-06, 8.097000000002047e-06, 8.08400000000195e-06, 8.139000000000757e-06, 8.096999999998578e-06, 8.08400000000195e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.407" endtime="20201115 22:01:04.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.403" endtime="20201115 22:01:04.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.412" endtime="20201115 22:01:04.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.415" endtime="20201115 22:01:04.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.414" endtime="20201115 22:01:04.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.411" endtime="20201115 22:01:04.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.043" endtime="20201115 22:01:04.436"></status>
</kw>
<msg timestamp="20201115 22:01:04.436" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.445" endtime="20201115 22:01:04.462"></status>
</kw>
<msg timestamp="20201115 22:01:04.462" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.444" endtime="20201115 22:01:04.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.465" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.463" endtime="20201115 22:01:04.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.466" endtime="20201115 22:01:04.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.441" endtime="20201115 22:01:04.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.439" endtime="20201115 22:01:04.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.475" endtime="20201115 22:01:04.761"></status>
</kw>
<msg timestamp="20201115 22:01:04.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.473" endtime="20201115 22:01:04.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.765" endtime="20201115 22:01:04.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.773" endtime="20201115 22:01:04.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.471" endtime="20201115 22:01:04.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.469" endtime="20201115 22:01:04.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.780" level="INFO">${RESULT} = [{'time': 0.020074292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.09800000000152e-06, 'source_diff': 8.09800000000152e-06}, {'time': 0.020212931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:04.776" endtime="20201115 22:01:04.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.793" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:04.781" endtime="20201115 22:01:04.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.798" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.797" endtime="20201115 22:01:04.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.801" level="INFO">VALUE: [8.09800000000152e-06, 8.09800000000152e-06, 8.083000000002477e-06, 8.08400000000195e-06, 8.110999999998147e-06, 8.097000000002047e-06, 8.000000000001062e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.111000000001617e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.09800000000152e-06, 8.097000000002047e-06, 8.097999999998051e-06, 8.153000000000327e-06, 8.09800000000152e-06, 8.097000000002047e-06, 8.08400000000195e-06, 8.054999999999868e-06, 8.096999999998578e-06, 8.09800000000152e-06, 8.09800000000152e-06, 8.110999999998147e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.056000000002811e-06, 8.111000000001617e-06, 8.083999999998481e-06, 8.068999999999438e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.041000000000298e-06, 8.041000000000298e-06, 8.153000000000327e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.09800000000152e-06, 8.096999999998578e-06, 8.125000000001187e-06, 8.09800000000152e-06, 8.069999999998911e-06, 8.054999999999868e-06, 8.111000000001617e-06, 8.096999999998578e-06, 8.08400000000195e-06, 8.139000000000757e-06, 8.068999999999438e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.799" endtime="20201115 22:01:04.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.794" endtime="20201115 22:01:04.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.804" endtime="20201115 22:01:04.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.807" endtime="20201115 22:01:04.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.805" endtime="20201115 22:01:04.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.802" endtime="20201115 22:01:04.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.437" endtime="20201115 22:01:04.828"></status>
</kw>
<msg timestamp="20201115 22:01:04.828" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.837" endtime="20201115 22:01:04.853"></status>
</kw>
<msg timestamp="20201115 22:01:04.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.835" endtime="20201115 22:01:04.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.855" endtime="20201115 22:01:04.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.857" endtime="20201115 22:01:04.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.832" endtime="20201115 22:01:04.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.830" endtime="20201115 22:01:04.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.866" endtime="20201115 22:01:05.152"></status>
</kw>
<msg timestamp="20201115 22:01:05.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.865" endtime="20201115 22:01:05.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020112181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.156" endtime="20201115 22:01:05.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.164" endtime="20201115 22:01:05.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.862" endtime="20201115 22:01:05.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.860" endtime="20201115 22:01:05.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.171" level="INFO">${RESULT} = [{'time': 0.020112181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.11200000000109e-06, 'source_diff': 8.11200000000109e-06}, {'time': 0.020249347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:05.168" endtime="20201115 22:01:05.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.185" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:05.172" endtime="20201115 22:01:05.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.189" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.188" endtime="20201115 22:01:05.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.192" level="INFO">VALUE: [8.11200000000109e-06, 8.153000000000327e-06, 8.11200000000109e-06, 8.083000000002477e-06, 8.054999999999868e-06, 8.111000000001617e-06, 8.069999999998911e-06, 8.11200000000109e-06, 8.110999999998147e-06, 8.097999999998051e-06, 8.09800000000152e-06, 8.082999999999008e-06, 8.110999999998147e-06, 8.153000000000327e-06, 8.09800000000152e-06, 8.124999999997717e-06, 8.069999999998911e-06, 8.083999999998481e-06, 8.054999999999868e-06, 8.028000000000202e-06, 8.055999999999341e-06, 8.139000000000757e-06, 8.083999999998481e-06, 8.069999999998911e-06, 8.055999999999341e-06, 8.08400000000195e-06, 8.083000000002477e-06, 8.110999999998147e-06, 8.111000000001617e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.111000000001617e-06, 8.08400000000195e-06, 8.000000000001062e-06, 8.07000000000238e-06, 8.069000000002907e-06, 8.110999999998147e-06, 8.083999999998481e-06, 8.111000000001617e-06, 8.09800000000152e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.125000000001187e-06, 8.09800000000152e-06, 8.082999999999008e-06, 8.09800000000152e-06, 8.083999999998481e-06]</msg>
<status status="PASS" starttime="20201115 22:01:05.190" endtime="20201115 22:01:05.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.186" endtime="20201115 22:01:05.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.195" endtime="20201115 22:01:05.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.198" endtime="20201115 22:01:05.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.197" endtime="20201115 22:01:05.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.193" endtime="20201115 22:01:05.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.828" endtime="20201115 22:01:05.219"></status>
</kw>
<msg timestamp="20201115 22:01:05.219" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.228" endtime="20201115 22:01:05.245"></status>
</kw>
<msg timestamp="20201115 22:01:05.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.226" endtime="20201115 22:01:05.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.246" endtime="20201115 22:01:05.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.249" endtime="20201115 22:01:05.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.224" endtime="20201115 22:01:05.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.222" endtime="20201115 22:01:05.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.258" endtime="20201115 22:01:05.545"></status>
</kw>
<msg timestamp="20201115 22:01:05.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020063958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.256" endtime="20201115 22:01:05.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020063958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.549" endtime="20201115 22:01:05.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.564" endtime="20201115 22:01:05.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.254" endtime="20201115 22:01:05.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.252" endtime="20201115 22:01:05.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.570" level="INFO">${RESULT} = [{'time': 0.020072042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.020210125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.567" endtime="20201115 22:01:05.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.584" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:05.571" endtime="20201115 22:01:05.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.588" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.587" endtime="20201115 22:01:05.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.591" level="INFO">VALUE: [8.083999999998481e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.153000000000327e-06, 8.097000000002047e-06, 8.097000000002047e-06, 8.055999999999341e-06, 8.083999999998481e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.083999999998481e-06, 8.097000000002047e-06, 8.08400000000195e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.028000000000202e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.111000000001617e-06, 8.096999999998578e-06, 8.07000000000238e-06, 8.097000000002047e-06, 8.083000000002477e-06, 8.096999999998578e-06, 8.083000000002477e-06, 8.153000000000327e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.097000000002047e-06, 8.041000000000298e-06, 8.097000000002047e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.097000000002047e-06, 8.111000000001617e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.097000000002047e-06, 8.151999999997384e-06, 8.082999999999008e-06, 8.152999999996857e-06, 8.082999999999008e-06, 8.055999999999341e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.069000000002907e-06, 8.055999999999341e-06]</msg>
<status status="PASS" starttime="20201115 22:01:05.589" endtime="20201115 22:01:05.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.585" endtime="20201115 22:01:05.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.594" endtime="20201115 22:01:05.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.597" endtime="20201115 22:01:05.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.596" endtime="20201115 22:01:05.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.592" endtime="20201115 22:01:05.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.220" endtime="20201115 22:01:05.618"></status>
</kw>
<msg timestamp="20201115 22:01:05.618" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.627" endtime="20201115 22:01:05.644"></status>
</kw>
<msg timestamp="20201115 22:01:05.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.625" endtime="20201115 22:01:05.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.645" endtime="20201115 22:01:05.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.648" endtime="20201115 22:01:05.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.623" endtime="20201115 22:01:05.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.621" endtime="20201115 22:01:05.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.657" endtime="20201115 22:01:05.944"></status>
</kw>
<msg timestamp="20201115 22:01:05.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.655" endtime="20201115 22:01:05.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.948" endtime="20201115 22:01:05.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.957" endtime="20201115 22:01:05.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.653" endtime="20201115 22:01:05.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.651" endtime="20201115 22:01:05.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.963" level="INFO">${RESULT} = [{'time': 0.020182903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.020320667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.960" endtime="20201115 22:01:05.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.976" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:05.964" endtime="20201115 22:01:05.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.981" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.980" endtime="20201115 22:01:05.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.983" level="INFO">VALUE: [8.083999999998481e-06, 8.08400000000195e-06, 8.028000000000202e-06, 8.111000000001617e-06, 8.09800000000152e-06, 8.097000000002047e-06, 8.014000000000632e-06, 8.028000000000202e-06, 8.083000000002477e-06, 8.07000000000238e-06, 8.097000000002047e-06, 8.083000000002477e-06, 8.083000000002477e-06, 8.083999999998481e-06, 8.139000000000757e-06, 8.07000000000238e-06, 8.125000000001187e-06, 8.082999999999008e-06, 8.083999999998481e-06, 8.027000000000728e-06, 8.111000000001617e-06, 8.069999999998911e-06, 8.110999999998147e-06, 8.166999999999897e-06, 8.097000000002047e-06, 8.083000000002477e-06, 8.09800000000152e-06, 8.068999999999438e-06, 8.110999999998147e-06, 8.042000000003241e-06, 8.068999999999438e-06, 8.110999999998147e-06, 8.097000000002047e-06, 8.082999999999008e-06, 8.097999999998051e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.097000000002047e-06, 8.082999999999008e-06, 8.097000000002047e-06, 8.08400000000195e-06, 8.111000000001617e-06, 8.068999999999438e-06, 8.07000000000238e-06, 8.083000000002477e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.054999999999868e-06, 8.08400000000195e-06]</msg>
<status status="PASS" starttime="20201115 22:01:05.982" endtime="20201115 22:01:05.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.977" endtime="20201115 22:01:05.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.986" endtime="20201115 22:01:05.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.990" endtime="20201115 22:01:06.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.988" endtime="20201115 22:01:06.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.985" endtime="20201115 22:01:06.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.619" endtime="20201115 22:01:06.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.041" endtime="20201115 22:01:06.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.041" endtime="20201115 22:01:06.011"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.013" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.022" endtime="20201115 22:01:06.039"></status>
</kw>
<msg timestamp="20201115 22:01:06.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.020" endtime="20201115 22:01:06.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.041" endtime="20201115 22:01:06.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.043" endtime="20201115 22:01:06.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.018" endtime="20201115 22:01:06.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.016" endtime="20201115 22:01:06.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.052" endtime="20201115 22:01:06.339"></status>
</kw>
<msg timestamp="20201115 22:01:06.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.051" endtime="20201115 22:01:06.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.343" endtime="20201115 22:01:06.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.351" endtime="20201115 22:01:06.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.048" endtime="20201115 22:01:06.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.046" endtime="20201115 22:01:06.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.358" level="INFO">${RESULT} = [{'time': 0.022520653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.022670569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.355" endtime="20201115 22:01:06.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.371" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:06.359" endtime="20201115 22:01:06.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.376" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.375" endtime="20201115 22:01:06.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.378" level="INFO">VALUE: [8.236000000001742e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.209000000002076e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.263999999997412e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.207999999999133e-06, 8.305999999999591e-06, 8.277999999996982e-06, 8.236000000001742e-06, 8.249999999997842e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.179999999999993e-06, 8.292000000000022e-06, 8.250000000001312e-06, 8.305000000000118e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.249999999997842e-06, 8.250000000001312e-06]</msg>
<status status="PASS" starttime="20201115 22:01:06.377" endtime="20201115 22:01:06.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.372" endtime="20201115 22:01:06.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.381" endtime="20201115 22:01:06.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.385" endtime="20201115 22:01:06.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.383" endtime="20201115 22:01:06.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.380" endtime="20201115 22:01:06.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.014" endtime="20201115 22:01:06.405"></status>
</kw>
<msg timestamp="20201115 22:01:06.406" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.414" endtime="20201115 22:01:06.432"></status>
</kw>
<msg timestamp="20201115 22:01:06.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.413" endtime="20201115 22:01:06.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.435" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.433" endtime="20201115 22:01:06.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.436" endtime="20201115 22:01:06.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.410" endtime="20201115 22:01:06.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.408" endtime="20201115 22:01:06.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.445" endtime="20201115 22:01:06.731"></status>
</kw>
<msg timestamp="20201115 22:01:06.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020141153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.444" endtime="20201115 22:01:06.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020141153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.735" endtime="20201115 22:01:06.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.743" endtime="20201115 22:01:06.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.441" endtime="20201115 22:01:06.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.439" endtime="20201115 22:01:06.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.750" level="INFO">${RESULT} = [{'time': 0.020141153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.263999999997412e-06, 'source_diff': 8.263999999997412e-06}, {'time': 0.020289597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.747" endtime="20201115 22:01:06.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.763" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:06.751" endtime="20201115 22:01:06.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.768" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.767" endtime="20201115 22:01:06.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.770" level="INFO">VALUE: [8.263999999997412e-06, 8.235999999998272e-06, 8.235999999998272e-06, 8.236000000001742e-06, 8.207999999999133e-06, 8.236000000001742e-06, 8.180999999999466e-06, 8.262999999997939e-06, 8.278000000000452e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.277000000000978e-06, 8.236000000001742e-06, 8.166000000000423e-06, 8.250000000001312e-06, 8.263999999997412e-06, 8.263000000001408e-06, 8.235999999998272e-06, 8.263999999997412e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.195000000002506e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.223000000001646e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.277999999996982e-06, 8.262999999997939e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.208000000002602e-06, 8.180999999999466e-06, 8.249999999997842e-06, 8.249999999997842e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201115 22:01:06.769" endtime="20201115 22:01:06.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.764" endtime="20201115 22:01:06.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.774" endtime="20201115 22:01:06.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.777" endtime="20201115 22:01:06.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.775" endtime="20201115 22:01:06.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.772" endtime="20201115 22:01:06.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.406" endtime="20201115 22:01:06.798"></status>
</kw>
<msg timestamp="20201115 22:01:06.798" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.807" endtime="20201115 22:01:06.824"></status>
</kw>
<msg timestamp="20201115 22:01:06.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.805" endtime="20201115 22:01:06.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.826" endtime="20201115 22:01:06.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.828" endtime="20201115 22:01:06.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.803" endtime="20201115 22:01:06.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.800" endtime="20201115 22:01:06.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.837" endtime="20201115 22:01:07.123"></status>
</kw>
<msg timestamp="20201115 22:01:07.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020821931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020830167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.836" endtime="20201115 22:01:07.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020821931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020830167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.127" endtime="20201115 22:01:07.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.135" endtime="20201115 22:01:07.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.833" endtime="20201115 22:01:07.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.832" endtime="20201115 22:01:07.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.142" level="INFO">${RESULT} = [{'time': 0.020830167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.020977319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.139" endtime="20201115 22:01:07.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.156" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:07.143" endtime="20201115 22:01:07.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.160" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.159" endtime="20201115 22:01:07.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.163" level="INFO">VALUE: [8.236000000001742e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.249999999997842e-06, 8.193999999999563e-06, 8.236000000001742e-06, 8.235999999998272e-06, 8.223000000001646e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.305000000000118e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.237000000001216e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.263999999997412e-06, 8.263999999997412e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.263999999997412e-06, 8.278000000000452e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.263999999997412e-06, 8.263999999997412e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.249999999997842e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.235999999998272e-06]</msg>
<status status="PASS" starttime="20201115 22:01:07.161" endtime="20201115 22:01:07.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.156" endtime="20201115 22:01:07.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.166" endtime="20201115 22:01:07.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.169" endtime="20201115 22:01:07.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.167" endtime="20201115 22:01:07.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.164" endtime="20201115 22:01:07.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.798" endtime="20201115 22:01:07.190"></status>
</kw>
<msg timestamp="20201115 22:01:07.190" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.199" endtime="20201115 22:01:07.217"></status>
</kw>
<msg timestamp="20201115 22:01:07.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.198" endtime="20201115 22:01:07.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.219" endtime="20201115 22:01:07.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.221" endtime="20201115 22:01:07.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.195" endtime="20201115 22:01:07.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.193" endtime="20201115 22:01:07.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.230" endtime="20201115 22:01:07.517"></status>
</kw>
<msg timestamp="20201115 22:01:07.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:07.229" endtime="20201115 22:01:07.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:07.521" endtime="20201115 22:01:07.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.529" endtime="20201115 22:01:07.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.226" endtime="20201115 22:01:07.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.224" endtime="20201115 22:01:07.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.536" level="INFO">${RESULT} = [{'time': 0.020619236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.020768139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.533" endtime="20201115 22:01:07.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.549" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:07.537" endtime="20201115 22:01:07.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.554" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.553" endtime="20201115 22:01:07.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.556" level="INFO">VALUE: [8.235999999998272e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.262999999997939e-06, 8.249999999997842e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.166999999999897e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.291000000000548e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.263999999997412e-06, 8.264000000000882e-06, 8.194999999999036e-06, 8.264000000000882e-06, 8.263999999997412e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.276999999997509e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.263999999997412e-06, 8.235999999998272e-06, 8.278000000000452e-06, 8.221999999998703e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.263000000001408e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.236000000001742e-06]</msg>
<status status="PASS" starttime="20201115 22:01:07.555" endtime="20201115 22:01:07.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.550" endtime="20201115 22:01:07.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.559" endtime="20201115 22:01:07.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.563" endtime="20201115 22:01:07.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.562" endtime="20201115 22:01:07.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.558" endtime="20201115 22:01:07.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.191" endtime="20201115 22:01:07.584"></status>
</kw>
<msg timestamp="20201115 22:01:07.584" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.593" endtime="20201115 22:01:07.610"></status>
</kw>
<msg timestamp="20201115 22:01:07.611" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.591" endtime="20201115 22:01:07.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.612" endtime="20201115 22:01:07.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.614" endtime="20201115 22:01:07.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.589" endtime="20201115 22:01:07.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.587" endtime="20201115 22:01:07.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.623" endtime="20201115 22:01:07.910"></status>
</kw>
<msg timestamp="20201115 22:01:07.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.621" endtime="20201115 22:01:07.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.914" endtime="20201115 22:01:07.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.922" endtime="20201115 22:01:07.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.619" endtime="20201115 22:01:07.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.617" endtime="20201115 22:01:07.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.929" level="INFO">${RESULT} = [{'time': 0.020089458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.020237542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.925" endtime="20201115 22:01:07.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.942" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:07.930" endtime="20201115 22:01:07.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.946" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.945" endtime="20201115 22:01:07.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.949" level="INFO">VALUE: [8.250000000001312e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.264000000000882e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.209000000002076e-06, 8.291000000000548e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.249999999997842e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.277999999996982e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.319999999999161e-06, 8.237000000001216e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.263999999997412e-06, 8.236000000001742e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.276999999997509e-06, 8.249999999997842e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.264000000000882e-06, 8.237000000001216e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.276999999997509e-06]</msg>
<status status="PASS" starttime="20201115 22:01:07.948" endtime="20201115 22:01:07.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.943" endtime="20201115 22:01:07.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.953" endtime="20201115 22:01:07.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.956" endtime="20201115 22:01:07.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.954" endtime="20201115 22:01:07.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.951" endtime="20201115 22:01:07.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.585" endtime="20201115 22:01:07.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.012" endtime="20201115 22:01:07.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.011" endtime="20201115 22:01:07.977"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.979" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.988" endtime="20201115 22:01:08.007"></status>
</kw>
<msg timestamp="20201115 22:01:08.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.986" endtime="20201115 22:01:08.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.008" endtime="20201115 22:01:08.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.011" endtime="20201115 22:01:08.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.984" endtime="20201115 22:01:08.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.982" endtime="20201115 22:01:08.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.020" endtime="20201115 22:01:08.306"></status>
</kw>
<msg timestamp="20201115 22:01:08.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022465139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.018" endtime="20201115 22:01:08.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022465139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.310" endtime="20201115 22:01:08.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.318" endtime="20201115 22:01:08.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.016" endtime="20201115 22:01:08.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.014" endtime="20201115 22:01:08.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.325" level="INFO">${RESULT} = [{'time': 0.022465139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.022623028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:08.322" endtime="20201115 22:01:08.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.338" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:08.326" endtime="20201115 22:01:08.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.343" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:08.342" endtime="20201115 22:01:08.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.346" level="INFO">VALUE: [8.360999999998397e-06, 8.403000000000577e-06, 8.360999999998397e-06, 8.403000000000577e-06, 8.430999999999716e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.429999999996773e-06, 8.430000000000243e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.388999999997537e-06, 8.402000000001103e-06, 8.375000000001437e-06, 8.347000000002297e-06, 8.389000000001007e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.430999999999716e-06, 8.499999999998092e-06, 8.32000000000263e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.375000000001437e-06, 8.415999999997203e-06, 8.403000000000577e-06, 8.443999999999813e-06, 8.403000000000577e-06, 8.430000000000243e-06, 8.402999999997107e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.333999999998731e-06, 8.403000000000577e-06, 8.388999999997537e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.415999999997203e-06, 8.389000000001007e-06, 8.415999999997203e-06, 8.388000000001533e-06, 8.417000000000147e-06, 8.471999999998953e-06]</msg>
<status status="PASS" starttime="20201115 22:01:08.344" endtime="20201115 22:01:08.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.339" endtime="20201115 22:01:08.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.349" endtime="20201115 22:01:08.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.353" endtime="20201115 22:01:08.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.351" endtime="20201115 22:01:08.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.347" endtime="20201115 22:01:08.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.980" endtime="20201115 22:01:08.374"></status>
</kw>
<msg timestamp="20201115 22:01:08.374" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.383" endtime="20201115 22:01:08.401"></status>
</kw>
<msg timestamp="20201115 22:01:08.401" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.381" endtime="20201115 22:01:08.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.402" endtime="20201115 22:01:08.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.405" endtime="20201115 22:01:08.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.378" endtime="20201115 22:01:08.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.376" endtime="20201115 22:01:08.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.414" endtime="20201115 22:01:08.700"></status>
</kw>
<msg timestamp="20201115 22:01:08.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.412" endtime="20201115 22:01:08.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.704" endtime="20201115 22:01:08.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.713" endtime="20201115 22:01:08.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.410" endtime="20201115 22:01:08.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.408" endtime="20201115 22:01:08.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.719" level="INFO">${RESULT} = [{'time': 0.020274556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.417000000000147e-06, 'source_diff': 8.417000000000147e-06}, {'time': 0.020433181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:08.716" endtime="20201115 22:01:08.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.733" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:08.720" endtime="20201115 22:01:08.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.738" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:08.737" endtime="20201115 22:01:08.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.740" level="INFO">VALUE: [8.417000000000147e-06, 8.389000000001007e-06, 8.416000000000673e-06, 8.401999999997634e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.389000000001007e-06, 8.361000000001867e-06, 8.416999999996677e-06, 8.389000000001007e-06, 8.416999999996677e-06, 8.430999999999716e-06, 8.416000000000673e-06, 8.402999999997107e-06, 8.430999999999716e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.401999999997634e-06, 8.416000000000673e-06, 8.416000000000673e-06, 8.402999999997107e-06, 8.416000000000673e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.430999999999716e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.430999999999716e-06, 8.389000000001007e-06, 8.458999999998856e-06, 8.417000000000147e-06, 8.402999999997107e-06, 8.403000000000577e-06, 8.415999999997203e-06, 8.459000000002326e-06, 8.416000000000673e-06, 8.375000000001437e-06, 8.431000000003186e-06, 8.417000000000147e-06, 8.443999999999813e-06, 8.403000000000577e-06, 8.416000000000673e-06, 8.416000000000673e-06, 8.401999999997634e-06, 8.430999999999716e-06, 8.430999999999716e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.375000000001437e-06, 8.416000000000673e-06]</msg>
<status status="PASS" starttime="20201115 22:01:08.739" endtime="20201115 22:01:08.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.734" endtime="20201115 22:01:08.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.743" endtime="20201115 22:01:08.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.747" endtime="20201115 22:01:08.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.745" endtime="20201115 22:01:08.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.742" endtime="20201115 22:01:08.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.374" endtime="20201115 22:01:08.767"></status>
</kw>
<msg timestamp="20201115 22:01:08.768" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.776" endtime="20201115 22:01:08.795"></status>
</kw>
<msg timestamp="20201115 22:01:08.795" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.775" endtime="20201115 22:01:08.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.797" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.796" endtime="20201115 22:01:08.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.798" endtime="20201115 22:01:08.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.772" endtime="20201115 22:01:08.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.770" endtime="20201115 22:01:08.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.808" endtime="20201115 22:01:09.096"></status>
</kw>
<msg timestamp="20201115 22:01:09.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:08.806" endtime="20201115 22:01:09.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:09.100" endtime="20201115 22:01:09.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.108" endtime="20201115 22:01:09.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.803" endtime="20201115 22:01:09.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.802" endtime="20201115 22:01:09.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.115" level="INFO">${RESULT} = [{'time': 0.020123931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.430999999999716e-06, 'source_diff': 8.430999999999716e-06}, {'time': 0.020283278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:09.112" endtime="20201115 22:01:09.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.129" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:09.116" endtime="20201115 22:01:09.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.133" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.132" endtime="20201115 22:01:09.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.136" level="INFO">VALUE: [8.430999999999716e-06, 8.402999999997107e-06, 8.403000000000577e-06, 8.416000000000673e-06, 8.416000000000673e-06, 8.430999999999716e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.402000000001103e-06, 8.403000000000577e-06, 8.430999999999716e-06, 8.415999999997203e-06, 8.403000000000577e-06, 8.388999999997537e-06, 8.443999999999813e-06, 8.388999999997537e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.388999999997537e-06, 8.457999999999383e-06, 8.389000000001007e-06, 8.332999999999258e-06, 8.473000000001896e-06, 8.430000000000243e-06, 8.402999999997107e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.402999999997107e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.486000000001992e-06, 8.402999999997107e-06, 8.430999999999716e-06, 8.417000000000147e-06, 8.389000000001007e-06, 8.388999999997537e-06, 8.403000000000577e-06, 8.416000000000673e-06, 8.346999999998828e-06, 8.443999999999813e-06, 8.389000000001007e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.416000000000673e-06, 8.415999999997203e-06, 8.403000000000577e-06]</msg>
<status status="PASS" starttime="20201115 22:01:09.134" endtime="20201115 22:01:09.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.130" endtime="20201115 22:01:09.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.139" endtime="20201115 22:01:09.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.142" endtime="20201115 22:01:09.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.140" endtime="20201115 22:01:09.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.137" endtime="20201115 22:01:09.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.768" endtime="20201115 22:01:09.163"></status>
</kw>
<msg timestamp="20201115 22:01:09.163" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.172" endtime="20201115 22:01:09.190"></status>
</kw>
<msg timestamp="20201115 22:01:09.190" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.170" endtime="20201115 22:01:09.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.193" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.191" endtime="20201115 22:01:09.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.194" endtime="20201115 22:01:09.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.168" endtime="20201115 22:01:09.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.165" endtime="20201115 22:01:09.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.203" endtime="20201115 22:01:09.489"></status>
</kw>
<msg timestamp="20201115 22:01:09.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020147875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020156292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.201" endtime="20201115 22:01:09.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020147875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020156292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.493" endtime="20201115 22:01:09.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.502" endtime="20201115 22:01:09.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.199" endtime="20201115 22:01:09.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.197" endtime="20201115 22:01:09.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.509" level="INFO">${RESULT} = [{'time': 0.020156292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.417000000000147e-06, 'source_diff': 8.417000000000147e-06}, {'time': 0.020315875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:09.505" endtime="20201115 22:01:09.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.522" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:09.510" endtime="20201115 22:01:09.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.527" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.526" endtime="20201115 22:01:09.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.529" level="INFO">VALUE: [8.417000000000147e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.416000000000673e-06, 8.444999999999286e-06, 8.443999999999813e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.417000000000147e-06, 8.444000000003282e-06, 8.416000000000673e-06, 8.416000000000673e-06, 8.416000000000673e-06, 8.415999999997203e-06, 8.416999999996677e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.415999999997203e-06, 8.443999999999813e-06, 8.472000000002422e-06, 8.417000000000147e-06, 8.389000000001007e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.443999999999813e-06, 8.403000000000577e-06, 8.430000000000243e-06, 8.416000000000673e-06, 8.403000000000577e-06, 8.416000000000673e-06, 8.388000000001533e-06, 8.403000000000577e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.430000000000243e-06, 8.403000000000577e-06, 8.416000000000673e-06, 8.417000000000147e-06, 8.346999999998828e-06, 8.402000000001103e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.403000000000577e-06]</msg>
<status status="PASS" starttime="20201115 22:01:09.528" endtime="20201115 22:01:09.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.523" endtime="20201115 22:01:09.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.532" endtime="20201115 22:01:09.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.536" endtime="20201115 22:01:09.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.534" endtime="20201115 22:01:09.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.531" endtime="20201115 22:01:09.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.163" endtime="20201115 22:01:09.556"></status>
</kw>
<msg timestamp="20201115 22:01:09.556" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.565" endtime="20201115 22:01:09.584"></status>
</kw>
<msg timestamp="20201115 22:01:09.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.564" endtime="20201115 22:01:09.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.585" endtime="20201115 22:01:09.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.588" endtime="20201115 22:01:09.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.561" endtime="20201115 22:01:09.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.559" endtime="20201115 22:01:09.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.597" endtime="20201115 22:01:09.882"></status>
</kw>
<msg timestamp="20201115 22:01:09.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020305403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.595" endtime="20201115 22:01:09.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020305403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.887" endtime="20201115 22:01:09.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.895" endtime="20201115 22:01:09.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.593" endtime="20201115 22:01:09.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.591" endtime="20201115 22:01:09.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.902" level="INFO">${RESULT} = [{'time': 0.020313819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.416000000000673e-06, 'source_diff': 8.416000000000673e-06}, {'time': 0.020472153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:09.898" endtime="20201115 22:01:09.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.915" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:09.903" endtime="20201115 22:01:09.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.920" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.919" endtime="20201115 22:01:09.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.922" level="INFO">VALUE: [8.416000000000673e-06, 8.375000000001437e-06, 8.375000000001437e-06, 8.402000000001103e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.416000000000673e-06, 8.347000000002297e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.430999999999716e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.402999999997107e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.415999999997203e-06, 8.387999999998064e-06, 8.402000000001103e-06, 8.417000000000147e-06, 8.402000000001103e-06, 8.361000000001867e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.361000000001867e-06, 8.403000000000577e-06, 8.444999999999286e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.472999999998426e-06, 8.416999999996677e-06, 8.457999999999383e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.416000000000673e-06, 8.443999999999813e-06]</msg>
<status status="PASS" starttime="20201115 22:01:09.921" endtime="20201115 22:01:09.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.916" endtime="20201115 22:01:09.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.925" endtime="20201115 22:01:09.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.929" endtime="20201115 22:01:09.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.927" endtime="20201115 22:01:09.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.924" endtime="20201115 22:01:09.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.557" endtime="20201115 22:01:09.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.978" endtime="20201115 22:01:09.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.977" endtime="20201115 22:01:09.950"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.952" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.961" endtime="20201115 22:01:09.979"></status>
</kw>
<msg timestamp="20201115 22:01:09.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.959" endtime="20201115 22:01:09.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.981" endtime="20201115 22:01:09.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.983" endtime="20201115 22:01:09.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.956" endtime="20201115 22:01:09.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.954" endtime="20201115 22:01:09.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.993" endtime="20201115 22:01:10.279"></status>
</kw>
<msg timestamp="20201115 22:01:10.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.991" endtime="20201115 22:01:10.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.283" endtime="20201115 22:01:10.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.291" endtime="20201115 22:01:10.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.988" endtime="20201115 22:01:10.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.987" endtime="20201115 22:01:10.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.298" level="INFO">${RESULT} = [{'time': 0.022759194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.022927861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:10.295" endtime="20201115 22:01:10.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.311" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:10.299" endtime="20201115 22:01:10.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.316" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.315" endtime="20201115 22:01:10.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.318" level="INFO">VALUE: [8.500000000001562e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.597000000002547e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.555999999999842e-06, 8.555999999999842e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.666000000000923e-06, 8.582999999999508e-06, 8.499999999998092e-06, 8.583000000002977e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.556000000003311e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.639000000001257e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.540999999997329e-06, 8.58400000000245e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.583999999998981e-06, 8.625000000001687e-06, 8.597000000002547e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.568999999999938e-06]</msg>
<status status="PASS" starttime="20201115 22:01:10.317" endtime="20201115 22:01:10.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.312" endtime="20201115 22:01:10.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.322" endtime="20201115 22:01:10.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.325" endtime="20201115 22:01:10.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.323" endtime="20201115 22:01:10.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.320" endtime="20201115 22:01:10.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.952" endtime="20201115 22:01:10.345"></status>
</kw>
<msg timestamp="20201115 22:01:10.346" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.355" endtime="20201115 22:01:10.373"></status>
</kw>
<msg timestamp="20201115 22:01:10.374" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.353" endtime="20201115 22:01:10.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.377" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.375" endtime="20201115 22:01:10.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.378" endtime="20201115 22:01:10.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.350" endtime="20201115 22:01:10.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.348" endtime="20201115 22:01:10.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.388" endtime="20201115 22:01:10.676"></status>
</kw>
<msg timestamp="20201115 22:01:10.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.386" endtime="20201115 22:01:10.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.680" endtime="20201115 22:01:10.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.688" endtime="20201115 22:01:10.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.383" endtime="20201115 22:01:10.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.381" endtime="20201115 22:01:10.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.694" level="INFO">${RESULT} = [{'time': 0.020212583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.020381819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:10.691" endtime="20201115 22:01:10.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.708" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:10.695" endtime="20201115 22:01:10.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.712" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.711" endtime="20201115 22:01:10.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.715" level="INFO">VALUE: [8.568999999999938e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.611000000002117e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.611000000002117e-06, 8.569999999999411e-06, 8.542000000000272e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.528000000000702e-06, 8.568999999999938e-06, 8.528000000000702e-06, 8.625000000001687e-06, 8.638999999997787e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.582999999999508e-06, 8.527000000001228e-06, 8.583999999998981e-06, 8.583000000002977e-06, 8.513999999997662e-06, 8.570000000002881e-06, 8.568999999999938e-06, 8.542000000000272e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.583000000002977e-06, 8.570000000002881e-06, 8.569999999999411e-06, 8.485999999998523e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.569999999999411e-06, 8.583000000002977e-06, 8.58400000000245e-06]</msg>
<status status="PASS" starttime="20201115 22:01:10.713" endtime="20201115 22:01:10.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.709" endtime="20201115 22:01:10.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.718" endtime="20201115 22:01:10.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.721" endtime="20201115 22:01:10.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.720" endtime="20201115 22:01:10.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.716" endtime="20201115 22:01:10.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.346" endtime="20201115 22:01:10.742"></status>
</kw>
<msg timestamp="20201115 22:01:10.742" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.757" endtime="20201115 22:01:10.776"></status>
</kw>
<msg timestamp="20201115 22:01:10.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.750" endtime="20201115 22:01:10.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.777" endtime="20201115 22:01:10.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.780" endtime="20201115 22:01:10.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.747" endtime="20201115 22:01:10.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.745" endtime="20201115 22:01:10.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.789" endtime="20201115 22:01:11.075"></status>
</kw>
<msg timestamp="20201115 22:01:11.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025952375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025960944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.787" endtime="20201115 22:01:11.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025952375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025960944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.079" endtime="20201115 22:01:11.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.087" endtime="20201115 22:01:11.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.785" endtime="20201115 22:01:11.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.783" endtime="20201115 22:01:11.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.094" level="INFO">${RESULT} = [{'time': 0.025960944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.026130486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.091" endtime="20201115 22:01:11.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.107" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:11.095" endtime="20201115 22:01:11.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.112" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.111" endtime="20201115 22:01:11.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.115" level="INFO">VALUE: [8.568999999999938e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.583999999998981e-06, 8.569999999999411e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.583000000002977e-06, 8.583999999998981e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.570000000002881e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.583999999998981e-06, 8.582999999999508e-06, 8.569000000006877e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.555000000000368e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.555999999999842e-06, 8.652000000004822e-06, 8.514000000001132e-06]</msg>
<status status="PASS" starttime="20201115 22:01:11.113" endtime="20201115 22:01:11.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.108" endtime="20201115 22:01:11.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.118" endtime="20201115 22:01:11.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.121" endtime="20201115 22:01:11.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.120" endtime="20201115 22:01:11.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.116" endtime="20201115 22:01:11.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.743" endtime="20201115 22:01:11.142"></status>
</kw>
<msg timestamp="20201115 22:01:11.142" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.151" endtime="20201115 22:01:11.170"></status>
</kw>
<msg timestamp="20201115 22:01:11.171" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.150" endtime="20201115 22:01:11.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.173" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.172" endtime="20201115 22:01:11.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.174" endtime="20201115 22:01:11.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.147" endtime="20201115 22:01:11.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.145" endtime="20201115 22:01:11.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.183" endtime="20201115 22:01:11.470"></status>
</kw>
<msg timestamp="20201115 22:01:11.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.182" endtime="20201115 22:01:11.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.474" endtime="20201115 22:01:11.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.482" endtime="20201115 22:01:11.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.179" endtime="20201115 22:01:11.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.177" endtime="20201115 22:01:11.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.489" level="INFO">${RESULT} = [{'time': 0.020629806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.020802153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.486" endtime="20201115 22:01:11.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.502" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:11.490" endtime="20201115 22:01:11.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.507" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.506" endtime="20201115 22:01:11.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.509" level="INFO">VALUE: [8.569999999999411e-06, 8.514000000001132e-06, 8.582999999999508e-06, 8.555000000000368e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.555000000000368e-06, 8.555999999999842e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.638000000001783e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.597000000002547e-06, 8.583999999998981e-06, 8.582999999999508e-06, 8.500000000001562e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.555000000000368e-06, 8.555999999999842e-06, 8.583999999998981e-06, 8.569999999999411e-06, 8.542000000000272e-06, 8.582999999999508e-06, 8.500000000001562e-06, 8.540999999997329e-06, 8.582999999999508e-06, 8.528000000000702e-06, 8.59800000000202e-06, 8.652000000001353e-06, 8.596999999999078e-06, 8.528000000000702e-06, 8.569999999999411e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.583999999998981e-06, 8.583000000002977e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.58400000000245e-06, 8.596999999999078e-06, 8.583000000002977e-06, 8.582999999999508e-06]</msg>
<status status="PASS" starttime="20201115 22:01:11.508" endtime="20201115 22:01:11.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.503" endtime="20201115 22:01:11.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.513" endtime="20201115 22:01:11.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.517" endtime="20201115 22:01:11.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.515" endtime="20201115 22:01:11.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.511" endtime="20201115 22:01:11.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.143" endtime="20201115 22:01:11.537"></status>
</kw>
<msg timestamp="20201115 22:01:11.537" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.546" endtime="20201115 22:01:11.565"></status>
</kw>
<msg timestamp="20201115 22:01:11.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.545" endtime="20201115 22:01:11.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.568" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.567" endtime="20201115 22:01:11.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.569" endtime="20201115 22:01:11.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.542" endtime="20201115 22:01:11.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.540" endtime="20201115 22:01:11.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.578" endtime="20201115 22:01:11.865"></status>
</kw>
<msg timestamp="20201115 22:01:11.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.577" endtime="20201115 22:01:11.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.869" endtime="20201115 22:01:11.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.877" endtime="20201115 22:01:11.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.574" endtime="20201115 22:01:11.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.572" endtime="20201115 22:01:11.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.884" level="INFO">${RESULT} = [{'time': 0.020320389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.020491194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.880" endtime="20201115 22:01:11.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.897" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:11.885" endtime="20201115 22:01:11.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.902" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.901" endtime="20201115 22:01:11.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.904" level="INFO">VALUE: [8.625000000001687e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.597999999998551e-06, 8.569000000003407e-06, 8.583000000002977e-06, 8.597000000002547e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.597999999998551e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.555999999999842e-06, 8.554999999996898e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.500000000001562e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.597999999998551e-06, 8.625000000001687e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.582999999999508e-06, 8.569000000003407e-06, 8.625000000001687e-06, 8.582999999999508e-06, 8.570000000002881e-06, 8.568999999999938e-06, 8.58400000000245e-06, 8.528000000000702e-06, 8.542000000000272e-06]</msg>
<status status="PASS" starttime="20201115 22:01:11.903" endtime="20201115 22:01:11.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.898" endtime="20201115 22:01:11.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.908" endtime="20201115 22:01:11.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.911" endtime="20201115 22:01:11.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.909" endtime="20201115 22:01:11.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.906" endtime="20201115 22:01:11.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.538" endtime="20201115 22:01:11.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.951" endtime="20201115 22:01:11.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.950" endtime="20201115 22:01:11.932"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.934" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.943" endtime="20201115 22:01:11.963"></status>
</kw>
<msg timestamp="20201115 22:01:11.964" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.941" endtime="20201115 22:01:11.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.965" endtime="20201115 22:01:11.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.967" endtime="20201115 22:01:11.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.939" endtime="20201115 22:01:11.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.937" endtime="20201115 22:01:11.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.976" endtime="20201115 22:01:12.264"></status>
</kw>
<msg timestamp="20201115 22:01:12.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.975" endtime="20201115 22:01:12.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.268" endtime="20201115 22:01:12.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.276" endtime="20201115 22:01:12.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.972" endtime="20201115 22:01:12.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.970" endtime="20201115 22:01:12.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.282" level="INFO">${RESULT} = [{'time': 0.022598014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.022778875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:12.279" endtime="20201115 22:01:12.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.296" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:12.283" endtime="20201115 22:01:12.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.300" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.299" endtime="20201115 22:01:12.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.303" level="INFO">VALUE: [8.749999999998342e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.819999999999661e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.667000000000397e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.763000000001908e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.735999999998773e-06, 8.666999999996927e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201115 22:01:12.301" endtime="20201115 22:01:12.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.297" endtime="20201115 22:01:12.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.306" endtime="20201115 22:01:12.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.310" endtime="20201115 22:01:12.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.308" endtime="20201115 22:01:12.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.305" endtime="20201115 22:01:12.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.935" endtime="20201115 22:01:12.330"></status>
</kw>
<msg timestamp="20201115 22:01:12.331" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.339" endtime="20201115 22:01:12.358"></status>
</kw>
<msg timestamp="20201115 22:01:12.359" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.338" endtime="20201115 22:01:12.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.361" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.360" endtime="20201115 22:01:12.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.362" endtime="20201115 22:01:12.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.335" endtime="20201115 22:01:12.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.333" endtime="20201115 22:01:12.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.371" endtime="20201115 22:01:12.658"></status>
</kw>
<msg timestamp="20201115 22:01:12.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020214403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.370" endtime="20201115 22:01:12.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020214403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.662" endtime="20201115 22:01:12.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.670" endtime="20201115 22:01:12.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.367" endtime="20201115 22:01:12.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.366" endtime="20201115 22:01:12.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.677" level="INFO">${RESULT} = [{'time': 0.020223111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.0204035, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:12.674" endtime="20201115 22:01:12.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.690" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:12.678" endtime="20201115 22:01:12.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.695" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.694" endtime="20201115 22:01:12.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.698" level="INFO">VALUE: [8.707999999999633e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.736999999998246e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.667000000000397e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.667000000000397e-06, 8.736000000002242e-06, 8.806000000000092e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.790999999997579e-06, 8.708999999999106e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201115 22:01:12.696" endtime="20201115 22:01:12.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.692" endtime="20201115 22:01:12.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.701" endtime="20201115 22:01:12.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.704" endtime="20201115 22:01:12.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.703" endtime="20201115 22:01:12.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.699" endtime="20201115 22:01:12.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.331" endtime="20201115 22:01:12.725"></status>
</kw>
<msg timestamp="20201115 22:01:12.725" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.734" endtime="20201115 22:01:12.754"></status>
</kw>
<msg timestamp="20201115 22:01:12.754" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.732" endtime="20201115 22:01:12.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.756" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.755" endtime="20201115 22:01:12.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.758" endtime="20201115 22:01:12.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.730" endtime="20201115 22:01:12.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.727" endtime="20201115 22:01:12.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.767" endtime="20201115 22:01:13.053"></status>
</kw>
<msg timestamp="20201115 22:01:13.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020142222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.765" endtime="20201115 22:01:13.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020142222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.057" endtime="20201115 22:01:13.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.066" endtime="20201115 22:01:13.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.762" endtime="20201115 22:01:13.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.761" endtime="20201115 22:01:13.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.072" level="INFO">${RESULT} = [{'time': 0.020150958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999998773e-06, 'source_diff': 8.735999999998773e-06}, {'time': 0.020333444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:13.069" endtime="20201115 22:01:13.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.086" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:13.074" endtime="20201115 22:01:13.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.090" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.089" endtime="20201115 22:01:13.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.093" level="INFO">VALUE: [8.735999999998773e-06, 8.680000000000493e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.749999999998342e-06, 8.722000000002672e-06, 8.792000000000522e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.736999999998246e-06, 8.722000000002672e-06, 8.667000000000397e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.764000000001382e-06, 8.736999999998246e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201115 22:01:13.091" endtime="20201115 22:01:13.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.087" endtime="20201115 22:01:13.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.096" endtime="20201115 22:01:13.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.099" endtime="20201115 22:01:13.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.098" endtime="20201115 22:01:13.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.094" endtime="20201115 22:01:13.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.725" endtime="20201115 22:01:13.120"></status>
</kw>
<msg timestamp="20201115 22:01:13.120" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.129" endtime="20201115 22:01:13.149"></status>
</kw>
<msg timestamp="20201115 22:01:13.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.127" endtime="20201115 22:01:13.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.152" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.150" endtime="20201115 22:01:13.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.153" endtime="20201115 22:01:13.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.125" endtime="20201115 22:01:13.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.123" endtime="20201115 22:01:13.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.162" endtime="20201115 22:01:13.448"></status>
</kw>
<msg timestamp="20201115 22:01:13.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.160" endtime="20201115 22:01:13.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.452" endtime="20201115 22:01:13.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.460" endtime="20201115 22:01:13.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.158" endtime="20201115 22:01:13.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.156" endtime="20201115 22:01:13.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.467" level="INFO">${RESULT} = [{'time': 0.020280889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.020461014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:13.464" endtime="20201115 22:01:13.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.481" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:13.468" endtime="20201115 22:01:13.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.485" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.484" endtime="20201115 22:01:13.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.488" level="INFO">VALUE: [8.792000000000522e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.736999999998246e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.736999999998246e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201115 22:01:13.486" endtime="20201115 22:01:13.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.482" endtime="20201115 22:01:13.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.491" endtime="20201115 22:01:13.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.494" endtime="20201115 22:01:13.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.493" endtime="20201115 22:01:13.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.489" endtime="20201115 22:01:13.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.121" endtime="20201115 22:01:13.515"></status>
</kw>
<msg timestamp="20201115 22:01:13.515" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.524" endtime="20201115 22:01:13.543"></status>
</kw>
<msg timestamp="20201115 22:01:13.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.522" endtime="20201115 22:01:13.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.546" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.544" endtime="20201115 22:01:13.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.547" endtime="20201115 22:01:13.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.520" endtime="20201115 22:01:13.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.518" endtime="20201115 22:01:13.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.556" endtime="20201115 22:01:13.843"></status>
</kw>
<msg timestamp="20201115 22:01:13.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.554" endtime="20201115 22:01:13.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.848" endtime="20201115 22:01:13.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.856" endtime="20201115 22:01:13.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.552" endtime="20201115 22:01:13.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.550" endtime="20201115 22:01:13.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.863" level="INFO">${RESULT} = [{'time': 0.020320028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999998773e-06, 'source_diff': 8.735999999998773e-06}, {'time': 0.020503139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:13.859" endtime="20201115 22:01:13.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.920" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:13.864" endtime="20201115 22:01:13.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.924" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.923" endtime="20201115 22:01:13.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.927" level="INFO">VALUE: [8.735999999998773e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.736999999998246e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.722999999998676e-06, 8.777999999997482e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.792000000000522e-06, 8.722999999998676e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201115 22:01:13.925" endtime="20201115 22:01:13.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.921" endtime="20201115 22:01:13.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.930" endtime="20201115 22:01:13.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.933" endtime="20201115 22:01:13.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.932" endtime="20201115 22:01:13.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.928" endtime="20201115 22:01:13.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.516" endtime="20201115 22:01:13.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.933" endtime="20201115 22:01:13.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.932" endtime="20201115 22:01:13.954"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.956" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.966" endtime="20201115 22:01:13.986"></status>
</kw>
<msg timestamp="20201115 22:01:13.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.964" endtime="20201115 22:01:13.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.988" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.987" endtime="20201115 22:01:13.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.990" endtime="20201115 22:01:13.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.961" endtime="20201115 22:01:13.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.959" endtime="20201115 22:01:13.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.999" endtime="20201115 22:01:14.285"></status>
</kw>
<msg timestamp="20201115 22:01:14.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023306361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023315278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.997" endtime="20201115 22:01:14.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023306361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023315278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.289" endtime="20201115 22:01:14.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.297" endtime="20201115 22:01:14.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.995" endtime="20201115 22:01:14.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.993" endtime="20201115 22:01:14.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.304" level="INFO">${RESULT} = [{'time': 0.023315278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.023509347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:14.300" endtime="20201115 22:01:14.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.317" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:14.305" endtime="20201115 22:01:14.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.322" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.321" endtime="20201115 22:01:14.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.324" level="INFO">VALUE: [8.916999999997177e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.916000000001173e-06, 8.902999999997607e-06, 8.902000000001603e-06, 8.917000000000647e-06, 8.930000000000743e-06, 8.916000000001173e-06, 8.902999999997607e-06, 8.958999999999356e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.902999999997607e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.902000000001603e-06, 8.901999999998134e-06, 8.847000000002797e-06, 8.847000000002797e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.860999999998898e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.846999999999328e-06, 8.888000000002033e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.903000000004546e-06, 8.874999999998467e-06, 8.930000000004212e-06, 8.902999999997607e-06, 8.903000000004546e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.931000000003686e-06]</msg>
<status status="PASS" starttime="20201115 22:01:14.323" endtime="20201115 22:01:14.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.318" endtime="20201115 22:01:14.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.327" endtime="20201115 22:01:14.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.331" endtime="20201115 22:01:14.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.329" endtime="20201115 22:01:14.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.326" endtime="20201115 22:01:14.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.957" endtime="20201115 22:01:14.351"></status>
</kw>
<msg timestamp="20201115 22:01:14.351" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.361" endtime="20201115 22:01:14.381"></status>
</kw>
<msg timestamp="20201115 22:01:14.381" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.360" endtime="20201115 22:01:14.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.382" endtime="20201115 22:01:14.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.385" endtime="20201115 22:01:14.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.356" endtime="20201115 22:01:14.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.354" endtime="20201115 22:01:14.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.394" endtime="20201115 22:01:14.680"></status>
</kw>
<msg timestamp="20201115 22:01:14.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021003014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021011903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.393" endtime="20201115 22:01:14.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021003014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021011903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.684" endtime="20201115 22:01:14.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.692" endtime="20201115 22:01:14.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.390" endtime="20201115 22:01:14.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.388" endtime="20201115 22:01:14.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.699" level="INFO">${RESULT} = [{'time': 0.021011903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.021204819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:14.695" endtime="20201115 22:01:14.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.712" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:14.700" endtime="20201115 22:01:14.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.716" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.715" endtime="20201115 22:01:14.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.719" level="INFO">VALUE: [8.888999999998037e-06, 8.916000000001173e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.902000000001603e-06, 8.846999999999328e-06, 8.875000000001937e-06, 8.902000000001603e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.944999999999786e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.874999999998467e-06, 8.889000000001507e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.861000000002367e-06, 8.916000000001173e-06, 8.944999999999786e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.929999999997273e-06, 8.903000000001077e-06, 8.915999999997704e-06, 8.888000000002033e-06, 8.930000000000743e-06, 8.902999999997607e-06, 8.944000000000313e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.944000000000313e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.860999999998898e-06, 8.874999999998467e-06]</msg>
<status status="PASS" starttime="20201115 22:01:14.718" endtime="20201115 22:01:14.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.713" endtime="20201115 22:01:14.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.722" endtime="20201115 22:01:14.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.726" endtime="20201115 22:01:14.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.724" endtime="20201115 22:01:14.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.721" endtime="20201115 22:01:14.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.352" endtime="20201115 22:01:14.746"></status>
</kw>
<msg timestamp="20201115 22:01:14.746" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.756" endtime="20201115 22:01:14.776"></status>
</kw>
<msg timestamp="20201115 22:01:14.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.754" endtime="20201115 22:01:14.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.778" endtime="20201115 22:01:14.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.780" endtime="20201115 22:01:14.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.751" endtime="20201115 22:01:14.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.749" endtime="20201115 22:01:14.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.789" endtime="20201115 22:01:15.075"></status>
</kw>
<msg timestamp="20201115 22:01:15.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021496236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021505139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.787" endtime="20201115 22:01:15.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021496236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021505139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.079" endtime="20201115 22:01:15.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.087" endtime="20201115 22:01:15.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.785" endtime="20201115 22:01:15.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.783" endtime="20201115 22:01:15.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.094" level="INFO">${RESULT} = [{'time': 0.021505139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.903000000001077e-06, 'source_diff': 8.903000000001077e-06}, {'time': 0.021696611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:15.090" endtime="20201115 22:01:15.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.107" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:15.094" endtime="20201115 22:01:15.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.111" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.110" endtime="20201115 22:01:15.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.114" level="INFO">VALUE: [8.903000000001077e-06, 8.903000000001077e-06, 8.847999999998801e-06, 8.916999999997177e-06, 8.902999999997607e-06, 8.931000000000217e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.901999999998134e-06, 8.944999999999786e-06, 8.915999999997704e-06, 8.915999999997704e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.902999999997607e-06, 8.915999999997704e-06, 8.832999999999758e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.916999999997177e-06, 8.903000000001077e-06, 8.902000000001603e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.959000000002826e-06, 8.916000000001173e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.902000000001603e-06, 8.874999999998467e-06, 8.887999999998564e-06, 8.930999999996747e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.902999999997607e-06]</msg>
<status status="PASS" starttime="20201115 22:01:15.112" endtime="20201115 22:01:15.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.108" endtime="20201115 22:01:15.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.117" endtime="20201115 22:01:15.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.121" endtime="20201115 22:01:15.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.119" endtime="20201115 22:01:15.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.115" endtime="20201115 22:01:15.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.747" endtime="20201115 22:01:15.142"></status>
</kw>
<msg timestamp="20201115 22:01:15.142" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.151" endtime="20201115 22:01:15.171"></status>
</kw>
<msg timestamp="20201115 22:01:15.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.149" endtime="20201115 22:01:15.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.173" endtime="20201115 22:01:15.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.175" endtime="20201115 22:01:15.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.146" endtime="20201115 22:01:15.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.144" endtime="20201115 22:01:15.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.184" endtime="20201115 22:01:15.470"></status>
</kw>
<msg timestamp="20201115 22:01:15.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021279528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021288417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.183" endtime="20201115 22:01:15.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021279528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021288417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.474" endtime="20201115 22:01:15.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.482" endtime="20201115 22:01:15.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.180" endtime="20201115 22:01:15.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.178" endtime="20201115 22:01:15.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.489" level="INFO">${RESULT} = [{'time': 0.021288417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.021482569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:15.486" endtime="20201115 22:01:15.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.503" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:15.490" endtime="20201115 22:01:15.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.508" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.507" endtime="20201115 22:01:15.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.510" level="INFO">VALUE: [8.889000000001507e-06, 8.916000000001173e-06, 8.901999999998134e-06, 8.887999999998564e-06, 8.915999999997704e-06, 8.903000000001077e-06, 8.901999999998134e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.887999999998564e-06, 8.901999999998134e-06, 8.888999999998037e-06, 8.944000000000313e-06, 8.916999999997177e-06, 8.889000000001507e-06, 8.931000000000217e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.875000000001937e-06, 8.917000000000647e-06, 8.888000000002033e-06, 8.902999999997607e-06, 8.887999999998564e-06, 8.944000000000313e-06, 8.903000000001077e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.915999999997704e-06, 8.958999999999356e-06, 8.819999999999661e-06, 8.902000000001603e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.957999999999883e-06, 8.887999999998564e-06]</msg>
<status status="PASS" starttime="20201115 22:01:15.509" endtime="20201115 22:01:15.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.504" endtime="20201115 22:01:15.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.514" endtime="20201115 22:01:15.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.517" endtime="20201115 22:01:15.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.516" endtime="20201115 22:01:15.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.512" endtime="20201115 22:01:15.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.142" endtime="20201115 22:01:15.538"></status>
</kw>
<msg timestamp="20201115 22:01:15.538" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.547" endtime="20201115 22:01:15.567"></status>
</kw>
<msg timestamp="20201115 22:01:15.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.545" endtime="20201115 22:01:15.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.570" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.568" endtime="20201115 22:01:15.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.571" endtime="20201115 22:01:15.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.543" endtime="20201115 22:01:15.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.541" endtime="20201115 22:01:15.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.581" endtime="20201115 22:01:15.866"></status>
</kw>
<msg timestamp="20201115 22:01:15.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.579" endtime="20201115 22:01:15.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.871" endtime="20201115 22:01:15.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.879" endtime="20201115 22:01:15.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.576" endtime="20201115 22:01:15.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.575" endtime="20201115 22:01:15.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.886" level="INFO">${RESULT} = [{'time': 0.020289236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.020482181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:15.882" endtime="20201115 22:01:15.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.899" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:15.887" endtime="20201115 22:01:15.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.903" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.902" endtime="20201115 22:01:15.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.906" level="INFO">VALUE: [8.888999999998037e-06, 8.902999999997607e-06, 8.930000000000743e-06, 8.887999999998564e-06, 8.888999999998037e-06, 8.846999999999328e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.944000000000313e-06, 8.902000000001603e-06, 8.930000000000743e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.931000000000217e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.916999999997177e-06, 8.860999999998898e-06, 8.901999999998134e-06, 8.903000000001077e-06, 8.930000000000743e-06, 8.903000000001077e-06, 8.832999999999758e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.916000000001173e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.915999999997704e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.916999999997177e-06, 8.944000000000313e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.917000000000647e-06]</msg>
<status status="PASS" starttime="20201115 22:01:15.904" endtime="20201115 22:01:15.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.900" endtime="20201115 22:01:15.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.913" endtime="20201115 22:01:15.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.916" endtime="20201115 22:01:15.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.915" endtime="20201115 22:01:15.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.911" endtime="20201115 22:01:15.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.539" endtime="20201115 22:01:15.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.955" endtime="20201115 22:01:15.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.955" endtime="20201115 22:01:15.937"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.940" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.949" endtime="20201115 22:01:15.969"></status>
</kw>
<msg timestamp="20201115 22:01:15.970" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.947" endtime="20201115 22:01:15.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.973" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.971" endtime="20201115 22:01:15.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.974" endtime="20201115 22:01:15.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.944" endtime="20201115 22:01:15.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.942" endtime="20201115 22:01:15.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.983" endtime="20201115 22:01:16.276"></status>
</kw>
<msg timestamp="20201115 22:01:16.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.981" endtime="20201115 22:01:16.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.286" endtime="20201115 22:01:16.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.304" endtime="20201115 22:01:16.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.978" endtime="20201115 22:01:16.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.977" endtime="20201115 22:01:16.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.318" level="INFO">${RESULT} = [{'time': 0.022675986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.022880944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:16.311" endtime="20201115 22:01:16.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.339" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:16.320" endtime="20201115 22:01:16.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.343" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.342" endtime="20201115 22:01:16.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.346" level="INFO">VALUE: [9.083000000000008e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.08400000000295e-06, 9.111000000002617e-06, 9.083000000000008e-06, 9.083999999999481e-06, 9.056000000000342e-06, 9.055999999996872e-06, 9.041999999997302e-06, 9.042000000000772e-06, 9.083000000000008e-06, 9.013000000002158e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.042000000000772e-06, 9.069999999999911e-06, 9.040999999997829e-06, 9.056000000000342e-06, 9.042000000000772e-06, 9.069999999999911e-06, 9.096999999999578e-06, 8.999999999998592e-06, 9.083000000000008e-06, 9.056000000000342e-06, 9.055000000000868e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.055000000000868e-06, 9.055000000000868e-06, 9.069000000000438e-06, 9.054999999997398e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.042000000000772e-06, 9.069000000000438e-06, 9.069000000000438e-06]</msg>
<status status="PASS" starttime="20201115 22:01:16.344" endtime="20201115 22:01:16.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.340" endtime="20201115 22:01:16.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.349" endtime="20201115 22:01:16.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.353" endtime="20201115 22:01:16.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.351" endtime="20201115 22:01:16.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.348" endtime="20201115 22:01:16.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.940" endtime="20201115 22:01:16.373"></status>
</kw>
<msg timestamp="20201115 22:01:16.374" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.382" endtime="20201115 22:01:16.403"></status>
</kw>
<msg timestamp="20201115 22:01:16.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.381" endtime="20201115 22:01:16.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.406" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.405" endtime="20201115 22:01:16.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.407" endtime="20201115 22:01:16.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.378" endtime="20201115 22:01:16.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.376" endtime="20201115 22:01:16.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.417" endtime="20201115 22:01:16.702"></status>
</kw>
<msg timestamp="20201115 22:01:16.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020175708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.416" endtime="20201115 22:01:16.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020175708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.706" endtime="20201115 22:01:16.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.715" endtime="20201115 22:01:16.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.413" endtime="20201115 22:01:16.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.411" endtime="20201115 22:01:16.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.721" level="INFO">${RESULT} = [{'time': 0.020175708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.020380653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:16.718" endtime="20201115 22:01:16.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.735" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:16.722" endtime="20201115 22:01:16.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.740" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.739" endtime="20201115 22:01:16.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.742" level="INFO">VALUE: [9.069000000000438e-06, 9.069999999999911e-06, 9.054999999997398e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.054999999997398e-06, 9.069999999999911e-06, 9.055000000000868e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.041000000001298e-06, 9.056000000000342e-06, 9.054999999997398e-06, 9.055000000000868e-06, 9.083999999999481e-06, 9.042000000000772e-06, 9.056000000000342e-06, 9.054999999997398e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.028000000001202e-06, 9.069000000000438e-06, 9.042000000000772e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.054999999997398e-06, 9.042000000000772e-06, 9.083000000000008e-06, 9.041000000001298e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.055000000000868e-06, 9.027999999997732e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.055999999996872e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.054999999997398e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.055000000000868e-06, 9.068999999996968e-06, 9.013999999998162e-06]</msg>
<status status="PASS" starttime="20201115 22:01:16.741" endtime="20201115 22:01:16.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.736" endtime="20201115 22:01:16.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.745" endtime="20201115 22:01:16.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.749" endtime="20201115 22:01:16.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.747" endtime="20201115 22:01:16.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.744" endtime="20201115 22:01:16.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.374" endtime="20201115 22:01:16.769"></status>
</kw>
<msg timestamp="20201115 22:01:16.770" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.778" endtime="20201115 22:01:16.799"></status>
</kw>
<msg timestamp="20201115 22:01:16.799" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.777" endtime="20201115 22:01:16.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.800" endtime="20201115 22:01:16.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.803" endtime="20201115 22:01:16.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.774" endtime="20201115 22:01:16.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.772" endtime="20201115 22:01:16.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.812" endtime="20201115 22:01:17.098"></status>
</kw>
<msg timestamp="20201115 22:01:17.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020413292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.811" endtime="20201115 22:01:17.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020413292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.103" endtime="20201115 22:01:17.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.111" endtime="20201115 22:01:17.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.808" endtime="20201115 22:01:17.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.807" endtime="20201115 22:01:17.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.117" level="INFO">${RESULT} = [{'time': 0.020422361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.020625014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.114" endtime="20201115 22:01:17.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.132" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:17.119" endtime="20201115 22:01:17.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.137" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.136" endtime="20201115 22:01:17.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.139" level="INFO">VALUE: [9.069000000000438e-06, 9.056000000000342e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.08400000000295e-06, 9.056000000000342e-06, 8.999999999998592e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.055000000000868e-06, 9.013999999998162e-06, 9.069000000000438e-06, 9.096999999999578e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.054999999997398e-06, 9.083999999999481e-06, 9.055000000000868e-06, 9.069000000000438e-06, 9.055999999996872e-06, 9.055999999996872e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.083999999999481e-06, 9.055999999996872e-06, 9.055000000000868e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.040999999997829e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.096999999999578e-06, 9.054999999997398e-06, 9.055000000000868e-06, 9.069000000000438e-06, 9.041000000001298e-06, 9.055999999996872e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.055000000000868e-06, 9.055999999996872e-06]</msg>
<status status="PASS" starttime="20201115 22:01:17.138" endtime="20201115 22:01:17.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.133" endtime="20201115 22:01:17.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.142" endtime="20201115 22:01:17.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.146" endtime="20201115 22:01:17.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.144" endtime="20201115 22:01:17.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.141" endtime="20201115 22:01:17.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.770" endtime="20201115 22:01:17.166"></status>
</kw>
<msg timestamp="20201115 22:01:17.166" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.175" endtime="20201115 22:01:17.196"></status>
</kw>
<msg timestamp="20201115 22:01:17.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.174" endtime="20201115 22:01:17.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.198" endtime="20201115 22:01:17.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.200" endtime="20201115 22:01:17.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.171" endtime="20201115 22:01:17.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.169" endtime="20201115 22:01:17.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.210" endtime="20201115 22:01:17.495"></status>
</kw>
<msg timestamp="20201115 22:01:17.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020389417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020398486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.209" endtime="20201115 22:01:17.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020389417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020398486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.500" endtime="20201115 22:01:17.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.508" endtime="20201115 22:01:17.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.206" endtime="20201115 22:01:17.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.204" endtime="20201115 22:01:17.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.515" level="INFO">${RESULT} = [{'time': 0.020398486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.020604514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.512" endtime="20201115 22:01:17.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.529" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:17.516" endtime="20201115 22:01:17.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.533" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.532" endtime="20201115 22:01:17.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.536" level="INFO">VALUE: [9.069000000000438e-06, 9.056000000000342e-06, 9.054999999997398e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.096999999999578e-06, 9.069999999999911e-06, 9.040999999997829e-06, 9.069000000000438e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.055000000000868e-06, 9.069999999999911e-06, 9.042000000000772e-06, 9.040999999997829e-06, 9.042000000000772e-06, 9.110999999999148e-06, 9.083999999999481e-06, 9.055000000000868e-06, 9.069000000000438e-06, 9.055000000000868e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.125000000002187e-06, 9.040999999997829e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.068999999996968e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.055999999996872e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.042000000000772e-06, 9.083000000000008e-06, 9.082999999996538e-06, 9.042000000000772e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.054999999997398e-06, 9.083000000000008e-06, 9.068999999996968e-06, 9.069000000000438e-06, 9.055000000000868e-06]</msg>
<status status="PASS" starttime="20201115 22:01:17.534" endtime="20201115 22:01:17.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.530" endtime="20201115 22:01:17.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.539" endtime="20201115 22:01:17.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.542" endtime="20201115 22:01:17.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.541" endtime="20201115 22:01:17.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.537" endtime="20201115 22:01:17.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.167" endtime="20201115 22:01:17.563"></status>
</kw>
<msg timestamp="20201115 22:01:17.563" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.572" endtime="20201115 22:01:17.593"></status>
</kw>
<msg timestamp="20201115 22:01:17.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.570" endtime="20201115 22:01:17.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.594" endtime="20201115 22:01:17.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.597" endtime="20201115 22:01:17.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.568" endtime="20201115 22:01:17.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.565" endtime="20201115 22:01:17.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.607" endtime="20201115 22:01:17.892"></status>
</kw>
<msg timestamp="20201115 22:01:17.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020111125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020120181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.605" endtime="20201115 22:01:17.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020111125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020120181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.896" endtime="20201115 22:01:17.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.904" endtime="20201115 22:01:17.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.603" endtime="20201115 22:01:17.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.601" endtime="20201115 22:01:17.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.911" level="INFO">${RESULT} = [{'time': 0.020120181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.020326597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.908" endtime="20201115 22:01:17.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.925" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:17.912" endtime="20201115 22:01:17.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.929" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.928" endtime="20201115 22:01:17.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.932" level="INFO">VALUE: [9.056000000000342e-06, 9.068999999996968e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.054999999997398e-06, 9.096999999999578e-06, 9.055000000000868e-06, 9.040999999997829e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.014000000001632e-06, 9.028000000001202e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.042000000000772e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.042000000000772e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.040999999997829e-06, 9.069000000000438e-06, 9.042000000000772e-06, 9.056000000000342e-06, 9.055000000000868e-06, 9.042000000000772e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.041000000001298e-06, 9.069000000000438e-06, 9.042000000000772e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.042000000000772e-06, 9.096999999999578e-06, 9.041999999997302e-06, 9.054999999997398e-06, 9.056000000000342e-06, 9.083000000000008e-06, 9.097000000003047e-06, 9.042000000000772e-06]</msg>
<status status="PASS" starttime="20201115 22:01:17.930" endtime="20201115 22:01:17.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.926" endtime="20201115 22:01:17.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.935" endtime="20201115 22:01:17.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.938" endtime="20201115 22:01:17.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.937" endtime="20201115 22:01:17.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.933" endtime="20201115 22:01:17.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.563" endtime="20201115 22:01:17.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.939" endtime="20201115 22:01:17.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.938" endtime="20201115 22:01:17.959"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.961" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.970" endtime="20201115 22:01:17.992"></status>
</kw>
<msg timestamp="20201115 22:01:17.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.968" endtime="20201115 22:01:17.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.995" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.993" endtime="20201115 22:01:17.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.996" endtime="20201115 22:01:17.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.966" endtime="20201115 22:01:17.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.964" endtime="20201115 22:01:17.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.005" endtime="20201115 22:01:18.291"></status>
</kw>
<msg timestamp="20201115 22:01:18.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.004" endtime="20201115 22:01:18.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.295" endtime="20201115 22:01:18.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.303" endtime="20201115 22:01:18.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.001" endtime="20201115 22:01:18.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.999" endtime="20201115 22:01:18.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.310" level="INFO">${RESULT} = [{'time': 0.022567403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.022784597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:18.306" endtime="20201115 22:01:18.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.323" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:18.311" endtime="20201115 22:01:18.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.328" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.327" endtime="20201115 22:01:18.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.331" level="INFO">VALUE: [9.235999999999273e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.180000000000993e-06, 9.208000000000133e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.180000000000993e-06, 9.208000000000133e-06, 9.292000000001022e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.165999999997954e-06, 9.208999999999606e-06, 9.306000000000592e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.237000000002216e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.180000000000993e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.236000000002742e-06, 9.223000000002646e-06, 9.221999999999703e-06, 9.222999999999176e-06, 9.235999999999273e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.222000000003172e-06, 9.221999999996233e-06, 9.264000000001882e-06, 9.153000000004796e-06, 9.292000000001022e-06, 9.222000000003172e-06, 9.194999999996567e-06, 9.236000000002742e-06, 9.208000000003602e-06]</msg>
<status status="PASS" starttime="20201115 22:01:18.329" endtime="20201115 22:01:18.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.324" endtime="20201115 22:01:18.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.334" endtime="20201115 22:01:18.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.338" endtime="20201115 22:01:18.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.336" endtime="20201115 22:01:18.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.332" endtime="20201115 22:01:18.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.962" endtime="20201115 22:01:18.358"></status>
</kw>
<msg timestamp="20201115 22:01:18.359" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.367" endtime="20201115 22:01:18.388"></status>
</kw>
<msg timestamp="20201115 22:01:18.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.366" endtime="20201115 22:01:18.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.390" endtime="20201115 22:01:18.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.393" endtime="20201115 22:01:18.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.363" endtime="20201115 22:01:18.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.361" endtime="20201115 22:01:18.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.403" endtime="20201115 22:01:18.688"></status>
</kw>
<msg timestamp="20201115 22:01:18.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020129792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.401" endtime="20201115 22:01:18.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020129792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.692" endtime="20201115 22:01:18.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.700" endtime="20201115 22:01:18.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.399" endtime="20201115 22:01:18.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.397" endtime="20201115 22:01:18.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.707" level="INFO">${RESULT} = [{'time': 0.020139014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.221999999999703e-06, 'source_diff': 9.221999999999703e-06}, {'time': 0.020356528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:18.704" endtime="20201115 22:01:18.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.721" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:18.708" endtime="20201115 22:01:18.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.726" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.725" endtime="20201115 22:01:18.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.728" level="INFO">VALUE: [9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.194000000000563e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.277999999997982e-06, 9.222000000003172e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.194000000000563e-06, 9.223000000002646e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.153000000001327e-06, 9.221999999999703e-06, 9.237000000002216e-06, 9.278000000001452e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.263999999998412e-06, 9.236000000002742e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.235999999999273e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.263999999998412e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.181000000000467e-06, 9.221999999999703e-06, 9.194000000000563e-06]</msg>
<status status="PASS" starttime="20201115 22:01:18.727" endtime="20201115 22:01:18.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.722" endtime="20201115 22:01:18.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.731" endtime="20201115 22:01:18.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.735" endtime="20201115 22:01:18.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.733" endtime="20201115 22:01:18.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.730" endtime="20201115 22:01:18.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.359" endtime="20201115 22:01:18.755"></status>
</kw>
<msg timestamp="20201115 22:01:18.756" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.765" endtime="20201115 22:01:18.786"></status>
</kw>
<msg timestamp="20201115 22:01:18.787" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.763" endtime="20201115 22:01:18.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.788" endtime="20201115 22:01:18.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.790" endtime="20201115 22:01:18.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.760" endtime="20201115 22:01:18.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.758" endtime="20201115 22:01:18.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.800" endtime="20201115 22:01:19.086"></status>
</kw>
<msg timestamp="20201115 22:01:19.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020675958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.798" endtime="20201115 22:01:19.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020675958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.091" endtime="20201115 22:01:19.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.099" endtime="20201115 22:01:19.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.796" endtime="20201115 22:01:19.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.794" endtime="20201115 22:01:19.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.106" level="INFO">${RESULT} = [{'time': 0.020685153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.020900736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:19.102" endtime="20201115 22:01:19.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.119" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:19.107" endtime="20201115 22:01:19.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.124" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.123" endtime="20201115 22:01:19.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.126" level="INFO">VALUE: [9.195000000000036e-06, 9.221999999999703e-06, 9.277999999997982e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.208999999999606e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.180000000000993e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.208000000000133e-06, 9.222000000003172e-06, 9.249999999998842e-06, 9.250000000002312e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.222999999999176e-06, 9.236999999998746e-06, 9.235999999999273e-06, 9.277999999997982e-06, 9.221999999999703e-06, 9.193999999997093e-06, 9.250000000002312e-06, 9.221999999999703e-06, 9.222999999999176e-06, 9.222999999999176e-06, 9.195000000000036e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.167000000000897e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999996233e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.125" endtime="20201115 22:01:19.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.120" endtime="20201115 22:01:19.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.129" endtime="20201115 22:01:19.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.133" endtime="20201115 22:01:19.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.131" endtime="20201115 22:01:19.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.128" endtime="20201115 22:01:19.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.756" endtime="20201115 22:01:19.154"></status>
</kw>
<msg timestamp="20201115 22:01:19.154" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.163" endtime="20201115 22:01:19.184"></status>
</kw>
<msg timestamp="20201115 22:01:19.184" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.161" endtime="20201115 22:01:19.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.187" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.185" endtime="20201115 22:01:19.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.188" endtime="20201115 22:01:19.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.159" endtime="20201115 22:01:19.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.157" endtime="20201115 22:01:19.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.198" endtime="20201115 22:01:19.483"></status>
</kw>
<msg timestamp="20201115 22:01:19.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020856778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020866014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.196" endtime="20201115 22:01:19.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020856778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020866014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.488" endtime="20201115 22:01:19.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.496" endtime="20201115 22:01:19.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.194" endtime="20201115 22:01:19.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.192" endtime="20201115 22:01:19.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.502" level="INFO">${RESULT} = [{'time': 0.020866014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.021082403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:19.499" endtime="20201115 22:01:19.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.516" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:19.503" endtime="20201115 22:01:19.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.521" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.520" endtime="20201115 22:01:19.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.524" level="INFO">VALUE: [9.235999999999273e-06, 9.221999999999703e-06, 9.181000000000467e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.222999999999176e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.277999999997982e-06, 9.194000000000563e-06, 9.222000000003172e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.237000000002216e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.180999999996997e-06, 9.235999999999273e-06, 9.222000000003172e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.194000000000563e-06, 9.235999999999273e-06, 9.223000000002646e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.222999999999176e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.166999999997427e-06, 9.166000000001423e-06, 9.277999999997982e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.222000000003172e-06, 9.319000000000688e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.522" endtime="20201115 22:01:19.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.517" endtime="20201115 22:01:19.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.528" endtime="20201115 22:01:19.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.531" endtime="20201115 22:01:19.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.530" endtime="20201115 22:01:19.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.526" endtime="20201115 22:01:19.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.155" endtime="20201115 22:01:19.552"></status>
</kw>
<msg timestamp="20201115 22:01:19.552" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.561" endtime="20201115 22:01:19.583"></status>
</kw>
<msg timestamp="20201115 22:01:19.583" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.559" endtime="20201115 22:01:19.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.586" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.584" endtime="20201115 22:01:19.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.587" endtime="20201115 22:01:19.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.557" endtime="20201115 22:01:19.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.555" endtime="20201115 22:01:19.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.597" endtime="20201115 22:01:19.882"></status>
</kw>
<msg timestamp="20201115 22:01:19.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.595" endtime="20201115 22:01:19.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.887" endtime="20201115 22:01:19.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.895" endtime="20201115 22:01:19.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.593" endtime="20201115 22:01:19.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.591" endtime="20201115 22:01:19.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.901" level="INFO">${RESULT} = [{'time': 0.020312403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.020529278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:19.898" endtime="20201115 22:01:19.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.915" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:19.902" endtime="20201115 22:01:19.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.919" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.918" endtime="20201115 22:01:19.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.922" level="INFO">VALUE: [9.235999999999273e-06, 9.181000000000467e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.138999999998287e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.166999999997427e-06, 9.221999999999703e-06, 9.236999999998746e-06, 9.236999999998746e-06, 9.153000000001327e-06, 9.221999999999703e-06, 9.166000000001423e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.236999999998746e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.179999999997523e-06, 9.235999999999273e-06, 9.208000000000133e-06, 9.236000000002742e-06, 9.167000000000897e-06, 9.194000000000563e-06, 9.180000000000993e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.138999999998287e-06, 9.306000000000592e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.237000000002216e-06, 9.292000000001022e-06, 9.209000000003076e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.209000000003076e-06, 9.222999999999176e-06, 9.249999999998842e-06, 9.235999999999273e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.920" endtime="20201115 22:01:19.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.916" endtime="20201115 22:01:19.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.925" endtime="20201115 22:01:19.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.929" endtime="20201115 22:01:19.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.927" endtime="20201115 22:01:19.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.924" endtime="20201115 22:01:19.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.553" endtime="20201115 22:01:19.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.960" endtime="20201115 22:01:19.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.959" endtime="20201115 22:01:19.950"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.952" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.961" endtime="20201115 22:01:19.983"></status>
</kw>
<msg timestamp="20201115 22:01:19.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.959" endtime="20201115 22:01:19.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.985" endtime="20201115 22:01:19.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.987" endtime="20201115 22:01:19.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.957" endtime="20201115 22:01:19.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.955" endtime="20201115 22:01:19.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.996" endtime="20201115 22:01:20.282"></status>
</kw>
<msg timestamp="20201115 22:01:20.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.995" endtime="20201115 22:01:20.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.286" endtime="20201115 22:01:20.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.294" endtime="20201115 22:01:20.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.992" endtime="20201115 22:01:20.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.990" endtime="20201115 22:01:20.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.301" level="INFO">${RESULT} = [{'time': 0.022584611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.430000000001243e-06, 'source_diff': 9.430000000001243e-06}, {'time': 0.022815111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.297" endtime="20201115 22:01:20.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.315" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:20.302" endtime="20201115 22:01:20.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.320" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.319" endtime="20201115 22:01:20.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.323" level="INFO">VALUE: [9.430000000001243e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.333999999999731e-06, 9.389000000002007e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.431000000000717e-06, 9.402999999998107e-06, 9.346999999999828e-06, 9.375000000002437e-06, 9.388999999998537e-06, 9.459000000003326e-06, 9.402999999998107e-06, 9.375000000002437e-06, 9.402999999998107e-06, 9.375000000002437e-06, 9.401999999998634e-06, 9.320000000000161e-06, 9.374999999998967e-06, 9.375000000002437e-06, 9.388999999998537e-06, 9.403000000001577e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.334000000003201e-06, 9.375000000002437e-06, 9.375000000002437e-06, 9.445000000000286e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.375000000002437e-06, 9.387999999999064e-06, 9.388999999998537e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.333999999999731e-06, 9.374999999998967e-06, 9.387999999999064e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.374999999998967e-06]</msg>
<status status="PASS" starttime="20201115 22:01:20.321" endtime="20201115 22:01:20.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.316" endtime="20201115 22:01:20.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.326" endtime="20201115 22:01:20.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.329" endtime="20201115 22:01:20.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.328" endtime="20201115 22:01:20.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.324" endtime="20201115 22:01:20.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.953" endtime="20201115 22:01:20.350"></status>
</kw>
<msg timestamp="20201115 22:01:20.350" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.359" endtime="20201115 22:01:20.381"></status>
</kw>
<msg timestamp="20201115 22:01:20.381" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.357" endtime="20201115 22:01:20.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.382" endtime="20201115 22:01:20.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.385" endtime="20201115 22:01:20.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.355" endtime="20201115 22:01:20.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.353" endtime="20201115 22:01:20.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.395" endtime="20201115 22:01:20.680"></status>
</kw>
<msg timestamp="20201115 22:01:20.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020340458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.393" endtime="20201115 22:01:20.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020340458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.684" endtime="20201115 22:01:20.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.693" endtime="20201115 22:01:20.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.391" endtime="20201115 22:01:20.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.389" endtime="20201115 22:01:20.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.699" level="INFO">${RESULT} = [{'time': 0.020349861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.020577292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.696" endtime="20201115 22:01:20.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.713" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:20.700" endtime="20201115 22:01:20.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.717" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.716" endtime="20201115 22:01:20.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.720" level="INFO">VALUE: [9.403000000001577e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.402000000002103e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.389000000002007e-06, 9.402000000002103e-06, 9.347999999999301e-06, 9.416999999997677e-06, 9.389000000002007e-06, 9.375000000002437e-06, 9.361000000002867e-06, 9.334000000003201e-06, 9.388999999998537e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.375000000002437e-06, 9.401999999998634e-06, 9.388999999998537e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.458000000000383e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.361999999998871e-06, 9.403000000001577e-06, 9.374999999998967e-06, 9.444000000000813e-06, 9.374999999998967e-06, 9.375000000002437e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.374999999998967e-06, 9.403000000001577e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.375000000002437e-06, 9.388999999998537e-06, 9.401999999998634e-06, 9.360999999999398e-06, 9.347999999999301e-06, 9.389000000002007e-06, 9.388000000002533e-06, 9.374999999998967e-06, 9.388999999998537e-06]</msg>
<status status="PASS" starttime="20201115 22:01:20.718" endtime="20201115 22:01:20.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.714" endtime="20201115 22:01:20.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.723" endtime="20201115 22:01:20.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.726" endtime="20201115 22:01:20.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.725" endtime="20201115 22:01:20.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.721" endtime="20201115 22:01:20.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.351" endtime="20201115 22:01:20.747"></status>
</kw>
<msg timestamp="20201115 22:01:20.747" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.756" endtime="20201115 22:01:20.777"></status>
</kw>
<msg timestamp="20201115 22:01:20.778" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.754" endtime="20201115 22:01:20.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.779" endtime="20201115 22:01:20.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.781" endtime="20201115 22:01:20.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.752" endtime="20201115 22:01:20.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.750" endtime="20201115 22:01:20.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.791" endtime="20201115 22:01:21.078"></status>
</kw>
<msg timestamp="20201115 22:01:21.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.790" endtime="20201115 22:01:21.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.083" endtime="20201115 22:01:21.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.091" endtime="20201115 22:01:21.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.787" endtime="20201115 22:01:21.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.785" endtime="20201115 22:01:21.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.097" level="INFO">${RESULT} = [{'time': 0.020165833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.389000000002007e-06, 'source_diff': 9.389000000002007e-06}, {'time': 0.020395375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.094" endtime="20201115 22:01:21.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.118" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:21.105" endtime="20201115 22:01:21.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.122" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.121" endtime="20201115 22:01:21.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.125" level="INFO">VALUE: [9.389000000002007e-06, 9.374999999998967e-06, 9.430999999997247e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.389000000002007e-06, 9.431000000000717e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.403000000001577e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.375000000002437e-06, 9.360999999999398e-06, 9.388999999998537e-06, 9.387999999999064e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.387999999999064e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.403000000001577e-06, 9.388999999998537e-06, 9.375000000002437e-06, 9.360999999999398e-06, 9.388999999998537e-06, 9.416999999997677e-06, 9.375000000002437e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.403000000001577e-06, 9.388999999998537e-06, 9.375000000002437e-06, 9.417000000001147e-06, 9.429999999997773e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.389000000005476e-06]</msg>
<status status="PASS" starttime="20201115 22:01:21.124" endtime="20201115 22:01:21.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.119" endtime="20201115 22:01:21.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.128" endtime="20201115 22:01:21.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.132" endtime="20201115 22:01:21.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.130" endtime="20201115 22:01:21.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.126" endtime="20201115 22:01:21.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.748" endtime="20201115 22:01:21.152"></status>
</kw>
<msg timestamp="20201115 22:01:21.152" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.161" endtime="20201115 22:01:21.183"></status>
</kw>
<msg timestamp="20201115 22:01:21.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.160" endtime="20201115 22:01:21.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.185" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.184" endtime="20201115 22:01:21.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.186" endtime="20201115 22:01:21.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.157" endtime="20201115 22:01:21.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.155" endtime="20201115 22:01:21.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.196" endtime="20201115 22:01:21.483"></status>
</kw>
<msg timestamp="20201115 22:01:21.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.195" endtime="20201115 22:01:21.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.487" endtime="20201115 22:01:21.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.496" endtime="20201115 22:01:21.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.192" endtime="20201115 22:01:21.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.191" endtime="20201115 22:01:21.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.503" level="INFO">${RESULT} = [{'time': 0.020214139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.020441972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.499" endtime="20201115 22:01:21.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.516" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:21.504" endtime="20201115 22:01:21.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.520" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.519" endtime="20201115 22:01:21.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.523" level="INFO">VALUE: [9.402999999998107e-06, 9.429999999997773e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.403000000001577e-06, 9.403000000001577e-06, 9.388999999998537e-06, 9.375000000002437e-06, 9.388000000002533e-06, 9.389000000002007e-06, 9.445000000000286e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.346999999999828e-06, 9.401999999998634e-06, 9.388999999998537e-06, 9.403000000001577e-06, 9.389000000002007e-06, 9.401999999998634e-06, 9.443999999997343e-06, 9.389000000002007e-06, 9.360999999999398e-06, 9.431000000000717e-06, 9.388999999998537e-06, 9.375000000002437e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.431000000000717e-06, 9.333000000000258e-06, 9.389000000002007e-06, 9.388000000002533e-06, 9.375000000002437e-06, 9.387999999999064e-06, 9.388999999998537e-06, 9.375000000002437e-06, 9.403000000001577e-06, 9.388999999998537e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.387999999999064e-06, 9.388999999998537e-06, 9.389000000002007e-06, 9.374999999998967e-06]</msg>
<status status="PASS" starttime="20201115 22:01:21.522" endtime="20201115 22:01:21.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.517" endtime="20201115 22:01:21.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.526" endtime="20201115 22:01:21.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.529" endtime="20201115 22:01:21.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.528" endtime="20201115 22:01:21.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.524" endtime="20201115 22:01:21.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.153" endtime="20201115 22:01:21.550"></status>
</kw>
<msg timestamp="20201115 22:01:21.551" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.560" endtime="20201115 22:01:21.582"></status>
</kw>
<msg timestamp="20201115 22:01:21.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.558" endtime="20201115 22:01:21.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.583" endtime="20201115 22:01:21.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.586" endtime="20201115 22:01:21.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.556" endtime="20201115 22:01:21.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.553" endtime="20201115 22:01:21.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.595" endtime="20201115 22:01:21.879"></status>
</kw>
<msg timestamp="20201115 22:01:21.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021381764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021391139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.594" endtime="20201115 22:01:21.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021381764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021391139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.884" endtime="20201115 22:01:21.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.892" endtime="20201115 22:01:21.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.591" endtime="20201115 22:01:21.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.590" endtime="20201115 22:01:21.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.899" level="INFO">${RESULT} = [{'time': 0.021391139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.021617944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.895" endtime="20201115 22:01:21.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.913" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:21.900" endtime="20201115 22:01:21.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.918" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.917" endtime="20201115 22:01:21.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.920" level="INFO">VALUE: [9.374999999998967e-06, 9.401999999998634e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.443999999997343e-06, 9.388999999998537e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.360999999999398e-06, 9.375000000002437e-06, 9.401999999998634e-06, 9.374999999998967e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.401999999998634e-06, 9.389000000002007e-06, 9.375000000002437e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.333000000000258e-06, 9.375000000002437e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.360999999999398e-06, 9.389000000002007e-06, 9.388999999998537e-06, 9.403000000001577e-06, 9.389000000002007e-06, 9.389000000002007e-06, 9.375000000002437e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.389000000002007e-06, 9.431000000000717e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.402000000002103e-06, 9.360999999999398e-06, 9.387999999999064e-06, 9.388999999998537e-06, 9.388999999998537e-06, 9.374999999998967e-06, 9.389000000005476e-06, 9.360999999999398e-06, 9.401999999998634e-06, 9.388999999998537e-06]</msg>
<status status="PASS" starttime="20201115 22:01:21.919" endtime="20201115 22:01:21.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.914" endtime="20201115 22:01:21.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.923" endtime="20201115 22:01:21.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.927" endtime="20201115 22:01:21.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.925" endtime="20201115 22:01:21.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.922" endtime="20201115 22:01:21.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.551" endtime="20201115 22:01:21.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.951" endtime="20201115 22:01:21.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.950" endtime="20201115 22:01:21.948"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.950" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.958" endtime="20201115 22:01:21.981"></status>
</kw>
<msg timestamp="20201115 22:01:21.981" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.957" endtime="20201115 22:01:21.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.982" endtime="20201115 22:01:21.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.985" endtime="20201115 22:01:21.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.954" endtime="20201115 22:01:21.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.952" endtime="20201115 22:01:21.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.994" endtime="20201115 22:01:22.280"></status>
</kw>
<msg timestamp="20201115 22:01:22.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.993" endtime="20201115 22:01:22.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.284" endtime="20201115 22:01:22.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.292" endtime="20201115 22:01:22.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.990" endtime="20201115 22:01:22.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.988" endtime="20201115 22:01:22.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.299" level="INFO">${RESULT} = [{'time': 0.022548556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.022789431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.296" endtime="20201115 22:01:22.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.312" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:22.300" endtime="20201115 22:01:22.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.317" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.316" endtime="20201115 22:01:22.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.319" level="INFO">VALUE: [9.514000000002132e-06, 9.499999999999093e-06, 9.569000000000938e-06, 9.554999999997899e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.541999999997802e-06, 9.556000000000842e-06, 9.555000000001368e-06, 9.556000000000842e-06, 9.541999999997802e-06, 9.554999999997899e-06, 9.569000000000938e-06, 9.541000000001798e-06, 9.542000000001272e-06, 9.597000000000078e-06, 9.486999999998996e-06, 9.556000000000842e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.556000000000842e-06, 9.555000000001368e-06, 9.555000000001368e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.554999999997899e-06, 9.540999999998329e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.555999999997372e-06, 9.568999999997468e-06, 9.583000000000508e-06, 9.540999999998329e-06, 9.556000000000842e-06, 9.570000000000412e-06, 9.554999999994429e-06, 9.597999999999551e-06, 9.51299999999572e-06, 9.555000000001368e-06, 9.542000000001272e-06, 9.570000000000412e-06, 9.556000000000842e-06, 9.555000000001368e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.541000000001798e-06, 9.556000000000842e-06]</msg>
<status status="PASS" starttime="20201115 22:01:22.318" endtime="20201115 22:01:22.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.313" endtime="20201115 22:01:22.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.322" endtime="20201115 22:01:22.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.326" endtime="20201115 22:01:22.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.324" endtime="20201115 22:01:22.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.321" endtime="20201115 22:01:22.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.950" endtime="20201115 22:01:22.346"></status>
</kw>
<msg timestamp="20201115 22:01:22.347" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.356" endtime="20201115 22:01:22.379"></status>
</kw>
<msg timestamp="20201115 22:01:22.379" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.354" endtime="20201115 22:01:22.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.380" endtime="20201115 22:01:22.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.383" endtime="20201115 22:01:22.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.352" endtime="20201115 22:01:22.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.350" endtime="20201115 22:01:22.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.393" endtime="20201115 22:01:22.678"></status>
</kw>
<msg timestamp="20201115 22:01:22.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020688375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020697931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.392" endtime="20201115 22:01:22.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020688375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020697931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.682" endtime="20201115 22:01:22.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.691" endtime="20201115 22:01:22.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.389" endtime="20201115 22:01:22.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.387" endtime="20201115 22:01:22.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.697" level="INFO">${RESULT} = [{'time': 0.020697931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.020940722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.694" endtime="20201115 22:01:22.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.711" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:22.698" endtime="20201115 22:01:22.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.715" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.714" endtime="20201115 22:01:22.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.718" level="INFO">VALUE: [9.556000000000842e-06, 9.540999999998329e-06, 9.610999999999648e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.541000000001798e-06, 9.555000000001368e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.485999999999523e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.624999999999218e-06, 9.542000000001272e-06, 9.597999999999551e-06, 9.556000000000842e-06, 9.541999999997802e-06, 9.541999999997802e-06, 9.540999999998329e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.555000000001368e-06, 9.555000000001368e-06, 9.540999999998329e-06, 9.556000000000842e-06, 9.555999999997372e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.499999999999093e-06, 9.541000000001798e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.555999999997372e-06, 9.540999999998329e-06, 9.554999999997899e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.556000000000842e-06, 9.597000000000078e-06, 9.541000000001798e-06, 9.555000000001368e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.541000000001798e-06]</msg>
<status status="PASS" starttime="20201115 22:01:22.716" endtime="20201115 22:01:22.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.712" endtime="20201115 22:01:22.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.721" endtime="20201115 22:01:22.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.724" endtime="20201115 22:01:22.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.723" endtime="20201115 22:01:22.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.719" endtime="20201115 22:01:22.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.347" endtime="20201115 22:01:22.745"></status>
</kw>
<msg timestamp="20201115 22:01:22.745" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.755" endtime="20201115 22:01:22.777"></status>
</kw>
<msg timestamp="20201115 22:01:22.778" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.753" endtime="20201115 22:01:22.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.779" endtime="20201115 22:01:22.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.782" endtime="20201115 22:01:22.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.750" endtime="20201115 22:01:22.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.748" endtime="20201115 22:01:22.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.792" endtime="20201115 22:01:23.077"></status>
</kw>
<msg timestamp="20201115 22:01:23.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020940139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020949681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.790" endtime="20201115 22:01:23.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020940139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020949681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.081" endtime="20201115 22:01:23.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.090" endtime="20201115 22:01:23.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.787" endtime="20201115 22:01:23.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.786" endtime="20201115 22:01:23.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.096" level="INFO">${RESULT} = [{'time': 0.020949681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.021192111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:23.093" endtime="20201115 22:01:23.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.110" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:23.097" endtime="20201115 22:01:23.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.114" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.113" endtime="20201115 22:01:23.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.117" level="INFO">VALUE: [9.542000000001272e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.555000000001368e-06, 9.541999999997802e-06, 9.555000000001368e-06, 9.556000000000842e-06, 9.597000000000078e-06, 9.485999999999523e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.556000000000842e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.555000000001368e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.555000000001368e-06, 9.555000000001368e-06, 9.499999999999093e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.556000000000842e-06, 9.555999999997372e-06, 9.569000000000938e-06, 9.556000000000842e-06, 9.527999999998232e-06, 9.554999999997899e-06, 9.555000000001368e-06, 9.526999999998759e-06, 9.541999999997802e-06, 9.541999999997802e-06, 9.554999999997899e-06, 9.485999999999523e-06, 9.568999999997468e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.485999999996053e-06, 9.542000000001272e-06, 9.541000000001798e-06, 9.485999999996053e-06, 9.597000000000078e-06, 9.542000000001272e-06, 9.610999999999648e-06]</msg>
<status status="PASS" starttime="20201115 22:01:23.115" endtime="20201115 22:01:23.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.111" endtime="20201115 22:01:23.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.120" endtime="20201115 22:01:23.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.123" endtime="20201115 22:01:23.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.122" endtime="20201115 22:01:23.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.118" endtime="20201115 22:01:23.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.746" endtime="20201115 22:01:23.145"></status>
</kw>
<msg timestamp="20201115 22:01:23.145" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.154" endtime="20201115 22:01:23.176"></status>
</kw>
<msg timestamp="20201115 22:01:23.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.153" endtime="20201115 22:01:23.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.178" endtime="20201115 22:01:23.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.181" endtime="20201115 22:01:23.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.150" endtime="20201115 22:01:23.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.148" endtime="20201115 22:01:23.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.191" endtime="20201115 22:01:23.477"></status>
</kw>
<msg timestamp="20201115 22:01:23.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.189" endtime="20201115 22:01:23.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.481" endtime="20201115 22:01:23.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.490" endtime="20201115 22:01:23.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.186" endtime="20201115 22:01:23.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.185" endtime="20201115 22:01:23.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.496" level="INFO">${RESULT} = [{'time': 0.021679542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.021919653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:23.493" endtime="20201115 22:01:23.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.511" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:23.497" endtime="20201115 22:01:23.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.515" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.514" endtime="20201115 22:01:23.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.518" level="INFO">VALUE: [9.570000000000412e-06, 9.610999999999648e-06, 9.624999999999218e-06, 9.568999999997468e-06, 9.555000000001368e-06, 9.541000000001798e-06, 9.556000000000842e-06, 9.541999999997802e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.554999999997899e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.555999999997372e-06, 9.555000000001368e-06, 9.514000000002132e-06, 9.555000000001368e-06, 9.556000000000842e-06, 9.541000000001798e-06, 9.541000000001798e-06, 9.554999999997899e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.514000000002132e-06, 9.554999999997899e-06, 9.597999999999551e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.487000000002466e-06, 9.556000000000842e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.556000000000842e-06, 9.487000000002466e-06, 9.541999999997802e-06, 9.570000000000412e-06, 9.541000000001798e-06, 9.569000000000938e-06, 9.554999999997899e-06, 9.528000000001702e-06, 9.541000000001798e-06, 9.556000000000842e-06, 9.555000000001368e-06, 9.555000000001368e-06, 9.570000000000412e-06, 9.555000000001368e-06, 9.583000000000508e-06, 9.542000000001272e-06, 9.555999999993903e-06]</msg>
<status status="PASS" starttime="20201115 22:01:23.516" endtime="20201115 22:01:23.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.512" endtime="20201115 22:01:23.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.521" endtime="20201115 22:01:23.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.525" endtime="20201115 22:01:23.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.523" endtime="20201115 22:01:23.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.519" endtime="20201115 22:01:23.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.146" endtime="20201115 22:01:23.545"></status>
</kw>
<msg timestamp="20201115 22:01:23.545" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.554" endtime="20201115 22:01:23.577"></status>
</kw>
<msg timestamp="20201115 22:01:23.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.553" endtime="20201115 22:01:23.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.580" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.579" endtime="20201115 22:01:23.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.581" endtime="20201115 22:01:23.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.550" endtime="20201115 22:01:23.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.548" endtime="20201115 22:01:23.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.592" endtime="20201115 22:01:23.877"></status>
</kw>
<msg timestamp="20201115 22:01:23.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.591" endtime="20201115 22:01:23.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.882" endtime="20201115 22:01:23.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.890" endtime="20201115 22:01:23.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.588" endtime="20201115 22:01:23.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.586" endtime="20201115 22:01:23.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.897" level="INFO">${RESULT} = [{'time': 0.020180958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.568999999997468e-06, 'source_diff': 9.568999999997468e-06}, {'time': 0.020423167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:23.893" endtime="20201115 22:01:23.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.910" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:23.898" endtime="20201115 22:01:23.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.914" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.913" endtime="20201115 22:01:23.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.917" level="INFO">VALUE: [9.568999999997468e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.540999999998329e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.555999999997372e-06, 9.556000000000842e-06, 9.555000000001368e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.554999999997899e-06, 9.555999999997372e-06, 9.554999999997899e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.555000000001368e-06, 9.556000000000842e-06, 9.570000000000412e-06, 9.568999999997468e-06, 9.569000000000938e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.555000000001368e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.556000000000842e-06, 9.542000000001272e-06, 9.555999999997372e-06, 9.541999999997802e-06, 9.569999999996942e-06, 9.542000000001272e-06, 9.541000000001798e-06, 9.541999999997802e-06, 9.555000000001368e-06, 9.555000000001368e-06, 9.570000000000412e-06]</msg>
<status status="PASS" starttime="20201115 22:01:23.915" endtime="20201115 22:01:23.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.911" endtime="20201115 22:01:23.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.920" endtime="20201115 22:01:23.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.924" endtime="20201115 22:01:23.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.922" endtime="20201115 22:01:23.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.919" endtime="20201115 22:01:23.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.546" endtime="20201115 22:01:23.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.949" endtime="20201115 22:01:23.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.948" endtime="20201115 22:01:23.945"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.947" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.956" endtime="20201115 22:01:23.980"></status>
</kw>
<msg timestamp="20201115 22:01:23.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.955" endtime="20201115 22:01:23.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.983" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.981" endtime="20201115 22:01:23.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.984" endtime="20201115 22:01:23.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.952" endtime="20201115 22:01:23.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.950" endtime="20201115 22:01:23.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.993" endtime="20201115 22:01:24.278"></status>
</kw>
<msg timestamp="20201115 22:01:24.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022834667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.991" endtime="20201115 22:01:24.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022834667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.282" endtime="20201115 22:01:24.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.290" endtime="20201115 22:01:24.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.989" endtime="20201115 22:01:24.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.987" endtime="20201115 22:01:24.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.297" level="INFO">${RESULT} = [{'time': 0.022844333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.666000000001923e-06, 'source_diff': 9.666000000001923e-06}, {'time': 0.023098111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.294" endtime="20201115 22:01:24.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.310" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:24.298" endtime="20201115 22:01:24.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.315" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.314" endtime="20201115 22:01:24.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.318" level="INFO">VALUE: [9.666000000001923e-06, 9.680000000001493e-06, 9.778000000001952e-06, 9.709000000000106e-06, 9.722000000000203e-06, 9.694000000001063e-06, 9.722000000000203e-06, 9.708000000000633e-06, 9.709000000000106e-06, 9.735999999999773e-06, 9.721999999996733e-06, 9.652999999998357e-06, 9.736999999999246e-06, 9.709000000000106e-06, 9.694999999997067e-06, 9.735999999999773e-06, 9.695000000000537e-06, 9.749999999999343e-06, 9.722000000000203e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.667000000001397e-06, 9.667000000001397e-06, 9.722999999999676e-06, 9.735999999999773e-06, 9.722000000000203e-06, 9.680999999997497e-06, 9.722000000000203e-06, 9.709000000000106e-06, 9.681000000000967e-06, 9.708000000000633e-06, 9.694000000001063e-06, 9.694000000004532e-06, 9.679999999998024e-06, 9.750000000002812e-06, 9.721999999996733e-06, 9.736000000003242e-06, 9.707999999997163e-06, 9.708000000004102e-06, 9.708000000004102e-06, 9.708000000004102e-06, 9.722000000003672e-06, 9.722000000003672e-06, 9.722000000003672e-06, 9.694999999997067e-06, 9.708999999996637e-06, 9.638999999998787e-06, 9.693999999997593e-06]</msg>
<status status="PASS" starttime="20201115 22:01:24.316" endtime="20201115 22:01:24.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.311" endtime="20201115 22:01:24.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.321" endtime="20201115 22:01:24.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.324" endtime="20201115 22:01:24.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.323" endtime="20201115 22:01:24.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.319" endtime="20201115 22:01:24.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.948" endtime="20201115 22:01:24.345"></status>
</kw>
<msg timestamp="20201115 22:01:24.345" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.354" endtime="20201115 22:01:24.377"></status>
</kw>
<msg timestamp="20201115 22:01:24.378" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.353" endtime="20201115 22:01:24.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.380" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.379" endtime="20201115 22:01:24.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.381" endtime="20201115 22:01:24.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.350" endtime="20201115 22:01:24.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.348" endtime="20201115 22:01:24.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.391" endtime="20201115 22:01:24.676"></status>
</kw>
<msg timestamp="20201115 22:01:24.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020282931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.390" endtime="20201115 22:01:24.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020273208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020282931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.681" endtime="20201115 22:01:24.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.689" endtime="20201115 22:01:24.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.387" endtime="20201115 22:01:24.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.385" endtime="20201115 22:01:24.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.696" level="INFO">${RESULT} = [{'time': 0.020282931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.020535653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.692" endtime="20201115 22:01:24.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.709" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:24.697" endtime="20201115 22:01:24.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.714" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.713" endtime="20201115 22:01:24.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.716" level="INFO">VALUE: [9.722999999999676e-06, 9.722000000000203e-06, 9.792000000001522e-06, 9.709000000000106e-06, 9.709000000000106e-06, 9.695000000000537e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.695000000000537e-06, 9.722000000000203e-06, 9.638999999998787e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.709000000000106e-06, 9.653000000001827e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.694000000001063e-06, 9.680000000001493e-06, 9.708000000000633e-06, 9.709000000000106e-06, 9.681000000000967e-06, 9.764000000002382e-06, 9.722999999999676e-06, 9.666000000001923e-06, 9.721999999996733e-06, 9.735999999999773e-06, 9.695000000000537e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.722000000000203e-06, 9.708000000000633e-06, 9.735999999999773e-06, 9.709000000000106e-06, 9.693999999997593e-06, 9.722000000000203e-06, 9.709000000000106e-06, 9.722999999999676e-06, 9.708000000000633e-06, 9.695000000000537e-06, 9.735999999999773e-06, 9.722000000000203e-06, 9.763999999998912e-06, 9.722999999996207e-06, 9.722000000003672e-06, 9.708000000004102e-06, 9.721999999996733e-06, 9.707999999997163e-06, 9.694999999997067e-06]</msg>
<status status="PASS" starttime="20201115 22:01:24.715" endtime="20201115 22:01:24.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.710" endtime="20201115 22:01:24.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.720" endtime="20201115 22:01:24.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.723" endtime="20201115 22:01:24.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.721" endtime="20201115 22:01:24.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.718" endtime="20201115 22:01:24.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.346" endtime="20201115 22:01:24.744"></status>
</kw>
<msg timestamp="20201115 22:01:24.745" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.753" endtime="20201115 22:01:24.776"></status>
</kw>
<msg timestamp="20201115 22:01:24.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.752" endtime="20201115 22:01:24.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.778" endtime="20201115 22:01:24.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.780" endtime="20201115 22:01:24.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.749" endtime="20201115 22:01:24.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.747" endtime="20201115 22:01:24.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.790" endtime="20201115 22:01:25.076"></status>
</kw>
<msg timestamp="20201115 22:01:25.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021115069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021124778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.789" endtime="20201115 22:01:25.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021115069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021124778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.080" endtime="20201115 22:01:25.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.088" endtime="20201115 22:01:25.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.786" endtime="20201115 22:01:25.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.784" endtime="20201115 22:01:25.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.095" level="INFO">${RESULT} = [{'time': 0.021124778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.021377889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.091" endtime="20201115 22:01:25.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.109" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:25.096" endtime="20201115 22:01:25.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.114" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.113" endtime="20201115 22:01:25.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.116" level="INFO">VALUE: [9.709000000000106e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.694000000001063e-06, 9.707999999997163e-06, 9.722999999999676e-06, 9.680000000001493e-06, 9.653000000001827e-06, 9.722000000000203e-06, 9.722000000000203e-06, 9.709000000000106e-06, 9.667000000001397e-06, 9.681000000000967e-06, 9.679999999998024e-06, 9.722000000000203e-06, 9.722000000000203e-06, 9.708000000000633e-06, 9.709000000000106e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.709000000000106e-06, 9.735999999999773e-06, 9.764000000002382e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.709000000000106e-06, 9.652999999998357e-06, 9.653000000001827e-06, 9.707999999997163e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.721999999996733e-06, 9.723000000003146e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.708000000000633e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.749999999995873e-06, 9.707999999997163e-06, 9.707999999997163e-06, 9.708999999996637e-06, 9.708999999996637e-06, 9.736000000003242e-06, 9.749999999995873e-06, 9.707999999997163e-06, 9.680999999997497e-06]</msg>
<status status="PASS" starttime="20201115 22:01:25.115" endtime="20201115 22:01:25.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.110" endtime="20201115 22:01:25.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.119" endtime="20201115 22:01:25.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.123" endtime="20201115 22:01:25.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.121" endtime="20201115 22:01:25.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.118" endtime="20201115 22:01:25.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.745" endtime="20201115 22:01:25.144"></status>
</kw>
<msg timestamp="20201115 22:01:25.144" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.153" endtime="20201115 22:01:25.175"></status>
</kw>
<msg timestamp="20201115 22:01:25.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.151" endtime="20201115 22:01:25.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.177" endtime="20201115 22:01:25.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.179" endtime="20201115 22:01:25.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.148" endtime="20201115 22:01:25.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.146" endtime="20201115 22:01:25.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.189" endtime="20201115 22:01:25.475"></status>
</kw>
<msg timestamp="20201115 22:01:25.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020306653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020316361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.187" endtime="20201115 22:01:25.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020306653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020316361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.479" endtime="20201115 22:01:25.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.487" endtime="20201115 22:01:25.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.185" endtime="20201115 22:01:25.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.183" endtime="20201115 22:01:25.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.494" level="INFO">${RESULT} = [{'time': 0.020316361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.020569083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.491" endtime="20201115 22:01:25.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.508" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:25.495" endtime="20201115 22:01:25.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.513" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.512" endtime="20201115 22:01:25.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.516" level="INFO">VALUE: [9.708000000000633e-06, 9.679999999998024e-06, 9.708000000000633e-06, 9.695000000000537e-06, 9.709000000000106e-06, 9.708000000000633e-06, 9.735999999999773e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.737000000002716e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.667000000001397e-06, 9.708000000000633e-06, 9.709000000000106e-06, 9.722999999999676e-06, 9.694000000001063e-06, 9.709000000000106e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.709000000000106e-06, 9.666999999997927e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.694000000001063e-06, 9.709000000000106e-06, 9.722999999999676e-06, 9.694000000001063e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.736999999999246e-06, 9.694000000001063e-06, 9.722000000000203e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.638999999998787e-06, 9.722999999999676e-06, 9.666999999997927e-06, 9.736000000003242e-06, 9.708000000000633e-06, 9.791999999998052e-06, 9.709000000000106e-06, 9.666999999997927e-06, 9.723000000003146e-06, 9.694999999997067e-06, 9.708000000004102e-06, 9.707999999997163e-06, 9.708999999996637e-06]</msg>
<status status="PASS" starttime="20201115 22:01:25.514" endtime="20201115 22:01:25.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.509" endtime="20201115 22:01:25.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.519" endtime="20201115 22:01:25.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.522" endtime="20201115 22:01:25.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.521" endtime="20201115 22:01:25.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.517" endtime="20201115 22:01:25.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.144" endtime="20201115 22:01:25.543"></status>
</kw>
<msg timestamp="20201115 22:01:25.543" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.552" endtime="20201115 22:01:25.575"></status>
</kw>
<msg timestamp="20201115 22:01:25.576" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.550" endtime="20201115 22:01:25.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.578" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.577" endtime="20201115 22:01:25.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.579" endtime="20201115 22:01:25.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.548" endtime="20201115 22:01:25.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.546" endtime="20201115 22:01:25.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.589" endtime="20201115 22:01:25.876"></status>
</kw>
<msg timestamp="20201115 22:01:25.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020350625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020360333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.588" endtime="20201115 22:01:25.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020350625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020360333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.880" endtime="20201115 22:01:25.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.889" endtime="20201115 22:01:25.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.585" endtime="20201115 22:01:25.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.584" endtime="20201115 22:01:25.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.895" level="INFO">${RESULT} = [{'time': 0.020360333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.020613097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.892" endtime="20201115 22:01:25.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.909" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:25.896" endtime="20201115 22:01:25.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.913" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.912" endtime="20201115 22:01:25.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.916" level="INFO">VALUE: [9.708000000000633e-06, 9.763999999998912e-06, 9.695000000000537e-06, 9.694000000001063e-06, 9.708000000000633e-06, 9.695000000000537e-06, 9.721999999996733e-06, 9.721999999996733e-06, 9.708000000000633e-06, 9.707999999997163e-06, 9.680000000001493e-06, 9.722999999999676e-06, 9.709000000000106e-06, 9.735999999999773e-06, 9.667000000001397e-06, 9.722000000000203e-06, 9.709000000000106e-06, 9.736999999999246e-06, 9.722000000000203e-06, 9.721999999996733e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.709000000000106e-06, 9.695000000000537e-06, 9.722999999999676e-06, 9.709000000000106e-06, 9.708000000000633e-06, 9.693999999997593e-06, 9.709000000000106e-06, 9.735999999999773e-06, 9.694999999997067e-06, 9.722000000000203e-06, 9.695000000000537e-06, 9.723000000003146e-06, 9.709000000000106e-06, 9.709000000000106e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.722000000000203e-06, 9.722000000000203e-06, 9.708000000000633e-06, 9.749999999999343e-06, 9.708000000000633e-06, 9.721999999996733e-06, 9.721999999996733e-06, 9.694999999997067e-06, 9.695000000004006e-06, 9.708000000004102e-06, 9.722000000003672e-06, 9.707999999997163e-06]</msg>
<status status="PASS" starttime="20201115 22:01:25.914" endtime="20201115 22:01:25.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.910" endtime="20201115 22:01:25.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.919" endtime="20201115 22:01:25.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.922" endtime="20201115 22:01:25.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.921" endtime="20201115 22:01:25.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.917" endtime="20201115 22:01:25.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.544" endtime="20201115 22:01:25.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.946" endtime="20201115 22:01:25.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.945" endtime="20201115 22:01:25.943"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.946" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.954" endtime="20201115 22:01:25.978"></status>
</kw>
<msg timestamp="20201115 22:01:25.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.953" endtime="20201115 22:01:25.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.981" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.980" endtime="20201115 22:01:25.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.982" endtime="20201115 22:01:25.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.950" endtime="20201115 22:01:25.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.948" endtime="20201115 22:01:25.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.992" endtime="20201115 22:01:26.278"></status>
</kw>
<msg timestamp="20201115 22:01:26.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022648389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.990" endtime="20201115 22:01:26.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022648389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.282" endtime="20201115 22:01:26.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.290" endtime="20201115 22:01:26.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.988" endtime="20201115 22:01:26.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.986" endtime="20201115 22:01:26.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.297" level="INFO">${RESULT} = [{'time': 0.022658278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.022925542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:26.294" endtime="20201115 22:01:26.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.311" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:26.298" endtime="20201115 22:01:26.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.315" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.314" endtime="20201115 22:01:26.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.318" level="INFO">VALUE: [9.888999999999037e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.875000000002937e-06, 9.874999999999468e-06, 9.875000000002937e-06, 9.820000000000662e-06, 9.889000000002507e-06, 9.860999999999898e-06, 9.875000000002937e-06, 9.903000000002077e-06, 9.805000000001618e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.888999999999037e-06, 9.903000000002077e-06, 9.889000000002507e-06, 9.889000000002507e-06, 9.875000000002937e-06, 9.861999999999371e-06, 9.874999999999468e-06, 9.847999999999801e-06, 9.874999999999468e-06, 9.819999999997192e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.902999999998607e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.916999999998177e-06, 9.874999999999468e-06, 9.915999999998704e-06, 9.847999999999801e-06, 9.860999999999898e-06, 9.930999999997747e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.916999999998177e-06, 9.874999999999468e-06, 9.874999999999468e-06]</msg>
<status status="PASS" starttime="20201115 22:01:26.316" endtime="20201115 22:01:26.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.312" endtime="20201115 22:01:26.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.321" endtime="20201115 22:01:26.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.324" endtime="20201115 22:01:26.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.323" endtime="20201115 22:01:26.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.319" endtime="20201115 22:01:26.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.946" endtime="20201115 22:01:26.345"></status>
</kw>
<msg timestamp="20201115 22:01:26.345" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.354" endtime="20201115 22:01:26.377"></status>
</kw>
<msg timestamp="20201115 22:01:26.378" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.353" endtime="20201115 22:01:26.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.379" endtime="20201115 22:01:26.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.386" endtime="20201115 22:01:26.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.350" endtime="20201115 22:01:26.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.348" endtime="20201115 22:01:26.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.396" endtime="20201115 22:01:26.682"></status>
</kw>
<msg timestamp="20201115 22:01:26.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.395" endtime="20201115 22:01:26.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.686" endtime="20201115 22:01:26.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.695" endtime="20201115 22:01:26.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.392" endtime="20201115 22:01:26.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.390" endtime="20201115 22:01:26.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.701" level="INFO">${RESULT} = [{'time': 0.020624167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.020891931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:26.698" endtime="20201115 22:01:26.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.716" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:26.702" endtime="20201115 22:01:26.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.720" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.719" endtime="20201115 22:01:26.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.723" level="INFO">VALUE: [9.874999999999468e-06, 9.902999999998607e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.888999999999037e-06, 9.832999999997288e-06, 9.875000000002937e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.875000000002937e-06, 9.875000000002937e-06, 9.860999999999898e-06, 9.887999999999564e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.874999999999468e-06, 9.820000000000662e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.930999999997747e-06, 9.874999999999468e-06, 9.861999999999371e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.944999999997317e-06, 9.875000000002937e-06, 9.874999999999468e-06, 9.915999999998704e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.889000000005976e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.916999999998177e-06, 9.874999999999468e-06, 9.929999999998274e-06]</msg>
<status status="PASS" starttime="20201115 22:01:26.722" endtime="20201115 22:01:26.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.717" endtime="20201115 22:01:26.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.726" endtime="20201115 22:01:26.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.729" endtime="20201115 22:01:26.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.728" endtime="20201115 22:01:26.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.724" endtime="20201115 22:01:26.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.346" endtime="20201115 22:01:26.750"></status>
</kw>
<msg timestamp="20201115 22:01:26.750" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.760" endtime="20201115 22:01:26.783"></status>
</kw>
<msg timestamp="20201115 22:01:26.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.757" endtime="20201115 22:01:26.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.785" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.784" endtime="20201115 22:01:26.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.787" endtime="20201115 22:01:26.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.755" endtime="20201115 22:01:26.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.753" endtime="20201115 22:01:26.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.797" endtime="20201115 22:01:27.081"></status>
</kw>
<msg timestamp="20201115 22:01:27.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020710458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020720292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.795" endtime="20201115 22:01:27.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020710458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020720292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.085" endtime="20201115 22:01:27.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.094" endtime="20201115 22:01:27.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.793" endtime="20201115 22:01:27.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.791" endtime="20201115 22:01:27.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.100" level="INFO">${RESULT} = [{'time': 0.020720292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.020986264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:27.097" endtime="20201115 22:01:27.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.114" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:27.101" endtime="20201115 22:01:27.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.118" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.117" endtime="20201115 22:01:27.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.121" level="INFO">VALUE: [9.834000000000231e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.834000000000231e-06, 9.860999999999898e-06, 9.833000000000758e-06, 9.917000000001647e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.833000000000758e-06, 9.791000000002048e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.887999999999564e-06, 9.931000000001217e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.888999999999037e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.846999999996858e-06, 9.931000000001217e-06, 9.917000000001647e-06, 9.887999999999564e-06, 9.874999999999468e-06, 9.887999999999564e-06, 9.888999999999037e-06, 9.820000000000662e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.875000000002937e-06, 9.889000000002507e-06, 9.901999999999134e-06, 9.888999999999037e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.915999999998704e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.945000000004256e-06]</msg>
<status status="PASS" starttime="20201115 22:01:27.119" endtime="20201115 22:01:27.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.115" endtime="20201115 22:01:27.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.124" endtime="20201115 22:01:27.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.127" endtime="20201115 22:01:27.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.126" endtime="20201115 22:01:27.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.122" endtime="20201115 22:01:27.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.751" endtime="20201115 22:01:27.148"></status>
</kw>
<msg timestamp="20201115 22:01:27.148" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.157" endtime="20201115 22:01:27.181"></status>
</kw>
<msg timestamp="20201115 22:01:27.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.156" endtime="20201115 22:01:27.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.182" endtime="20201115 22:01:27.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.184" endtime="20201115 22:01:27.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.153" endtime="20201115 22:01:27.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.151" endtime="20201115 22:01:27.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.195" endtime="20201115 22:01:27.481"></status>
</kw>
<msg timestamp="20201115 22:01:27.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020650417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.193" endtime="20201115 22:01:27.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020650417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.485" endtime="20201115 22:01:27.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.494" endtime="20201115 22:01:27.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.190" endtime="20201115 22:01:27.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.188" endtime="20201115 22:01:27.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.501" level="INFO">${RESULT} = [{'time': 0.020660264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.020926458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:27.497" endtime="20201115 22:01:27.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.514" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:27.502" endtime="20201115 22:01:27.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.518" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.517" endtime="20201115 22:01:27.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.521" level="INFO">VALUE: [9.847000000000328e-06, 9.901999999999134e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.889000000002507e-06, 9.874999999999468e-06, 9.875000000002937e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.861000000003367e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.902999999998607e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.875000000002937e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.903000000002077e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.875000000002937e-06, 9.874999999999468e-06, 9.818999999997718e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.959000000000356e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.792000000001522e-06, 9.903000000005546e-06, 9.874999999999468e-06, 9.861999999999371e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.834000000000231e-06, 9.930000000005212e-06, 9.874999999999468e-06]</msg>
<status status="PASS" starttime="20201115 22:01:27.520" endtime="20201115 22:01:27.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.515" endtime="20201115 22:01:27.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.524" endtime="20201115 22:01:27.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.528" endtime="20201115 22:01:27.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.526" endtime="20201115 22:01:27.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.523" endtime="20201115 22:01:27.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.149" endtime="20201115 22:01:27.548"></status>
</kw>
<msg timestamp="20201115 22:01:27.549" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.557" endtime="20201115 22:01:27.581"></status>
</kw>
<msg timestamp="20201115 22:01:27.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.556" endtime="20201115 22:01:27.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.582" endtime="20201115 22:01:27.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.585" endtime="20201115 22:01:27.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.553" endtime="20201115 22:01:27.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.551" endtime="20201115 22:01:27.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.595" endtime="20201115 22:01:27.881"></status>
</kw>
<msg timestamp="20201115 22:01:27.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.593" endtime="20201115 22:01:27.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.885" endtime="20201115 22:01:27.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.893" endtime="20201115 22:01:27.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.591" endtime="20201115 22:01:27.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.589" endtime="20201115 22:01:27.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.900" level="INFO">${RESULT} = [{'time': 0.020142639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.020409486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:27.897" endtime="20201115 22:01:27.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.914" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:27.901" endtime="20201115 22:01:27.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.918" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.917" endtime="20201115 22:01:27.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.921" level="INFO">VALUE: [9.847000000000328e-06, 9.874999999999468e-06, 9.875000000002937e-06, 9.888999999999037e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.861999999999371e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.818999999997718e-06, 9.874999999999468e-06, 9.847000000000328e-06, 9.888999999999037e-06, 9.903000000002077e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.902999999998607e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.915999999998704e-06, 9.917000000001647e-06, 9.847000000000328e-06, 9.875000000002937e-06, 9.847000000000328e-06, 9.874999999999468e-06, 9.889000000002507e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.944000000001313e-06, 9.819000000001188e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.834000000000231e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.874999999999468e-06, 9.903000000005546e-06]</msg>
<status status="PASS" starttime="20201115 22:01:27.919" endtime="20201115 22:01:27.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.915" endtime="20201115 22:01:27.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.924" endtime="20201115 22:01:27.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.928" endtime="20201115 22:01:27.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.926" endtime="20201115 22:01:27.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.923" endtime="20201115 22:01:27.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.549" endtime="20201115 22:01:27.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.945" endtime="20201115 22:01:27.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.944" endtime="20201115 22:01:27.949"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.951" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.960" endtime="20201115 22:01:27.984"></status>
</kw>
<msg timestamp="20201115 22:01:27.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.958" endtime="20201115 22:01:27.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.987" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.985" endtime="20201115 22:01:27.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.988" endtime="20201115 22:01:27.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.956" endtime="20201115 22:01:27.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.953" endtime="20201115 22:01:27.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.997" endtime="20201115 22:01:28.282"></status>
</kw>
<msg timestamp="20201115 22:01:28.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650042, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:01:27.995" endtime="20201115 22:01:28.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650042, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:01:28.286" endtime="20201115 22:01:28.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.294" endtime="20201115 22:01:28.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.993" endtime="20201115 22:01:28.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.991" endtime="20201115 22:01:28.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.301" level="INFO">${RESULT} = [{'time': 0.022650042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0041999999998302e-05, 'source_diff': 1.0041999999998302e-05}, {'time': 0.022928931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:28.298" endtime="20201115 22:01:28.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.316" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:28.302" endtime="20201115 22:01:28.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.320" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.319" endtime="20201115 22:01:28.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.323" level="INFO">VALUE: [1.0041999999998302e-05, 1.0027999999998732e-05, 1.0026999999999259e-05, 1.0028000000002202e-05, 1.0028000000002202e-05, 1.0042000000001772e-05, 1.0068999999997968e-05, 1.0055999999997872e-05, 1.0056000000001342e-05, 1.0041000000002298e-05, 1.0084000000000481e-05, 9.958999999996887e-06, 1.0013999999999162e-05, 1.0028000000002202e-05, 1.0041999999998302e-05, 1.0028000000002202e-05, 1.0042000000001772e-05, 1.0040999999998829e-05, 1.0042000000001772e-05, 1.0042000000001772e-05, 1.0027999999998732e-05, 1.0040999999998829e-05, 1.0027999999998732e-05, 1.0040999999998829e-05, 1.0041999999998302e-05, 1.0027999999998732e-05, 1.0026999999999259e-05, 1.0041999999998302e-05, 1.0097000000000578e-05, 1.0042000000001772e-05, 1.0040999999998829e-05, 1.0056000000001342e-05, 1.0042000000001772e-05, 1.0027999999995263e-05, 1.0028000000002202e-05, 9.943999999997843e-06, 1.0041000000002298e-05, 1.004099999999536e-05, 9.958999999996887e-06, 1.0056000000001342e-05, 1.0055000000001868e-05, 1.0041000000002298e-05, 1.0083000000001008e-05, 1.0028000000002202e-05, 1.0042000000001772e-05, 1.0041999999994833e-05, 1.0056000000001342e-05, 1.0042000000001772e-05, 9.972999999996457e-06, 1.0056000000001342e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.321" endtime="20201115 22:01:28.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.317" endtime="20201115 22:01:28.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.326" endtime="20201115 22:01:28.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.330" endtime="20201115 22:01:28.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.328" endtime="20201115 22:01:28.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.325" endtime="20201115 22:01:28.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.952" endtime="20201115 22:01:28.351"></status>
</kw>
<msg timestamp="20201115 22:01:28.351" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.360" endtime="20201115 22:01:28.384"></status>
</kw>
<msg timestamp="20201115 22:01:28.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.358" endtime="20201115 22:01:28.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.387" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.385" endtime="20201115 22:01:28.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.388" endtime="20201115 22:01:28.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.355" endtime="20201115 22:01:28.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.353" endtime="20201115 22:01:28.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.398" endtime="20201115 22:01:28.684"></status>
</kw>
<msg timestamp="20201115 22:01:28.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020282194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.396" endtime="20201115 22:01:28.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020282194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.688" endtime="20201115 22:01:28.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.696" endtime="20201115 22:01:28.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.394" endtime="20201115 22:01:28.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.392" endtime="20201115 22:01:28.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.703" level="INFO">${RESULT} = [{'time': 0.020282194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0012999999999689e-05, 'source_diff': 1.0012999999999689e-05}, {'time': 0.020560736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:28.700" endtime="20201115 22:01:28.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.716" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:28.704" endtime="20201115 22:01:28.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.721" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.720" endtime="20201115 22:01:28.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.724" level="INFO">VALUE: [1.0012999999999689e-05, 1.0041999999998302e-05, 1.0027999999998732e-05, 1.0056000000001342e-05, 1.0042000000001772e-05, 1.0041999999998302e-05, 1.0056000000001342e-05, 1.0041999999998302e-05, 1.0041999999998302e-05, 1.0027999999998732e-05, 1.0041999999998302e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0055999999997872e-05, 9.986999999999496e-06, 1.0042000000001772e-05, 1.0070000000000912e-05, 1.0026999999999259e-05, 1.0040999999998829e-05, 1.0014000000002632e-05, 1.0042000000001772e-05, 1.0054999999998399e-05, 1.0026999999999259e-05, 1.0040999999998829e-05, 1.0041999999998302e-05, 1.0041999999998302e-05, 1.0042000000001772e-05, 9.999999999999593e-06, 1.0083000000001008e-05, 1.0042000000001772e-05, 1.0027999999998732e-05, 1.0027000000002728e-05, 1.0028000000002202e-05, 1.0083000000001008e-05, 1.0013999999999162e-05, 9.986999999999496e-06, 1.0111000000000148e-05, 1.0041000000002298e-05, 1.0056000000001342e-05, 1.0041999999998302e-05, 1.0027999999995263e-05, 1.0055999999994403e-05, 1.0041000000002298e-05, 1.0041000000002298e-05, 1.0014000000002632e-05, 1.0013999999995693e-05, 1.0084000000000481e-05, 1.0111000000000148e-05, 1.004099999999536e-05, 1.0042000000001772e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.722" endtime="20201115 22:01:28.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.718" endtime="20201115 22:01:28.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.727" endtime="20201115 22:01:28.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.730" endtime="20201115 22:01:28.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.729" endtime="20201115 22:01:28.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.725" endtime="20201115 22:01:28.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.351" endtime="20201115 22:01:28.751"></status>
</kw>
<msg timestamp="20201115 22:01:28.751" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.760" endtime="20201115 22:01:28.784"></status>
</kw>
<msg timestamp="20201115 22:01:28.785" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.758" endtime="20201115 22:01:28.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.787" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.786" endtime="20201115 22:01:28.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.788" endtime="20201115 22:01:28.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.756" endtime="20201115 22:01:28.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.754" endtime="20201115 22:01:28.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.798" endtime="20201115 22:01:29.093"></status>
</kw>
<msg timestamp="20201115 22:01:29.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.797" endtime="20201115 22:01:29.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.102" endtime="20201115 22:01:29.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.120" endtime="20201115 22:01:29.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.794" endtime="20201115 22:01:29.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.792" endtime="20201115 22:01:29.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.135" level="INFO">${RESULT} = [{'time': 0.020395125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.020675083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:29.127" endtime="20201115 22:01:29.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.152" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:29.137" endtime="20201115 22:01:29.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.156" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.155" endtime="20201115 22:01:29.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.159" level="INFO">VALUE: [1.0027999999998732e-05, 1.0026999999999259e-05, 1.0055000000001868e-05, 1.0055000000001868e-05, 1.0041000000002298e-05, 1.0040999999998829e-05, 1.0014000000002632e-05, 1.0041999999998302e-05, 9.986999999999496e-06, 1.0041000000002298e-05, 1.0054999999998399e-05, 1.0041999999998302e-05, 1.0054999999998399e-05, 1.0041999999998302e-05, 1.0055000000001868e-05, 9.999999999999593e-06, 1.0028000000002202e-05, 1.0042000000001772e-05, 1.0056000000001342e-05, 1.0027999999998732e-05, 1.0041999999998302e-05, 1.0042000000001772e-05, 1.0054999999998399e-05, 1.0083000000001008e-05, 1.0040999999998829e-05, 1.0040999999998829e-05, 1.0042000000001772e-05, 9.958000000000883e-06, 1.0027999999998732e-05, 1.0042000000001772e-05, 1.0068999999997968e-05, 1.0014000000002632e-05, 1.0041999999998302e-05, 1.0012999999999689e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0041999999998302e-05, 1.0026999999999259e-05, 1.0026999999999259e-05, 1.002699999999579e-05, 1.0042000000001772e-05, 1.0027999999995263e-05, 1.0013999999995693e-05, 1.0028000000002202e-05, 1.0028000000002202e-05, 9.985999999996553e-06, 1.0042000000001772e-05, 1.0041000000002298e-05, 1.0055999999994403e-05, 1.0014000000002632e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.158" endtime="20201115 22:01:29.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.153" endtime="20201115 22:01:29.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.162" endtime="20201115 22:01:29.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.165" endtime="20201115 22:01:29.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.164" endtime="20201115 22:01:29.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.160" endtime="20201115 22:01:29.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.752" endtime="20201115 22:01:29.186"></status>
</kw>
<msg timestamp="20201115 22:01:29.186" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.195" endtime="20201115 22:01:29.219"></status>
</kw>
<msg timestamp="20201115 22:01:29.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.193" endtime="20201115 22:01:29.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.222" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.221" endtime="20201115 22:01:29.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.223" endtime="20201115 22:01:29.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.191" endtime="20201115 22:01:29.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.189" endtime="20201115 22:01:29.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.233" endtime="20201115 22:01:29.521"></status>
</kw>
<msg timestamp="20201115 22:01:29.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.232" endtime="20201115 22:01:29.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.525" endtime="20201115 22:01:29.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.533" endtime="20201115 22:01:29.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.229" endtime="20201115 22:01:29.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.227" endtime="20201115 22:01:29.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.540" level="INFO">${RESULT} = [{'time': 0.020187222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0055000000001868e-05, 'source_diff': 1.0055000000001868e-05}, {'time': 0.020464819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:29.537" endtime="20201115 22:01:29.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.554" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:29.541" endtime="20201115 22:01:29.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.558" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.557" endtime="20201115 22:01:29.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.561" level="INFO">VALUE: [1.0055000000001868e-05, 1.0026999999999259e-05, 1.0041999999998302e-05, 1.0028000000002202e-05, 1.0028000000002202e-05, 1.0042000000001772e-05, 1.0041999999998302e-05, 1.0040999999998829e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0054999999998399e-05, 1.0124999999999718e-05, 1.0041000000002298e-05, 1.0042000000001772e-05, 1.0013999999999162e-05, 1.0040999999998829e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0027999999998732e-05, 1.0040999999998829e-05, 1.0097000000000578e-05, 1.0027999999998732e-05, 1.0042000000001772e-05, 1.0027999999998732e-05, 1.0069999999997442e-05, 1.0013999999999162e-05, 1.0028000000002202e-05, 1.0042000000001772e-05, 1.0027999999998732e-05, 1.0040999999998829e-05, 1.0042000000001772e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0097000000000578e-05, 1.0041999999998302e-05, 1.0027000000002728e-05, 1.0027999999998732e-05, 1.0028000000002202e-05, 1.0042000000001772e-05, 1.0027999999998732e-05, 1.0056000000001342e-05, 1.0084000000000481e-05, 1.0042000000001772e-05, 1.0028000000002202e-05, 1.0041000000002298e-05, 1.0042000000001772e-05, 1.0042000000001772e-05, 1.0028000000002202e-05, 9.943999999997843e-06, 1.0028000000002202e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.559" endtime="20201115 22:01:29.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.555" endtime="20201115 22:01:29.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.564" endtime="20201115 22:01:29.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.567" endtime="20201115 22:01:29.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.566" endtime="20201115 22:01:29.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.562" endtime="20201115 22:01:29.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.187" endtime="20201115 22:01:29.588"></status>
</kw>
<msg timestamp="20201115 22:01:29.588" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.597" endtime="20201115 22:01:29.621"></status>
</kw>
<msg timestamp="20201115 22:01:29.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.595" endtime="20201115 22:01:29.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.624" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.623" endtime="20201115 22:01:29.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.625" endtime="20201115 22:01:29.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.593" endtime="20201115 22:01:29.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.591" endtime="20201115 22:01:29.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.635" endtime="20201115 22:01:29.921"></status>
</kw>
<msg timestamp="20201115 22:01:29.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020326333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020336389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.633" endtime="20201115 22:01:29.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020326333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020336389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.925" endtime="20201115 22:01:29.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.934" endtime="20201115 22:01:29.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.631" endtime="20201115 22:01:29.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.629" endtime="20201115 22:01:29.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.940" level="INFO">${RESULT} = [{'time': 0.020336389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.020616542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:29.937" endtime="20201115 22:01:29.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.955" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:29.941" endtime="20201115 22:01:29.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.959" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.958" endtime="20201115 22:01:29.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.962" level="INFO">VALUE: [1.0056000000001342e-05, 1.0056000000001342e-05, 1.0054999999998399e-05, 1.0041999999998302e-05, 1.0070000000000912e-05, 1.0056000000001342e-05, 1.0040999999998829e-05, 1.0042000000001772e-05, 1.0042000000001772e-05, 1.0026999999999259e-05, 1.0027999999998732e-05, 1.0056000000001342e-05, 1.0042000000001772e-05, 1.0041999999998302e-05, 1.0026999999999259e-05, 1.0042000000001772e-05, 1.0014000000002632e-05, 1.0055000000001868e-05, 1.0124999999999718e-05, 1.0041999999998302e-05, 1.0028000000002202e-05, 1.0027999999998732e-05, 1.0041999999998302e-05, 1.0041000000002298e-05, 1.0027999999998732e-05, 1.0083000000001008e-05, 1.0041999999998302e-05, 1.0028000000002202e-05, 1.0041000000002298e-05, 1.0042000000001772e-05, 1.0028000000002202e-05, 1.0042000000001772e-05, 1.0070000000000912e-05, 1.0041999999998302e-05, 1.0041000000002298e-05, 1.0042000000001772e-05, 1.0055000000001868e-05, 1.0026999999999259e-05, 1.0013999999999162e-05, 1.0056000000001342e-05, 1.0042000000001772e-05, 1.001299999999622e-05, 1.0041000000002298e-05, 1.0054999999994929e-05, 1.0028000000002202e-05, 1.0028000000002202e-05, 1.0055999999994403e-05, 1.0028000000002202e-05, 9.999999999996123e-06, 1.0042000000001772e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.960" endtime="20201115 22:01:29.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.956" endtime="20201115 22:01:29.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.965" endtime="20201115 22:01:29.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.968" endtime="20201115 22:01:29.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.967" endtime="20201115 22:01:29.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.963" endtime="20201115 22:01:29.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.588" endtime="20201115 22:01:29.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.950" endtime="20201115 22:01:29.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.949" endtime="20201115 22:01:29.989"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.992" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.001" endtime="20201115 22:01:30.025"></status>
</kw>
<msg timestamp="20201115 22:01:30.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.999" endtime="20201115 22:01:30.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.027" endtime="20201115 22:01:30.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.029" endtime="20201115 22:01:30.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.996" endtime="20201115 22:01:30.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.994" endtime="20201115 22:01:30.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.039" endtime="20201115 22:01:30.324"></status>
</kw>
<msg timestamp="20201115 22:01:30.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022806167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.037" endtime="20201115 22:01:30.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022806167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.328" endtime="20201115 22:01:30.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.337" endtime="20201115 22:01:30.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.034" endtime="20201115 22:01:30.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.033" endtime="20201115 22:01:30.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.343" level="INFO">${RESULT} = [{'time': 0.022816389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0222000000000703e-05, 'source_diff': 1.0222000000000703e-05}, {'time': 0.023110625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:30.340" endtime="20201115 22:01:30.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.357" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:30.344" endtime="20201115 22:01:30.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.361" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.360" endtime="20201115 22:01:30.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.364" level="INFO">VALUE: [1.0222000000000703e-05, 1.0193999999998093e-05, 1.0194000000001563e-05, 1.0194000000001563e-05, 1.0208999999997137e-05, 1.0138999999999287e-05, 1.0195000000001037e-05, 1.0193999999998093e-05, 1.0194000000001563e-05, 1.0124999999999718e-05, 1.0195000000001037e-05, 1.0236000000000273e-05, 1.0207999999997663e-05, 1.0194000000001563e-05, 1.0208000000001133e-05, 1.0180000000001993e-05, 1.0209000000000606e-05, 1.0193999999998093e-05, 1.0208000000001133e-05, 1.0194000000001563e-05, 1.0195000000001037e-05, 1.0180000000001993e-05, 1.0208000000001133e-05, 1.0138999999999287e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0179999999998524e-05, 1.0208000000001133e-05, 1.0166999999998427e-05, 1.0235999999996803e-05, 1.0194000000005032e-05, 1.0195000000004506e-05, 1.0194000000005032e-05, 1.0194999999997567e-05, 1.0207999999997663e-05, 1.0222000000004172e-05, 1.0194000000005032e-05, 1.0181000000004936e-05, 1.0208999999997137e-05, 1.0209000000004076e-05, 1.0223000000003646e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0194999999997567e-05, 1.0166999999998427e-05, 1.0179999999998524e-05, 1.0179999999998524e-05, 1.0250000000003312e-05, 1.0209000000004076e-05, 1.0193999999998093e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.363" endtime="20201115 22:01:30.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.358" endtime="20201115 22:01:30.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.367" endtime="20201115 22:01:30.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.371" endtime="20201115 22:01:30.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.369" endtime="20201115 22:01:30.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.365" endtime="20201115 22:01:30.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.992" endtime="20201115 22:01:30.391"></status>
</kw>
<msg timestamp="20201115 22:01:30.391" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.400" endtime="20201115 22:01:30.425"></status>
</kw>
<msg timestamp="20201115 22:01:30.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.399" endtime="20201115 22:01:30.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.427" endtime="20201115 22:01:30.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.430" endtime="20201115 22:01:30.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.396" endtime="20201115 22:01:30.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.394" endtime="20201115 22:01:30.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.440" endtime="20201115 22:01:30.727"></status>
</kw>
<msg timestamp="20201115 22:01:30.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020336083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020346278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.438" endtime="20201115 22:01:30.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020336083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020346278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.731" endtime="20201115 22:01:30.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.739" endtime="20201115 22:01:30.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.436" endtime="20201115 22:01:30.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.434" endtime="20201115 22:01:30.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.746" level="INFO">${RESULT} = [{'time': 0.020346278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.020640208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:30.743" endtime="20201115 22:01:30.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.760" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:30.747" endtime="20201115 22:01:30.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.764" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.763" endtime="20201115 22:01:30.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.767" level="INFO">VALUE: [1.0194999999997567e-05, 1.0194000000001563e-05, 1.0194999999997567e-05, 1.0180000000001993e-05, 1.0181000000001467e-05, 1.0207999999997663e-05, 1.0208000000001133e-05, 1.0236999999999746e-05, 1.0195000000001037e-05, 1.0195000000001037e-05, 1.0194000000001563e-05, 1.0193999999998093e-05, 1.0194999999997567e-05, 1.0209000000000606e-05, 1.0166999999998427e-05, 1.0209000000000606e-05, 1.0209000000000606e-05, 1.0207999999997663e-05, 1.0193999999998093e-05, 1.0179999999998524e-05, 1.0193999999998093e-05, 1.0181000000001467e-05, 1.0153000000002327e-05, 1.0208000000001133e-05, 1.0180000000001993e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0124999999999718e-05, 1.0235999999996803e-05, 1.0208999999997137e-05, 1.0167000000001897e-05, 1.0193999999998093e-05, 1.0223000000000176e-05, 1.0207999999997663e-05, 1.0208000000001133e-05, 1.0193999999998093e-05, 1.0195000000001037e-05, 1.0223000000003646e-05, 1.0151999999999384e-05, 1.0193999999998093e-05, 1.0208000000004602e-05, 1.0208999999997137e-05, 1.0138999999999287e-05, 1.0193999999998093e-05, 1.0208000000004602e-05, 1.0180999999997997e-05, 1.0124999999999718e-05, 1.0181000000004936e-05, 1.0208999999997137e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.765" endtime="20201115 22:01:30.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.761" endtime="20201115 22:01:30.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.770" endtime="20201115 22:01:30.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.773" endtime="20201115 22:01:30.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.772" endtime="20201115 22:01:30.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.768" endtime="20201115 22:01:30.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.392" endtime="20201115 22:01:30.794"></status>
</kw>
<msg timestamp="20201115 22:01:30.794" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.803" endtime="20201115 22:01:30.828"></status>
</kw>
<msg timestamp="20201115 22:01:30.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.802" endtime="20201115 22:01:30.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.831" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.830" endtime="20201115 22:01:30.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.832" endtime="20201115 22:01:30.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.799" endtime="20201115 22:01:30.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.796" endtime="20201115 22:01:30.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.842" endtime="20201115 22:01:31.128"></status>
</kw>
<msg timestamp="20201115 22:01:31.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020918833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020929028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.841" endtime="20201115 22:01:31.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020918833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020929028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.132" endtime="20201115 22:01:31.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.141" endtime="20201115 22:01:31.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.838" endtime="20201115 22:01:31.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.836" endtime="20201115 22:01:31.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.147" level="INFO">${RESULT} = [{'time': 0.020929028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.021220861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:31.144" endtime="20201115 22:01:31.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.161" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:31.148" endtime="20201115 22:01:31.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.165" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.164" endtime="20201115 22:01:31.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.168" level="INFO">VALUE: [1.0194999999997567e-05, 1.0236000000000273e-05, 1.0194999999997567e-05, 1.0194000000001563e-05, 1.0152000000002853e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 1.0207999999997663e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0138999999999287e-05, 1.0195000000001037e-05, 1.0179999999998524e-05, 1.0167000000001897e-05, 1.0222000000000703e-05, 1.0194999999997567e-05, 1.0195000000001037e-05, 1.0193999999998093e-05, 1.0209000000000606e-05, 1.0207999999997663e-05, 1.0181000000001467e-05, 1.0180999999997997e-05, 1.0207999999997663e-05, 1.0208999999997137e-05, 1.0181000000001467e-05, 1.0207999999997663e-05, 1.0180999999997997e-05, 1.0195000000001037e-05, 1.0193999999998093e-05, 1.0208000000001133e-05, 1.0194999999997567e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0193999999998093e-05, 1.0193999999998093e-05, 1.0194999999997567e-05, 1.0222000000004172e-05, 1.0194999999997567e-05, 1.0151999999999384e-05, 1.0194999999997567e-05, 1.0249999999996373e-05, 1.0222000000004172e-05, 1.0208999999997137e-05, 1.0194000000005032e-05, 1.0166999999998427e-05, 1.0278000000002452e-05, 1.0235999999996803e-05, 1.0181000000004936e-05, 1.0179999999998524e-05]</msg>
<status status="PASS" starttime="20201115 22:01:31.166" endtime="20201115 22:01:31.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.162" endtime="20201115 22:01:31.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.171" endtime="20201115 22:01:31.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.175" endtime="20201115 22:01:31.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.173" endtime="20201115 22:01:31.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.169" endtime="20201115 22:01:31.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.794" endtime="20201115 22:01:31.195"></status>
</kw>
<msg timestamp="20201115 22:01:31.196" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.205" endtime="20201115 22:01:31.230"></status>
</kw>
<msg timestamp="20201115 22:01:31.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.203" endtime="20201115 22:01:31.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.233" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.231" endtime="20201115 22:01:31.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.234" endtime="20201115 22:01:31.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.200" endtime="20201115 22:01:31.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.198" endtime="20201115 22:01:31.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.244" endtime="20201115 22:01:31.529"></status>
</kw>
<msg timestamp="20201115 22:01:31.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020436833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.242" endtime="20201115 22:01:31.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020436833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.533" endtime="20201115 22:01:31.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.541" endtime="20201115 22:01:31.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.240" endtime="20201115 22:01:31.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.238" endtime="20201115 22:01:31.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.548" level="INFO">${RESULT} = [{'time': 0.020447069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.020738222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:31.544" endtime="20201115 22:01:31.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.563" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:31.549" endtime="20201115 22:01:31.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.567" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.566" endtime="20201115 22:01:31.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.570" level="INFO">VALUE: [1.0235999999996803e-05, 1.0194000000001563e-05, 1.0180999999997997e-05, 1.0193999999998093e-05, 1.0179999999998524e-05, 1.0166999999998427e-05, 1.0194000000001563e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0194999999997567e-05, 1.0167000000001897e-05, 1.0223000000000176e-05, 1.0180000000001993e-05, 1.0152999999998857e-05, 1.0180999999997997e-05, 1.0207999999997663e-05, 1.0208000000001133e-05, 1.0223000000000176e-05, 1.0208000000001133e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0207999999997663e-05, 1.0138999999999287e-05, 1.0264000000002882e-05, 1.0195000000001037e-05, 1.0207999999997663e-05, 1.0194999999997567e-05, 1.0249999999999843e-05, 1.0221999999997233e-05, 1.0208000000001133e-05, 1.0194000000001563e-05, 1.0195000000001037e-05, 1.0222000000000703e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0194000000001563e-05, 1.0209000000000606e-05, 1.0194000000001563e-05, 1.0207999999997663e-05, 1.0236000000003742e-05, 1.0194999999997567e-05, 1.0195000000004506e-05, 1.0207999999997663e-05, 1.0194000000005032e-05, 1.0208000000004602e-05, 1.0193999999998093e-05, 1.0208999999997137e-05, 1.0235999999996803e-05, 1.0194999999997567e-05, 1.0208999999997137e-05]</msg>
<status status="PASS" starttime="20201115 22:01:31.568" endtime="20201115 22:01:31.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.563" endtime="20201115 22:01:31.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.578" endtime="20201115 22:01:31.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.582" endtime="20201115 22:01:31.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.580" endtime="20201115 22:01:31.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.576" endtime="20201115 22:01:31.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.196" endtime="20201115 22:01:31.602"></status>
</kw>
<msg timestamp="20201115 22:01:31.603" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.611" endtime="20201115 22:01:31.636"></status>
</kw>
<msg timestamp="20201115 22:01:31.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.610" endtime="20201115 22:01:31.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.638" endtime="20201115 22:01:31.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.640" endtime="20201115 22:01:31.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.607" endtime="20201115 22:01:31.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.605" endtime="20201115 22:01:31.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.650" endtime="20201115 22:01:31.936"></status>
</kw>
<msg timestamp="20201115 22:01:31.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020344153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.649" endtime="20201115 22:01:31.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020344153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.940" endtime="20201115 22:01:31.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.948" endtime="20201115 22:01:31.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.646" endtime="20201115 22:01:31.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.644" endtime="20201115 22:01:31.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.955" level="INFO">${RESULT} = [{'time': 0.020344153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0181000000001467e-05, 'source_diff': 1.0181000000001467e-05}, {'time': 0.020634778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:31.952" endtime="20201115 22:01:31.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.969" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:31.956" endtime="20201115 22:01:31.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.973" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.972" endtime="20201115 22:01:31.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.976" level="INFO">VALUE: [1.0181000000001467e-05, 1.0209000000000606e-05, 1.0180999999997997e-05, 1.0194999999997567e-05, 1.0180000000001993e-05, 1.0179999999998524e-05, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0193999999998093e-05, 1.0181000000001467e-05, 1.0193999999998093e-05, 1.0194000000001563e-05, 1.0180999999997997e-05, 1.0208000000001133e-05, 1.0193999999998093e-05, 1.0194000000001563e-05, 1.0208000000001133e-05, 1.0194000000001563e-05, 1.0193999999998093e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0180999999997997e-05, 1.0209000000000606e-05, 1.0194999999997567e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0194000000001563e-05, 1.0194999999997567e-05, 1.0209000000000606e-05, 1.0151999999999384e-05, 1.0209000000000606e-05, 1.0207999999997663e-05, 1.0180999999997997e-05, 1.0194000000001563e-05, 1.0153000000002327e-05, 1.0180000000001993e-05, 1.0195000000001037e-05, 1.0194000000001563e-05, 1.0208000000004602e-05, 1.0222000000004172e-05, 1.0207999999997663e-05, 1.0194000000005032e-05, 1.0125000000006656e-05, 1.0193999999998093e-05, 1.0208999999997137e-05, 1.0193999999998093e-05, 1.0209000000004076e-05, 1.0223000000003646e-05, 1.0208000000004602e-05, 1.0194999999997567e-05]</msg>
<status status="PASS" starttime="20201115 22:01:31.974" endtime="20201115 22:01:31.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.970" endtime="20201115 22:01:31.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.979" endtime="20201115 22:01:31.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.983" endtime="20201115 22:01:32.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.981" endtime="20201115 22:01:32.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.978" endtime="20201115 22:01:32.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.603" endtime="20201115 22:01:32.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.991" endtime="20201115 22:01:32.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.990" endtime="20201115 22:01:32.004"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.006" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.015" endtime="20201115 22:01:32.040"></status>
</kw>
<msg timestamp="20201115 22:01:32.041" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.013" endtime="20201115 22:01:32.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.043" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.042" endtime="20201115 22:01:32.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.044" endtime="20201115 22:01:32.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.011" endtime="20201115 22:01:32.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.009" endtime="20201115 22:01:32.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.053" endtime="20201115 22:01:32.338"></status>
</kw>
<msg timestamp="20201115 22:01:32.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.052" endtime="20201115 22:01:32.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.343" endtime="20201115 22:01:32.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.351" endtime="20201115 22:01:32.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.049" endtime="20201115 22:01:32.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.047" endtime="20201115 22:01:32.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.358" level="INFO">${RESULT} = [{'time': 0.022735944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.023041556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:32.354" endtime="20201115 22:01:32.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.371" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:32.359" endtime="20201115 22:01:32.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.376" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.375" endtime="20201115 22:01:32.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.378" level="INFO">VALUE: [1.0361000000000398e-05, 1.0403000000002577e-05, 1.0361999999999871e-05, 1.0360999999996928e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0346999999997358e-05, 1.0346999999997358e-05, 1.0361999999999871e-05, 1.0374999999999968e-05, 1.0360999999996928e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0348000000000301e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0360999999996928e-05, 1.0361000000000398e-05, 1.0348000000000301e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0444999999997817e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0360999999993459e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0445000000004756e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0348000000000301e-05, 1.0374999999999968e-05, 1.0319000000001688e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0374999999999968e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.377" endtime="20201115 22:01:32.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.372" endtime="20201115 22:01:32.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.382" endtime="20201115 22:01:32.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.385" endtime="20201115 22:01:32.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.383" endtime="20201115 22:01:32.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.380" endtime="20201115 22:01:32.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.007" endtime="20201115 22:01:32.406"></status>
</kw>
<msg timestamp="20201115 22:01:32.406" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.415" endtime="20201115 22:01:32.440"></status>
</kw>
<msg timestamp="20201115 22:01:32.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.413" endtime="20201115 22:01:32.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.443" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.442" endtime="20201115 22:01:32.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.444" endtime="20201115 22:01:32.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.410" endtime="20201115 22:01:32.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.408" endtime="20201115 22:01:32.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.455" endtime="20201115 22:01:32.741"></status>
</kw>
<msg timestamp="20201115 22:01:32.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.453" endtime="20201115 22:01:32.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.745" endtime="20201115 22:01:32.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.754" endtime="20201115 22:01:32.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.450" endtime="20201115 22:01:32.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.448" endtime="20201115 22:01:32.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.760" level="INFO">${RESULT} = [{'time': 0.020214889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.020519694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:32.757" endtime="20201115 22:01:32.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.774" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:32.761" endtime="20201115 22:01:32.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.779" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.778" endtime="20201115 22:01:32.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.781" level="INFO">VALUE: [1.0374999999999968e-05, 1.0361000000000398e-05, 1.0348000000000301e-05, 1.0374999999999968e-05, 1.0361999999999871e-05, 1.0320000000001162e-05, 1.0361000000000398e-05, 1.0388999999999537e-05, 1.0347000000000828e-05, 1.0415999999999204e-05, 1.0361999999999871e-05, 1.0305999999998122e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0403000000002577e-05, 1.0347000000000828e-05, 1.0319999999997692e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0348000000000301e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0320000000001162e-05, 1.0347000000000828e-05, 1.0360999999996928e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0347999999996832e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0333000000001258e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0348000000000301e-05, 1.0348000000000301e-05, 1.0402999999999107e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.780" endtime="20201115 22:01:32.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.775" endtime="20201115 22:01:32.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.784" endtime="20201115 22:01:32.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.788" endtime="20201115 22:01:32.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.786" endtime="20201115 22:01:32.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.783" endtime="20201115 22:01:32.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.406" endtime="20201115 22:01:32.808"></status>
</kw>
<msg timestamp="20201115 22:01:32.808" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.817" endtime="20201115 22:01:32.843"></status>
</kw>
<msg timestamp="20201115 22:01:32.844" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.816" endtime="20201115 22:01:32.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.846" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.845" endtime="20201115 22:01:32.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.847" endtime="20201115 22:01:32.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.813" endtime="20201115 22:01:32.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.811" endtime="20201115 22:01:32.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.857" endtime="20201115 22:01:33.145"></status>
</kw>
<msg timestamp="20201115 22:01:33.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.856" endtime="20201115 22:01:33.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.149" endtime="20201115 22:01:33.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.157" endtime="20201115 22:01:33.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.853" endtime="20201115 22:01:33.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.851" endtime="20201115 22:01:33.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.164" level="INFO">${RESULT} = [{'time': 0.020230875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.020538028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:33.160" endtime="20201115 22:01:33.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.179" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:33.165" endtime="20201115 22:01:33.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.183" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.182" endtime="20201115 22:01:33.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.186" level="INFO">VALUE: [1.0388999999999537e-05, 1.0320000000001162e-05, 1.0374999999999968e-05, 1.0348000000000301e-05, 1.0402999999999107e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0347000000000828e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0332999999997788e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0348000000000301e-05, 1.0361000000000398e-05, 1.0346999999997358e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361999999999871e-05, 1.0374999999999968e-05, 1.0347000000000828e-05, 1.0305999999998122e-05, 1.0388999999999537e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0333000000001258e-05, 1.0388999999999537e-05, 1.0361000000000398e-05, 1.0361999999999871e-05, 1.0360999999996928e-05, 1.0334000000000731e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0346999999997358e-05, 1.0347000000000828e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0361999999999871e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0374999999999968e-05, 1.0304999999995179e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0361999999999871e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.184" endtime="20201115 22:01:33.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.180" endtime="20201115 22:01:33.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.189" endtime="20201115 22:01:33.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.192" endtime="20201115 22:01:33.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.191" endtime="20201115 22:01:33.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.187" endtime="20201115 22:01:33.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.809" endtime="20201115 22:01:33.213"></status>
</kw>
<msg timestamp="20201115 22:01:33.213" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.222" endtime="20201115 22:01:33.247"></status>
</kw>
<msg timestamp="20201115 22:01:33.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.220" endtime="20201115 22:01:33.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.250" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.249" endtime="20201115 22:01:33.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.251" endtime="20201115 22:01:33.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.218" endtime="20201115 22:01:33.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.216" endtime="20201115 22:01:33.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.261" endtime="20201115 22:01:33.548"></status>
</kw>
<msg timestamp="20201115 22:01:33.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020200319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020210667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.260" endtime="20201115 22:01:33.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020200319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020210667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.552" endtime="20201115 22:01:33.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.561" endtime="20201115 22:01:33.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.257" endtime="20201115 22:01:33.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.255" endtime="20201115 22:01:33.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.567" level="INFO">${RESULT} = [{'time': 0.020210667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.020516597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:33.564" endtime="20201115 22:01:33.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.581" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:33.568" endtime="20201115 22:01:33.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.585" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.584" endtime="20201115 22:01:33.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.588" level="INFO">VALUE: [1.0348000000000301e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0360999999996928e-05, 1.0388999999999537e-05, 1.0360999999996928e-05, 1.0347000000000828e-05, 1.0332999999997788e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0360999999996928e-05, 1.0347000000000828e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0348000000000301e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0291999999998552e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0318999999994749e-05, 1.027699999999604e-05, 1.0348000000000301e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.586" endtime="20201115 22:01:33.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.582" endtime="20201115 22:01:33.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.591" endtime="20201115 22:01:33.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.594" endtime="20201115 22:01:33.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.593" endtime="20201115 22:01:33.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.589" endtime="20201115 22:01:33.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.214" endtime="20201115 22:01:33.615"></status>
</kw>
<msg timestamp="20201115 22:01:33.615" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.624" endtime="20201115 22:01:33.650"></status>
</kw>
<msg timestamp="20201115 22:01:33.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.622" endtime="20201115 22:01:33.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.651" endtime="20201115 22:01:33.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.654" endtime="20201115 22:01:33.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.620" endtime="20201115 22:01:33.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.618" endtime="20201115 22:01:33.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.664" endtime="20201115 22:01:33.948"></status>
</kw>
<msg timestamp="20201115 22:01:33.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020277417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.662" endtime="20201115 22:01:33.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020277417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.953" endtime="20201115 22:01:33.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.961" endtime="20201115 22:01:33.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.660" endtime="20201115 22:01:33.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.658" endtime="20201115 22:01:33.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.968" level="INFO">${RESULT} = [{'time': 0.020277417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0333999999997262e-05, 'source_diff': 1.0333999999997262e-05}, {'time': 0.020584847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:33.965" endtime="20201115 22:01:33.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.982" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:33.969" endtime="20201115 22:01:33.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.986" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.985" endtime="20201115 22:01:33.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.989" level="INFO">VALUE: [1.0333999999997262e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0360999999996928e-05, 1.0388999999999537e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0346999999997358e-05, 1.0305999999998122e-05, 1.0347000000000828e-05, 1.0348000000000301e-05, 1.0348000000000301e-05, 1.0332999999997788e-05, 1.0361999999999871e-05, 1.0346999999997358e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0417000000002147e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0304999999998649e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0403000000002577e-05, 1.0333000000001258e-05, 1.0374999999999968e-05, 1.0347999999996832e-05, 1.0361000000000398e-05, 1.0388999999999537e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0348000000000301e-05, 1.0334000000000731e-05, 1.0319000000001688e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0347000000000828e-05, 1.0458999999997387e-05, 1.0416999999998677e-05, 1.0361000000000398e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.987" endtime="20201115 22:01:33.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.982" endtime="20201115 22:01:33.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.992" endtime="20201115 22:01:33.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.995" endtime="20201115 22:01:34.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.994" endtime="20201115 22:01:34.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.990" endtime="20201115 22:01:34.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.616" endtime="20201115 22:01:34.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.005" endtime="20201115 22:01:34.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.004" endtime="20201115 22:01:34.016"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.018" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.027" endtime="20201115 22:01:34.054"></status>
</kw>
<msg timestamp="20201115 22:01:34.054" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.026" endtime="20201115 22:01:34.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.057" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.056" endtime="20201115 22:01:34.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.058" endtime="20201115 22:01:34.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.023" endtime="20201115 22:01:34.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.021" endtime="20201115 22:01:34.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.068" endtime="20201115 22:01:34.353"></status>
</kw>
<msg timestamp="20201115 22:01:34.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.066" endtime="20201115 22:01:34.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.357" endtime="20201115 22:01:34.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.365" endtime="20201115 22:01:34.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.064" endtime="20201115 22:01:34.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.062" endtime="20201115 22:01:34.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.372" level="INFO">${RESULT} = [{'time': 0.022632069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0555000000002368e-05, 'source_diff': 1.0555000000002368e-05}, {'time': 0.022950125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:34.369" endtime="20201115 22:01:34.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.386" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:34.373" endtime="20201115 22:01:34.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.390" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.389" endtime="20201115 22:01:34.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.393" level="INFO">VALUE: [1.0555000000002368e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0528000000002702e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0526999999999759e-05, 1.0473000000000426e-05, 1.0541999999998802e-05, 1.0500000000000093e-05, 1.0526999999999759e-05, 1.0528000000002702e-05, 1.0513999999999663e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0528000000002702e-05, 1.0527999999999232e-05, 1.0526999999999759e-05, 1.0527000000003228e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0526999999999759e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.052699999999629e-05, 1.0528000000002702e-05, 1.0528000000002702e-05, 1.0499999999996623e-05, 1.0500000000003562e-05, 1.0513999999996193e-05, 1.0527999999995763e-05, 1.0527000000003228e-05, 1.0500000000003562e-05, 1.0542000000002272e-05, 1.0542000000002272e-05, 1.0514000000003132e-05, 1.0513999999996193e-05, 1.0528000000002702e-05, 1.0527999999995763e-05, 1.0569000000001938e-05, 1.0541999999995333e-05, 1.0570000000001412e-05, 1.0527000000003228e-05, 1.0569000000001938e-05, 1.0514000000003132e-05, 1.0597000000001078e-05]</msg>
<status status="PASS" starttime="20201115 22:01:34.391" endtime="20201115 22:01:34.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.387" endtime="20201115 22:01:34.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.396" endtime="20201115 22:01:34.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.399" endtime="20201115 22:01:34.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.398" endtime="20201115 22:01:34.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.394" endtime="20201115 22:01:34.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.019" endtime="20201115 22:01:34.420"></status>
</kw>
<msg timestamp="20201115 22:01:34.420" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.429" endtime="20201115 22:01:34.456"></status>
</kw>
<msg timestamp="20201115 22:01:34.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.427" endtime="20201115 22:01:34.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.459" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.457" endtime="20201115 22:01:34.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.460" endtime="20201115 22:01:34.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.425" endtime="20201115 22:01:34.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.423" endtime="20201115 22:01:34.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.470" endtime="20201115 22:01:34.755"></status>
</kw>
<msg timestamp="20201115 22:01:34.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020224042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:34.469" endtime="20201115 22:01:34.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020224042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:34.760" endtime="20201115 22:01:34.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.768" endtime="20201115 22:01:34.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.466" endtime="20201115 22:01:34.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.464" endtime="20201115 22:01:34.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.775" level="INFO">${RESULT} = [{'time': 0.020224042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0542000000002272e-05, 'source_diff': 1.0542000000002272e-05}, {'time': 0.020544556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:34.771" endtime="20201115 22:01:34.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.789" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:34.776" endtime="20201115 22:01:34.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.794" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.793" endtime="20201115 22:01:34.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.796" level="INFO">VALUE: [1.0542000000002272e-05, 1.0527999999999232e-05, 1.0556000000001842e-05, 1.0526999999999759e-05, 1.0486999999999996e-05, 1.0583000000001508e-05, 1.0500000000000093e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0458000000001383e-05, 1.0569999999997942e-05, 1.0542000000002272e-05, 1.0598000000000551e-05, 1.0486000000000523e-05, 1.0514000000003132e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0458000000001383e-05, 1.0541999999998802e-05, 1.0542000000002272e-05, 1.0500000000000093e-05, 1.0528000000002702e-05, 1.0513999999999663e-05, 1.0528000000002702e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0527000000003228e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0514000000003132e-05, 1.051299999999672e-05, 1.0457999999997913e-05, 1.0513999999996193e-05, 1.0570000000001412e-05, 1.0527999999995763e-05, 1.0513999999996193e-05, 1.0542000000002272e-05, 1.0570000000001412e-05, 1.0513999999996193e-05, 1.0513999999996193e-05, 1.0514000000003132e-05, 1.0513000000003658e-05, 1.0541000000002798e-05, 1.0527999999995763e-05, 1.0514000000003132e-05]</msg>
<status status="PASS" starttime="20201115 22:01:34.795" endtime="20201115 22:01:34.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.790" endtime="20201115 22:01:34.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.799" endtime="20201115 22:01:34.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.803" endtime="20201115 22:01:34.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.801" endtime="20201115 22:01:34.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.798" endtime="20201115 22:01:34.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.421" endtime="20201115 22:01:34.824"></status>
</kw>
<msg timestamp="20201115 22:01:34.824" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.833" endtime="20201115 22:01:34.860"></status>
</kw>
<msg timestamp="20201115 22:01:34.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.831" endtime="20201115 22:01:34.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.863" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.861" endtime="20201115 22:01:34.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.864" endtime="20201115 22:01:34.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.829" endtime="20201115 22:01:34.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.826" endtime="20201115 22:01:34.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.874" endtime="20201115 22:01:35.161"></status>
</kw>
<msg timestamp="20201115 22:01:35.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0207985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020809083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:34.872" endtime="20201115 22:01:35.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0207985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020809083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:35.165" endtime="20201115 22:01:35.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.173" endtime="20201115 22:01:35.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.869" endtime="20201115 22:01:35.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.868" endtime="20201115 22:01:35.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.180" level="INFO">${RESULT} = [{'time': 0.020809083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0582999999998038e-05, 'source_diff': 1.0582999999998038e-05}, {'time': 0.021129667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:35.177" endtime="20201115 22:01:35.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.194" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:35.181" endtime="20201115 22:01:35.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.198" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.197" endtime="20201115 22:01:35.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.201" level="INFO">VALUE: [1.0582999999998038e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0540999999999329e-05, 1.0554999999998899e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0528000000002702e-05, 1.0459000000000857e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0499999999996623e-05, 1.0527000000003228e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0540999999999329e-05, 1.0513999999999663e-05, 1.0568999999998469e-05, 1.0527999999999232e-05, 1.0570000000001412e-05, 1.0514000000003132e-05, 1.0527999999999232e-05, 1.0526999999999759e-05, 1.0526999999999759e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0500000000000093e-05, 1.0513999999999663e-05, 1.0541000000002798e-05, 1.0500000000003562e-05, 1.0458999999997387e-05, 1.0528000000002702e-05, 1.054099999999586e-05, 1.0514000000003132e-05, 1.054099999999586e-05, 1.0528000000002702e-05, 1.0527999999995763e-05, 1.0527999999995763e-05, 1.0528000000002702e-05, 1.0486000000003992e-05, 1.0527999999995763e-05, 1.054099999999586e-05, 1.0514000000003132e-05, 1.0443999999998343e-05, 1.0527999999995763e-05, 1.0527999999995763e-05]</msg>
<status status="PASS" starttime="20201115 22:01:35.199" endtime="20201115 22:01:35.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.194" endtime="20201115 22:01:35.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.204" endtime="20201115 22:01:35.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.207" endtime="20201115 22:01:35.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.205" endtime="20201115 22:01:35.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.202" endtime="20201115 22:01:35.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.824" endtime="20201115 22:01:35.228"></status>
</kw>
<msg timestamp="20201115 22:01:35.228" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.237" endtime="20201115 22:01:35.264"></status>
</kw>
<msg timestamp="20201115 22:01:35.264" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.236" endtime="20201115 22:01:35.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.265" endtime="20201115 22:01:35.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.267" endtime="20201115 22:01:35.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.233" endtime="20201115 22:01:35.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.231" endtime="20201115 22:01:35.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.277" endtime="20201115 22:01:35.574"></status>
</kw>
<msg timestamp="20201115 22:01:35.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020254986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020265514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.276" endtime="20201115 22:01:35.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020254986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020265514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.583" endtime="20201115 22:01:35.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.601" endtime="20201115 22:01:35.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.273" endtime="20201115 22:01:35.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.272" endtime="20201115 22:01:35.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.613" level="INFO">${RESULT} = [{'time': 0.020265514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.020583347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:35.608" endtime="20201115 22:01:35.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.627" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:35.614" endtime="20201115 22:01:35.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.631" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.630" endtime="20201115 22:01:35.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.634" level="INFO">VALUE: [1.0527999999999232e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0513999999999663e-05, 1.0528000000002702e-05, 1.0486000000000523e-05, 1.0596999999997608e-05, 1.0513000000000189e-05, 1.0528000000002702e-05, 1.0541999999998802e-05, 1.0513999999999663e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0528000000002702e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0528000000002702e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0555999999998372e-05, 1.0528000000002702e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0486000000000523e-05, 1.0527999999999232e-05, 1.0598000000000551e-05, 1.054099999999586e-05, 1.0444000000005282e-05, 1.0528000000002702e-05, 1.0527999999995763e-05, 1.0527999999995763e-05, 1.0542000000002272e-05, 1.0514000000003132e-05, 1.0514000000003132e-05, 1.0485999999997053e-05, 1.0542000000002272e-05, 1.0514000000003132e-05, 1.0514000000003132e-05, 1.0527999999995763e-05, 1.0528000000002702e-05]</msg>
<status status="PASS" starttime="20201115 22:01:35.632" endtime="20201115 22:01:35.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.628" endtime="20201115 22:01:35.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.637" endtime="20201115 22:01:35.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.641" endtime="20201115 22:01:35.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.639" endtime="20201115 22:01:35.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.636" endtime="20201115 22:01:35.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.229" endtime="20201115 22:01:35.661"></status>
</kw>
<msg timestamp="20201115 22:01:35.662" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.671" endtime="20201115 22:01:35.696"></status>
</kw>
<msg timestamp="20201115 22:01:35.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.669" endtime="20201115 22:01:35.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.698" endtime="20201115 22:01:35.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.700" endtime="20201115 22:01:35.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.666" endtime="20201115 22:01:35.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.664" endtime="20201115 22:01:35.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.710" endtime="20201115 22:01:35.996"></status>
</kw>
<msg timestamp="20201115 22:01:35.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.709" endtime="20201115 22:01:36.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.001" endtime="20201115 22:01:36.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.009" endtime="20201115 22:01:36.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.706" endtime="20201115 22:01:36.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.704" endtime="20201115 22:01:36.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.016" level="INFO">${RESULT} = [{'time': 0.020343764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.020662222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:36.012" endtime="20201115 22:01:36.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.029" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:36.017" endtime="20201115 22:01:36.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.034" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.033" endtime="20201115 22:01:36.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.036" level="INFO">VALUE: [1.0527999999999232e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0556000000001842e-05, 1.0611000000000648e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0500000000000093e-05, 1.0514000000003132e-05, 1.0541999999998802e-05, 1.0457999999997913e-05, 1.0526999999999759e-05, 1.0486000000000523e-05, 1.0527999999999232e-05, 1.0528000000002702e-05, 1.0513999999999663e-05, 1.0528000000002702e-05, 1.0513999999999663e-05, 1.0485999999997053e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0570000000001412e-05, 1.0541999999998802e-05, 1.0528000000002702e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0541999999998802e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0527999999995763e-05, 1.0611000000000648e-05, 1.0513999999996193e-05, 1.0542000000002272e-05, 1.0527999999995763e-05, 1.0527999999995763e-05, 1.0542000000002272e-05, 1.0555999999994903e-05, 1.052699999999629e-05, 1.0514000000003132e-05, 1.0528000000002702e-05, 1.0514000000003132e-05, 1.0513999999996193e-05, 1.0528000000002702e-05, 1.0514000000003132e-05]</msg>
<status status="PASS" starttime="20201115 22:01:36.035" endtime="20201115 22:01:36.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.030" endtime="20201115 22:01:36.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.040" endtime="20201115 22:01:36.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.043" endtime="20201115 22:01:36.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.042" endtime="20201115 22:01:36.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.038" endtime="20201115 22:01:36.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.662" endtime="20201115 22:01:36.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.017" endtime="20201115 22:01:36.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.017" endtime="20201115 22:01:36.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.346" endtime="20201115 22:01:36.064"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.069" endtime="20201115 22:01:36.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.067" endtime="20201115 22:01:36.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.066" endtime="20201115 22:01:36.089"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:46.272" endtime="20201115 22:01:36.089" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:51.097" endtime="20201115 22:01:36.095"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 21:59:49.172" endtime="20201115 22:01:36.116"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
