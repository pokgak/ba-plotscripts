<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:01:42.945" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.502" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:01:43.511" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:01:44.593" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:01:43.501" endtime="20201115 22:01:44.594"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.597" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:01:44.595" endtime="20201115 22:01:44.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.500" endtime="20201115 22:01:44.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.600" endtime="20201115 22:01:44.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.599" endtime="20201115 22:01:44.784"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.797" endtime="20201115 22:01:44.819"></status>
</kw>
<msg timestamp="20201115 22:01:44.820" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['e to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.795" endtime="20201115 22:01:44.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.822" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['e to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.821" endtime="20201115 22:01:44.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.825" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:44.823" endtime="20201115 22:01:44.826"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:44.793" endtime="20201115 22:01:44.827"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:44.791" endtime="20201115 22:01:44.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.789" endtime="20201115 22:01:44.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:44.831" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:44.831" endtime="20201115 22:01:44.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.828" endtime="20201115 22:01:44.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.788" endtime="20201115 22:01:44.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.788" endtime="20201115 22:01:44.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.833" endtime="20201115 22:01:44.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.786" endtime="20201115 22:01:44.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.836" endtime="20201115 22:01:44.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.785" endtime="20201115 22:01:44.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.498" endtime="20201115 22:01:44.838"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.844" endtime="20201115 22:01:44.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.843" endtime="20201115 22:01:44.864"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.879" endtime="20201115 22:01:44.896"></status>
</kw>
<msg timestamp="20201115 22:01:44.896" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.878" endtime="20201115 22:01:44.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.899" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.897" endtime="20201115 22:01:44.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.902" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:44.900" endtime="20201115 22:01:44.902"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:44.874" endtime="20201115 22:01:44.903"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:44.871" endtime="20201115 22:01:44.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.870" endtime="20201115 22:01:44.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:44.907" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:44.906" endtime="20201115 22:01:44.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.904" endtime="20201115 22:01:44.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.869" endtime="20201115 22:01:44.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.868" endtime="20201115 22:01:44.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.909" endtime="20201115 22:01:44.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.867" endtime="20201115 22:01:44.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.865" endtime="20201115 22:01:44.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.842" endtime="20201115 22:01:44.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.919" endtime="20201115 22:01:44.934"></status>
</kw>
<msg timestamp="20201115 22:01:44.935" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.917" endtime="20201115 22:01:44.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.937" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.936" endtime="20201115 22:01:44.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.938" endtime="20201115 22:01:44.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.915" endtime="20201115 22:01:44.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.912" endtime="20201115 22:01:44.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.945" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:01:44.944" endtime="20201115 22:01:44.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.947" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:01:44.946" endtime="20201115 22:01:44.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.942" endtime="20201115 22:01:44.948"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:44.839" endtime="20201115 22:01:44.949" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:01:43.056" endtime="20201115 22:01:44.952"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.004" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:01:45.012" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:01:46.153" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:01:45.003" endtime="20201115 22:01:46.154"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.156" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:01:46.155" endtime="20201115 22:01:46.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.002" endtime="20201115 22:01:46.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.159" endtime="20201115 22:01:46.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.158" endtime="20201115 22:01:46.379"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.392" endtime="20201115 22:01:46.410"></status>
</kw>
<msg timestamp="20201115 22:01:46.410" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['IOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.390" endtime="20201115 22:01:46.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['IOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.411" endtime="20201115 22:01:46.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.416" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:46.414" endtime="20201115 22:01:46.416"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:46.388" endtime="20201115 22:01:46.417"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:46.386" endtime="20201115 22:01:46.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.384" endtime="20201115 22:01:46.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:46.421" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:46.421" endtime="20201115 22:01:46.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.418" endtime="20201115 22:01:46.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.383" endtime="20201115 22:01:46.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.383" endtime="20201115 22:01:46.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.423" endtime="20201115 22:01:46.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.382" endtime="20201115 22:01:46.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.426" endtime="20201115 22:01:46.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.380" endtime="20201115 22:01:46.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.000" endtime="20201115 22:01:46.428"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.435" endtime="20201115 22:01:46.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.433" endtime="20201115 22:01:46.455"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.468" endtime="20201115 22:01:46.489"></status>
</kw>
<msg timestamp="20201115 22:01:46.489" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.466" endtime="20201115 22:01:46.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.492" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.491" endtime="20201115 22:01:46.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.495" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:46.493" endtime="20201115 22:01:46.495"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:46.464" endtime="20201115 22:01:46.496"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:46.461" endtime="20201115 22:01:46.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.460" endtime="20201115 22:01:46.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:46.501" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:46.500" endtime="20201115 22:01:46.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.498" endtime="20201115 22:01:46.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.459" endtime="20201115 22:01:46.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.459" endtime="20201115 22:01:46.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.502" endtime="20201115 22:01:46.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.457" endtime="20201115 22:01:46.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.456" endtime="20201115 22:01:46.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.431" endtime="20201115 22:01:46.505"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:01:46.507" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.516" endtime="20201115 22:01:46.531"></status>
</kw>
<msg timestamp="20201115 22:01:46.532" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.514" endtime="20201115 22:01:46.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.534" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.533" endtime="20201115 22:01:46.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.535" endtime="20201115 22:01:46.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.511" endtime="20201115 22:01:46.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.509" endtime="20201115 22:01:46.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.544" endtime="20201115 22:01:46.847"></status>
</kw>
<msg timestamp="20201115 22:01:46.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073046958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0730475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:46.543" endtime="20201115 22:01:46.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073046958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0730475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:46.851" endtime="20201115 22:01:46.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.860" endtime="20201115 22:01:46.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.540" endtime="20201115 22:01:46.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.539" endtime="20201115 22:01:46.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.866" level="INFO">${RESULT} = [{'time': 0.0730475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.073056931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:46.863" endtime="20201115 22:01:46.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.880" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 4.870000000073427e-07, 5.409999999927972e-07, 4.86000000007869e-07, 5.420000000061487e-07, 4.859999999939912e-07, 5.419999999922709e-07, 5.41000000006675e-07, 4.859999...</msg>
<status status="PASS" starttime="20201115 22:01:46.868" endtime="20201115 22:01:46.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.885" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:46.884" endtime="20201115 22:01:46.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.887" level="INFO">VALUE: [5.420000000061487e-07, 4.870000000073427e-07, 5.409999999927972e-07, 4.86000000007869e-07, 5.420000000061487e-07, 4.859999999939912e-07, 5.419999999922709e-07, 5.41000000006675e-07, 4.859999999939912e-07, 4.859999999939912e-07, 5.419999999922709e-07, 5.41000000006675e-07, 5.419999999922709e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.420000000061487e-07, 4.86000000007869e-07, 5.41000000006675e-07, 5.419999999922709e-07, 4.86000000007869e-07, 5.41000000006675e-07, 5.420000000061487e-07, 4.859999999939912e-07, 5.420000000061487e-07, 4.859999999939912e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999927972e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 5.41000000006675e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.869999999934649e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000000061487e-07, 5.420000000061487e-07, 4.720000000013602e-07, 5.41000000006675e-07, 5.420000000061487e-07]</msg>
<status status="PASS" starttime="20201115 22:01:46.886" endtime="20201115 22:01:46.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.881" endtime="20201115 22:01:46.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.890" endtime="20201115 22:01:46.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.894" endtime="20201115 22:01:46.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.892" endtime="20201115 22:01:46.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.889" endtime="20201115 22:01:46.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.508" endtime="20201115 22:01:46.914"></status>
</kw>
<msg timestamp="20201115 22:01:46.915" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.922" endtime="20201115 22:01:46.940"></status>
</kw>
<msg timestamp="20201115 22:01:46.940" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.921" endtime="20201115 22:01:46.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.943" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.941" endtime="20201115 22:01:46.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.944" endtime="20201115 22:01:46.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.918" endtime="20201115 22:01:46.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.917" endtime="20201115 22:01:46.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.953" endtime="20201115 22:01:47.242"></status>
</kw>
<msg timestamp="20201115 22:01:47.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021272611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021273083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.951" endtime="20201115 22:01:47.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021272611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021273083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.246" endtime="20201115 22:01:47.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.254" endtime="20201115 22:01:47.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.949" endtime="20201115 22:01:47.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.947" endtime="20201115 22:01:47.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.261" level="INFO">${RESULT} = [{'time': 0.021273083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021282306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:47.258" endtime="20201115 22:01:47.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.275" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.7299...</msg>
<status status="PASS" starttime="20201115 22:01:47.262" endtime="20201115 22:01:47.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.279" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:47.278" endtime="20201115 22:01:47.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.282" level="INFO">VALUE: [4.720000000013602e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.729999999973644e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.720000000013602e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201115 22:01:47.280" endtime="20201115 22:01:47.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.276" endtime="20201115 22:01:47.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.285" endtime="20201115 22:01:47.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.288" endtime="20201115 22:01:47.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.287" endtime="20201115 22:01:47.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.283" endtime="20201115 22:01:47.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.915" endtime="20201115 22:01:47.309"></status>
</kw>
<msg timestamp="20201115 22:01:47.309" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.317" endtime="20201115 22:01:47.331"></status>
</kw>
<msg timestamp="20201115 22:01:47.331" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.315" endtime="20201115 22:01:47.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.334" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.332" endtime="20201115 22:01:47.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.335" endtime="20201115 22:01:47.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.313" endtime="20201115 22:01:47.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.311" endtime="20201115 22:01:47.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.345" endtime="20201115 22:01:47.634"></status>
</kw>
<msg timestamp="20201115 22:01:47.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018633931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018634472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.343" endtime="20201115 22:01:47.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018633931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018634472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.639" endtime="20201115 22:01:47.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.647" endtime="20201115 22:01:47.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.341" endtime="20201115 22:01:47.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.338" endtime="20201115 22:01:47.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.654" level="INFO">${RESULT} = [{'time': 0.018634472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018643319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:47.651" endtime="20201115 22:01:47.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.668" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419...</msg>
<status status="PASS" starttime="20201115 22:01:47.655" endtime="20201115 22:01:47.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.672" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:47.671" endtime="20201115 22:01:47.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.675" level="INFO">VALUE: [5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201115 22:01:47.673" endtime="20201115 22:01:47.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.669" endtime="20201115 22:01:47.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.678" endtime="20201115 22:01:47.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.681" endtime="20201115 22:01:47.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.680" endtime="20201115 22:01:47.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.676" endtime="20201115 22:01:47.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.310" endtime="20201115 22:01:47.702"></status>
</kw>
<msg timestamp="20201115 22:01:47.702" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.710" endtime="20201115 22:01:47.727"></status>
</kw>
<msg timestamp="20201115 22:01:47.728" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.708" endtime="20201115 22:01:47.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.730" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.729" endtime="20201115 22:01:47.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.731" endtime="20201115 22:01:47.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.706" endtime="20201115 22:01:47.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.704" endtime="20201115 22:01:47.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.741" endtime="20201115 22:01:48.029"></status>
</kw>
<msg timestamp="20201115 22:01:48.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.739" endtime="20201115 22:01:48.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.033" endtime="20201115 22:01:48.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.041" endtime="20201115 22:01:48.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.736" endtime="20201115 22:01:48.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.734" endtime="20201115 22:01:48.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.048" level="INFO">${RESULT} = [{'time': 0.022411847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.022419556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.045" endtime="20201115 22:01:48.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.061" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.8600...</msg>
<status status="PASS" starttime="20201115 22:01:48.049" endtime="20201115 22:01:48.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.066" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:48.065" endtime="20201115 22:01:48.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.068" level="INFO">VALUE: [5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201115 22:01:48.067" endtime="20201115 22:01:48.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.062" endtime="20201115 22:01:48.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.071" endtime="20201115 22:01:48.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.075" endtime="20201115 22:01:48.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.073" endtime="20201115 22:01:48.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.070" endtime="20201115 22:01:48.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.703" endtime="20201115 22:01:48.095"></status>
</kw>
<msg timestamp="20201115 22:01:48.095" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.103" endtime="20201115 22:01:48.120"></status>
</kw>
<msg timestamp="20201115 22:01:48.120" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.102" endtime="20201115 22:01:48.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.123" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.121" endtime="20201115 22:01:48.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.124" endtime="20201115 22:01:48.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.099" endtime="20201115 22:01:48.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.097" endtime="20201115 22:01:48.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.133" endtime="20201115 22:01:48.419"></status>
</kw>
<msg timestamp="20201115 22:01:48.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021061264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021061806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.131" endtime="20201115 22:01:48.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021061264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021061806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.423" endtime="20201115 22:01:48.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.431" endtime="20201115 22:01:48.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.129" endtime="20201115 22:01:48.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.127" endtime="20201115 22:01:48.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.438" level="INFO">${RESULT} = [{'time': 0.021061806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.021067806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.434" endtime="20201115 22:01:48.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.451" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.40...</msg>
<status status="PASS" starttime="20201115 22:01:48.439" endtime="20201115 22:01:48.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.455" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:48.454" endtime="20201115 22:01:48.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.458" level="INFO">VALUE: [5.419999999992098e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.859999999974607e-07, 4.870000000004038e-07]</msg>
<status status="PASS" starttime="20201115 22:01:48.456" endtime="20201115 22:01:48.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.452" endtime="20201115 22:01:48.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.461" endtime="20201115 22:01:48.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.464" endtime="20201115 22:01:48.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.463" endtime="20201115 22:01:48.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.459" endtime="20201115 22:01:48.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.096" endtime="20201115 22:01:48.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.506" endtime="20201115 22:01:48.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.490" endtime="20201115 22:01:48.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.488" endtime="20201115 22:01:48.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.487" endtime="20201115 22:01:48.510"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:46.429" endtime="20201115 22:01:48.510" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.518" endtime="20201115 22:01:48.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.517" endtime="20201115 22:01:48.538"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.553" endtime="20201115 22:01:48.568"></status>
</kw>
<msg timestamp="20201115 22:01:48.568" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.551" endtime="20201115 22:01:48.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.569" endtime="20201115 22:01:48.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.574" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:48.572" endtime="20201115 22:01:48.574"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:48.548" endtime="20201115 22:01:48.575"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:48.545" endtime="20201115 22:01:48.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.544" endtime="20201115 22:01:48.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:48.579" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:48.579" endtime="20201115 22:01:48.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.576" endtime="20201115 22:01:48.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.543" endtime="20201115 22:01:48.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.542" endtime="20201115 22:01:48.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.581" endtime="20201115 22:01:48.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.541" endtime="20201115 22:01:48.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.539" endtime="20201115 22:01:48.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.515" endtime="20201115 22:01:48.584"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:01:48.586" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.594" endtime="20201115 22:01:48.612"></status>
</kw>
<msg timestamp="20201115 22:01:48.613" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.592" endtime="20201115 22:01:48.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.615" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.614" endtime="20201115 22:01:48.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.616" endtime="20201115 22:01:48.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.590" endtime="20201115 22:01:48.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.588" endtime="20201115 22:01:48.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.625" endtime="20201115 22:01:48.909"></status>
</kw>
<msg timestamp="20201115 22:01:48.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07006575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070070222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:48.624" endtime="20201115 22:01:48.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07006575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070070222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:48.913" endtime="20201115 22:01:48.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.922" endtime="20201115 22:01:48.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.621" endtime="20201115 22:01:48.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.619" endtime="20201115 22:01:48.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.929" level="INFO">${RESULT} = [{'time': 0.070070222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4720000000053606e-06, 'source_diff': 4.4720000000053606e-06}, {'time': 0.070079458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:48.925" endtime="20201115 22:01:48.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.942" level="INFO">${OVERHEAD} = {'diff': [4.4720000000053606e-06, 4.443999999992343e-06, 4.4720000000053606e-06, 4.471999999991483e-06, 4.485999999997992e-06, 4.52800000000364e-06, 4.4580000000127296e-06, 4.473000000004834e-06, 4.48...</msg>
<status status="PASS" starttime="20201115 22:01:48.930" endtime="20201115 22:01:48.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.946" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:48.945" endtime="20201115 22:01:48.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.949" level="INFO">VALUE: [4.4720000000053606e-06, 4.443999999992343e-06, 4.4720000000053606e-06, 4.471999999991483e-06, 4.485999999997992e-06, 4.52800000000364e-06, 4.4580000000127296e-06, 4.473000000004834e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.499999999990623e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.457999999998852e-06, 4.4580000000127296e-06, 4.513999999997131e-06, 4.430999999999186e-06, 4.5000000000045e-06, 4.4720000000053606e-06, 4.471999999991483e-06, 4.444000000006221e-06, 4.4720000000053606e-06, 4.457999999998852e-06, 4.4720000000053606e-06, 4.473000000004834e-06, 4.5000000000045e-06, 4.471999999991483e-06, 4.4720000000053606e-06, 4.458999999998325e-06, 4.473000000004834e-06, 4.514000000011009e-06, 4.473000000004834e-06, 4.5000000000045e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.471999999991483e-06, 4.4720000000053606e-06, 4.52800000000364e-06, 4.4720000000053606e-06, 4.4720000000053606e-06, 4.4729999999909564e-06, 4.486999999997465e-06, 4.5000000000045e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.443999999992343e-06, 4.4720000000053606e-06, 4.485999999997992e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.948" endtime="20201115 22:01:48.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.943" endtime="20201115 22:01:48.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.952" endtime="20201115 22:01:48.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.955" endtime="20201115 22:01:48.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.954" endtime="20201115 22:01:48.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.950" endtime="20201115 22:01:48.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.587" endtime="20201115 22:01:48.976"></status>
</kw>
<msg timestamp="20201115 22:01:48.976" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.984" endtime="20201115 22:01:49.000"></status>
</kw>
<msg timestamp="20201115 22:01:49.000" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.983" endtime="20201115 22:01:49.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.003" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.001" endtime="20201115 22:01:49.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.004" endtime="20201115 22:01:49.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.980" endtime="20201115 22:01:49.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.978" endtime="20201115 22:01:49.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.013" endtime="20201115 22:01:49.297"></status>
</kw>
<msg timestamp="20201115 22:01:49.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019923125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.011" endtime="20201115 22:01:49.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019923125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.301" endtime="20201115 22:01:49.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.310" endtime="20201115 22:01:49.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.009" endtime="20201115 22:01:49.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.007" endtime="20201115 22:01:49.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.316" level="INFO">${RESULT} = [{'time': 0.019923125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.019938097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:49.313" endtime="20201115 22:01:49.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.331" level="INFO">${OVERHEAD} = {'diff': [4.443999999999282e-06, 4.485999999997992e-06, 4.486000000001461e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.445000000002225e-06, 4.486000000001461e-06, 4.486999999997465e-06, 4.4870...</msg>
<status status="PASS" starttime="20201115 22:01:49.317" endtime="20201115 22:01:49.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.336" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:49.335" endtime="20201115 22:01:49.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.338" level="INFO">VALUE: [4.443999999999282e-06, 4.485999999997992e-06, 4.486000000001461e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.445000000002225e-06, 4.486000000001461e-06, 4.486999999997465e-06, 4.487000000000935e-06, 4.458999999998325e-06, 4.457999999998852e-06, 4.472000000001891e-06, 4.514000000000601e-06, 4.431000000002655e-06, 4.486999999997465e-06, 4.486000000001461e-06, 4.472000000001891e-06, 4.458999999998325e-06, 4.472000000001891e-06, 4.486000000001461e-06, 4.458000000002321e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.486000000001461e-06, 4.472999999997895e-06, 4.500000000001031e-06, 4.486999999997465e-06, 4.472999999997895e-06, 4.500000000001031e-06, 4.4999999999975615e-06, 4.471999999998422e-06, 4.500000000001031e-06, 4.472000000001891e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.473000000001365e-06, 4.514000000000601e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.500000000001031e-06, 4.443999999999282e-06, 4.514000000000601e-06, 4.485999999997992e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.472000000001891e-06, 4.472000000001891e-06, 4.473000000001365e-06, 4.500000000001031e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.337" endtime="20201115 22:01:49.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.332" endtime="20201115 22:01:49.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.341" endtime="20201115 22:01:49.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.345" endtime="20201115 22:01:49.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.343" endtime="20201115 22:01:49.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.340" endtime="20201115 22:01:49.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.977" endtime="20201115 22:01:49.365"></status>
</kw>
<msg timestamp="20201115 22:01:49.366" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.373" endtime="20201115 22:01:49.391"></status>
</kw>
<msg timestamp="20201115 22:01:49.392" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.372" endtime="20201115 22:01:49.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.394" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.393" endtime="20201115 22:01:49.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.395" endtime="20201115 22:01:49.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.369" endtime="20201115 22:01:49.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.368" endtime="20201115 22:01:49.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.405" endtime="20201115 22:01:49.689"></status>
</kw>
<msg timestamp="20201115 22:01:49.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022532028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:49.403" endtime="20201115 22:01:49.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022532028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:49.694" endtime="20201115 22:01:49.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.702" endtime="20201115 22:01:49.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.400" endtime="20201115 22:01:49.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.399" endtime="20201115 22:01:49.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.709" level="INFO">${RESULT} = [{'time': 0.0225365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.022547375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:49.705" endtime="20201115 22:01:49.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.722" level="INFO">${OVERHEAD} = {'diff': [4.472000000001891e-06, 4.458000000002321e-06, 4.443999999999282e-06, 4.471999999998422e-06, 4.458000000002321e-06, 4.443999999999282e-06, 4.486000000001461e-06, 4.4999999999975615e-06, 4.541...</msg>
<status status="PASS" starttime="20201115 22:01:49.710" endtime="20201115 22:01:49.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.726" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:49.725" endtime="20201115 22:01:49.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.729" level="INFO">VALUE: [4.472000000001891e-06, 4.458000000002321e-06, 4.443999999999282e-06, 4.471999999998422e-06, 4.458000000002321e-06, 4.443999999999282e-06, 4.486000000001461e-06, 4.4999999999975615e-06, 4.541999999999741e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.445000000002225e-06, 4.471999999998422e-06, 4.459000000001795e-06, 4.459000000001795e-06, 4.458999999998325e-06, 4.459000000001795e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.486000000001461e-06, 4.500000000001031e-06, 4.471999999998422e-06, 4.486000000001461e-06, 4.471999999998422e-06, 4.4999999999975615e-06, 4.471999999998422e-06, 4.471999999998422e-06, 4.4449999999987555e-06, 4.486000000001461e-06, 4.486000000001461e-06, 4.500000000001031e-06, 4.471999999998422e-06, 4.472000000001891e-06, 4.472000000001891e-06, 4.486000000001461e-06, 4.486000000001461e-06, 4.471999999998422e-06, 4.459000000001795e-06, 4.500000000001031e-06, 4.444000000002751e-06, 4.473000000001365e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.389000000000476e-06, 4.472000000001891e-06, 4.472000000001891e-06, 4.486000000001461e-06, 4.528000000000171e-06, 4.472000000001891e-06, 4.472000000001891e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.727" endtime="20201115 22:01:49.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.723" endtime="20201115 22:01:49.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.732" endtime="20201115 22:01:49.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.735" endtime="20201115 22:01:49.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.734" endtime="20201115 22:01:49.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.730" endtime="20201115 22:01:49.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.366" endtime="20201115 22:01:49.756"></status>
</kw>
<msg timestamp="20201115 22:01:49.756" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.764" endtime="20201115 22:01:49.778"></status>
</kw>
<msg timestamp="20201115 22:01:49.778" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.762" endtime="20201115 22:01:49.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.781" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.779" endtime="20201115 22:01:49.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.782" endtime="20201115 22:01:49.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.760" endtime="20201115 22:01:49.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.758" endtime="20201115 22:01:49.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.791" endtime="20201115 22:01:50.077"></status>
</kw>
<msg timestamp="20201115 22:01:50.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018790417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018794875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.790" endtime="20201115 22:01:50.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018790417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018794875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.082" endtime="20201115 22:01:50.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.090" endtime="20201115 22:01:50.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.787" endtime="20201115 22:01:50.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.785" endtime="20201115 22:01:50.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.096" level="INFO">${RESULT} = [{'time': 0.018794875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.018803264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.093" endtime="20201115 22:01:50.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.110" level="INFO">${OVERHEAD} = {'diff': [4.457999999998852e-06, 4.4449999999987555e-06, 4.514000000000601e-06, 4.473000000001365e-06, 4.541999999999741e-06, 4.486000000001461e-06, 4.513999999997131e-06, 4.472999999997895e-06, 4.541...</msg>
<status status="PASS" starttime="20201115 22:01:50.098" endtime="20201115 22:01:50.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.114" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:50.113" endtime="20201115 22:01:50.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.117" level="INFO">VALUE: [4.457999999998852e-06, 4.4449999999987555e-06, 4.514000000000601e-06, 4.473000000001365e-06, 4.541999999999741e-06, 4.486000000001461e-06, 4.513999999997131e-06, 4.472999999997895e-06, 4.541999999999741e-06, 4.486000000001461e-06, 4.471999999998422e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.473000000001365e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.457999999998852e-06, 4.485999999997992e-06, 4.486000000001461e-06, 4.500000000001031e-06, 4.471999999998422e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.486000000001461e-06, 4.486000000001461e-06, 4.500000000001031e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.486000000001461e-06, 4.472999999997895e-06, 4.472000000001891e-06, 4.473000000001365e-06, 4.485999999997992e-06, 4.514000000000601e-06, 4.472000000001891e-06, 4.443999999999282e-06, 4.443999999999282e-06, 4.528000000000171e-06, 4.416999999999616e-06, 4.486000000001461e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.486999999997465e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.486000000001461e-06, 4.485999999997992e-06, 4.471999999998422e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.115" endtime="20201115 22:01:50.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.111" endtime="20201115 22:01:50.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.120" endtime="20201115 22:01:50.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.123" endtime="20201115 22:01:50.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.122" endtime="20201115 22:01:50.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.118" endtime="20201115 22:01:50.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.757" endtime="20201115 22:01:50.144"></status>
</kw>
<msg timestamp="20201115 22:01:50.144" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.152" endtime="20201115 22:01:50.169"></status>
</kw>
<msg timestamp="20201115 22:01:50.170" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.150" endtime="20201115 22:01:50.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.173" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.171" endtime="20201115 22:01:50.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.174" endtime="20201115 22:01:50.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.148" endtime="20201115 22:01:50.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.146" endtime="20201115 22:01:50.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.183" endtime="20201115 22:01:50.469"></status>
</kw>
<msg timestamp="20201115 22:01:50.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.181" endtime="20201115 22:01:50.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.473" endtime="20201115 22:01:50.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.481" endtime="20201115 22:01:50.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.179" endtime="20201115 22:01:50.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.177" endtime="20201115 22:01:50.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.487" level="INFO">${RESULT} = [{'time': 0.022819542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}, {'time': 0.022828903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.484" endtime="20201115 22:01:50.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.501" level="INFO">${OVERHEAD} = {'diff': [4.473000000001365e-06, 4.500000000001031e-06, 4.485999999997992e-06, 4.486000000001461e-06, 4.457999999998852e-06, 4.486000000001461e-06, 4.514000000000601e-06, 4.500000000001031e-06, 4.4859...</msg>
<status status="PASS" starttime="20201115 22:01:50.488" endtime="20201115 22:01:50.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.505" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:50.504" endtime="20201115 22:01:50.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.508" level="INFO">VALUE: [4.473000000001365e-06, 4.500000000001031e-06, 4.485999999997992e-06, 4.486000000001461e-06, 4.457999999998852e-06, 4.486000000001461e-06, 4.514000000000601e-06, 4.500000000001031e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.500000000001031e-06, 4.443999999999282e-06, 4.472000000001891e-06, 4.486000000001461e-06, 4.500000000001031e-06, 4.472000000001891e-06, 4.4999999999975615e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.471999999998422e-06, 4.514000000000601e-06, 4.471999999998422e-06, 4.472999999997895e-06, 4.486000000001461e-06, 4.514000000000601e-06, 4.486000000001461e-06, 4.473000000001365e-06, 4.471999999998422e-06, 4.472999999997895e-06, 4.500000000001031e-06, 4.486000000001461e-06, 4.5699999999988805e-06, 4.4999999999975615e-06, 4.527000000000697e-06, 4.486000000001461e-06, 4.486000000001461e-06, 4.458999999998325e-06, 4.472000000001891e-06, 4.500000000001031e-06, 4.445000000002225e-06, 4.471999999998422e-06, 4.472000000001891e-06, 4.457999999998852e-06, 4.4449999999987555e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.458999999998325e-06, 4.416000000000142e-06, 4.514000000000601e-06, 4.486000000001461e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.506" endtime="20201115 22:01:50.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.502" endtime="20201115 22:01:50.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.511" endtime="20201115 22:01:50.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.514" endtime="20201115 22:01:50.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.512" endtime="20201115 22:01:50.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.509" endtime="20201115 22:01:50.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.145" endtime="20201115 22:01:50.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.585" endtime="20201115 22:01:50.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.540" endtime="20201115 22:01:50.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.538" endtime="20201115 22:01:50.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.537" endtime="20201115 22:01:50.560"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:48.513" endtime="20201115 22:01:50.561" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.570" endtime="20201115 22:01:50.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.568" endtime="20201115 22:01:50.590"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.603" endtime="20201115 22:01:50.623"></status>
</kw>
<msg timestamp="20201115 22:01:50.624" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.601" endtime="20201115 22:01:50.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.626" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.625" endtime="20201115 22:01:50.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.629" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:50.627" endtime="20201115 22:01:50.629"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:50.599" endtime="20201115 22:01:50.630"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:50.596" endtime="20201115 22:01:50.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.595" endtime="20201115 22:01:50.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:50.635" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:50.634" endtime="20201115 22:01:50.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.632" endtime="20201115 22:01:50.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.594" endtime="20201115 22:01:50.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.593" endtime="20201115 22:01:50.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.636" endtime="20201115 22:01:50.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.592" endtime="20201115 22:01:50.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.591" endtime="20201115 22:01:50.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.567" endtime="20201115 22:01:50.639"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.643" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.652" endtime="20201115 22:01:50.668"></status>
</kw>
<msg timestamp="20201115 22:01:50.668" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.650" endtime="20201115 22:01:50.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.669" endtime="20201115 22:01:50.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.672" endtime="20201115 22:01:50.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.647" endtime="20201115 22:01:50.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.645" endtime="20201115 22:01:50.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.682" endtime="20201115 22:01:50.969"></status>
</kw>
<msg timestamp="20201115 22:01:50.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074215139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074223917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.680" endtime="20201115 22:01:50.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074215139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074223917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.973" endtime="20201115 22:01:50.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.982" endtime="20201115 22:01:50.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.677" endtime="20201115 22:01:50.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.675" endtime="20201115 22:01:50.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.989" level="INFO">${RESULT} = [{'time': 0.074223917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.074312764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.985" endtime="20201115 22:01:50.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.004" level="INFO">${OVERHEAD} = {'diff': [8.778000000000952e-06, 8.875000000005406e-06, 8.832999999999758e-06, 8.819999999992723e-06, 8.818999999993249e-06, 8.79200000000746e-06, 8.790999999994109e-06, 8.778000000000952e-06, 8.79100...</msg>
<status status="PASS" starttime="20201115 22:01:50.990" endtime="20201115 22:01:51.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.009" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:51.008" endtime="20201115 22:01:51.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.011" level="INFO">VALUE: [8.778000000000952e-06, 8.875000000005406e-06, 8.832999999999758e-06, 8.819999999992723e-06, 8.818999999993249e-06, 8.79200000000746e-06, 8.790999999994109e-06, 8.778000000000952e-06, 8.791000000007987e-06, 8.833999999999231e-06, 8.806000000000092e-06, 8.875000000005406e-06, 8.805000000000618e-06, 8.819000000007127e-06, 8.722999999988268e-06, 8.8200000000066e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.736000000009181e-06, 8.791000000007987e-06, 8.777999999987074e-06, 8.735999999995303e-06, 8.791000000007987e-06, 8.819000000007127e-06, 8.806000000000092e-06, 8.8200000000066e-06, 8.79200000000746e-06, 8.763999999994443e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.818999999993249e-06, 8.778000000000952e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.819999999992723e-06, 8.833999999999231e-06, 8.805000000000618e-06, 8.819000000007127e-06, 8.818999999993249e-06, 8.79200000000746e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.818999999993249e-06, 8.79200000000746e-06, 8.819000000007127e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.010" endtime="20201115 22:01:51.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.005" endtime="20201115 22:01:51.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.014" endtime="20201115 22:01:51.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.018" endtime="20201115 22:01:51.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.016" endtime="20201115 22:01:51.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.013" endtime="20201115 22:01:51.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.643" endtime="20201115 22:01:51.038"></status>
</kw>
<msg timestamp="20201115 22:01:51.039" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.047" endtime="20201115 22:01:51.064"></status>
</kw>
<msg timestamp="20201115 22:01:51.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.046" endtime="20201115 22:01:51.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.067" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.065" endtime="20201115 22:01:51.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.068" endtime="20201115 22:01:51.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.043" endtime="20201115 22:01:51.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.041" endtime="20201115 22:01:51.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.077" endtime="20201115 22:01:51.364"></status>
</kw>
<msg timestamp="20201115 22:01:51.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023210069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023218931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.076" endtime="20201115 22:01:51.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023210069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023218931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.368" endtime="20201115 22:01:51.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.376" endtime="20201115 22:01:51.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.073" endtime="20201115 22:01:51.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.072" endtime="20201115 22:01:51.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.383" level="INFO">${RESULT} = [{'time': 0.023218931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.86200000000184e-06, 'source_diff': 8.86200000000184e-06}, {'time': 0.023306486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:51.380" endtime="20201115 22:01:51.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.398" level="INFO">${OVERHEAD} = {'diff': [8.86200000000184e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.722000000002672e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.80600...</msg>
<status status="PASS" starttime="20201115 22:01:51.384" endtime="20201115 22:01:51.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.403" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:51.402" endtime="20201115 22:01:51.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.405" level="INFO">VALUE: [8.86200000000184e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.722000000002672e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.832999999999758e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.790999999997579e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.791999999997052e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.820000000003131e-06, 8.722000000002672e-06, 8.833000000003227e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.736000000002242e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.404" endtime="20201115 22:01:51.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.399" endtime="20201115 22:01:51.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.408" endtime="20201115 22:01:51.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.412" endtime="20201115 22:01:51.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.410" endtime="20201115 22:01:51.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.406" endtime="20201115 22:01:51.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.039" endtime="20201115 22:01:51.432"></status>
</kw>
<msg timestamp="20201115 22:01:51.433" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.441" endtime="20201115 22:01:51.455"></status>
</kw>
<msg timestamp="20201115 22:01:51.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.440" endtime="20201115 22:01:51.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.459" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.457" endtime="20201115 22:01:51.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.460" endtime="20201115 22:01:51.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.437" endtime="20201115 22:01:51.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.435" endtime="20201115 22:01:51.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.469" endtime="20201115 22:01:51.755"></status>
</kw>
<msg timestamp="20201115 22:01:51.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021188431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.467" endtime="20201115 22:01:51.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021188431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.759" endtime="20201115 22:01:51.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.767" endtime="20201115 22:01:51.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.465" endtime="20201115 22:01:51.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.463" endtime="20201115 22:01:51.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.774" level="INFO">${RESULT} = [{'time': 0.021188431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.84800000000227e-06, 'source_diff': 8.84800000000227e-06}, {'time': 0.021272264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:51.770" endtime="20201115 22:01:51.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.788" level="INFO">${OVERHEAD} = {'diff': [8.84800000000227e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.80600...</msg>
<status status="PASS" starttime="20201115 22:01:51.775" endtime="20201115 22:01:51.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.792" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:51.791" endtime="20201115 22:01:51.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.795" level="INFO">VALUE: [8.84800000000227e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.790999999997579e-06, 8.778000000000952e-06, 8.791000000001048e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.777000000001478e-06, 8.820000000003131e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.875000000001937e-06, 8.806000000000092e-06, 8.833999999999231e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.804999999997148e-06, 8.819000000000188e-06, 8.749999999998342e-06, 8.804999999997148e-06, 8.833999999999231e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.776999999998009e-06, 8.805000000000618e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.794" endtime="20201115 22:01:51.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.789" endtime="20201115 22:01:51.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.798" endtime="20201115 22:01:51.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.801" endtime="20201115 22:01:51.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.800" endtime="20201115 22:01:51.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.796" endtime="20201115 22:01:51.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.433" endtime="20201115 22:01:51.822"></status>
</kw>
<msg timestamp="20201115 22:01:51.822" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.832" endtime="20201115 22:01:51.848"></status>
</kw>
<msg timestamp="20201115 22:01:51.849" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.830" endtime="20201115 22:01:51.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.850" endtime="20201115 22:01:51.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.852" endtime="20201115 22:01:51.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.828" endtime="20201115 22:01:51.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.825" endtime="20201115 22:01:51.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.861" endtime="20201115 22:01:52.148"></status>
</kw>
<msg timestamp="20201115 22:01:52.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023222167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023230972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.860" endtime="20201115 22:01:52.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023222167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023230972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.152" endtime="20201115 22:01:52.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.160" endtime="20201115 22:01:52.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.857" endtime="20201115 22:01:52.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.855" endtime="20201115 22:01:52.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.167" level="INFO">${RESULT} = [{'time': 0.023230972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.023319222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.163" endtime="20201115 22:01:52.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.180" level="INFO">${OVERHEAD} = {'diff': [8.805000000000618e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.889000000001507e-06, 8.8050...</msg>
<status status="PASS" starttime="20201115 22:01:52.168" endtime="20201115 22:01:52.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.184" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:52.183" endtime="20201115 22:01:52.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.187" level="INFO">VALUE: [8.805000000000618e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.889000000001507e-06, 8.805000000000618e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.805999999996622e-06, 8.778000000000952e-06, 8.819999999999661e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.804999999997148e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.818999999996718e-06, 8.790999999997579e-06, 8.819000000000188e-06, 8.804999999997148e-06, 8.805000000000618e-06, 8.735999999998773e-06, 8.860999999998898e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.185" endtime="20201115 22:01:52.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.181" endtime="20201115 22:01:52.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.190" endtime="20201115 22:01:52.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.193" endtime="20201115 22:01:52.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.192" endtime="20201115 22:01:52.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.188" endtime="20201115 22:01:52.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.823" endtime="20201115 22:01:52.214"></status>
</kw>
<msg timestamp="20201115 22:01:52.215" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.224" endtime="20201115 22:01:52.240"></status>
</kw>
<msg timestamp="20201115 22:01:52.240" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.222" endtime="20201115 22:01:52.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.241" endtime="20201115 22:01:52.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.244" endtime="20201115 22:01:52.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.219" endtime="20201115 22:01:52.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.217" endtime="20201115 22:01:52.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.253" endtime="20201115 22:01:52.540"></status>
</kw>
<msg timestamp="20201115 22:01:52.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022842903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.251" endtime="20201115 22:01:52.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022842903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.544" endtime="20201115 22:01:52.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.552" endtime="20201115 22:01:52.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.249" endtime="20201115 22:01:52.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.247" endtime="20201115 22:01:52.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.559" level="INFO">${RESULT} = [{'time': 0.022851694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.790999999997579e-06, 'source_diff': 8.790999999997579e-06}, {'time': 0.022936681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.555" endtime="20201115 22:01:52.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.572" level="INFO">${OVERHEAD} = {'diff': [8.790999999997579e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.7910...</msg>
<status status="PASS" starttime="20201115 22:01:52.560" endtime="20201115 22:01:52.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.577" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:52.576" endtime="20201115 22:01:52.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.579" level="INFO">VALUE: [8.790999999997579e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.833999999999231e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.722999999998676e-06, 8.791999999997052e-06, 8.804999999997148e-06, 8.778000000000952e-06, 8.833999999999231e-06, 8.777999999997482e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.860999999998898e-06, 8.778000000000952e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.777000000001478e-06, 8.819999999999661e-06, 8.763000000001908e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.578" endtime="20201115 22:01:52.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.573" endtime="20201115 22:01:52.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.583" endtime="20201115 22:01:52.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.586" endtime="20201115 22:01:52.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.585" endtime="20201115 22:01:52.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.581" endtime="20201115 22:01:52.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.215" endtime="20201115 22:01:52.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.642" endtime="20201115 22:01:52.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.641" endtime="20201115 22:01:52.607"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.609" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.618" endtime="20201115 22:01:52.641"></status>
</kw>
<msg timestamp="20201115 22:01:52.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.617" endtime="20201115 22:01:52.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.643" endtime="20201115 22:01:52.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.645" endtime="20201115 22:01:52.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.614" endtime="20201115 22:01:52.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.612" endtime="20201115 22:01:52.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.654" endtime="20201115 22:01:52.940"></status>
</kw>
<msg timestamp="20201115 22:01:52.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027287319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027296028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.652" endtime="20201115 22:01:52.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027287319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027296028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.945" endtime="20201115 22:01:52.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.953" endtime="20201115 22:01:52.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.650" endtime="20201115 22:01:52.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.648" endtime="20201115 22:01:52.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.959" level="INFO">${RESULT} = [{'time': 0.027296028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.027388458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.956" endtime="20201115 22:01:52.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.973" level="INFO">${OVERHEAD} = {'diff': [8.708999999999106e-06, 8.611000000002117e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.665999999997454e-06, 8.7640...</msg>
<status status="PASS" starttime="20201115 22:01:52.960" endtime="20201115 22:01:52.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.977" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:52.976" endtime="20201115 22:01:52.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.980" level="INFO">VALUE: [8.708999999999106e-06, 8.611000000002117e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.665999999997454e-06, 8.764000000001382e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.582999999999508e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.665999999997454e-06, 8.597000000002547e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.651999999997884e-06, 8.653000000000827e-06, 8.680000000003962e-06, 8.679999999997023e-06, 8.694000000003532e-06, 8.665999999997454e-06, 8.680999999996497e-06, 8.679999999997023e-06, 8.707999999996163e-06, 8.653000000004296e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.979" endtime="20201115 22:01:52.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.974" endtime="20201115 22:01:52.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.984" endtime="20201115 22:01:52.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.987" endtime="20201115 22:01:53.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.985" endtime="20201115 22:01:53.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.982" endtime="20201115 22:01:53.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.610" endtime="20201115 22:01:53.008"></status>
</kw>
<msg timestamp="20201115 22:01:53.008" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.017" endtime="20201115 22:01:53.034"></status>
</kw>
<msg timestamp="20201115 22:01:53.034" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.015" endtime="20201115 22:01:53.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.037" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.036" endtime="20201115 22:01:53.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.038" endtime="20201115 22:01:53.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.013" endtime="20201115 22:01:53.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.011" endtime="20201115 22:01:53.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.047" endtime="20201115 22:01:53.334"></status>
</kw>
<msg timestamp="20201115 22:01:53.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023432556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023441222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.046" endtime="20201115 22:01:53.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023432556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023441222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.338" endtime="20201115 22:01:53.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.347" endtime="20201115 22:01:53.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.043" endtime="20201115 22:01:53.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.041" endtime="20201115 22:01:53.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.353" level="INFO">${RESULT} = [{'time': 0.023441222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.666000000000923e-06, 'source_diff': 8.666000000000923e-06}, {'time': 0.023536139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:53.350" endtime="20201115 22:01:53.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.367" level="INFO">${OVERHEAD} = {'diff': [8.666000000000923e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.6799...</msg>
<status status="PASS" starttime="20201115 22:01:53.354" endtime="20201115 22:01:53.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.372" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:53.371" endtime="20201115 22:01:53.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.374" level="INFO">VALUE: [8.666000000000923e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.679999999997023e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.651999999997884e-06, 8.59800000000202e-06, 8.694999999999536e-06, 8.639000000001257e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.373" endtime="20201115 22:01:53.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.368" endtime="20201115 22:01:53.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.377" endtime="20201115 22:01:53.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.381" endtime="20201115 22:01:53.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.380" endtime="20201115 22:01:53.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.376" endtime="20201115 22:01:53.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.008" endtime="20201115 22:01:53.402"></status>
</kw>
<msg timestamp="20201115 22:01:53.402" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.411" endtime="20201115 22:01:53.426"></status>
</kw>
<msg timestamp="20201115 22:01:53.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.409" endtime="20201115 22:01:53.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.427" endtime="20201115 22:01:53.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.430" endtime="20201115 22:01:53.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.407" endtime="20201115 22:01:53.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.404" endtime="20201115 22:01:53.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.439" endtime="20201115 22:01:53.725"></status>
</kw>
<msg timestamp="20201115 22:01:53.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021201875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021210514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.437" endtime="20201115 22:01:53.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021201875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021210514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.729" endtime="20201115 22:01:53.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.738" endtime="20201115 22:01:53.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.435" endtime="20201115 22:01:53.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.433" endtime="20201115 22:01:53.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.744" level="INFO">${RESULT} = [{'time': 0.021210514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.021304903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:53.741" endtime="20201115 22:01:53.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.758" level="INFO">${OVERHEAD} = {'diff': [8.639000000001257e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.597999999998551e-06, 8.624999999998217e-06, 8.694999999999536e-06, 8.6809...</msg>
<status status="PASS" starttime="20201115 22:01:53.746" endtime="20201115 22:01:53.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.763" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:53.762" endtime="20201115 22:01:53.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.765" level="INFO">VALUE: [8.639000000001257e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.597999999998551e-06, 8.624999999998217e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.651999999997884e-06, 8.666999999996927e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.652000000001353e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.625000000001687e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.665999999997454e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.666999999996927e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.679999999997023e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.695000000003006e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.764" endtime="20201115 22:01:53.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.759" endtime="20201115 22:01:53.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.768" endtime="20201115 22:01:53.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.772" endtime="20201115 22:01:53.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.770" endtime="20201115 22:01:53.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.766" endtime="20201115 22:01:53.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.402" endtime="20201115 22:01:53.792"></status>
</kw>
<msg timestamp="20201115 22:01:53.793" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.801" endtime="20201115 22:01:53.817"></status>
</kw>
<msg timestamp="20201115 22:01:53.818" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.800" endtime="20201115 22:01:53.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.820" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.819" endtime="20201115 22:01:53.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.821" endtime="20201115 22:01:53.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.797" endtime="20201115 22:01:53.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.795" endtime="20201115 22:01:53.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.830" endtime="20201115 22:01:54.118"></status>
</kw>
<msg timestamp="20201115 22:01:54.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.829" endtime="20201115 22:01:54.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.122" endtime="20201115 22:01:54.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.164" endtime="20201115 22:01:54.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.826" endtime="20201115 22:01:54.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.824" endtime="20201115 22:01:54.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.171" level="INFO">${RESULT} = [{'time': 0.022448778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.022547111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.168" endtime="20201115 22:01:54.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.185" level="INFO">${OVERHEAD} = {'diff': [8.638999999997787e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.651999999997884e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.6949...</msg>
<status status="PASS" starttime="20201115 22:01:54.172" endtime="20201115 22:01:54.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.189" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:54.188" endtime="20201115 22:01:54.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.192" level="INFO">VALUE: [8.638999999997787e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.651999999997884e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.749999999998342e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.638999999997787e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.624999999998217e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.763999999997912e-06, 8.722000000002672e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.190" endtime="20201115 22:01:54.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.185" endtime="20201115 22:01:54.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.195" endtime="20201115 22:01:54.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.198" endtime="20201115 22:01:54.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.196" endtime="20201115 22:01:54.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.193" endtime="20201115 22:01:54.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.793" endtime="20201115 22:01:54.219"></status>
</kw>
<msg timestamp="20201115 22:01:54.219" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.228" endtime="20201115 22:01:54.245"></status>
</kw>
<msg timestamp="20201115 22:01:54.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.226" endtime="20201115 22:01:54.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.246" endtime="20201115 22:01:54.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.249" endtime="20201115 22:01:54.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.224" endtime="20201115 22:01:54.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.221" endtime="20201115 22:01:54.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.258" endtime="20201115 22:01:54.547"></status>
</kw>
<msg timestamp="20201115 22:01:54.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02312675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:54.256" endtime="20201115 22:01:54.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02312675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:54.556" endtime="20201115 22:01:54.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.575" endtime="20201115 22:01:54.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.254" endtime="20201115 22:01:54.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.252" endtime="20201115 22:01:54.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.590" level="INFO">${RESULT} = [{'time': 0.02312675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.023222889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:54.582" endtime="20201115 22:01:54.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.620" level="INFO">${OVERHEAD} = {'diff': [8.680999999999967e-06, 8.596999999999078e-06, 8.638999999997787e-06, 8.652999999997357e-06, 8.680000000000493e-06, 8.596999999999078e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.6800...</msg>
<status status="PASS" starttime="20201115 22:01:54.592" endtime="20201115 22:01:54.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.630" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:54.628" endtime="20201115 22:01:54.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.635" level="INFO">VALUE: [8.680999999999967e-06, 8.596999999999078e-06, 8.638999999997787e-06, 8.652999999997357e-06, 8.680000000000493e-06, 8.596999999999078e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.665999999997454e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.708999999999106e-06, 8.679999999997023e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.722999999998676e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.693999999996593e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.666999999996927e-06, 8.680000000000493e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.632" endtime="20201115 22:01:54.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.622" endtime="20201115 22:01:54.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.640" endtime="20201115 22:01:54.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.644" endtime="20201115 22:01:54.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.642" endtime="20201115 22:01:54.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.638" endtime="20201115 22:01:54.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.219" endtime="20201115 22:01:54.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.608" endtime="20201115 22:01:54.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.608" endtime="20201115 22:01:54.665"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.667" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.676" endtime="20201115 22:01:54.696"></status>
</kw>
<msg timestamp="20201115 22:01:54.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.674" endtime="20201115 22:01:54.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.698" endtime="20201115 22:01:54.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.700" endtime="20201115 22:01:54.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.672" endtime="20201115 22:01:54.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.670" endtime="20201115 22:01:54.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.710" endtime="20201115 22:01:54.996"></status>
</kw>
<msg timestamp="20201115 22:01:54.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024488694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024498236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.708" endtime="20201115 22:01:54.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024488694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024498236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.000" endtime="20201115 22:01:55.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.008" endtime="20201115 22:01:55.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.705" endtime="20201115 22:01:55.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.703" endtime="20201115 22:01:55.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.015" level="INFO">${RESULT} = [{'time': 0.024498236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.024600028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.012" endtime="20201115 22:01:55.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.028" level="INFO">${OVERHEAD} = {'diff': [9.542000000001272e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.555999999997372e-06, 9.5139...</msg>
<status status="PASS" starttime="20201115 22:01:55.016" endtime="20201115 22:01:55.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.033" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:55.032" endtime="20201115 22:01:55.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.035" level="INFO">VALUE: [9.542000000001272e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.555999999997372e-06, 9.513999999998662e-06, 9.526999999998759e-06, 9.500000000002562e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.569000000000938e-06, 9.485999999999523e-06, 9.554999999997899e-06, 9.540999999998329e-06, 9.583000000000508e-06, 9.554999999997899e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.540999999998329e-06, 9.569000000000938e-06, 9.526999999998759e-06, 9.499999999999093e-06, 9.554999999997899e-06, 9.556000000000842e-06, 9.554999999997899e-06, 9.541000000001798e-06, 9.556000000000842e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.569000000000938e-06, 9.528000000001702e-06, 9.485999999999523e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.555000000001368e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.540999999998329e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.034" endtime="20201115 22:01:55.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.029" endtime="20201115 22:01:55.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.038" endtime="20201115 22:01:55.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.042" endtime="20201115 22:01:55.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.040" endtime="20201115 22:01:55.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.037" endtime="20201115 22:01:55.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.668" endtime="20201115 22:01:55.063"></status>
</kw>
<msg timestamp="20201115 22:01:55.063" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.072" endtime="20201115 22:01:55.088"></status>
</kw>
<msg timestamp="20201115 22:01:55.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.070" endtime="20201115 22:01:55.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.091" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.090" endtime="20201115 22:01:55.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.092" endtime="20201115 22:01:55.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.068" endtime="20201115 22:01:55.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.065" endtime="20201115 22:01:55.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.101" endtime="20201115 22:01:55.389"></status>
</kw>
<msg timestamp="20201115 22:01:55.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023334514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023344028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.100" endtime="20201115 22:01:55.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023334514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023344028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.393" endtime="20201115 22:01:55.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.401" endtime="20201115 22:01:55.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.097" endtime="20201115 22:01:55.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.096" endtime="20201115 22:01:55.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.408" level="INFO">${RESULT} = [{'time': 0.023344028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.023450417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.404" endtime="20201115 22:01:55.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.421" level="INFO">${OVERHEAD} = {'diff': [9.513999999998662e-06, 9.485999999999523e-06, 9.540999999998329e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.527000000002228e-06, 9.5559...</msg>
<status status="PASS" starttime="20201115 22:01:55.409" endtime="20201115 22:01:55.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.426" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:55.425" endtime="20201115 22:01:55.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.428" level="INFO">VALUE: [9.513999999998662e-06, 9.485999999999523e-06, 9.540999999998329e-06, 9.542000000001272e-06, 9.555000000001368e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.527000000002228e-06, 9.555999999997372e-06, 9.556000000000842e-06, 9.527999999998232e-06, 9.500000000002562e-06, 9.541999999997802e-06, 9.540999999998329e-06, 9.542000000001272e-06, 9.541000000001798e-06, 9.597000000000078e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.555999999997372e-06, 9.555000000001368e-06, 9.486999999998996e-06, 9.485999999999523e-06, 9.500000000002562e-06, 9.499999999999093e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.513000000002658e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.555999999997372e-06, 9.541999999997802e-06, 9.540999999998329e-06, 9.611999999999121e-06, 9.555000000001368e-06, 9.527000000002228e-06, 9.430000000001243e-06, 9.554999999997899e-06, 9.512999999999189e-06, 9.513999999998662e-06, 9.597000000000078e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.427" endtime="20201115 22:01:55.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.422" endtime="20201115 22:01:55.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.431" endtime="20201115 22:01:55.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.435" endtime="20201115 22:01:55.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.433" endtime="20201115 22:01:55.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.430" endtime="20201115 22:01:55.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.063" endtime="20201115 22:01:55.456"></status>
</kw>
<msg timestamp="20201115 22:01:55.456" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.465" endtime="20201115 22:01:55.481"></status>
</kw>
<msg timestamp="20201115 22:01:55.481" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.463" endtime="20201115 22:01:55.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.482" endtime="20201115 22:01:55.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.485" endtime="20201115 22:01:55.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.461" endtime="20201115 22:01:55.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.459" endtime="20201115 22:01:55.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.494" endtime="20201115 22:01:55.782"></status>
</kw>
<msg timestamp="20201115 22:01:55.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.492" endtime="20201115 22:01:55.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.786" endtime="20201115 22:01:55.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.794" endtime="20201115 22:01:55.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.490" endtime="20201115 22:01:55.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.488" endtime="20201115 22:01:55.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.801" level="INFO">${RESULT} = [{'time': 0.022234958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.022342681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.798" endtime="20201115 22:01:55.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.814" level="INFO">${OVERHEAD} = {'diff': [9.485999999999523e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.541000000001798e-06, 9.528000000001702e-06, 9.487000000002466e-06, 9.528000000001702e-06, 9.5140...</msg>
<status status="PASS" starttime="20201115 22:01:55.802" endtime="20201115 22:01:55.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.819" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:55.818" endtime="20201115 22:01:55.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.821" level="INFO">VALUE: [9.485999999999523e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.541000000001798e-06, 9.528000000001702e-06, 9.487000000002466e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.583000000000508e-06, 9.471999999999953e-06, 9.514000000002132e-06, 9.556000000000842e-06, 9.569000000000938e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.499999999999093e-06, 9.528000000001702e-06, 9.597000000000078e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.554999999997899e-06, 9.541999999997802e-06, 9.499999999999093e-06, 9.540999999998329e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.541000000001798e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.527999999998232e-06, 9.513000000002658e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.541999999997802e-06, 9.471999999999953e-06, 9.527999999998232e-06, 9.569000000000938e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.513000000002658e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.820" endtime="20201115 22:01:55.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.815" endtime="20201115 22:01:55.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.824" endtime="20201115 22:01:55.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.828" endtime="20201115 22:01:55.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.826" endtime="20201115 22:01:55.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.823" endtime="20201115 22:01:55.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.456" endtime="20201115 22:01:55.848"></status>
</kw>
<msg timestamp="20201115 22:01:55.849" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.858" endtime="20201115 22:01:55.872"></status>
</kw>
<msg timestamp="20201115 22:01:55.873" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.856" endtime="20201115 22:01:55.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.875" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.874" endtime="20201115 22:01:55.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.876" endtime="20201115 22:01:55.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.854" endtime="20201115 22:01:55.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.852" endtime="20201115 22:01:55.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.885" endtime="20201115 22:01:56.173"></status>
</kw>
<msg timestamp="20201115 22:01:56.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021155944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021165542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.884" endtime="20201115 22:01:56.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021155944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021165542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.177" endtime="20201115 22:01:56.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.185" endtime="20201115 22:01:56.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.881" endtime="20201115 22:01:56.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.879" endtime="20201115 22:01:56.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.192" level="INFO">${RESULT} = [{'time': 0.021165542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.021267028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.188" endtime="20201115 22:01:56.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.205" level="INFO">${OVERHEAD} = {'diff': [9.597999999999551e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.471999999999953e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.5140...</msg>
<status status="PASS" starttime="20201115 22:01:56.193" endtime="20201115 22:01:56.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.210" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:56.209" endtime="20201115 22:01:56.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.212" level="INFO">VALUE: [9.597999999999551e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.471999999999953e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.542000000001272e-06, 9.458000000000383e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.556000000000842e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.556000000000842e-06, 9.569000000000938e-06, 9.540999999998329e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.526999999998759e-06, 9.459000000003326e-06, 9.569000000000938e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.512999999999189e-06, 9.528000000001702e-06, 9.570000000000412e-06, 9.556000000000842e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.526999999998759e-06, 9.555000000001368e-06, 9.527000000002228e-06, 9.500000000002562e-06, 9.513999999998662e-06, 9.540999999998329e-06, 9.540999999998329e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.211" endtime="20201115 22:01:56.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.206" endtime="20201115 22:01:56.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.215" endtime="20201115 22:01:56.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.219" endtime="20201115 22:01:56.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.218" endtime="20201115 22:01:56.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.213" endtime="20201115 22:01:56.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.850" endtime="20201115 22:01:56.240"></status>
</kw>
<msg timestamp="20201115 22:01:56.240" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.249" endtime="20201115 22:01:56.264"></status>
</kw>
<msg timestamp="20201115 22:01:56.264" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.247" endtime="20201115 22:01:56.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.267" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.265" endtime="20201115 22:01:56.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.268" endtime="20201115 22:01:56.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.245" endtime="20201115 22:01:56.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.243" endtime="20201115 22:01:56.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.277" endtime="20201115 22:01:56.563"></status>
</kw>
<msg timestamp="20201115 22:01:56.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.275" endtime="20201115 22:01:56.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.567" endtime="20201115 22:01:56.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.575" endtime="20201115 22:01:56.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.272" endtime="20201115 22:01:56.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.271" endtime="20201115 22:01:56.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.582" level="INFO">${RESULT} = [{'time': 0.021674403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.021778125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.579" endtime="20201115 22:01:56.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.595" level="INFO">${OVERHEAD} = {'diff': [9.527999999998232e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.556000000000842e-06, 9.554999999997899e-06, 9.597000000000078e-06, 9.4999...</msg>
<status status="PASS" starttime="20201115 22:01:56.583" endtime="20201115 22:01:56.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.600" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:56.599" endtime="20201115 22:01:56.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.602" level="INFO">VALUE: [9.527999999998232e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.556000000000842e-06, 9.554999999997899e-06, 9.597000000000078e-06, 9.499999999999093e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.485999999999523e-06, 9.514000000002132e-06, 9.512999999999189e-06, 9.554999999997899e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.527000000002228e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.555999999997372e-06, 9.542000000001272e-06, 9.555999999997372e-06, 9.528000000001702e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.556000000000842e-06, 9.527999999998232e-06, 9.487000000002466e-06, 9.499999999999093e-06, 9.541999999997802e-06, 9.485999999999523e-06, 9.569000000000938e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.541000000001798e-06, 9.541000000001798e-06, 9.570000000000412e-06, 9.500000000002562e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.601" endtime="20201115 22:01:56.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.596" endtime="20201115 22:01:56.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.606" endtime="20201115 22:01:56.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.609" endtime="20201115 22:01:56.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.608" endtime="20201115 22:01:56.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.604" endtime="20201115 22:01:56.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.241" endtime="20201115 22:01:56.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.666" endtime="20201115 22:01:56.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.665" endtime="20201115 22:01:56.631"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.633" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.641" endtime="20201115 22:01:56.660"></status>
</kw>
<msg timestamp="20201115 22:01:56.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.640" endtime="20201115 22:01:56.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.661" endtime="20201115 22:01:56.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.664" endtime="20201115 22:01:56.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.637" endtime="20201115 22:01:56.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.635" endtime="20201115 22:01:56.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.673" endtime="20201115 22:01:56.959"></status>
</kw>
<msg timestamp="20201115 22:01:56.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023158708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023169111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.671" endtime="20201115 22:01:56.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023158708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023169111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.963" endtime="20201115 22:01:56.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.971" endtime="20201115 22:01:56.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.669" endtime="20201115 22:01:56.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.667" endtime="20201115 22:01:56.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.977" level="INFO">${RESULT} = [{'time': 0.023169111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.023286181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:56.974" endtime="20201115 22:01:56.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.991" level="INFO">${OVERHEAD} = {'diff': [1.0402999999999107e-05, 1.0361999999999871e-05, 1.0347000000000828e-05, 1.0360999999996928e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0444000000001813e-05, 1.0347000000000828e-05...</msg>
<status status="PASS" starttime="20201115 22:01:56.978" endtime="20201115 22:01:56.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.995" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:56.994" endtime="20201115 22:01:56.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.998" level="INFO">VALUE: [1.0402999999999107e-05, 1.0361999999999871e-05, 1.0347000000000828e-05, 1.0360999999996928e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0444000000001813e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0417000000002147e-05, 1.0416999999998677e-05, 1.0403000000002577e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0443999999998343e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0334000000000731e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0388999999999537e-05, 1.0347000000000828e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0417000000002147e-05, 1.0403000000002577e-05, 1.0334000000000731e-05, 1.0388000000000064e-05, 1.0360999999996928e-05, 1.0388999999999537e-05, 1.0375000000003437e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0389000000003007e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0403000000002577e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0389000000003007e-05, 1.0402999999999107e-05]</msg>
<status status="PASS" starttime="20201115 22:01:56.997" endtime="20201115 22:01:56.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.992" endtime="20201115 22:01:56.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.002" endtime="20201115 22:01:57.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.005" endtime="20201115 22:01:57.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.004" endtime="20201115 22:01:57.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.000" endtime="20201115 22:01:57.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.633" endtime="20201115 22:01:57.026"></status>
</kw>
<msg timestamp="20201115 22:01:57.026" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.035" endtime="20201115 22:01:57.057"></status>
</kw>
<msg timestamp="20201115 22:01:57.058" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.034" endtime="20201115 22:01:57.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.059" endtime="20201115 22:01:57.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.061" endtime="20201115 22:01:57.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.031" endtime="20201115 22:01:57.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.029" endtime="20201115 22:01:57.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.070" endtime="20201115 22:01:57.358"></status>
</kw>
<msg timestamp="20201115 22:01:57.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024317569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024327986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.069" endtime="20201115 22:01:57.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024317569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024327986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.362" endtime="20201115 22:01:57.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.371" endtime="20201115 22:01:57.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.066" endtime="20201115 22:01:57.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.065" endtime="20201115 22:01:57.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.377" level="INFO">${RESULT} = [{'time': 0.024327986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.024439986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:57.374" endtime="20201115 22:01:57.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.391" level="INFO">${OVERHEAD} = {'diff': [1.0416999999998677e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0389000000003007e-05, 1.0361999999999871e-05, 1.0361000000000398e-05...</msg>
<status status="PASS" starttime="20201115 22:01:57.378" endtime="20201115 22:01:57.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.396" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:57.395" endtime="20201115 22:01:57.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.398" level="INFO">VALUE: [1.0416999999998677e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0389000000003007e-05, 1.0361999999999871e-05, 1.0361000000000398e-05, 1.0388999999999537e-05, 1.0472000000000953e-05, 1.0348000000000301e-05, 1.0402999999999107e-05, 1.0457999999997913e-05, 1.0388999999999537e-05, 1.0444000000001813e-05, 1.0361000000000398e-05, 1.0320000000001162e-05, 1.0430000000002243e-05, 1.0416999999998677e-05, 1.0346999999997358e-05, 1.0403000000002577e-05, 1.0485999999997053e-05, 1.0361000000000398e-05, 1.0332999999997788e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0401999999999634e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0472000000000953e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0402999999999107e-05, 1.0361000000000398e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0402999999999107e-05, 1.0348000000000301e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0457999999997913e-05, 1.0333000000001258e-05, 1.0388999999999537e-05, 1.0402999999999107e-05, 1.0388000000000064e-05, 1.0388999999999537e-05, 1.0388999999999537e-05]</msg>
<status status="PASS" starttime="20201115 22:01:57.397" endtime="20201115 22:01:57.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.392" endtime="20201115 22:01:57.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.401" endtime="20201115 22:01:57.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.405" endtime="20201115 22:01:57.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.403" endtime="20201115 22:01:57.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.400" endtime="20201115 22:01:57.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.027" endtime="20201115 22:01:57.425"></status>
</kw>
<msg timestamp="20201115 22:01:57.425" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.435" endtime="20201115 22:01:57.454"></status>
</kw>
<msg timestamp="20201115 22:01:57.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.433" endtime="20201115 22:01:57.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.457" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.455" endtime="20201115 22:01:57.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.458" endtime="20201115 22:01:57.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.430" endtime="20201115 22:01:57.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.428" endtime="20201115 22:01:57.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.467" endtime="20201115 22:01:57.754"></status>
</kw>
<msg timestamp="20201115 22:01:57.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.465" endtime="20201115 22:01:57.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.758" endtime="20201115 22:01:57.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.766" endtime="20201115 22:01:57.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.463" endtime="20201115 22:01:57.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.461" endtime="20201115 22:01:57.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.773" level="INFO">${RESULT} = [{'time': 0.021859361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.021971597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:57.770" endtime="20201115 22:01:57.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.787" level="INFO">${OVERHEAD} = {'diff': [1.0374999999999968e-05, 1.0374999999999968e-05, 1.0319999999997692e-05, 1.0361999999999871e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0347000000000828e-05...</msg>
<status status="PASS" starttime="20201115 22:01:57.774" endtime="20201115 22:01:57.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.791" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:57.790" endtime="20201115 22:01:57.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.794" level="INFO">VALUE: [1.0374999999999968e-05, 1.0374999999999968e-05, 1.0319999999997692e-05, 1.0361999999999871e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0347000000000828e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0402999999999107e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0360999999996928e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0403000000002577e-05, 1.0388999999999537e-05, 1.0361000000000398e-05, 1.0402999999999107e-05, 1.0388000000000064e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0388000000000064e-05, 1.0361999999999871e-05, 1.0361000000000398e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0417000000002147e-05, 1.0318999999998218e-05, 1.0403000000002577e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0416999999998677e-05, 1.0347999999996832e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0401999999999634e-05, 1.0361000000000398e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0361999999999871e-05, 1.0348000000000301e-05]</msg>
<status status="PASS" starttime="20201115 22:01:57.792" endtime="20201115 22:01:57.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.788" endtime="20201115 22:01:57.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.797" endtime="20201115 22:01:57.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.801" endtime="20201115 22:01:57.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.799" endtime="20201115 22:01:57.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.795" endtime="20201115 22:01:57.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.426" endtime="20201115 22:01:57.821"></status>
</kw>
<msg timestamp="20201115 22:01:57.821" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.830" endtime="20201115 22:01:57.851"></status>
</kw>
<msg timestamp="20201115 22:01:57.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.829" endtime="20201115 22:01:57.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.852" endtime="20201115 22:01:57.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.855" endtime="20201115 22:01:57.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.826" endtime="20201115 22:01:57.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.824" endtime="20201115 22:01:57.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.864" endtime="20201115 22:01:58.152"></status>
</kw>
<msg timestamp="20201115 22:01:58.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022785792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.862" endtime="20201115 22:01:58.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022785792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.156" endtime="20201115 22:01:58.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.165" endtime="20201115 22:01:58.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.859" endtime="20201115 22:01:58.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.858" endtime="20201115 22:01:58.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.172" level="INFO">${RESULT} = [{'time': 0.022796208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.022909847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:58.169" endtime="20201115 22:01:58.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.197" level="INFO">${OVERHEAD} = {'diff': [1.0415999999999204e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0333000000001258e-05, 1.0361000000000398e-05, 1.0374999999999968e-05...</msg>
<status status="PASS" starttime="20201115 22:01:58.173" endtime="20201115 22:01:58.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.207" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:58.205" endtime="20201115 22:01:58.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.213" level="INFO">VALUE: [1.0415999999999204e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0333000000001258e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0401999999999634e-05, 1.0402999999999107e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0347000000000828e-05, 1.0389000000003007e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0361000000000398e-05, 1.0319000000001688e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0416999999998677e-05, 1.0402999999999107e-05, 1.0306000000001592e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0403000000002577e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0375000000003437e-05, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0402999999999107e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0374999999999968e-05]</msg>
<status status="PASS" starttime="20201115 22:01:58.210" endtime="20201115 22:01:58.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.199" endtime="20201115 22:01:58.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.220" endtime="20201115 22:01:58.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.228" endtime="20201115 22:01:58.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.224" endtime="20201115 22:01:58.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.216" endtime="20201115 22:01:58.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.822" endtime="20201115 22:01:58.253"></status>
</kw>
<msg timestamp="20201115 22:01:58.254" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.279" endtime="20201115 22:01:58.297"></status>
</kw>
<msg timestamp="20201115 22:01:58.298" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.276" endtime="20201115 22:01:58.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.299" endtime="20201115 22:01:58.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.301" endtime="20201115 22:01:58.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.268" endtime="20201115 22:01:58.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.260" endtime="20201115 22:01:58.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.310" endtime="20201115 22:01:58.596"></status>
</kw>
<msg timestamp="20201115 22:01:58.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041684278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041694653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.309" endtime="20201115 22:01:58.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041684278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041694653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.601" endtime="20201115 22:01:58.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.609" endtime="20201115 22:01:58.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.306" endtime="20201115 22:01:58.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.304" endtime="20201115 22:01:58.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.616" level="INFO">${RESULT} = [{'time': 0.041694653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.041807306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:58.612" endtime="20201115 22:01:58.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.629" level="INFO">${OVERHEAD} = {'diff': [1.0374999999999968e-05, 1.0417000000005616e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0403000000006046e-05, 1.0415999999999204e-05, 1.0415999999999204e-05, 1.0361000000000398e-05...</msg>
<status status="PASS" starttime="20201115 22:01:58.617" endtime="20201115 22:01:58.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.634" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:58.633" endtime="20201115 22:01:58.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.636" level="INFO">VALUE: [1.0374999999999968e-05, 1.0417000000005616e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0403000000006046e-05, 1.0415999999999204e-05, 1.0415999999999204e-05, 1.0361000000000398e-05, 1.0401999999999634e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0403000000006046e-05, 1.0361999999999871e-05, 1.0388999999999537e-05, 1.0402999999999107e-05, 1.0388000000000064e-05, 1.0347000000000828e-05, 1.0374999999999968e-05, 1.0416999999998677e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0306000000001592e-05, 1.0361000000000398e-05, 1.0402999999999107e-05, 1.0319000000001688e-05, 1.0430000000005712e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0473000000003896e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0347000000000828e-05, 1.0402999999999107e-05, 1.0361000000000398e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0416999999998677e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0374999999999968e-05, 1.0389000000006476e-05, 1.0389000000006476e-05, 1.0388999999999537e-05, 1.0306000000001592e-05, 1.0361000000000398e-05]</msg>
<status status="PASS" starttime="20201115 22:01:58.635" endtime="20201115 22:01:58.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.630" endtime="20201115 22:01:58.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.639" endtime="20201115 22:01:58.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.643" endtime="20201115 22:01:58.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.641" endtime="20201115 22:01:58.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.638" endtime="20201115 22:01:58.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.255" endtime="20201115 22:01:58.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.632" endtime="20201115 22:01:58.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.631" endtime="20201115 22:01:58.664"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.666" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.675" endtime="20201115 22:01:58.695"></status>
</kw>
<msg timestamp="20201115 22:01:58.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.673" endtime="20201115 22:01:58.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.697" endtime="20201115 22:01:58.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.700" endtime="20201115 22:01:58.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.671" endtime="20201115 22:01:58.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.669" endtime="20201115 22:01:58.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.709" endtime="20201115 22:01:58.996"></status>
</kw>
<msg timestamp="20201115 22:01:58.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0244995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02451075, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:58.707" endtime="20201115 22:01:59.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0244995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02451075, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:59.001" endtime="20201115 22:01:59.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.009" endtime="20201115 22:01:59.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.705" endtime="20201115 22:01:59.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.703" endtime="20201115 22:01:59.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.015" level="INFO">${RESULT} = [{'time': 0.02451075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.024636028, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:59.012" endtime="20201115 22:01:59.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.029" level="INFO">${OVERHEAD} = {'diff': [1.1250000000000843e-05, 1.1209000000001607e-05, 1.1263999999996943e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1223000000001176e-05, 1.1222999999997707e-05, 1.1250000000000843e-05...</msg>
<status status="PASS" starttime="20201115 22:01:59.016" endtime="20201115 22:01:59.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.033" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:59.032" endtime="20201115 22:01:59.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.036" level="INFO">VALUE: [1.1250000000000843e-05, 1.1209000000001607e-05, 1.1263999999996943e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1223000000001176e-05, 1.1222999999997707e-05, 1.1250000000000843e-05, 1.1207999999998663e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1249999999997373e-05, 1.1208000000002133e-05, 1.1222000000001703e-05, 1.1250000000000843e-05, 1.1208000000002133e-05, 1.1222000000001703e-05, 1.1208000000002133e-05, 1.1277999999999982e-05, 1.1236000000001273e-05, 1.1221999999998233e-05, 1.1291999999999552e-05, 1.1221999999998233e-05, 1.1209000000001607e-05, 1.1221999999998233e-05, 1.1264000000000413e-05, 1.1209000000001607e-05, 1.1237000000000746e-05, 1.1221999999998233e-05, 1.1180999999998997e-05, 1.1277999999999982e-05, 1.1222999999997707e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1194000000002563e-05, 1.1250000000000843e-05, 1.1249999999997373e-05, 1.1237000000000746e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1166999999999427e-05, 1.1236000000001273e-05, 1.1235999999997803e-05, 1.1250000000000843e-05, 1.1222000000001703e-05, 1.1264000000000413e-05, 1.1222000000001703e-05, 1.1194000000002563e-05, 1.1221999999998233e-05, 1.1223000000001176e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.035" endtime="20201115 22:01:59.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.030" endtime="20201115 22:01:59.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.039" endtime="20201115 22:01:59.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.043" endtime="20201115 22:01:59.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.041" endtime="20201115 22:01:59.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.037" endtime="20201115 22:01:59.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.667" endtime="20201115 22:01:59.063"></status>
</kw>
<msg timestamp="20201115 22:01:59.063" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.072" endtime="20201115 22:01:59.092"></status>
</kw>
<msg timestamp="20201115 22:01:59.093" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.071" endtime="20201115 22:01:59.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.095" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.094" endtime="20201115 22:01:59.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.096" endtime="20201115 22:01:59.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.068" endtime="20201115 22:01:59.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.066" endtime="20201115 22:01:59.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.106" endtime="20201115 22:01:59.391"></status>
</kw>
<msg timestamp="20201115 22:01:59.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021750347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.104" endtime="20201115 22:01:59.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021750347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.395" endtime="20201115 22:01:59.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.403" endtime="20201115 22:01:59.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.101" endtime="20201115 22:01:59.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.100" endtime="20201115 22:01:59.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.410" level="INFO">${RESULT} = [{'time': 0.021750347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.021878153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:59.406" endtime="20201115 22:01:59.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.423" level="INFO">${OVERHEAD} = {'diff': [1.1250000000000843e-05, 1.1195000000002037e-05, 1.1194999999998567e-05, 1.1207999999998663e-05, 1.1152000000000384e-05, 1.1264000000000413e-05, 1.1237000000000746e-05, 1.1194999999998567e-05...</msg>
<status status="PASS" starttime="20201115 22:01:59.411" endtime="20201115 22:01:59.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.428" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:59.427" endtime="20201115 22:01:59.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.430" level="INFO">VALUE: [1.1250000000000843e-05, 1.1195000000002037e-05, 1.1194999999998567e-05, 1.1207999999998663e-05, 1.1152000000000384e-05, 1.1264000000000413e-05, 1.1237000000000746e-05, 1.1194999999998567e-05, 1.1249999999997373e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1249999999997373e-05, 1.1319999999998692e-05, 1.1249999999997373e-05, 1.1208000000002133e-05, 1.1222000000001703e-05, 1.1166999999999427e-05, 1.1207999999998663e-05, 1.1221999999998233e-05, 1.1236000000001273e-05, 1.1165999999999954e-05, 1.1222000000001703e-05, 1.1235999999997803e-05, 1.1236000000001273e-05, 1.1166999999999427e-05, 1.1208000000002133e-05, 1.1250000000000843e-05, 1.1222000000001703e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1264000000000413e-05, 1.1236000000001273e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1235999999997803e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1221999999998233e-05, 1.1263999999996943e-05, 1.1235999999997803e-05, 1.1235999999997803e-05, 1.1194999999998567e-05, 1.1235999999997803e-05, 1.1221999999998233e-05, 1.1264000000000413e-05, 1.1250000000000843e-05, 1.1223000000001176e-05, 1.1179999999999524e-05, 1.1208999999998137e-05, 1.1264000000000413e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.429" endtime="20201115 22:01:59.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.424" endtime="20201115 22:01:59.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.433" endtime="20201115 22:01:59.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.437" endtime="20201115 22:01:59.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.435" endtime="20201115 22:01:59.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.432" endtime="20201115 22:01:59.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.064" endtime="20201115 22:01:59.458"></status>
</kw>
<msg timestamp="20201115 22:01:59.458" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.468" endtime="20201115 22:01:59.489"></status>
</kw>
<msg timestamp="20201115 22:01:59.489" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.466" endtime="20201115 22:01:59.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.490" endtime="20201115 22:01:59.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.493" endtime="20201115 22:01:59.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.463" endtime="20201115 22:01:59.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.460" endtime="20201115 22:01:59.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.502" endtime="20201115 22:01:59.788"></status>
</kw>
<msg timestamp="20201115 22:01:59.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024349792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.500" endtime="20201115 22:01:59.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024349792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.793" endtime="20201115 22:01:59.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.801" endtime="20201115 22:01:59.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.498" endtime="20201115 22:01:59.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.496" endtime="20201115 22:01:59.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.807" level="INFO">${RESULT} = [{'time': 0.024361042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.024485222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:59.804" endtime="20201115 22:01:59.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.821" level="INFO">${OVERHEAD} = {'diff': [1.1250000000000843e-05, 1.1277999999999982e-05, 1.1304999999999649e-05, 1.1236000000001273e-05, 1.1221999999998233e-05, 1.1209000000001607e-05, 1.1236000000001273e-05, 1.1250000000000843e-05...</msg>
<status status="PASS" starttime="20201115 22:01:59.808" endtime="20201115 22:01:59.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.825" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:59.824" endtime="20201115 22:01:59.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.828" level="INFO">VALUE: [1.1250000000000843e-05, 1.1277999999999982e-05, 1.1304999999999649e-05, 1.1236000000001273e-05, 1.1221999999998233e-05, 1.1209000000001607e-05, 1.1236000000001273e-05, 1.1250000000000843e-05, 1.1221999999998233e-05, 1.1193999999999094e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1263000000000939e-05, 1.1207999999998663e-05, 1.1223000000001176e-05, 1.1263999999996943e-05, 1.1249999999997373e-05, 1.1223000000001176e-05, 1.1236000000001273e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1194999999998567e-05, 1.1195000000002037e-05, 1.1264000000000413e-05, 1.1306000000002592e-05, 1.1306000000002592e-05, 1.1236000000001273e-05, 1.1249999999997373e-05, 1.1236000000001273e-05, 1.1221999999998233e-05, 1.1264000000000413e-05, 1.1221999999998233e-05, 1.1306000000002592e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1263000000000939e-05, 1.1207999999998663e-05, 1.1209000000001607e-05, 1.1207999999998663e-05, 1.1209000000001607e-05, 1.1236000000001273e-05, 1.1250000000000843e-05, 1.1208999999998137e-05, 1.1236000000001273e-05, 1.1180999999998997e-05, 1.1263999999996943e-05, 1.1209000000001607e-05, 1.1264000000000413e-05, 1.1277000000000509e-05, 1.1250000000000843e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.826" endtime="20201115 22:01:59.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.822" endtime="20201115 22:01:59.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.831" endtime="20201115 22:01:59.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.835" endtime="20201115 22:01:59.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.833" endtime="20201115 22:01:59.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.829" endtime="20201115 22:01:59.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.458" endtime="20201115 22:01:59.856"></status>
</kw>
<msg timestamp="20201115 22:01:59.856" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.865" endtime="20201115 22:01:59.885"></status>
</kw>
<msg timestamp="20201115 22:01:59.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.863" endtime="20201115 22:01:59.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.888" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.887" endtime="20201115 22:01:59.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.889" endtime="20201115 22:01:59.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.861" endtime="20201115 22:01:59.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.858" endtime="20201115 22:01:59.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.898" endtime="20201115 22:02:00.186"></status>
</kw>
<msg timestamp="20201115 22:02:00.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023074597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023085819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.897" endtime="20201115 22:02:00.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023074597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023085819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.190" endtime="20201115 22:02:00.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.198" endtime="20201115 22:02:00.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.894" endtime="20201115 22:02:00.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.892" endtime="20201115 22:02:00.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.205" level="INFO">${RESULT} = [{'time': 0.023085819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1222000000001703e-05, 'source_diff': 1.1222000000001703e-05}, {'time': 0.023208903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:00.201" endtime="20201115 22:02:00.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.218" level="INFO">${OVERHEAD} = {'diff': [1.1222000000001703e-05, 1.1250000000000843e-05, 1.1305999999999122e-05, 1.1208999999998137e-05, 1.1209000000001607e-05, 1.1179999999999524e-05, 1.1222000000001703e-05, 1.1263000000000939e-05...</msg>
<status status="PASS" starttime="20201115 22:02:00.205" endtime="20201115 22:02:00.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.222" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:00.221" endtime="20201115 22:02:00.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.225" level="INFO">VALUE: [1.1222000000001703e-05, 1.1250000000000843e-05, 1.1305999999999122e-05, 1.1208999999998137e-05, 1.1209000000001607e-05, 1.1179999999999524e-05, 1.1222000000001703e-05, 1.1263000000000939e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1193999999999094e-05, 1.1166999999999427e-05, 1.1235999999997803e-05, 1.1237000000000746e-05, 1.1236000000001273e-05, 1.1291000000000079e-05, 1.1223000000001176e-05, 1.1208000000002133e-05, 1.1263999999996943e-05, 1.1235999999997803e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1207999999998663e-05, 1.1194000000002563e-05, 1.1222999999997707e-05, 1.1221999999998233e-05, 1.1193999999999094e-05, 1.1291999999999552e-05, 1.1221999999998233e-05, 1.1222000000001703e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1249999999997373e-05, 1.1222000000001703e-05, 1.1221999999998233e-05, 1.1235999999997803e-05, 1.1207999999998663e-05, 1.1264000000000413e-05, 1.1235999999997803e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1235999999997803e-05, 1.1222000000001703e-05, 1.1236000000001273e-05, 1.1250000000000843e-05, 1.1221999999998233e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.224" endtime="20201115 22:02:00.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.219" endtime="20201115 22:02:00.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.229" endtime="20201115 22:02:00.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.232" endtime="20201115 22:02:00.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.230" endtime="20201115 22:02:00.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.227" endtime="20201115 22:02:00.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.856" endtime="20201115 22:02:00.253"></status>
</kw>
<msg timestamp="20201115 22:02:00.253" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.262" endtime="20201115 22:02:00.283"></status>
</kw>
<msg timestamp="20201115 22:02:00.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.260" endtime="20201115 22:02:00.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.286" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.285" endtime="20201115 22:02:00.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.287" endtime="20201115 22:02:00.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.258" endtime="20201115 22:02:00.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.256" endtime="20201115 22:02:00.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.296" endtime="20201115 22:02:00.584"></status>
</kw>
<msg timestamp="20201115 22:02:00.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022920625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.295" endtime="20201115 22:02:00.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022920625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.588" endtime="20201115 22:02:00.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.596" endtime="20201115 22:02:00.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.292" endtime="20201115 22:02:00.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.290" endtime="20201115 22:02:00.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.603" level="INFO">${RESULT} = [{'time': 0.022920625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1222000000001703e-05, 'source_diff': 1.1222000000001703e-05}, {'time': 0.0230485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:00.599" endtime="20201115 22:02:00.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.616" level="INFO">${OVERHEAD} = {'diff': [1.1222000000001703e-05, 1.1236000000001273e-05, 1.1263000000000939e-05, 1.1250000000000843e-05, 1.1249999999997373e-05, 1.1222999999997707e-05, 1.1236999999997277e-05, 1.1223000000001176e-05...</msg>
<status status="PASS" starttime="20201115 22:02:00.604" endtime="20201115 22:02:00.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.621" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:00.620" endtime="20201115 22:02:00.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.623" level="INFO">VALUE: [1.1222000000001703e-05, 1.1236000000001273e-05, 1.1263000000000939e-05, 1.1250000000000843e-05, 1.1249999999997373e-05, 1.1222999999997707e-05, 1.1236999999997277e-05, 1.1223000000001176e-05, 1.1250000000000843e-05, 1.1277000000000509e-05, 1.1207999999998663e-05, 1.1207999999998663e-05, 1.1236000000001273e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1222999999997707e-05, 1.1291999999999552e-05, 1.1235999999997803e-05, 1.1194000000002563e-05, 1.1277999999999982e-05, 1.1235999999997803e-05, 1.1221999999998233e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1222000000001703e-05, 1.1235999999997803e-05, 1.1209000000001607e-05, 1.1235999999997803e-05, 1.1237000000000746e-05, 1.1209000000001607e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1291000000000079e-05, 1.1223000000001176e-05, 1.1236000000001273e-05, 1.1221999999998233e-05, 1.1165999999999954e-05, 1.1291999999999552e-05, 1.1193999999999094e-05, 1.1194999999998567e-05, 1.1221999999998233e-05, 1.1236000000001273e-05, 1.1208999999998137e-05, 1.1236000000001273e-05, 1.1263999999996943e-05, 1.1235999999997803e-05, 1.1208000000002133e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.622" endtime="20201115 22:02:00.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.617" endtime="20201115 22:02:00.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.627" endtime="20201115 22:02:00.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.630" endtime="20201115 22:02:00.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.629" endtime="20201115 22:02:00.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.625" endtime="20201115 22:02:00.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.254" endtime="20201115 22:02:00.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.665" endtime="20201115 22:02:00.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.664" endtime="20201115 22:02:00.651"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.653" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.662" endtime="20201115 22:02:00.685"></status>
</kw>
<msg timestamp="20201115 22:02:00.686" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.661" endtime="20201115 22:02:00.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.688" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.687" endtime="20201115 22:02:00.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.689" endtime="20201115 22:02:00.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.658" endtime="20201115 22:02:00.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.656" endtime="20201115 22:02:00.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.698" endtime="20201115 22:02:00.985"></status>
</kw>
<msg timestamp="20201115 22:02:00.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026798917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026811042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.696" endtime="20201115 22:02:00.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026798917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026811042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.989" endtime="20201115 22:02:00.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.997" endtime="20201115 22:02:00.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.694" endtime="20201115 22:02:01.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.692" endtime="20201115 22:02:01.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.004" level="INFO">${RESULT} = [{'time': 0.026811042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2125000000001718e-05, 'source_diff': 1.2125000000001718e-05}, {'time': 0.026948806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.001" endtime="20201115 22:02:01.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.018" level="INFO">${OVERHEAD} = {'diff': [1.2125000000001718e-05, 1.2097999999998582e-05, 1.2167000000000427e-05, 1.2097000000002578e-05, 1.2125000000001718e-05, 1.2068999999999969e-05, 1.2084000000002482e-05, 1.2097000000002578e-05...</msg>
<status status="PASS" starttime="20201115 22:02:01.005" endtime="20201115 22:02:01.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.023" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:01.022" endtime="20201115 22:02:01.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.026" level="INFO">VALUE: [1.2125000000001718e-05, 1.2097999999998582e-05, 1.2167000000000427e-05, 1.2097000000002578e-05, 1.2125000000001718e-05, 1.2068999999999969e-05, 1.2084000000002482e-05, 1.2097000000002578e-05, 1.2042000000000302e-05, 1.2139000000001288e-05, 1.2096999999999108e-05, 1.2097999999998582e-05, 1.2097000000002578e-05, 1.2112000000001621e-05, 1.2083999999999012e-05, 1.2096999999999108e-05, 1.2069999999999442e-05, 1.2111000000002148e-05, 1.2111000000002148e-05, 1.2069999999999442e-05, 1.2153000000000858e-05, 1.2111000000002148e-05, 1.2000000000001593e-05, 1.2082999999999539e-05, 1.2082999999999539e-05, 1.2083999999999012e-05, 1.2096999999999108e-05, 1.2055999999999872e-05, 1.2070000000002912e-05, 1.2111000000002148e-05, 1.2082999999999539e-05, 1.2096999999999108e-05, 1.2082999999999539e-05, 1.2112000000001621e-05, 1.2111000000002148e-05, 1.2084000000002482e-05, 1.20689999999965e-05, 1.2082999999996069e-05, 1.2111000000002148e-05, 1.20689999999965e-05, 1.2069999999995973e-05, 1.2082999999996069e-05, 1.2070000000002912e-05, 1.2110999999995209e-05, 1.2111000000002148e-05, 1.2125000000001718e-05, 1.204099999999736e-05, 1.2069000000003438e-05, 1.2055000000003868e-05, 1.2096999999995639e-05]</msg>
<status status="PASS" starttime="20201115 22:02:01.024" endtime="20201115 22:02:01.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.019" endtime="20201115 22:02:01.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.029" endtime="20201115 22:02:01.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.033" endtime="20201115 22:02:01.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.031" endtime="20201115 22:02:01.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.028" endtime="20201115 22:02:01.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.654" endtime="20201115 22:02:01.054"></status>
</kw>
<msg timestamp="20201115 22:02:01.054" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.063" endtime="20201115 22:02:01.082"></status>
</kw>
<msg timestamp="20201115 22:02:01.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.062" endtime="20201115 22:02:01.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.083" endtime="20201115 22:02:01.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.086" endtime="20201115 22:02:01.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.059" endtime="20201115 22:02:01.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.056" endtime="20201115 22:02:01.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.096" endtime="20201115 22:02:01.406"></status>
</kw>
<msg timestamp="20201115 22:02:01.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020906431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020918514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.094" endtime="20201115 22:02:01.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020906431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020918514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.411" endtime="20201115 22:02:01.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.419" endtime="20201115 22:02:01.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.091" endtime="20201115 22:02:01.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.089" endtime="20201115 22:02:01.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.426" level="INFO">${RESULT} = [{'time': 0.020918514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2082999999999539e-05, 'source_diff': 1.2082999999999539e-05}, {'time': 0.021054708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.422" endtime="20201115 22:02:01.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.440" level="INFO">${OVERHEAD} = {'diff': [1.2082999999999539e-05, 1.205499999999693e-05, 1.2055999999999872e-05, 1.2110999999998678e-05, 1.2110999999998678e-05, 1.2124999999998248e-05, 1.2068999999999969e-05, 1.2070000000002912e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:01.427" endtime="20201115 22:02:01.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.445" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:01.444" endtime="20201115 22:02:01.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.448" level="INFO">VALUE: [1.2082999999999539e-05, 1.205499999999693e-05, 1.2055999999999872e-05, 1.2110999999998678e-05, 1.2110999999998678e-05, 1.2124999999998248e-05, 1.2068999999999969e-05, 1.2070000000002912e-05, 1.2055000000000399e-05, 1.2153000000000858e-05, 1.2110999999998678e-05, 1.2124999999998248e-05, 1.2068999999999969e-05, 1.2111000000002148e-05, 1.2082999999999539e-05, 1.2111000000002148e-05, 1.2055000000000399e-05, 1.2082999999999539e-05, 1.2096999999999108e-05, 1.2110999999998678e-05, 1.2097999999998582e-05, 1.2096999999999108e-05, 1.2069999999999442e-05, 1.2068999999999969e-05, 1.2111000000002148e-05, 1.2111000000002148e-05, 1.2097999999998582e-05, 1.2083999999999012e-05, 1.2055999999999872e-05, 1.2083999999999012e-05, 1.2082999999999539e-05, 1.2082999999999539e-05, 1.2096999999999108e-05, 1.2098000000002052e-05, 1.2110999999998678e-05, 1.2083999999999012e-05, 1.2084000000002482e-05, 1.2096999999999108e-05, 1.2055999999999872e-05, 1.2083999999999012e-05, 1.2096999999999108e-05, 1.2096999999999108e-05, 1.2096999999999108e-05, 1.2111999999998152e-05, 1.2125000000001718e-05, 1.2124999999998248e-05, 1.2111999999998152e-05, 1.2110999999998678e-05, 1.2138999999997818e-05, 1.2014000000001163e-05]</msg>
<status status="PASS" starttime="20201115 22:02:01.446" endtime="20201115 22:02:01.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.441" endtime="20201115 22:02:01.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.451" endtime="20201115 22:02:01.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.454" endtime="20201115 22:02:01.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.453" endtime="20201115 22:02:01.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.449" endtime="20201115 22:02:01.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.054" endtime="20201115 22:02:01.475"></status>
</kw>
<msg timestamp="20201115 22:02:01.475" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.485" endtime="20201115 22:02:01.503"></status>
</kw>
<msg timestamp="20201115 22:02:01.504" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.483" endtime="20201115 22:02:01.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.505" endtime="20201115 22:02:01.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.508" endtime="20201115 22:02:01.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.480" endtime="20201115 22:02:01.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.478" endtime="20201115 22:02:01.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.517" endtime="20201115 22:02:01.805"></status>
</kw>
<msg timestamp="20201115 22:02:01.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021265931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.515" endtime="20201115 22:02:01.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021265931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.809" endtime="20201115 22:02:01.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.818" endtime="20201115 22:02:01.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.513" endtime="20201115 22:02:01.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.511" endtime="20201115 22:02:01.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.825" level="INFO">${RESULT} = [{'time': 0.021265931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2097999999998582e-05, 'source_diff': 1.2097999999998582e-05}, {'time': 0.021403569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.821" endtime="20201115 22:02:01.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.839" level="INFO">${OVERHEAD} = {'diff': [1.2097999999998582e-05, 1.2111000000002148e-05, 1.2096999999999108e-05, 1.2083000000003008e-05, 1.2068999999999969e-05, 1.2069999999999442e-05, 1.2096999999999108e-05, 1.2124999999998248e-05...</msg>
<status status="PASS" starttime="20201115 22:02:01.826" endtime="20201115 22:02:01.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.844" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:01.843" endtime="20201115 22:02:01.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.846" level="INFO">VALUE: [1.2097999999998582e-05, 1.2111000000002148e-05, 1.2096999999999108e-05, 1.2083000000003008e-05, 1.2068999999999969e-05, 1.2069999999999442e-05, 1.2096999999999108e-05, 1.2124999999998248e-05, 1.2138999999997818e-05, 1.2097000000002578e-05, 1.2083999999999012e-05, 1.2153000000000858e-05, 1.2083999999999012e-05, 1.2082999999999539e-05, 1.2097999999998582e-05, 1.2111000000002148e-05, 1.2083000000003008e-05, 1.2068999999999969e-05, 1.2082999999999539e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2111000000002148e-05, 1.2096999999999108e-05, 1.2069999999999442e-05, 1.2096999999999108e-05, 1.1985999999998553e-05, 1.2083999999999012e-05, 1.2069999999999442e-05, 1.2068999999999969e-05, 1.2042000000000302e-05, 1.2083999999999012e-05, 1.2082999999999539e-05, 1.2083000000003008e-05, 1.2041999999996833e-05, 1.2111000000002148e-05, 1.2125000000001718e-05, 1.2096999999999108e-05, 1.2068999999999969e-05, 1.2069999999999442e-05, 1.2082999999999539e-05, 1.2055999999999872e-05, 1.2068999999999969e-05, 1.2068999999999969e-05, 1.2110999999998678e-05, 1.2083999999999012e-05, 1.2097999999998582e-05, 1.2069999999999442e-05, 1.2139000000001288e-05, 1.2055999999999872e-05, 1.2082999999999539e-05]</msg>
<status status="PASS" starttime="20201115 22:02:01.845" endtime="20201115 22:02:01.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.840" endtime="20201115 22:02:01.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.850" endtime="20201115 22:02:01.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.853" endtime="20201115 22:02:01.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.852" endtime="20201115 22:02:01.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.848" endtime="20201115 22:02:01.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.476" endtime="20201115 22:02:01.874"></status>
</kw>
<msg timestamp="20201115 22:02:01.874" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.883" endtime="20201115 22:02:01.906"></status>
</kw>
<msg timestamp="20201115 22:02:01.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.882" endtime="20201115 22:02:01.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.908" endtime="20201115 22:02:01.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.910" endtime="20201115 22:02:01.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.879" endtime="20201115 22:02:01.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.877" endtime="20201115 22:02:01.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.920" endtime="20201115 22:02:02.209"></status>
</kw>
<msg timestamp="20201115 22:02:02.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.918" endtime="20201115 22:02:02.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.213" endtime="20201115 22:02:02.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.222" endtime="20201115 22:02:02.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.916" endtime="20201115 22:02:02.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.914" endtime="20201115 22:02:02.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.229" level="INFO">${RESULT} = [{'time': 0.024513958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2096999999999108e-05, 'source_diff': 1.2096999999999108e-05}, {'time': 0.024652069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.225" endtime="20201115 22:02:02.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.243" level="INFO">${OVERHEAD} = {'diff': [1.2096999999999108e-05, 1.2068999999999969e-05, 1.2110999999998678e-05, 1.2069999999999442e-05, 1.2082999999999539e-05, 1.2110999999998678e-05, 1.2125000000001718e-05, 1.2139000000001288e-05...</msg>
<status status="PASS" starttime="20201115 22:02:02.230" endtime="20201115 22:02:02.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.247" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:02.246" endtime="20201115 22:02:02.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.250" level="INFO">VALUE: [1.2096999999999108e-05, 1.2068999999999969e-05, 1.2110999999998678e-05, 1.2069999999999442e-05, 1.2082999999999539e-05, 1.2110999999998678e-05, 1.2125000000001718e-05, 1.2139000000001288e-05, 1.1999999999998123e-05, 1.2084000000002482e-05, 1.2096999999999108e-05, 1.2055999999999872e-05, 1.2082999999999539e-05, 1.204099999999736e-05, 1.2055999999999872e-05, 1.2110999999998678e-05, 1.2056000000003342e-05, 1.2070000000002912e-05, 1.2098000000002052e-05, 1.2055999999999872e-05, 1.2083999999999012e-05, 1.2083999999999012e-05, 1.2014000000001163e-05, 1.2096999999999108e-05, 1.2082999999999539e-05, 1.2097000000002578e-05, 1.2013999999997693e-05, 1.2111999999998152e-05, 1.2096999999999108e-05, 1.2110999999998678e-05, 1.2096999999999108e-05, 1.2082999999999539e-05, 1.2096999999999108e-05, 1.2055999999999872e-05, 1.2068999999999969e-05, 1.2083000000003008e-05, 1.2111000000002148e-05, 1.2082999999999539e-05, 1.2068999999999969e-05, 1.2110999999998678e-05, 1.2111000000002148e-05, 1.2111000000002148e-05, 1.2069999999999442e-05, 1.2139000000001288e-05, 1.2083000000003008e-05, 1.2097000000002578e-05, 1.2096999999999108e-05, 1.2055999999999872e-05, 1.2082999999999539e-05, 1.2098000000002052e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.249" endtime="20201115 22:02:02.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.244" endtime="20201115 22:02:02.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.253" endtime="20201115 22:02:02.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.257" endtime="20201115 22:02:02.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.255" endtime="20201115 22:02:02.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.252" endtime="20201115 22:02:02.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.875" endtime="20201115 22:02:02.278"></status>
</kw>
<msg timestamp="20201115 22:02:02.278" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.287" endtime="20201115 22:02:02.308"></status>
</kw>
<msg timestamp="20201115 22:02:02.308" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.286" endtime="20201115 22:02:02.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.311" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.309" endtime="20201115 22:02:02.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.312" endtime="20201115 22:02:02.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.283" endtime="20201115 22:02:02.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.281" endtime="20201115 22:02:02.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.321" endtime="20201115 22:02:02.609"></status>
</kw>
<msg timestamp="20201115 22:02:02.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.320" endtime="20201115 22:02:02.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.614" endtime="20201115 22:02:02.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.622" endtime="20201115 22:02:02.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.317" endtime="20201115 22:02:02.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.315" endtime="20201115 22:02:02.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.629" level="INFO">${RESULT} = [{'time': 0.022646764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.022785667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.626" endtime="20201115 22:02:02.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.643" level="INFO">${OVERHEAD} = {'diff': [1.2028000000000733e-05, 1.2097999999998582e-05, 1.2124999999998248e-05, 1.2055999999999872e-05, 1.2055999999999872e-05, 1.2111000000002148e-05, 1.2069999999999442e-05, 1.2138999999997818e-05...</msg>
<status status="PASS" starttime="20201115 22:02:02.630" endtime="20201115 22:02:02.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.648" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:02.647" endtime="20201115 22:02:02.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.651" level="INFO">VALUE: [1.2028000000000733e-05, 1.2097999999998582e-05, 1.2124999999998248e-05, 1.2055999999999872e-05, 1.2055999999999872e-05, 1.2111000000002148e-05, 1.2069999999999442e-05, 1.2138999999997818e-05, 1.2096999999999108e-05, 1.2082999999999539e-05, 1.204099999999736e-05, 1.2111000000002148e-05, 1.2097999999998582e-05, 1.2068999999999969e-05, 1.2097999999998582e-05, 1.2125000000001718e-05, 1.2068999999999969e-05, 1.2111000000002148e-05, 1.2124999999998248e-05, 1.2082999999999539e-05, 1.2055000000000399e-05, 1.2082999999999539e-05, 1.2042000000000302e-05, 1.2084000000002482e-05, 1.2082999999999539e-05, 1.2069999999999442e-05, 1.2111000000002148e-05, 1.2096999999999108e-05, 1.2068999999999969e-05, 1.2096999999999108e-05, 1.2153000000000858e-05, 1.2096999999999108e-05, 1.2111000000002148e-05, 1.2042000000000302e-05, 1.2124999999998248e-05, 1.2096999999999108e-05, 1.2096999999999108e-05, 1.2055999999999872e-05, 1.2110999999998678e-05, 1.2069999999999442e-05, 1.2098000000002052e-05, 1.2068999999999969e-05, 1.2110999999998678e-05, 1.2082999999999539e-05, 1.2041999999996833e-05, 1.2110999999998678e-05, 1.2013999999997693e-05, 1.2082999999999539e-05, 1.2082999999999539e-05, 1.2082999999999539e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.649" endtime="20201115 22:02:02.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.644" endtime="20201115 22:02:02.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.654" endtime="20201115 22:02:02.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.658" endtime="20201115 22:02:02.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.656" endtime="20201115 22:02:02.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.652" endtime="20201115 22:02:02.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.279" endtime="20201115 22:02:02.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.652" endtime="20201115 22:02:02.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.651" endtime="20201115 22:02:02.679"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.681" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.691" endtime="20201115 22:02:02.710"></status>
</kw>
<msg timestamp="20201115 22:02:02.710" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.689" endtime="20201115 22:02:02.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.713" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.711" endtime="20201115 22:02:02.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.714" endtime="20201115 22:02:02.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.686" endtime="20201115 22:02:02.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.684" endtime="20201115 22:02:02.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.724" endtime="20201115 22:02:03.008"></status>
</kw>
<msg timestamp="20201115 22:02:03.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02384675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023859694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:02.722" endtime="20201115 22:02:03.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02384675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023859694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:03.012" endtime="20201115 22:02:03.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.021" endtime="20201115 22:02:03.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.719" endtime="20201115 22:02:03.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.718" endtime="20201115 22:02:03.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.028" level="INFO">${RESULT} = [{'time': 0.023859694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2944000000000844e-05, 'source_diff': 1.2944000000000844e-05}, {'time': 0.024013264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:03.024" endtime="20201115 22:02:03.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.042" level="INFO">${OVERHEAD} = {'diff': [1.2944000000000844e-05, 1.2860999999999428e-05, 1.2916999999997708e-05, 1.2958000000000414e-05, 1.2931000000000747e-05, 1.2888000000002564e-05, 1.2944000000000844e-05, 1.2958000000000414e-05...</msg>
<status status="PASS" starttime="20201115 22:02:03.029" endtime="20201115 22:02:03.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.046" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:03.045" endtime="20201115 22:02:03.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.049" level="INFO">VALUE: [1.2944000000000844e-05, 1.2860999999999428e-05, 1.2916999999997708e-05, 1.2958000000000414e-05, 1.2931000000000747e-05, 1.2888000000002564e-05, 1.2944000000000844e-05, 1.2958000000000414e-05, 1.2930000000001274e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2917000000001178e-05, 1.2945000000000317e-05, 1.2889000000002038e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.2945000000000317e-05, 1.2916999999997708e-05, 1.2888999999998568e-05, 1.2944000000000844e-05, 1.2917000000001178e-05, 1.2958000000000414e-05, 1.2930000000001274e-05, 1.2916000000001704e-05, 1.2944000000000844e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2931000000000747e-05, 1.2930999999997278e-05, 1.2888999999998568e-05, 1.2958000000000414e-05, 1.2930000000001274e-05, 1.2944000000000844e-05, 1.2903000000001608e-05, 1.2958999999999887e-05, 1.2915999999998234e-05, 1.2944000000000844e-05, 1.2958000000000414e-05, 1.2916999999997708e-05, 1.2931000000000747e-05, 1.2944000000000844e-05, 1.2930000000001274e-05, 1.2916999999997708e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.2958000000000414e-05, 1.2945000000000317e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.048" endtime="20201115 22:02:03.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.043" endtime="20201115 22:02:03.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.052" endtime="20201115 22:02:03.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.056" endtime="20201115 22:02:03.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.054" endtime="20201115 22:02:03.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.051" endtime="20201115 22:02:03.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.682" endtime="20201115 22:02:03.077"></status>
</kw>
<msg timestamp="20201115 22:02:03.077" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.086" endtime="20201115 22:02:03.106"></status>
</kw>
<msg timestamp="20201115 22:02:03.107" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.085" endtime="20201115 22:02:03.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.110" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.108" endtime="20201115 22:02:03.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.111" endtime="20201115 22:02:03.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.082" endtime="20201115 22:02:03.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.080" endtime="20201115 22:02:03.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.120" endtime="20201115 22:02:03.408"></status>
</kw>
<msg timestamp="20201115 22:02:03.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.119" endtime="20201115 22:02:03.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.412" endtime="20201115 22:02:03.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.421" endtime="20201115 22:02:03.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.116" endtime="20201115 22:02:03.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.114" endtime="20201115 22:02:03.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.427" level="INFO">${RESULT} = [{'time': 0.022379625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.022533125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:03.424" endtime="20201115 22:02:03.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.442" level="INFO">${OVERHEAD} = {'diff': [1.2917000000001178e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2917000000001178e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2875000000002468e-05...</msg>
<status status="PASS" starttime="20201115 22:02:03.429" endtime="20201115 22:02:03.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.446" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:03.445" endtime="20201115 22:02:03.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.449" level="INFO">VALUE: [1.2917000000001178e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2917000000001178e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2875000000002468e-05, 1.2931000000000747e-05, 1.2971999999999984e-05, 1.2902999999998138e-05, 1.2944000000000844e-05, 1.2944000000000844e-05, 1.2931000000000747e-05, 1.2930000000001274e-05, 1.2931000000000747e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2930000000001274e-05, 1.2944000000000844e-05, 1.2986000000003023e-05, 1.2958000000000414e-05, 1.2945000000000317e-05, 1.2945000000000317e-05, 1.2944000000000844e-05, 1.2931000000000747e-05, 1.2958000000000414e-05, 1.2972999999999457e-05, 1.2930000000001274e-05, 1.2931000000000747e-05, 1.2930999999997278e-05, 1.2931000000000747e-05, 1.2916000000001704e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2917000000001178e-05, 1.2958999999999887e-05, 1.2944000000000844e-05, 1.2958000000000414e-05, 1.2944999999996848e-05, 1.2930999999997278e-05, 1.2931000000000747e-05, 1.2971999999999984e-05, 1.2929999999997804e-05, 1.2944999999996848e-05, 1.2874999999998998e-05, 1.2958000000000414e-05, 1.2930000000001274e-05, 1.2916000000001704e-05, 1.2971999999999984e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.447" endtime="20201115 22:02:03.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.442" endtime="20201115 22:02:03.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.452" endtime="20201115 22:02:03.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.456" endtime="20201115 22:02:03.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.454" endtime="20201115 22:02:03.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.450" endtime="20201115 22:02:03.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.078" endtime="20201115 22:02:03.476"></status>
</kw>
<msg timestamp="20201115 22:02:03.477" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.487" endtime="20201115 22:02:03.509"></status>
</kw>
<msg timestamp="20201115 22:02:03.509" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.485" endtime="20201115 22:02:03.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.510" endtime="20201115 22:02:03.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.513" endtime="20201115 22:02:03.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.482" endtime="20201115 22:02:03.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.479" endtime="20201115 22:02:03.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.523" endtime="20201115 22:02:03.810"></status>
</kw>
<msg timestamp="20201115 22:02:03.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024625972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024638931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.521" endtime="20201115 22:02:03.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024625972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024638931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.814" endtime="20201115 22:02:03.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.822" endtime="20201115 22:02:03.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.518" endtime="20201115 22:02:03.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.516" endtime="20201115 22:02:03.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.829" level="INFO">${RESULT} = [{'time': 0.024638931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2958999999999887e-05, 'source_diff': 1.2958999999999887e-05}, {'time': 0.024787611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:03.826" endtime="20201115 22:02:03.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.843" level="INFO">${OVERHEAD} = {'diff': [1.2958999999999887e-05, 1.2944000000000844e-05, 1.2915999999998234e-05, 1.2945000000000317e-05, 1.2958000000000414e-05, 1.3013999999998693e-05, 1.2917000000001178e-05, 1.2958000000000414e-05...</msg>
<status status="PASS" starttime="20201115 22:02:03.830" endtime="20201115 22:02:03.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.848" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:03.847" endtime="20201115 22:02:03.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.851" level="INFO">VALUE: [1.2958999999999887e-05, 1.2944000000000844e-05, 1.2915999999998234e-05, 1.2945000000000317e-05, 1.2958000000000414e-05, 1.3013999999998693e-05, 1.2917000000001178e-05, 1.2958000000000414e-05, 1.2930000000001274e-05, 1.2888999999998568e-05, 1.2958999999999887e-05, 1.2931000000000747e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2944000000000844e-05, 1.2958000000000414e-05, 1.2945000000000317e-05, 1.2958999999999887e-05, 1.2944000000000844e-05, 1.2943999999997374e-05, 1.2986000000003023e-05, 1.2945000000000317e-05, 1.2985999999999553e-05, 1.2917000000001178e-05, 1.2944000000000844e-05, 1.2889000000002038e-05, 1.2929999999997804e-05, 1.2958000000000414e-05, 1.2943999999997374e-05, 1.2971999999999984e-05, 1.2917000000001178e-05, 1.2945000000000317e-05, 1.2916000000001704e-05, 1.2903000000001608e-05, 1.2916000000001704e-05, 1.2930000000001274e-05, 1.2930000000001274e-05, 1.2931000000000747e-05, 1.2930999999997278e-05, 1.2930999999997278e-05, 1.2929999999997804e-05, 1.3027000000002259e-05, 1.2945000000000317e-05, 1.2915999999998234e-05, 1.2945000000000317e-05, 1.2945000000000317e-05, 1.2971999999999984e-05, 1.2945000000000317e-05, 1.2945000000000317e-05, 1.2945000000000317e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.849" endtime="20201115 22:02:03.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.844" endtime="20201115 22:02:03.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.854" endtime="20201115 22:02:03.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.858" endtime="20201115 22:02:03.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.856" endtime="20201115 22:02:03.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.852" endtime="20201115 22:02:03.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.477" endtime="20201115 22:02:03.879"></status>
</kw>
<msg timestamp="20201115 22:02:03.879" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.888" endtime="20201115 22:02:03.910"></status>
</kw>
<msg timestamp="20201115 22:02:03.911" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.887" endtime="20201115 22:02:03.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.912" endtime="20201115 22:02:03.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.915" endtime="20201115 22:02:03.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.884" endtime="20201115 22:02:03.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.882" endtime="20201115 22:02:03.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.924" endtime="20201115 22:02:04.213"></status>
</kw>
<msg timestamp="20201115 22:02:04.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024236667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024249597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.922" endtime="20201115 22:02:04.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024236667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024249597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.217" endtime="20201115 22:02:04.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.225" endtime="20201115 22:02:04.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.920" endtime="20201115 22:02:04.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.918" endtime="20201115 22:02:04.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.232" level="INFO">${RESULT} = [{'time': 0.024249597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2930000000001274e-05, 'source_diff': 1.2930000000001274e-05}, {'time': 0.024399194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:04.229" endtime="20201115 22:02:04.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.246" level="INFO">${OVERHEAD} = {'diff': [1.2930000000001274e-05, 1.2929999999997804e-05, 1.2917000000001178e-05, 1.2902999999998138e-05, 1.2958999999999887e-05, 1.2972999999999457e-05, 1.2931000000000747e-05, 1.2931000000000747e-05...</msg>
<status status="PASS" starttime="20201115 22:02:04.233" endtime="20201115 22:02:04.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.251" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:04.250" endtime="20201115 22:02:04.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.253" level="INFO">VALUE: [1.2930000000001274e-05, 1.2929999999997804e-05, 1.2917000000001178e-05, 1.2902999999998138e-05, 1.2958999999999887e-05, 1.2972999999999457e-05, 1.2931000000000747e-05, 1.2931000000000747e-05, 1.2930999999997278e-05, 1.2930000000001274e-05, 1.2917000000001178e-05, 1.2944000000000844e-05, 1.2916999999997708e-05, 1.2944000000000844e-05, 1.2944000000000844e-05, 1.2958999999999887e-05, 1.2943999999997374e-05, 1.2971999999999984e-05, 1.2874999999998998e-05, 1.2958000000000414e-05, 1.2930000000001274e-05, 1.2874999999998998e-05, 1.2986999999999027e-05, 1.2944000000000844e-05, 1.2929999999997804e-05, 1.2889000000002038e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2889000000002038e-05, 1.2945000000000317e-05, 1.2930999999997278e-05, 1.2944999999996848e-05, 1.2917000000001178e-05, 1.2930000000001274e-05, 1.2860999999999428e-05, 1.2958000000000414e-05, 1.2887999999999095e-05, 1.2972000000003453e-05, 1.2915999999998234e-05, 1.2888999999998568e-05, 1.2944000000000844e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2945000000000317e-05, 1.2944000000000844e-05, 1.2846999999999859e-05, 1.2958999999999887e-05, 1.2985999999999553e-05, 1.2958999999999887e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.252" endtime="20201115 22:02:04.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.247" endtime="20201115 22:02:04.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.257" endtime="20201115 22:02:04.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.261" endtime="20201115 22:02:04.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.259" endtime="20201115 22:02:04.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.255" endtime="20201115 22:02:04.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.880" endtime="20201115 22:02:04.281"></status>
</kw>
<msg timestamp="20201115 22:02:04.282" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.291" endtime="20201115 22:02:04.312"></status>
</kw>
<msg timestamp="20201115 22:02:04.312" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.289" endtime="20201115 22:02:04.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.313" endtime="20201115 22:02:04.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.316" endtime="20201115 22:02:04.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.287" endtime="20201115 22:02:04.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.284" endtime="20201115 22:02:04.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.326" endtime="20201115 22:02:04.614"></status>
</kw>
<msg timestamp="20201115 22:02:04.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023431444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023444361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.324" endtime="20201115 22:02:04.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023431444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023444361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.618" endtime="20201115 22:02:04.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.626" endtime="20201115 22:02:04.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.321" endtime="20201115 22:02:04.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.319" endtime="20201115 22:02:04.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.633" level="INFO">${RESULT} = [{'time': 0.023444361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.023593375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:04.630" endtime="20201115 22:02:04.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.647" level="INFO">${OVERHEAD} = {'diff': [1.2917000000001178e-05, 1.2944000000000844e-05, 1.2931000000000747e-05, 1.2943999999997374e-05, 1.2930999999997278e-05, 1.3014000000002163e-05, 1.2930000000001274e-05, 1.2985999999999553e-05...</msg>
<status status="PASS" starttime="20201115 22:02:04.634" endtime="20201115 22:02:04.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.652" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:04.651" endtime="20201115 22:02:04.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.655" level="INFO">VALUE: [1.2917000000001178e-05, 1.2944000000000844e-05, 1.2931000000000747e-05, 1.2943999999997374e-05, 1.2930999999997278e-05, 1.3014000000002163e-05, 1.2930000000001274e-05, 1.2985999999999553e-05, 1.2874999999998998e-05, 1.2958000000000414e-05, 1.2931000000000747e-05, 1.2943999999997374e-05, 1.2931000000000747e-05, 1.2944000000000844e-05, 1.2916999999997708e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2945000000000317e-05, 1.2958999999999887e-05, 1.2944000000000844e-05, 1.2958000000000414e-05, 1.2860999999999428e-05, 1.2945000000000317e-05, 1.2930000000001274e-05, 1.2903000000001608e-05, 1.2916999999997708e-05, 1.2944000000000844e-05, 1.2958000000000414e-05, 1.2999999999999123e-05, 1.2916000000001704e-05, 1.3013999999998693e-05, 1.2958000000000414e-05, 1.2959000000003357e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.2999999999999123e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2931000000000747e-05, 1.2971999999999984e-05, 1.2945000000000317e-05, 1.2958000000000414e-05, 1.2903000000001608e-05, 1.2931000000000747e-05, 1.2943999999997374e-05, 1.2944000000000844e-05, 1.2931000000000747e-05, 1.2888999999998568e-05, 1.2902000000002134e-05, 1.2971999999999984e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.653" endtime="20201115 22:02:04.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.648" endtime="20201115 22:02:04.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.664" endtime="20201115 22:02:04.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.668" endtime="20201115 22:02:04.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.666" endtime="20201115 22:02:04.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.662" endtime="20201115 22:02:04.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.282" endtime="20201115 22:02:04.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.680" endtime="20201115 22:02:04.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.679" endtime="20201115 22:02:04.689"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.692" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.701" endtime="20201115 22:02:04.725"></status>
</kw>
<msg timestamp="20201115 22:02:04.725" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.699" endtime="20201115 22:02:04.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.726" endtime="20201115 22:02:04.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.729" endtime="20201115 22:02:04.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.697" endtime="20201115 22:02:04.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.694" endtime="20201115 22:02:04.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.738" endtime="20201115 22:02:05.025"></status>
</kw>
<msg timestamp="20201115 22:02:05.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028104097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028117889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.737" endtime="20201115 22:02:05.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028104097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028117889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.030" endtime="20201115 22:02:05.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.038" endtime="20201115 22:02:05.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.734" endtime="20201115 22:02:05.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.732" endtime="20201115 22:02:05.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.045" level="INFO">${RESULT} = [{'time': 0.028117889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3791999999998583e-05, 'source_diff': 1.3791999999998583e-05}, {'time': 0.028281611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:05.042" endtime="20201115 22:02:05.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.059" level="INFO">${OVERHEAD} = {'diff': [1.3791999999998583e-05, 1.3792000000002053e-05, 1.3749999999999873e-05, 1.3806000000001623e-05, 1.3763999999999443e-05, 1.3833000000001289e-05, 1.3791000000002579e-05, 1.3806000000001623e-05...</msg>
<status status="PASS" starttime="20201115 22:02:05.046" endtime="20201115 22:02:05.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.064" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:05.063" endtime="20201115 22:02:05.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.067" level="INFO">VALUE: [1.3791999999998583e-05, 1.3792000000002053e-05, 1.3749999999999873e-05, 1.3806000000001623e-05, 1.3763999999999443e-05, 1.3833000000001289e-05, 1.3791000000002579e-05, 1.3806000000001623e-05, 1.3792000000002053e-05, 1.3763999999999443e-05, 1.3805000000002149e-05, 1.3707999999997694e-05, 1.3806000000001623e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.3833000000001289e-05, 1.3749999999999873e-05, 1.3819000000001719e-05, 1.381899999999825e-05, 1.3735999999996834e-05, 1.3888999999996099e-05, 1.3791999999998583e-05, 1.377699999999954e-05, 1.3861000000003898e-05, 1.3805000000005618e-05, 1.379099999999911e-05, 1.3820000000004662e-05, 1.381899999999825e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.377699999999954e-05, 1.3791999999998583e-05, 1.3805999999998153e-05, 1.3763999999999443e-05, 1.3806000000005092e-05, 1.3806000000005092e-05, 1.3749999999999873e-05, 1.3820000000004662e-05, 1.3791999999998583e-05, 1.3860999999996959e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3791000000006048e-05, 1.3777999999999013e-05, 1.379099999999911e-05, 1.379099999999911e-05, 1.384699999999739e-05, 1.379099999999911e-05, 1.3833999999997293e-05, 1.3763999999999443e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.065" endtime="20201115 22:02:05.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.060" endtime="20201115 22:02:05.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.070" endtime="20201115 22:02:05.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.074" endtime="20201115 22:02:05.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.072" endtime="20201115 22:02:05.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.069" endtime="20201115 22:02:05.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.692" endtime="20201115 22:02:05.095"></status>
</kw>
<msg timestamp="20201115 22:02:05.095" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.104" endtime="20201115 22:02:05.126"></status>
</kw>
<msg timestamp="20201115 22:02:05.127" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.103" endtime="20201115 22:02:05.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.129" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.128" endtime="20201115 22:02:05.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.130" endtime="20201115 22:02:05.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.100" endtime="20201115 22:02:05.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.098" endtime="20201115 22:02:05.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.140" endtime="20201115 22:02:05.429"></status>
</kw>
<msg timestamp="20201115 22:02:05.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02406225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024076056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:05.138" endtime="20201115 22:02:05.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02406225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024076056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:05.433" endtime="20201115 22:02:05.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.442" endtime="20201115 22:02:05.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.136" endtime="20201115 22:02:05.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.134" endtime="20201115 22:02:05.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.449" level="INFO">${RESULT} = [{'time': 0.024076056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3805999999998153e-05, 'source_diff': 1.3805999999998153e-05}, {'time': 0.024241194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:05.445" endtime="20201115 22:02:05.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.463" level="INFO">${OVERHEAD} = {'diff': [1.3805999999998153e-05, 1.3819000000001719e-05, 1.3805000000002149e-05, 1.3792000000002053e-05, 1.379099999999911e-05, 1.3792000000002053e-05, 1.380499999999868e-05, 1.3791999999998583e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:05.450" endtime="20201115 22:02:05.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.468" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:05.467" endtime="20201115 22:02:05.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.471" level="INFO">VALUE: [1.3805999999998153e-05, 1.3819000000001719e-05, 1.3805000000002149e-05, 1.3792000000002053e-05, 1.379099999999911e-05, 1.3792000000002053e-05, 1.380499999999868e-05, 1.3791999999998583e-05, 1.380499999999868e-05, 1.3820000000001192e-05, 1.3777999999999013e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3763999999999443e-05, 1.3820000000001192e-05, 1.3806000000001623e-05, 1.377699999999954e-05, 1.3736000000000304e-05, 1.379099999999911e-05, 1.3820000000001192e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3722000000000734e-05, 1.3806000000001623e-05, 1.3777999999999013e-05, 1.3750000000003343e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3763999999999443e-05, 1.3764000000002913e-05, 1.3820000000001192e-05, 1.381899999999825e-05, 1.380499999999868e-05, 1.380499999999868e-05, 1.3819999999997723e-05, 1.3806000000001623e-05, 1.379099999999911e-05, 1.381899999999825e-05, 1.3805999999998153e-05, 1.3749999999999873e-05, 1.3820000000001192e-05, 1.3806000000001623e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.3820000000004662e-05, 1.377699999999954e-05, 1.3792000000005522e-05, 1.3791999999998583e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.469" endtime="20201115 22:02:05.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.464" endtime="20201115 22:02:05.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.474" endtime="20201115 22:02:05.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.478" endtime="20201115 22:02:05.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.476" endtime="20201115 22:02:05.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.472" endtime="20201115 22:02:05.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.096" endtime="20201115 22:02:05.498"></status>
</kw>
<msg timestamp="20201115 22:02:05.499" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.508" endtime="20201115 22:02:05.528"></status>
</kw>
<msg timestamp="20201115 22:02:05.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.506" endtime="20201115 22:02:05.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.529" endtime="20201115 22:02:05.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.532" endtime="20201115 22:02:05.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.504" endtime="20201115 22:02:05.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.501" endtime="20201115 22:02:05.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.541" endtime="20201115 22:02:05.829"></status>
</kw>
<msg timestamp="20201115 22:02:05.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.540" endtime="20201115 22:02:05.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.833" endtime="20201115 22:02:05.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.842" endtime="20201115 22:02:05.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.537" endtime="20201115 22:02:05.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.535" endtime="20201115 22:02:05.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.849" level="INFO">${RESULT} = [{'time': 0.022441222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.380499999999868e-05, 'source_diff': 1.380499999999868e-05}, {'time': 0.02260825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:05.845" endtime="20201115 22:02:05.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.863" level="INFO">${OVERHEAD} = {'diff': [1.380499999999868e-05, 1.3805999999998153e-05, 1.3764000000002913e-05, 1.381899999999825e-05, 1.3833999999997293e-05, 1.3749999999999873e-05, 1.3833000000001289e-05, 1.3763999999999443e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:05.850" endtime="20201115 22:02:05.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.868" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:05.867" endtime="20201115 22:02:05.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.870" level="INFO">VALUE: [1.380499999999868e-05, 1.3805999999998153e-05, 1.3764000000002913e-05, 1.381899999999825e-05, 1.3833999999997293e-05, 1.3749999999999873e-05, 1.3833000000001289e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.383299999999782e-05, 1.3834000000000762e-05, 1.3833000000001289e-05, 1.3805999999998153e-05, 1.380499999999868e-05, 1.3791999999998583e-05, 1.380499999999868e-05, 1.3736999999999777e-05, 1.3833000000001289e-05, 1.380499999999868e-05, 1.3778000000002483e-05, 1.380499999999868e-05, 1.3805999999998153e-05, 1.3819000000001719e-05, 1.3749999999999873e-05, 1.3819999999997723e-05, 1.3777999999999013e-05, 1.379099999999911e-05, 1.3764000000002913e-05, 1.3805000000002149e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3833000000001289e-05, 1.3805999999998153e-05, 1.3805999999998153e-05, 1.3819999999997723e-05, 1.3792000000002053e-05, 1.3791999999998583e-05, 1.3819000000001719e-05, 1.379099999999911e-05, 1.3805999999998153e-05, 1.3791000000002579e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3834000000000762e-05, 1.3791999999998583e-05, 1.3805000000002149e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.869" endtime="20201115 22:02:05.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.864" endtime="20201115 22:02:05.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.874" endtime="20201115 22:02:05.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.877" endtime="20201115 22:02:05.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.876" endtime="20201115 22:02:05.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.872" endtime="20201115 22:02:05.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.499" endtime="20201115 22:02:05.898"></status>
</kw>
<msg timestamp="20201115 22:02:05.898" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.908" endtime="20201115 22:02:05.931"></status>
</kw>
<msg timestamp="20201115 22:02:05.931" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.906" endtime="20201115 22:02:05.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.934" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.932" endtime="20201115 22:02:05.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.935" endtime="20201115 22:02:05.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.903" endtime="20201115 22:02:05.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.901" endtime="20201115 22:02:05.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.944" endtime="20201115 22:02:06.231"></status>
</kw>
<msg timestamp="20201115 22:02:06.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024528556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024542389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.942" endtime="20201115 22:02:06.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024528556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024542389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.235" endtime="20201115 22:02:06.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.244" endtime="20201115 22:02:06.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.940" endtime="20201115 22:02:06.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.938" endtime="20201115 22:02:06.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.251" level="INFO">${RESULT} = [{'time': 0.024542389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.024708306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:06.248" endtime="20201115 22:02:06.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.265" level="INFO">${OVERHEAD} = {'diff': [1.3833000000001289e-05, 1.3819999999997723e-05, 1.3778000000002483e-05, 1.381899999999825e-05, 1.3820000000001192e-05, 1.3749999999999873e-05, 1.380499999999868e-05, 1.3792000000002053e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:06.252" endtime="20201115 22:02:06.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.270" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:06.269" endtime="20201115 22:02:06.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.273" level="INFO">VALUE: [1.3833000000001289e-05, 1.3819999999997723e-05, 1.3778000000002483e-05, 1.381899999999825e-05, 1.3820000000001192e-05, 1.3749999999999873e-05, 1.380499999999868e-05, 1.3792000000002053e-05, 1.3736000000000304e-05, 1.3833999999997293e-05, 1.3819000000001719e-05, 1.3805999999998153e-05, 1.377699999999954e-05, 1.3791999999998583e-05, 1.3778000000002483e-05, 1.3792000000002053e-05, 1.3833000000001289e-05, 1.3777999999999013e-05, 1.379099999999911e-05, 1.3777999999999013e-05, 1.3791999999998583e-05, 1.381899999999825e-05, 1.3791999999998583e-05, 1.3778000000002483e-05, 1.3806000000001623e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.3736000000000304e-05, 1.380499999999868e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.376299999999997e-05, 1.3778000000002483e-05, 1.3861000000000429e-05, 1.3805999999998153e-05, 1.380499999999868e-05, 1.3805999999998153e-05, 1.3708000000001164e-05, 1.3763999999999443e-05, 1.379099999999911e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.3708000000001164e-05, 1.3861000000003898e-05, 1.3819999999997723e-05, 1.381899999999825e-05, 1.3805999999998153e-05, 1.379099999999911e-05, 1.3763999999999443e-05, 1.384699999999739e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.271" endtime="20201115 22:02:06.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.266" endtime="20201115 22:02:06.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.276" endtime="20201115 22:02:06.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.279" endtime="20201115 22:02:06.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.278" endtime="20201115 22:02:06.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.274" endtime="20201115 22:02:06.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.899" endtime="20201115 22:02:06.300"></status>
</kw>
<msg timestamp="20201115 22:02:06.300" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.310" endtime="20201115 22:02:06.332"></status>
</kw>
<msg timestamp="20201115 22:02:06.332" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.308" endtime="20201115 22:02:06.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.334" endtime="20201115 22:02:06.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.336" endtime="20201115 22:02:06.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.305" endtime="20201115 22:02:06.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.303" endtime="20201115 22:02:06.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.345" endtime="20201115 22:02:06.632"></status>
</kw>
<msg timestamp="20201115 22:02:06.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024349208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.344" endtime="20201115 22:02:06.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024349208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.637" endtime="20201115 22:02:06.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.645" endtime="20201115 22:02:06.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.341" endtime="20201115 22:02:06.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.340" endtime="20201115 22:02:06.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.653" level="INFO">${RESULT} = [{'time': 0.024363028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3819999999997723e-05, 'source_diff': 1.3819999999997723e-05}, {'time': 0.024530778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:06.649" endtime="20201115 22:02:06.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.666" level="INFO">${OVERHEAD} = {'diff': [1.3819999999997723e-05, 1.3805999999998153e-05, 1.3777999999999013e-05, 1.3806000000001623e-05, 1.380499999999868e-05, 1.3819999999997723e-05, 1.3777999999999013e-05, 1.3805999999998153e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:06.654" endtime="20201115 22:02:06.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.671" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:06.670" endtime="20201115 22:02:06.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.674" level="INFO">VALUE: [1.3819999999997723e-05, 1.3805999999998153e-05, 1.3777999999999013e-05, 1.3806000000001623e-05, 1.380499999999868e-05, 1.3819999999997723e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3806000000001623e-05, 1.3805000000002149e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.380499999999868e-05, 1.3820000000001192e-05, 1.376299999999997e-05, 1.377699999999954e-05, 1.377699999999954e-05, 1.3778000000002483e-05, 1.3805999999998153e-05, 1.381899999999825e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.3792000000002053e-05, 1.3820000000001192e-05, 1.3806000000001623e-05, 1.380499999999868e-05, 1.381899999999825e-05, 1.3820000000001192e-05, 1.3806000000001623e-05, 1.3806000000001623e-05, 1.381899999999825e-05, 1.3833999999997293e-05, 1.381899999999825e-05, 1.3792000000002053e-05, 1.3791999999998583e-05, 1.3806000000001623e-05, 1.3806000000001623e-05, 1.3763999999999443e-05, 1.3819999999997723e-05, 1.3806000000005092e-05, 1.376299999999997e-05, 1.3819999999997723e-05, 1.380499999999868e-05, 1.3777999999999013e-05, 1.3791999999998583e-05, 1.381899999999825e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.672" endtime="20201115 22:02:06.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.667" endtime="20201115 22:02:06.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.677" endtime="20201115 22:02:06.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.681" endtime="20201115 22:02:06.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.679" endtime="20201115 22:02:06.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.675" endtime="20201115 22:02:06.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.301" endtime="20201115 22:02:06.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.691" endtime="20201115 22:02:06.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.690" endtime="20201115 22:02:06.702"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.704" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.713" endtime="20201115 22:02:06.734"></status>
</kw>
<msg timestamp="20201115 22:02:06.734" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.712" endtime="20201115 22:02:06.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.737" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.735" endtime="20201115 22:02:06.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.738" endtime="20201115 22:02:06.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.709" endtime="20201115 22:02:06.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.707" endtime="20201115 22:02:06.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.748" endtime="20201115 22:02:07.036"></status>
</kw>
<msg timestamp="20201115 22:02:07.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025059708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025074347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.746" endtime="20201115 22:02:07.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025059708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025074347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.040" endtime="20201115 22:02:07.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.049" endtime="20201115 22:02:07.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.743" endtime="20201115 22:02:07.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.742" endtime="20201115 22:02:07.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.056" level="INFO">${RESULT} = [{'time': 0.025074347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.025256875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:07.052" endtime="20201115 22:02:07.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.070" level="INFO">${OVERHEAD} = {'diff': [1.4639000000000318e-05, 1.4639000000000318e-05, 1.461099999999771e-05, 1.4611000000001179e-05, 1.4638000000000845e-05, 1.4652999999999888e-05, 1.4652000000000415e-05, 1.4666999999999458e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:07.057" endtime="20201115 22:02:07.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.074" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:07.073" endtime="20201115 22:02:07.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.077" level="INFO">VALUE: [1.4639000000000318e-05, 1.4639000000000318e-05, 1.461099999999771e-05, 1.4611000000001179e-05, 1.4638000000000845e-05, 1.4652999999999888e-05, 1.4652000000000415e-05, 1.4666999999999458e-05, 1.4611000000001179e-05, 1.4652999999999888e-05, 1.4624999999997279e-05, 1.4625000000000749e-05, 1.4666999999999458e-05, 1.4666999999999458e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4667000000002928e-05, 1.4722000000001734e-05, 1.4652999999999888e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4665999999999985e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4611000000001179e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4665999999999985e-05, 1.4665999999999985e-05, 1.4652999999999888e-05, 1.4624999999997279e-05, 1.4736000000001304e-05, 1.4624999999997279e-05, 1.4652999999996419e-05, 1.461099999999771e-05, 1.4637999999997375e-05, 1.4653000000003358e-05, 1.4653000000003358e-05, 1.461099999999771e-05, 1.4679999999996085e-05, 1.4667000000002928e-05, 1.4639000000003788e-05, 1.4665999999996515e-05, 1.4624999999997279e-05, 1.4681000000002498e-05, 1.4651999999996945e-05, 1.4653000000003358e-05, 1.4666999999995989e-05]</msg>
<status status="PASS" starttime="20201115 22:02:07.075" endtime="20201115 22:02:07.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.071" endtime="20201115 22:02:07.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.080" endtime="20201115 22:02:07.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.084" endtime="20201115 22:02:07.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.082" endtime="20201115 22:02:07.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.079" endtime="20201115 22:02:07.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.705" endtime="20201115 22:02:07.105"></status>
</kw>
<msg timestamp="20201115 22:02:07.105" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.114" endtime="20201115 22:02:07.141"></status>
</kw>
<msg timestamp="20201115 22:02:07.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.112" endtime="20201115 22:02:07.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.145" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.143" endtime="20201115 22:02:07.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.146" endtime="20201115 22:02:07.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.110" endtime="20201115 22:02:07.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.108" endtime="20201115 22:02:07.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.156" endtime="20201115 22:02:07.442"></status>
</kw>
<msg timestamp="20201115 22:02:07.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023880986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.154" endtime="20201115 22:02:07.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023880986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.446" endtime="20201115 22:02:07.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.455" endtime="20201115 22:02:07.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.151" endtime="20201115 22:02:07.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.150" endtime="20201115 22:02:07.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.462" level="INFO">${RESULT} = [{'time': 0.023895653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4666999999999458e-05, 'source_diff': 1.4666999999999458e-05}, {'time': 0.024078236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:07.459" endtime="20201115 22:02:07.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.476" level="INFO">${OVERHEAD} = {'diff': [1.4666999999999458e-05, 1.4666999999999458e-05, 1.4652999999999888e-05, 1.4652999999999888e-05, 1.458299999999857e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4611000000001179e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:07.463" endtime="20201115 22:02:07.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.481" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:07.479" endtime="20201115 22:02:07.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.483" level="INFO">VALUE: [1.4666999999999458e-05, 1.4666999999999458e-05, 1.4652999999999888e-05, 1.4652999999999888e-05, 1.458299999999857e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4611000000001179e-05, 1.461099999999771e-05, 1.4667000000002928e-05, 1.4611000000001179e-05, 1.459699999999814e-05, 1.4652999999999888e-05, 1.4624999999997279e-05, 1.4665999999999985e-05, 1.4611000000001179e-05, 1.4638999999996849e-05, 1.4679999999999555e-05, 1.4652999999999888e-05, 1.4667000000002928e-05, 1.4639000000000318e-05, 1.4666999999999458e-05, 1.4665999999999985e-05, 1.4667000000002928e-05, 1.4639000000000318e-05, 1.4556000000002373e-05, 1.4666999999999458e-05, 1.4597000000001609e-05, 1.4624999999997279e-05, 1.4652999999999888e-05, 1.4666999999999458e-05, 1.4639000000000318e-05, 1.4694000000002594e-05, 1.4638999999996849e-05, 1.4624999999997279e-05, 1.461099999999771e-05, 1.461099999999771e-05, 1.4666999999999458e-05, 1.4611000000001179e-05, 1.4624999999997279e-05, 1.4652999999999888e-05, 1.4652999999999888e-05, 1.4653000000003358e-05, 1.4680000000003024e-05, 1.4611000000004648e-05, 1.4583999999998043e-05, 1.4611999999997183e-05, 1.461099999999771e-05, 1.4639000000003788e-05, 1.4625000000004218e-05]</msg>
<status status="PASS" starttime="20201115 22:02:07.482" endtime="20201115 22:02:07.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.477" endtime="20201115 22:02:07.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.486" endtime="20201115 22:02:07.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.490" endtime="20201115 22:02:07.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.488" endtime="20201115 22:02:07.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.485" endtime="20201115 22:02:07.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.105" endtime="20201115 22:02:07.511"></status>
</kw>
<msg timestamp="20201115 22:02:07.511" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.521" endtime="20201115 22:02:07.543"></status>
</kw>
<msg timestamp="20201115 22:02:07.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.519" endtime="20201115 22:02:07.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.546" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.545" endtime="20201115 22:02:07.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.547" endtime="20201115 22:02:07.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.516" endtime="20201115 22:02:07.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.514" endtime="20201115 22:02:07.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.557" endtime="20201115 22:02:07.845"></status>
</kw>
<msg timestamp="20201115 22:02:07.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024509222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.555" endtime="20201115 22:02:07.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024509222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.849" endtime="20201115 22:02:07.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.858" endtime="20201115 22:02:07.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.552" endtime="20201115 22:02:07.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.551" endtime="20201115 22:02:07.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.865" level="INFO">${RESULT} = [{'time': 0.024509222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.024686542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:07.861" endtime="20201115 22:02:07.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.879" level="INFO">${OVERHEAD} = {'diff': [1.4639000000000318e-05, 1.4652999999999888e-05, 1.4666999999999458e-05, 1.4611000000001179e-05, 1.4679999999999555e-05, 1.4666999999999458e-05, 1.4639000000000318e-05, 1.4679999999999555e-05...</msg>
<status status="PASS" starttime="20201115 22:02:07.866" endtime="20201115 22:02:07.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.884" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:07.882" endtime="20201115 22:02:07.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.886" level="INFO">VALUE: [1.4639000000000318e-05, 1.4652999999999888e-05, 1.4666999999999458e-05, 1.4611000000001179e-05, 1.4679999999999555e-05, 1.4666999999999458e-05, 1.4639000000000318e-05, 1.4679999999999555e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4666999999999458e-05, 1.4639000000000318e-05, 1.4624999999997279e-05, 1.4638000000000845e-05, 1.4638999999996849e-05, 1.4666999999999458e-05, 1.4639000000000318e-05, 1.4680999999999028e-05, 1.4652999999999888e-05, 1.4625000000000749e-05, 1.4666999999999458e-05, 1.4666999999999458e-05, 1.4666999999999458e-05, 1.4652000000000415e-05, 1.4625000000000749e-05, 1.4693999999999124e-05, 1.4611000000001179e-05, 1.4652999999999888e-05, 1.4666999999999458e-05, 1.4652000000000415e-05, 1.4722000000001734e-05, 1.4709000000001637e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.461099999999771e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4680999999999028e-05, 1.4694000000002594e-05, 1.4680999999995559e-05, 1.458299999999857e-05, 1.4653000000003358e-05, 1.4624999999997279e-05, 1.4652999999996419e-05, 1.4681000000002498e-05, 1.4667000000002928e-05, 1.4679999999996085e-05, 1.4680999999995559e-05, 1.4583999999998043e-05, 1.4695000000002068e-05]</msg>
<status status="PASS" starttime="20201115 22:02:07.885" endtime="20201115 22:02:07.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.880" endtime="20201115 22:02:07.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.889" endtime="20201115 22:02:07.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.893" endtime="20201115 22:02:07.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.891" endtime="20201115 22:02:07.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.888" endtime="20201115 22:02:07.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.512" endtime="20201115 22:02:07.914"></status>
</kw>
<msg timestamp="20201115 22:02:07.914" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.924" endtime="20201115 22:02:07.944"></status>
</kw>
<msg timestamp="20201115 22:02:07.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.922" endtime="20201115 22:02:07.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.946" endtime="20201115 22:02:07.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.949" endtime="20201115 22:02:07.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.919" endtime="20201115 22:02:07.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.917" endtime="20201115 22:02:07.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.958" endtime="20201115 22:02:08.245"></status>
</kw>
<msg timestamp="20201115 22:02:08.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023509444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.957" endtime="20201115 22:02:08.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023509444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.249" endtime="20201115 22:02:08.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.258" endtime="20201115 22:02:08.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.954" endtime="20201115 22:02:08.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.952" endtime="20201115 22:02:08.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.264" level="INFO">${RESULT} = [{'time': 0.023509444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4679999999999555e-05, 'source_diff': 1.4679999999999555e-05}, {'time': 0.023690014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:08.261" endtime="20201115 22:02:08.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.278" level="INFO">${OVERHEAD} = {'diff': [1.4679999999999555e-05, 1.4680999999999028e-05, 1.4652000000000415e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4652000000000415e-05, 1.4667000000002928e-05, 1.4624999999997279e-05...</msg>
<status status="PASS" starttime="20201115 22:02:08.265" endtime="20201115 22:02:08.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.283" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:08.282" endtime="20201115 22:02:08.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.286" level="INFO">VALUE: [1.4679999999999555e-05, 1.4680999999999028e-05, 1.4652000000000415e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4652000000000415e-05, 1.4667000000002928e-05, 1.4624999999997279e-05, 1.459699999999814e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4666999999999458e-05, 1.4598000000001082e-05, 1.4694000000002594e-05, 1.4665999999999985e-05, 1.4625000000000749e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4666999999999458e-05, 1.4624999999997279e-05, 1.4680999999999028e-05, 1.4666999999999458e-05, 1.4708999999998168e-05, 1.4652999999999888e-05, 1.4652000000000415e-05, 1.4625000000000749e-05, 1.4652999999999888e-05, 1.4708000000002164e-05, 1.4625000000000749e-05, 1.458299999999857e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4681000000002498e-05, 1.4665999999999985e-05, 1.4666999999999458e-05, 1.4625000000000749e-05, 1.4652000000000415e-05, 1.4611000000001179e-05, 1.4639000000000318e-05, 1.4665999999999985e-05, 1.4639000000003788e-05, 1.4694999999995129e-05, 1.4681000000002498e-05, 1.4639000000003788e-05, 1.4653000000003358e-05, 1.4709000000001637e-05]</msg>
<status status="PASS" starttime="20201115 22:02:08.284" endtime="20201115 22:02:08.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.279" endtime="20201115 22:02:08.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.290" endtime="20201115 22:02:08.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.293" endtime="20201115 22:02:08.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.292" endtime="20201115 22:02:08.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.288" endtime="20201115 22:02:08.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.915" endtime="20201115 22:02:08.314"></status>
</kw>
<msg timestamp="20201115 22:02:08.314" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.324" endtime="20201115 22:02:08.347"></status>
</kw>
<msg timestamp="20201115 22:02:08.348" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.322" endtime="20201115 22:02:08.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.350" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.349" endtime="20201115 22:02:08.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.351" endtime="20201115 22:02:08.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.319" endtime="20201115 22:02:08.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.317" endtime="20201115 22:02:08.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.361" endtime="20201115 22:02:08.650"></status>
</kw>
<msg timestamp="20201115 22:02:08.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025172069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025186778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.359" endtime="20201115 22:02:08.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025172069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025186778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.655" endtime="20201115 22:02:08.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.663" endtime="20201115 22:02:08.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.357" endtime="20201115 22:02:08.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.355" endtime="20201115 22:02:08.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.670" level="INFO">${RESULT} = [{'time': 0.025186778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4709000000001637e-05, 'source_diff': 1.4709000000001637e-05}, {'time': 0.025367806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:08.667" endtime="20201115 22:02:08.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.684" level="INFO">${OVERHEAD} = {'diff': [1.4709000000001637e-05, 1.4625000000000749e-05, 1.4666000000003454e-05, 1.4694999999998598e-05, 1.4652999999999888e-05, 1.461099999999771e-05, 1.4666999999999458e-05, 1.4625000000000749e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:08.671" endtime="20201115 22:02:08.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.689" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:08.688" endtime="20201115 22:02:08.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.692" level="INFO">VALUE: [1.4709000000001637e-05, 1.4625000000000749e-05, 1.4666000000003454e-05, 1.4694999999998598e-05, 1.4652999999999888e-05, 1.461099999999771e-05, 1.4666999999999458e-05, 1.4625000000000749e-05, 1.4652999999999888e-05, 1.4652999999999888e-05, 1.4680999999999028e-05, 1.4708999999998168e-05, 1.4639000000000318e-05, 1.4611000000001179e-05, 1.4639000000000318e-05, 1.4679999999999555e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4625000000000749e-05, 1.4679999999999555e-05, 1.4639000000000318e-05, 1.458299999999857e-05, 1.4639000000000318e-05, 1.4666999999999458e-05, 1.4665999999999985e-05, 1.4624999999997279e-05, 1.4652999999999888e-05, 1.4652999999999888e-05, 1.4666999999999458e-05, 1.4652999999999888e-05, 1.4611000000001179e-05, 1.4666999999999458e-05, 1.4708000000002164e-05, 1.4652999999996419e-05, 1.4638999999996849e-05, 1.4638999999996849e-05, 1.4666999999995989e-05, 1.4624999999997279e-05, 1.461099999999771e-05, 1.4625000000004218e-05, 1.4624999999997279e-05, 1.4611999999997183e-05, 1.459699999999814e-05, 1.461099999999771e-05, 1.4651999999996945e-05, 1.4666000000003454e-05, 1.4651999999996945e-05, 1.4624999999997279e-05, 1.4652999999996419e-05]</msg>
<status status="PASS" starttime="20201115 22:02:08.690" endtime="20201115 22:02:08.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.685" endtime="20201115 22:02:08.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.695" endtime="20201115 22:02:08.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.699" endtime="20201115 22:02:08.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.697" endtime="20201115 22:02:08.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.694" endtime="20201115 22:02:08.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.315" endtime="20201115 22:02:08.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.703" endtime="20201115 22:02:08.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.702" endtime="20201115 22:02:08.720"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.723" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.732" endtime="20201115 22:02:08.754"></status>
</kw>
<msg timestamp="20201115 22:02:08.754" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.730" endtime="20201115 22:02:08.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.755" endtime="20201115 22:02:08.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.758" endtime="20201115 22:02:08.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.727" endtime="20201115 22:02:08.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.725" endtime="20201115 22:02:08.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.768" endtime="20201115 22:02:09.053"></status>
</kw>
<msg timestamp="20201115 22:02:09.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026529236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02654475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:08.766" endtime="20201115 22:02:09.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026529236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02654475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:09.058" endtime="20201115 22:02:09.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.066" endtime="20201115 22:02:09.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.763" endtime="20201115 22:02:09.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.761" endtime="20201115 22:02:09.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.073" level="INFO">${RESULT} = [{'time': 0.02654475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5513999999997724e-05, 'source_diff': 1.5513999999997724e-05}, {'time': 0.026740403, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:09.069" endtime="20201115 22:02:09.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.087" level="INFO">${OVERHEAD} = {'diff': [1.5513999999997724e-05, 1.5499999999998154e-05, 1.5527999999997294e-05, 1.5443999999999874e-05, 1.552700000000129e-05, 1.5485999999998584e-05, 1.5500000000001624e-05, 1.5499999999998154e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:09.074" endtime="20201115 22:02:09.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.092" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:09.091" endtime="20201115 22:02:09.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.095" level="INFO">VALUE: [1.5513999999997724e-05, 1.5499999999998154e-05, 1.5527999999997294e-05, 1.5443999999999874e-05, 1.552700000000129e-05, 1.5485999999998584e-05, 1.5500000000001624e-05, 1.5499999999998154e-05, 1.5472000000002484e-05, 1.5500000000001624e-05, 1.5457999999999444e-05, 1.5499999999998154e-05, 1.5500000000001624e-05, 1.5514000000001194e-05, 1.5471999999999014e-05, 1.5471999999999014e-05, 1.5485999999998584e-05, 1.5499999999998154e-05, 1.5499999999998154e-05, 1.5542000000000333e-05, 1.5471999999999014e-05, 1.5430999999999778e-05, 1.5514000000001194e-05, 1.5528000000000763e-05, 1.5499999999998154e-05, 1.5500000000001624e-05, 1.5500000000001624e-05, 1.545899999999545e-05, 1.552699999999435e-05, 1.5471999999995545e-05, 1.552700000000129e-05, 1.5514000000001194e-05, 1.5472000000002484e-05, 1.5500000000001624e-05, 1.5485999999995115e-05, 1.545899999999545e-05, 1.5486000000002054e-05, 1.551299999999478e-05, 1.5500000000001624e-05, 1.5528000000000763e-05, 1.551300000000172e-05, 1.5514000000001194e-05, 1.548699999999459e-05, 1.5500000000001624e-05, 1.5514000000001194e-05, 1.5473000000001957e-05, 1.5472000000002484e-05, 1.554100000000086e-05, 1.5528000000000763e-05, 1.5458000000002914e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.093" endtime="20201115 22:02:09.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.088" endtime="20201115 22:02:09.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.098" endtime="20201115 22:02:09.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.102" endtime="20201115 22:02:09.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.100" endtime="20201115 22:02:09.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.096" endtime="20201115 22:02:09.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.723" endtime="20201115 22:02:09.122"></status>
</kw>
<msg timestamp="20201115 22:02:09.123" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.132" endtime="20201115 22:02:09.160"></status>
</kw>
<msg timestamp="20201115 22:02:09.161" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.130" endtime="20201115 22:02:09.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.163" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.162" endtime="20201115 22:02:09.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.164" endtime="20201115 22:02:09.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.128" endtime="20201115 22:02:09.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.125" endtime="20201115 22:02:09.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.174" endtime="20201115 22:02:09.461"></status>
</kw>
<msg timestamp="20201115 22:02:09.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025775181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025790708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.172" endtime="20201115 22:02:09.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025775181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025790708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.465" endtime="20201115 22:02:09.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.474" endtime="20201115 22:02:09.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.170" endtime="20201115 22:02:09.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.168" endtime="20201115 22:02:09.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.481" level="INFO">${RESULT} = [{'time': 0.025790708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.552699999999782e-05, 'source_diff': 1.552699999999782e-05}, {'time': 0.025989056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:09.477" endtime="20201115 22:02:09.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.495" level="INFO">${OVERHEAD} = {'diff': [1.552699999999782e-05, 1.5514000000001194e-05, 1.552699999999782e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.5499999999998154e-05, 1.5472000000002484e-05, 1.5471999999999014e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:09.482" endtime="20201115 22:02:09.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.500" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:09.499" endtime="20201115 22:02:09.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.502" level="INFO">VALUE: [1.552699999999782e-05, 1.5514000000001194e-05, 1.552699999999782e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.5499999999998154e-05, 1.5472000000002484e-05, 1.5471999999999014e-05, 1.5499999999998154e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.5500000000001624e-05, 1.5472999999998488e-05, 1.5472999999998488e-05, 1.5500000000001624e-05, 1.554100000000086e-05, 1.5499999999998154e-05, 1.5499999999998154e-05, 1.5499999999998154e-05, 1.5514000000001194e-05, 1.5527999999997294e-05, 1.5486000000002054e-05, 1.5528000000000763e-05, 1.5472000000002484e-05, 1.554100000000086e-05, 1.551300000000172e-05, 1.5499999999998154e-05, 1.5485999999998584e-05, 1.5459000000002387e-05, 1.5500000000001624e-05, 1.5487000000001527e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.5500000000001624e-05, 1.5499999999994685e-05, 1.5514000000001194e-05, 1.5528000000000763e-05, 1.5528000000000763e-05, 1.5499999999994685e-05, 1.552700000000129e-05, 1.543099999999631e-05, 1.5514000000001194e-05, 1.5500000000001624e-05, 1.5514000000001194e-05, 1.5542000000000333e-05, 1.545899999999545e-05, 1.5485999999995115e-05, 1.5499999999994685e-05, 1.5542000000000333e-05, 1.5528000000000763e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.501" endtime="20201115 22:02:09.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.496" endtime="20201115 22:02:09.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.506" endtime="20201115 22:02:09.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.509" endtime="20201115 22:02:09.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.508" endtime="20201115 22:02:09.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.504" endtime="20201115 22:02:09.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.123" endtime="20201115 22:02:09.530"></status>
</kw>
<msg timestamp="20201115 22:02:09.530" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.540" endtime="20201115 22:02:09.562"></status>
</kw>
<msg timestamp="20201115 22:02:09.562" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.538" endtime="20201115 22:02:09.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.565" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.563" endtime="20201115 22:02:09.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.566" endtime="20201115 22:02:09.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.535" endtime="20201115 22:02:09.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.533" endtime="20201115 22:02:09.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.576" endtime="20201115 22:02:09.863"></status>
</kw>
<msg timestamp="20201115 22:02:09.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024931347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024946833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.574" endtime="20201115 22:02:09.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024931347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024946833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.867" endtime="20201115 22:02:09.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.876" endtime="20201115 22:02:09.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.571" endtime="20201115 22:02:09.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.569" endtime="20201115 22:02:09.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.888" level="INFO">${RESULT} = [{'time': 0.024946833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5486000000002054e-05, 'source_diff': 1.5486000000002054e-05}, {'time': 0.025143889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:09.879" endtime="20201115 22:02:09.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.902" level="INFO">${OVERHEAD} = {'diff': [1.5486000000002054e-05, 1.5528000000000763e-05, 1.5499999999998154e-05, 1.5527999999997294e-05, 1.5500000000001624e-05, 1.5527999999997294e-05, 1.5500000000001624e-05, 1.5514000000001194e-05...</msg>
<status status="PASS" starttime="20201115 22:02:09.889" endtime="20201115 22:02:09.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.907" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:09.906" endtime="20201115 22:02:09.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.910" level="INFO">VALUE: [1.5486000000002054e-05, 1.5528000000000763e-05, 1.5499999999998154e-05, 1.5527999999997294e-05, 1.5500000000001624e-05, 1.5527999999997294e-05, 1.5500000000001624e-05, 1.5514000000001194e-05, 1.5528000000000763e-05, 1.5514000000001194e-05, 1.5472000000002484e-05, 1.5499999999998154e-05, 1.5514000000001194e-05, 1.5499999999998154e-05, 1.5486999999998058e-05, 1.5444999999999348e-05, 1.5499999999998154e-05, 1.5486000000002054e-05, 1.5542000000000333e-05, 1.5513999999997724e-05, 1.5500000000001624e-05, 1.5527999999997294e-05, 1.5528000000000763e-05, 1.5486000000002054e-05, 1.5527999999997294e-05, 1.5500000000001624e-05, 1.5499999999998154e-05, 1.5555999999999903e-05, 1.5514000000001194e-05, 1.5429999999996835e-05, 1.5471999999999014e-05, 1.5486000000002054e-05, 1.5499999999998154e-05, 1.5513999999994255e-05, 1.5514000000001194e-05, 1.5500000000001624e-05, 1.5486000000002054e-05, 1.5500000000001624e-05, 1.5486000000002054e-05, 1.544499999999588e-05, 1.5528000000000763e-05, 1.5486000000002054e-05, 1.5487000000001527e-05, 1.5473000000001957e-05, 1.5486000000002054e-05, 1.5500000000001624e-05, 1.5500000000001624e-05, 1.5485999999995115e-05, 1.5513999999994255e-05, 1.5486000000002054e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.908" endtime="20201115 22:02:09.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.903" endtime="20201115 22:02:09.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.913" endtime="20201115 22:02:09.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.917" endtime="20201115 22:02:09.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.915" endtime="20201115 22:02:09.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.911" endtime="20201115 22:02:09.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.531" endtime="20201115 22:02:09.938"></status>
</kw>
<msg timestamp="20201115 22:02:09.938" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.947" endtime="20201115 22:02:09.970"></status>
</kw>
<msg timestamp="20201115 22:02:09.970" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.945" endtime="20201115 22:02:09.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.973" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.971" endtime="20201115 22:02:09.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.974" endtime="20201115 22:02:09.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.943" endtime="20201115 22:02:09.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.941" endtime="20201115 22:02:09.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.983" endtime="20201115 22:02:10.272"></status>
</kw>
<msg timestamp="20201115 22:02:10.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024577514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.982" endtime="20201115 22:02:10.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024577514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.276" endtime="20201115 22:02:10.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.285" endtime="20201115 22:02:10.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.979" endtime="20201115 22:02:10.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.977" endtime="20201115 22:02:10.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.292" level="INFO">${RESULT} = [{'time': 0.024577514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5500000000001624e-05, 'source_diff': 1.5500000000001624e-05}, {'time': 0.024771486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:10.288" endtime="20201115 22:02:10.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.306" level="INFO">${OVERHEAD} = {'diff': [1.5500000000001624e-05, 1.5513999999997724e-05, 1.5485999999998584e-05, 1.5514000000001194e-05, 1.5500000000001624e-05, 1.5486000000002054e-05, 1.5486000000002054e-05, 1.5499999999998154e-05...</msg>
<status status="PASS" starttime="20201115 22:02:10.293" endtime="20201115 22:02:10.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.311" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:10.310" endtime="20201115 22:02:10.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.313" level="INFO">VALUE: [1.5500000000001624e-05, 1.5513999999997724e-05, 1.5485999999998584e-05, 1.5514000000001194e-05, 1.5500000000001624e-05, 1.5486000000002054e-05, 1.5486000000002054e-05, 1.5499999999998154e-05, 1.5513999999997724e-05, 1.5486000000002054e-05, 1.5472999999998488e-05, 1.5528000000000763e-05, 1.5500000000001624e-05, 1.5542000000000333e-05, 1.5514000000001194e-05, 1.5485999999998584e-05, 1.5430000000000305e-05, 1.5471999999999014e-05, 1.5472000000002484e-05, 1.5485999999998584e-05, 1.5485999999998584e-05, 1.5472000000002484e-05, 1.541700000000021e-05, 1.5457999999999444e-05, 1.5471999999999014e-05, 1.5514000000001194e-05, 1.5499999999998154e-05, 1.5473000000001957e-05, 1.5514000000001194e-05, 1.5486000000002054e-05, 1.5486000000002054e-05, 1.5542000000000333e-05, 1.5499999999998154e-05, 1.5514000000001194e-05, 1.5486000000002054e-05, 1.5583999999999043e-05, 1.5458000000002914e-05, 1.5500000000001624e-05, 1.5500000000001624e-05, 1.5500000000001624e-05, 1.5485999999995115e-05, 1.5472000000002484e-05, 1.5569e-05, 1.5485999999995115e-05, 1.5500000000001624e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.548699999999459e-05, 1.5500000000001624e-05, 1.5500000000001624e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.312" endtime="20201115 22:02:10.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.307" endtime="20201115 22:02:10.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.317" endtime="20201115 22:02:10.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.320" endtime="20201115 22:02:10.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.319" endtime="20201115 22:02:10.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.315" endtime="20201115 22:02:10.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.938" endtime="20201115 22:02:10.341"></status>
</kw>
<msg timestamp="20201115 22:02:10.341" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.350" endtime="20201115 22:02:10.371"></status>
</kw>
<msg timestamp="20201115 22:02:10.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.349" endtime="20201115 22:02:10.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.374" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.373" endtime="20201115 22:02:10.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.375" endtime="20201115 22:02:10.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.346" endtime="20201115 22:02:10.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.344" endtime="20201115 22:02:10.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.385" endtime="20201115 22:02:10.671"></status>
</kw>
<msg timestamp="20201115 22:02:10.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022971778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022987208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.383" endtime="20201115 22:02:10.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022971778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022987208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.676" endtime="20201115 22:02:10.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.685" endtime="20201115 22:02:10.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.380" endtime="20201115 22:02:10.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.379" endtime="20201115 22:02:10.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.692" level="INFO">${RESULT} = [{'time': 0.022987208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5429999999996835e-05, 'source_diff': 1.5429999999996835e-05}, {'time': 0.023180444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:10.688" endtime="20201115 22:02:10.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.706" level="INFO">${OVERHEAD} = {'diff': [1.5429999999996835e-05, 1.5472000000002484e-05, 1.5499999999998154e-05, 1.5457999999999444e-05, 1.5527999999997294e-05, 1.5499999999998154e-05, 1.5485999999998584e-05, 1.5485999999998584e-05...</msg>
<status status="PASS" starttime="20201115 22:02:10.693" endtime="20201115 22:02:10.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.711" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:10.710" endtime="20201115 22:02:10.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.713" level="INFO">VALUE: [1.5429999999996835e-05, 1.5472000000002484e-05, 1.5499999999998154e-05, 1.5457999999999444e-05, 1.5527999999997294e-05, 1.5499999999998154e-05, 1.5485999999998584e-05, 1.5485999999998584e-05, 1.5513999999997724e-05, 1.5471999999999014e-05, 1.5471999999999014e-05, 1.5542000000000333e-05, 1.5459000000002387e-05, 1.5500000000001624e-05, 1.5500000000001624e-05, 1.5486000000002054e-05, 1.5471999999999014e-05, 1.5500000000001624e-05, 1.5402000000001165e-05, 1.5527999999997294e-05, 1.5485999999998584e-05, 1.5542000000000333e-05, 1.5471999999999014e-05, 1.5500000000001624e-05, 1.5486000000002054e-05, 1.5542000000000333e-05, 1.5445000000002818e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.5472999999998488e-05, 1.5486000000002054e-05, 1.5471999999999014e-05, 1.5527999999997294e-05, 1.5528000000000763e-05, 1.5458000000002914e-05, 1.5500000000001624e-05, 1.5471999999999014e-05, 1.5499999999998154e-05, 1.5485999999998584e-05, 1.5486000000002054e-05, 1.5514000000001194e-05, 1.551300000000172e-05, 1.5542000000000333e-05, 1.558299999999957e-05, 1.552700000000129e-05, 1.5500000000001624e-05, 1.5486000000002054e-05, 1.5486000000002054e-05, 1.5472000000002484e-05, 1.5500000000001624e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.712" endtime="20201115 22:02:10.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.707" endtime="20201115 22:02:10.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.717" endtime="20201115 22:02:10.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.720" endtime="20201115 22:02:10.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.719" endtime="20201115 22:02:10.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.715" endtime="20201115 22:02:10.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.342" endtime="20201115 22:02:10.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.721" endtime="20201115 22:02:10.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.721" endtime="20201115 22:02:10.742"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.744" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.753" endtime="20201115 22:02:10.777"></status>
</kw>
<msg timestamp="20201115 22:02:10.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.751" endtime="20201115 22:02:10.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.779" endtime="20201115 22:02:10.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.781" endtime="20201115 22:02:10.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.749" endtime="20201115 22:02:10.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.746" endtime="20201115 22:02:10.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.791" endtime="20201115 22:02:11.079"></status>
</kw>
<msg timestamp="20201115 22:02:11.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024824778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024841139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.789" endtime="20201115 22:02:11.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024824778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024841139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.083" endtime="20201115 22:02:11.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.092" endtime="20201115 22:02:11.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.787" endtime="20201115 22:02:11.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.785" endtime="20201115 22:02:11.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.098" level="INFO">${RESULT} = [{'time': 0.024841139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.636100000000293e-05, 'source_diff': 1.636100000000293e-05}, {'time': 0.025050111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:11.095" endtime="20201115 22:02:11.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.112" level="INFO">${OVERHEAD} = {'diff': [1.636100000000293e-05, 1.634699999999989e-05, 1.637499999999903e-05, 1.634699999999989e-05, 1.638900000000207e-05, 1.63889999999986e-05, 1.6387999999999125e-05, 1.6444000000000875e-05, 1.640...</msg>
<status status="PASS" starttime="20201115 22:02:11.100" endtime="20201115 22:02:11.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.117" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:11.116" endtime="20201115 22:02:11.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.120" level="INFO">VALUE: [1.636100000000293e-05, 1.634699999999989e-05, 1.637499999999903e-05, 1.634699999999989e-05, 1.638900000000207e-05, 1.63889999999986e-05, 1.6387999999999125e-05, 1.6444000000000875e-05, 1.640299999999817e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.63750000000025e-05, 1.631900000000075e-05, 1.6347999999999363e-05, 1.636099999999946e-05, 1.63889999999986e-05, 1.636099999999946e-05, 1.634699999999989e-05, 1.6347999999999363e-05, 1.630500000000118e-05, 1.636099999999946e-05, 1.633300000000032e-05, 1.636099999999946e-05, 1.637499999999903e-05, 1.6333999999999793e-05, 1.6320000000000223e-05, 1.6347999999999363e-05, 1.6320000000000223e-05, 1.6333999999999793e-05, 1.637499999999903e-05, 1.634699999999989e-05, 1.637499999999903e-05, 1.636099999999946e-05, 1.637499999999903e-05, 1.633300000000032e-05, 1.633300000000032e-05, 1.636099999999946e-05, 1.6389000000005538e-05, 1.637499999999903e-05, 1.636099999999946e-05, 1.626300000000247e-05, 1.640299999999817e-05, 1.631900000000075e-05, 1.636099999999946e-05, 1.6333999999999793e-05, 1.636099999999946e-05, 1.6333999999999793e-05, 1.634699999999989e-05, 1.634699999999989e-05, 1.634699999999989e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.118" endtime="20201115 22:02:11.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.113" endtime="20201115 22:02:11.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.123" endtime="20201115 22:02:11.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.127" endtime="20201115 22:02:11.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.125" endtime="20201115 22:02:11.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.121" endtime="20201115 22:02:11.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.744" endtime="20201115 22:02:11.148"></status>
</kw>
<msg timestamp="20201115 22:02:11.148" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.157" endtime="20201115 22:02:11.185"></status>
</kw>
<msg timestamp="20201115 22:02:11.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.155" endtime="20201115 22:02:11.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.187" endtime="20201115 22:02:11.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.190" endtime="20201115 22:02:11.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.153" endtime="20201115 22:02:11.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.151" endtime="20201115 22:02:11.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.199" endtime="20201115 22:02:11.487"></status>
</kw>
<msg timestamp="20201115 22:02:11.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025317056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025333389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.198" endtime="20201115 22:02:11.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025317056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025333389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.491" endtime="20201115 22:02:11.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.500" endtime="20201115 22:02:11.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.195" endtime="20201115 22:02:11.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.193" endtime="20201115 22:02:11.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.506" level="INFO">${RESULT} = [{'time': 0.025333389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.633300000000032e-05, 'source_diff': 1.633300000000032e-05}, {'time': 0.025542569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:11.503" endtime="20201115 22:02:11.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.520" level="INFO">${OVERHEAD} = {'diff': [1.633300000000032e-05, 1.6388000000002595e-05, 1.6347999999999363e-05, 1.63750000000025e-05, 1.6305999999997184e-05, 1.630499999999771e-05, 1.631900000000075e-05, 1.638900000000207e-05, 1.63...</msg>
<status status="PASS" starttime="20201115 22:02:11.507" endtime="20201115 22:02:11.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.525" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:11.524" endtime="20201115 22:02:11.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.528" level="INFO">VALUE: [1.633300000000032e-05, 1.6388000000002595e-05, 1.6347999999999363e-05, 1.63750000000025e-05, 1.6305999999997184e-05, 1.630499999999771e-05, 1.631900000000075e-05, 1.638900000000207e-05, 1.631900000000075e-05, 1.636099999999946e-05, 1.6320000000000223e-05, 1.633300000000032e-05, 1.638900000000207e-05, 1.633299999999685e-05, 1.633300000000032e-05, 1.633300000000032e-05, 1.634699999999989e-05, 1.631900000000075e-05, 1.63889999999986e-05, 1.636099999999946e-05, 1.634699999999989e-05, 1.6320000000000223e-05, 1.63750000000025e-05, 1.634699999999989e-05, 1.63750000000025e-05, 1.634699999999989e-05, 1.631900000000075e-05, 1.63889999999986e-05, 1.6389000000005538e-05, 1.6306000000000653e-05, 1.6320000000000223e-05, 1.634699999999989e-05, 1.640299999999817e-05, 1.633300000000032e-05, 1.6375000000005968e-05, 1.6320000000000223e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.634699999999989e-05, 1.6320000000000223e-05, 1.633300000000032e-05, 1.633300000000032e-05, 1.6334000000006732e-05, 1.634699999999989e-05, 1.6333999999999793e-05, 1.640299999999817e-05, 1.633300000000032e-05, 1.633300000000032e-05, 1.634699999999989e-05, 1.634699999999989e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.526" endtime="20201115 22:02:11.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.521" endtime="20201115 22:02:11.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.531" endtime="20201115 22:02:11.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.535" endtime="20201115 22:02:11.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.533" endtime="20201115 22:02:11.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.529" endtime="20201115 22:02:11.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.148" endtime="20201115 22:02:11.555"></status>
</kw>
<msg timestamp="20201115 22:02:11.556" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.565" endtime="20201115 22:02:11.591"></status>
</kw>
<msg timestamp="20201115 22:02:11.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.564" endtime="20201115 22:02:11.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.594" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.593" endtime="20201115 22:02:11.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.595" endtime="20201115 22:02:11.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.561" endtime="20201115 22:02:11.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.558" endtime="20201115 22:02:11.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.605" endtime="20201115 22:02:11.894"></status>
</kw>
<msg timestamp="20201115 22:02:11.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024500639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024517, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:11.603" endtime="20201115 22:02:11.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024500639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024517, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:11.898" endtime="20201115 22:02:11.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.906" endtime="20201115 22:02:11.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.601" endtime="20201115 22:02:11.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.599" endtime="20201115 22:02:11.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.913" level="INFO">${RESULT} = [{'time': 0.024517, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.636099999999946e-05, 'source_diff': 1.636099999999946e-05}, {'time': 0.024725514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:11.910" endtime="20201115 22:02:11.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.927" level="INFO">${OVERHEAD} = {'diff': [1.636099999999946e-05, 1.636099999999946e-05, 1.640299999999817e-05, 1.636099999999946e-05, 1.633299999999685e-05, 1.634699999999989e-05, 1.633300000000032e-05, 1.636100000000293e-05, 1.6346...</msg>
<status status="PASS" starttime="20201115 22:02:11.914" endtime="20201115 22:02:11.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.931" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:11.930" endtime="20201115 22:02:11.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.933" level="INFO">VALUE: [1.636099999999946e-05, 1.636099999999946e-05, 1.640299999999817e-05, 1.636099999999946e-05, 1.633299999999685e-05, 1.634699999999989e-05, 1.633300000000032e-05, 1.636100000000293e-05, 1.634699999999989e-05, 1.637499999999903e-05, 1.636099999999946e-05, 1.640300000000164e-05, 1.6277999999998044e-05, 1.634700000000336e-05, 1.636099999999946e-05, 1.631899999999728e-05, 1.6263999999998474e-05, 1.636099999999946e-05, 1.636100000000293e-05, 1.6333999999999793e-05, 1.636099999999946e-05, 1.637499999999903e-05, 1.63750000000025e-05, 1.636100000000293e-05, 1.637499999999903e-05, 1.630499999999771e-05, 1.636099999999946e-05, 1.6430000000001305e-05, 1.631899999999728e-05, 1.636099999999946e-05, 1.634699999999989e-05, 1.630500000000118e-05, 1.6306000000000653e-05, 1.6347999999999363e-05, 1.6429999999997835e-05, 1.636099999999946e-05, 1.6319999999993284e-05, 1.636099999999946e-05, 1.631900000000075e-05, 1.6361999999998933e-05, 1.6333999999999793e-05, 1.6333999999999793e-05, 1.6361000000006398e-05, 1.633300000000032e-05, 1.636099999999946e-05, 1.633299999999338e-05, 1.6292000000001083e-05, 1.63889999999986e-05, 1.636099999999946e-05, 1.6347999999999363e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.932" endtime="20201115 22:02:11.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.927" endtime="20201115 22:02:11.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.937" endtime="20201115 22:02:11.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.940" endtime="20201115 22:02:11.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.939" endtime="20201115 22:02:11.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.935" endtime="20201115 22:02:11.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.556" endtime="20201115 22:02:11.961"></status>
</kw>
<msg timestamp="20201115 22:02:11.962" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.973" endtime="20201115 22:02:11.998"></status>
</kw>
<msg timestamp="20201115 22:02:11.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.970" endtime="20201115 22:02:11.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.999" endtime="20201115 22:02:12.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.002" endtime="20201115 22:02:12.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.966" endtime="20201115 22:02:12.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.964" endtime="20201115 22:02:12.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.011" endtime="20201115 22:02:12.298"></status>
</kw>
<msg timestamp="20201115 22:02:12.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025726833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025743167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.010" endtime="20201115 22:02:12.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025726833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025743167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.302" endtime="20201115 22:02:12.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.310" endtime="20201115 22:02:12.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.007" endtime="20201115 22:02:12.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.005" endtime="20201115 22:02:12.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.317" level="INFO">${RESULT} = [{'time': 0.025743167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6333999999999793e-05, 'source_diff': 1.6333999999999793e-05}, {'time': 0.025952556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:12.314" endtime="20201115 22:02:12.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.330" level="INFO">${OVERHEAD} = {'diff': [1.6333999999999793e-05, 1.640300000000164e-05, 1.636100000000293e-05, 1.6333999999999793e-05, 1.63889999999986e-05, 1.631899999999728e-05, 1.63889999999986e-05, 1.6333999999999793e-05, 1.634...</msg>
<status status="PASS" starttime="20201115 22:02:12.318" endtime="20201115 22:02:12.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.335" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:12.334" endtime="20201115 22:02:12.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.337" level="INFO">VALUE: [1.6333999999999793e-05, 1.640300000000164e-05, 1.636100000000293e-05, 1.6333999999999793e-05, 1.63889999999986e-05, 1.631899999999728e-05, 1.63889999999986e-05, 1.6333999999999793e-05, 1.6347999999999363e-05, 1.6334000000003263e-05, 1.636099999999946e-05, 1.641700000000121e-05, 1.630500000000118e-05, 1.636099999999946e-05, 1.633300000000032e-05, 1.637499999999903e-05, 1.63889999999986e-05, 1.637499999999903e-05, 1.636099999999946e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.634699999999989e-05, 1.637499999999903e-05, 1.63750000000025e-05, 1.63750000000025e-05, 1.631900000000075e-05, 1.640299999999817e-05, 1.634699999999989e-05, 1.634699999999989e-05, 1.6320000000000223e-05, 1.633300000000032e-05, 1.631900000000075e-05, 1.634699999999989e-05, 1.631900000000075e-05, 1.637499999999903e-05, 1.631900000000075e-05, 1.636099999999946e-05, 1.643099999999731e-05, 1.631899999999381e-05, 1.634699999999989e-05, 1.637499999999903e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.633300000000032e-05, 1.634699999999989e-05, 1.633300000000032e-05, 1.636099999999946e-05, 1.63889999999986e-05, 1.634699999999989e-05]</msg>
<status status="PASS" starttime="20201115 22:02:12.336" endtime="20201115 22:02:12.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.331" endtime="20201115 22:02:12.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.341" endtime="20201115 22:02:12.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.344" endtime="20201115 22:02:12.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.343" endtime="20201115 22:02:12.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.339" endtime="20201115 22:02:12.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.962" endtime="20201115 22:02:12.365"></status>
</kw>
<msg timestamp="20201115 22:02:12.365" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.374" endtime="20201115 22:02:12.400"></status>
</kw>
<msg timestamp="20201115 22:02:12.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.372" endtime="20201115 22:02:12.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.402" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.401" endtime="20201115 22:02:12.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.403" endtime="20201115 22:02:12.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.370" endtime="20201115 22:02:12.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.368" endtime="20201115 22:02:12.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.412" endtime="20201115 22:02:12.700"></status>
</kw>
<msg timestamp="20201115 22:02:12.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023739472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023755861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.411" endtime="20201115 22:02:12.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023739472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023755861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.704" endtime="20201115 22:02:12.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.713" endtime="20201115 22:02:12.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.408" endtime="20201115 22:02:12.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.407" endtime="20201115 22:02:12.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.720" level="INFO">${RESULT} = [{'time': 0.023755861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.63889999999986e-05, 'source_diff': 1.63889999999986e-05}, {'time': 0.023967639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:12.716" endtime="20201115 22:02:12.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.733" level="INFO">${OVERHEAD} = {'diff': [1.63889999999986e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.637499999999903e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.637499999999903e-05, 1.640299999999817e-05, 1.63749...</msg>
<status status="PASS" starttime="20201115 22:02:12.721" endtime="20201115 22:02:12.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.738" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:12.737" endtime="20201115 22:02:12.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.740" level="INFO">VALUE: [1.63889999999986e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.637499999999903e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.637499999999903e-05, 1.640299999999817e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.63750000000025e-05, 1.633300000000032e-05, 1.6347999999999363e-05, 1.6278000000001513e-05, 1.6333999999999793e-05, 1.636099999999946e-05, 1.63750000000025e-05, 1.634699999999989e-05, 1.629100000000161e-05, 1.634699999999989e-05, 1.6306000000000653e-05, 1.6292000000001083e-05, 1.633300000000032e-05, 1.631900000000075e-05, 1.6362000000002402e-05, 1.6333999999999793e-05, 1.637499999999903e-05, 1.6348000000002832e-05, 1.6347999999999363e-05, 1.634699999999989e-05, 1.63750000000025e-05, 1.6361999999998933e-05, 1.6320000000000223e-05, 1.6333999999999793e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.6415999999998265e-05, 1.6361000000006398e-05, 1.637499999999903e-05, 1.631900000000075e-05, 1.636099999999946e-05, 1.6401999999998695e-05, 1.6348000000006302e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.640299999999817e-05, 1.637499999999903e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.6278000000001513e-05]</msg>
<status status="PASS" starttime="20201115 22:02:12.739" endtime="20201115 22:02:12.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.734" endtime="20201115 22:02:12.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.744" endtime="20201115 22:02:12.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.747" endtime="20201115 22:02:12.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.746" endtime="20201115 22:02:12.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.742" endtime="20201115 22:02:12.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.366" endtime="20201115 22:02:12.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.743" endtime="20201115 22:02:12.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.742" endtime="20201115 22:02:12.768"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.771" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.779" endtime="20201115 22:02:12.808"></status>
</kw>
<msg timestamp="20201115 22:02:12.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.778" endtime="20201115 22:02:12.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.811" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.809" endtime="20201115 22:02:12.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.812" endtime="20201115 22:02:12.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.775" endtime="20201115 22:02:12.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.773" endtime="20201115 22:02:12.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.821" endtime="20201115 22:02:13.106"></status>
</kw>
<msg timestamp="20201115 22:02:13.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027762653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027779903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.819" endtime="20201115 22:02:13.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027762653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027779903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.110" endtime="20201115 22:02:13.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.118" endtime="20201115 22:02:13.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.817" endtime="20201115 22:02:13.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.815" endtime="20201115 22:02:13.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.125" level="INFO">${RESULT} = [{'time': 0.027779903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.028006486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:13.121" endtime="20201115 22:02:13.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.138" level="INFO">${OVERHEAD} = {'diff': [1.7249999999999904e-05, 1.7263999999999474e-05, 1.7264000000002944e-05, 1.7222000000000764e-05, 1.716700000000196e-05, 1.7194000000001625e-05, 1.7180000000002055e-05, 1.7208000000001195e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:13.126" endtime="20201115 22:02:13.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.143" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:13.142" endtime="20201115 22:02:13.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.146" level="INFO">VALUE: [1.7249999999999904e-05, 1.7263999999999474e-05, 1.7264000000002944e-05, 1.7222000000000764e-05, 1.716700000000196e-05, 1.7194000000001625e-05, 1.7180000000002055e-05, 1.7208000000001195e-05, 1.7223000000000238e-05, 1.7236000000000334e-05, 1.715299999999892e-05, 1.7208000000001195e-05, 1.7195000000001098e-05, 1.7195000000001098e-05, 1.715299999999892e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.7221999999997295e-05, 1.7222000000004234e-05, 1.719499999999763e-05, 1.7221999999997295e-05, 1.7209000000004138e-05, 1.7193999999998155e-05, 1.726299999999653e-05, 1.719499999999763e-05, 1.7207999999997725e-05, 1.7235999999996865e-05, 1.7221999999997295e-05, 1.729100000000261e-05, 1.722299999999677e-05, 1.7193999999998155e-05, 1.7249999999996435e-05, 1.723699999999634e-05, 1.716699999999849e-05, 1.716699999999849e-05, 1.7237000000003277e-05, 1.7179999999998585e-05, 1.719499999999763e-05, 1.716699999999849e-05, 1.7207999999997725e-05, 1.719499999999763e-05, 1.7264000000002944e-05, 1.7179999999998585e-05, 1.7209000000004138e-05, 1.7235999999996865e-05, 1.7180000000005524e-05, 1.7222000000004234e-05, 1.7209000000004138e-05, 1.719499999999763e-05, 1.7165999999999015e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.144" endtime="20201115 22:02:13.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.139" endtime="20201115 22:02:13.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.149" endtime="20201115 22:02:13.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.152" endtime="20201115 22:02:13.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.151" endtime="20201115 22:02:13.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.147" endtime="20201115 22:02:13.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.771" endtime="20201115 22:02:13.173"></status>
</kw>
<msg timestamp="20201115 22:02:13.173" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.182" endtime="20201115 22:02:13.215"></status>
</kw>
<msg timestamp="20201115 22:02:13.215" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.180" endtime="20201115 22:02:13.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.217" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.216" endtime="20201115 22:02:13.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.219" endtime="20201115 22:02:13.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.178" endtime="20201115 22:02:13.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.176" endtime="20201115 22:02:13.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.228" endtime="20201115 22:02:13.515"></status>
</kw>
<msg timestamp="20201115 22:02:13.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024551306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024568542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.226" endtime="20201115 22:02:13.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024551306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024568542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.519" endtime="20201115 22:02:13.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.527" endtime="20201115 22:02:13.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.223" endtime="20201115 22:02:13.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.222" endtime="20201115 22:02:13.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.533" level="INFO">${RESULT} = [{'time': 0.024568542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7236000000000334e-05, 'source_diff': 1.7236000000000334e-05}, {'time': 0.024799944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:13.530" endtime="20201115 22:02:13.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.547" level="INFO">${OVERHEAD} = {'diff': [1.7236000000000334e-05, 1.7166000000002485e-05, 1.716699999999849e-05, 1.7222000000000764e-05, 1.719499999999763e-05, 1.718100000000153e-05, 1.7223000000000238e-05, 1.7165999999999015e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:02:13.534" endtime="20201115 22:02:13.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.552" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:13.551" endtime="20201115 22:02:13.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.554" level="INFO">VALUE: [1.7236000000000334e-05, 1.7166000000002485e-05, 1.716699999999849e-05, 1.7222000000000764e-05, 1.719499999999763e-05, 1.718100000000153e-05, 1.7223000000000238e-05, 1.7165999999999015e-05, 1.7209000000000668e-05, 1.7236000000000334e-05, 1.7209000000000668e-05, 1.719499999999763e-05, 1.7195000000001098e-05, 1.7249999999999904e-05, 1.715300000000239e-05, 1.7221999999997295e-05, 1.7236000000000334e-05, 1.7236000000000334e-05, 1.7235999999996865e-05, 1.7249999999999904e-05, 1.7194000000001625e-05, 1.716700000000196e-05, 1.7208000000001195e-05, 1.7236000000000334e-05, 1.72089999999972e-05, 1.715300000000239e-05, 1.7222000000000764e-05, 1.7236000000000334e-05, 1.7207999999997725e-05, 1.7222000000000764e-05, 1.7207999999997725e-05, 1.716699999999849e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.7235999999996865e-05, 1.7207999999997725e-05, 1.7181000000004998e-05, 1.7193999999998155e-05, 1.7250000000003374e-05, 1.7194000000005094e-05, 1.7208000000004664e-05, 1.719499999999763e-05, 1.718099999999806e-05, 1.7223000000003708e-05, 1.7167000000005428e-05, 1.7207999999997725e-05, 1.719499999999763e-05, 1.7193999999998155e-05, 1.7194000000005094e-05, 1.716699999999849e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.553" endtime="20201115 22:02:13.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.548" endtime="20201115 22:02:13.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.557" endtime="20201115 22:02:13.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.561" endtime="20201115 22:02:13.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.559" endtime="20201115 22:02:13.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.556" endtime="20201115 22:02:13.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.174" endtime="20201115 22:02:13.582"></status>
</kw>
<msg timestamp="20201115 22:02:13.582" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.592" endtime="20201115 22:02:13.616"></status>
</kw>
<msg timestamp="20201115 22:02:13.617" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.590" endtime="20201115 22:02:13.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.619" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.618" endtime="20201115 22:02:13.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.620" endtime="20201115 22:02:13.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.587" endtime="20201115 22:02:13.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.585" endtime="20201115 22:02:13.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.629" endtime="20201115 22:02:13.916"></status>
</kw>
<msg timestamp="20201115 22:02:13.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022877764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.628" endtime="20201115 22:02:13.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022877764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.920" endtime="20201115 22:02:13.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.928" endtime="20201115 22:02:13.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.625" endtime="20201115 22:02:13.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.623" endtime="20201115 22:02:13.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.935" level="INFO">${RESULT} = [{'time': 0.022877764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.718099999999806e-05, 'source_diff': 1.718099999999806e-05}, {'time': 0.023108903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:13.932" endtime="20201115 22:02:13.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.949" level="INFO">${OVERHEAD} = {'diff': [1.718099999999806e-05, 1.7222000000000764e-05, 1.7195000000001098e-05, 1.715299999999892e-05, 1.72089999999972e-05, 1.7180000000002055e-05, 1.7249999999999904e-05, 1.7222000000000764e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:02:13.936" endtime="20201115 22:02:13.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.953" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:13.952" endtime="20201115 22:02:13.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.956" level="INFO">VALUE: [1.718099999999806e-05, 1.7222000000000764e-05, 1.7195000000001098e-05, 1.715299999999892e-05, 1.72089999999972e-05, 1.7180000000002055e-05, 1.7249999999999904e-05, 1.7222000000000764e-05, 1.718100000000153e-05, 1.7179999999998585e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7195000000001098e-05, 1.7236000000000334e-05, 1.716699999999849e-05, 1.7195000000001098e-05, 1.7236000000000334e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.7165999999999015e-05, 1.7194000000001625e-05, 1.7194000000001625e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.718099999999806e-05, 1.7193999999998155e-05, 1.7236000000000334e-05, 1.7223000000000238e-05, 1.7194000000001625e-05, 1.7221999999997295e-05, 1.719499999999763e-05, 1.7249999999999904e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7236999999999808e-05, 1.7222000000000764e-05, 1.7193999999998155e-05, 1.7195000000004568e-05, 1.718099999999806e-05, 1.7208000000004664e-05, 1.7207999999997725e-05, 1.7166000000005954e-05, 1.715299999999892e-05, 1.7194000000005094e-05, 1.7180000000005524e-05, 1.7165999999999015e-05, 1.7235999999996865e-05, 1.719499999999763e-05, 1.7195000000004568e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.954" endtime="20201115 22:02:13.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.950" endtime="20201115 22:02:13.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.959" endtime="20201115 22:02:13.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.962" endtime="20201115 22:02:13.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.961" endtime="20201115 22:02:13.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.957" endtime="20201115 22:02:13.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.582" endtime="20201115 22:02:13.983"></status>
</kw>
<msg timestamp="20201115 22:02:13.983" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.992" endtime="20201115 22:02:14.018"></status>
</kw>
<msg timestamp="20201115 22:02:14.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.991" endtime="20201115 22:02:14.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.019" endtime="20201115 22:02:14.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.022" endtime="20201115 22:02:14.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.988" endtime="20201115 22:02:14.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.986" endtime="20201115 22:02:14.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.031" endtime="20201115 22:02:14.317"></status>
</kw>
<msg timestamp="20201115 22:02:14.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023304667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:14.030" endtime="20201115 22:02:14.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023304667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:14.321" endtime="20201115 22:02:14.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.330" endtime="20201115 22:02:14.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.027" endtime="20201115 22:02:14.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.025" endtime="20201115 22:02:14.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.336" level="INFO">${RESULT} = [{'time': 0.023304667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.716700000000196e-05, 'source_diff': 1.716700000000196e-05}, {'time': 0.0235345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:14.333" endtime="20201115 22:02:14.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.350" level="INFO">${OVERHEAD} = {'diff': [1.716700000000196e-05, 1.715299999999892e-05, 1.7180000000002055e-05, 1.7179999999998585e-05, 1.7236000000000334e-05, 1.718100000000153e-05, 1.7208000000001195e-05, 1.7193999999998155e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:02:14.337" endtime="20201115 22:02:14.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.354" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:14.353" endtime="20201115 22:02:14.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.357" level="INFO">VALUE: [1.716700000000196e-05, 1.715299999999892e-05, 1.7180000000002055e-05, 1.7179999999998585e-05, 1.7236000000000334e-05, 1.718100000000153e-05, 1.7208000000001195e-05, 1.7193999999998155e-05, 1.7249999999999904e-05, 1.7193999999998155e-05, 1.716699999999849e-05, 1.718100000000153e-05, 1.713899999999935e-05, 1.7277999999999044e-05, 1.718100000000153e-05, 1.7221999999997295e-05, 1.7236000000000334e-05, 1.7207999999997725e-05, 1.7151999999999445e-05, 1.7222000000000764e-05, 1.7165999999999015e-05, 1.718099999999806e-05, 1.718100000000153e-05, 1.7193999999998155e-05, 1.7249999999999904e-05, 1.7179999999998585e-05, 1.7223000000000238e-05, 1.7194000000001625e-05, 1.7194000000001625e-05, 1.7222000000000764e-05, 1.7236000000000334e-05, 1.7263999999999474e-05, 1.7236000000000334e-05, 1.7194000000001625e-05, 1.7195000000001098e-05, 1.7179999999998585e-05, 1.7194000000005094e-05, 1.718099999999806e-05, 1.7167000000005428e-05, 1.7209000000004138e-05, 1.7221999999997295e-05, 1.719499999999763e-05, 1.719499999999763e-05, 1.7193999999998155e-05, 1.7180000000005524e-05, 1.7193999999998155e-05, 1.7221999999997295e-05, 1.718099999999806e-05, 1.7209000000004138e-05, 1.7179999999998585e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.355" endtime="20201115 22:02:14.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.351" endtime="20201115 22:02:14.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.360" endtime="20201115 22:02:14.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.363" endtime="20201115 22:02:14.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.362" endtime="20201115 22:02:14.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.358" endtime="20201115 22:02:14.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.984" endtime="20201115 22:02:14.384"></status>
</kw>
<msg timestamp="20201115 22:02:14.384" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.393" endtime="20201115 22:02:14.421"></status>
</kw>
<msg timestamp="20201115 22:02:14.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.392" endtime="20201115 22:02:14.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.424" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.422" endtime="20201115 22:02:14.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.425" endtime="20201115 22:02:14.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.389" endtime="20201115 22:02:14.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.387" endtime="20201115 22:02:14.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.434" endtime="20201115 22:02:14.718"></status>
</kw>
<msg timestamp="20201115 22:02:14.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024113056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.432" endtime="20201115 22:02:14.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024113056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.723" endtime="20201115 22:02:14.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.731" endtime="20201115 22:02:14.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.430" endtime="20201115 22:02:14.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.428" endtime="20201115 22:02:14.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.738" level="INFO">${RESULT} = [{'time': 0.024130264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7207999999997725e-05, 'source_diff': 1.7207999999997725e-05}, {'time': 0.024358833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.735" endtime="20201115 22:02:14.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.752" level="INFO">${OVERHEAD} = {'diff': [1.7207999999997725e-05, 1.7151999999999445e-05, 1.72089999999972e-05, 1.7207999999997725e-05, 1.7221999999997295e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.719499999999763e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:02:14.739" endtime="20201115 22:02:14.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.756" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:14.755" endtime="20201115 22:02:14.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.759" level="INFO">VALUE: [1.7207999999997725e-05, 1.7151999999999445e-05, 1.72089999999972e-05, 1.7207999999997725e-05, 1.7221999999997295e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.719499999999763e-05, 1.7166000000002485e-05, 1.718099999999806e-05, 1.7249999999999904e-05, 1.7209000000000668e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.7209000000000668e-05, 1.7209000000000668e-05, 1.7222000000000764e-05, 1.7195000000001098e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.7179999999998585e-05, 1.7209000000000668e-05, 1.7236000000000334e-05, 1.7207999999997725e-05, 1.7222000000000764e-05, 1.7194000000001625e-05, 1.7194000000001625e-05, 1.7222000000000764e-05, 1.7193999999998155e-05, 1.7221999999997295e-05, 1.7235999999996865e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.715299999999892e-05, 1.7222000000004234e-05, 1.7221999999997295e-05, 1.715299999999892e-05, 1.7195000000004568e-05, 1.7208000000004664e-05, 1.7209000000004138e-05, 1.7235999999996865e-05, 1.7181000000004998e-05, 1.7278000000002514e-05, 1.719499999999763e-05, 1.7222000000004234e-05, 1.7179999999998585e-05, 1.72089999999972e-05, 1.7221999999997295e-05, 1.715299999999892e-05, 1.7209000000004138e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.758" endtime="20201115 22:02:14.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.753" endtime="20201115 22:02:14.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.762" endtime="20201115 22:02:14.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.766" endtime="20201115 22:02:14.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.764" endtime="20201115 22:02:14.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.760" endtime="20201115 22:02:14.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.385" endtime="20201115 22:02:14.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.769" endtime="20201115 22:02:14.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.769" endtime="20201115 22:02:14.787"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.789" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.798" endtime="20201115 22:02:14.823"></status>
</kw>
<msg timestamp="20201115 22:02:14.823" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.796" endtime="20201115 22:02:14.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.824" endtime="20201115 22:02:14.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.827" endtime="20201115 22:02:14.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.794" endtime="20201115 22:02:14.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.792" endtime="20201115 22:02:14.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.836" endtime="20201115 22:02:15.123"></status>
</kw>
<msg timestamp="20201115 22:02:15.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023939431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.835" endtime="20201115 22:02:15.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023939431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.127" endtime="20201115 22:02:15.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.135" endtime="20201115 22:02:15.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.832" endtime="20201115 22:02:15.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.830" endtime="20201115 22:02:15.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.142" level="INFO">${RESULT} = [{'time': 0.023957514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.80829999999986e-05, 'source_diff': 1.80829999999986e-05}, {'time': 0.024203111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:15.138" endtime="20201115 22:02:15.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.155" level="INFO">${OVERHEAD} = {'diff': [1.80829999999986e-05, 1.8041999999999364e-05, 1.806899999999903e-05, 1.8014000000000224e-05, 1.80690000000025e-05, 1.8027999999999794e-05, 1.8055999999998934e-05, 1.805499999999946e-05, 1.80...</msg>
<status status="PASS" starttime="20201115 22:02:15.143" endtime="20201115 22:02:15.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.160" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:15.159" endtime="20201115 22:02:15.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.162" level="INFO">VALUE: [1.80829999999986e-05, 1.8041999999999364e-05, 1.806899999999903e-05, 1.8014000000000224e-05, 1.80690000000025e-05, 1.8027999999999794e-05, 1.8055999999998934e-05, 1.805499999999946e-05, 1.8069999999998504e-05, 1.805499999999946e-05, 1.8055999999998934e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.808300000000207e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.8042000000002834e-05, 1.8041999999999364e-05, 1.8069999999998504e-05, 1.7999999999997185e-05, 1.808300000000207e-05, 1.8041999999999364e-05, 1.802700000000032e-05, 1.808300000000207e-05, 1.8070000000001973e-05, 1.8027999999999794e-05, 1.8070000000001973e-05, 1.8098000000001113e-05, 1.808300000000207e-05, 1.8027999999999794e-05, 1.808299999999513e-05, 1.805500000000293e-05, 1.8070000000001973e-05, 1.808300000000207e-05, 1.8056000000002403e-05, 1.812500000000078e-05, 1.811100000000121e-05, 1.8084000000001543e-05, 1.808299999999513e-05, 1.8070000000001973e-05, 1.7986000000004554e-05, 1.80969999999947e-05, 1.8027999999996325e-05, 1.809700000000164e-05, 1.7985999999997615e-05, 1.8013999999996755e-05, 1.8041999999995895e-05, 1.805500000000293e-05, 1.8055999999995465e-05, 1.811100000000121e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.161" endtime="20201115 22:02:15.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.156" endtime="20201115 22:02:15.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.165" endtime="20201115 22:02:15.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.169" endtime="20201115 22:02:15.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.167" endtime="20201115 22:02:15.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.163" endtime="20201115 22:02:15.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.790" endtime="20201115 22:02:15.189"></status>
</kw>
<msg timestamp="20201115 22:02:15.189" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.198" endtime="20201115 22:02:15.229"></status>
</kw>
<msg timestamp="20201115 22:02:15.229" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.197" endtime="20201115 22:02:15.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.254" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.230" endtime="20201115 22:02:15.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.255" endtime="20201115 22:02:15.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.194" endtime="20201115 22:02:15.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.192" endtime="20201115 22:02:15.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.264" endtime="20201115 22:02:15.550"></status>
</kw>
<msg timestamp="20201115 22:02:15.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022847069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022865153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.263" endtime="20201115 22:02:15.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022847069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022865153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.554" endtime="20201115 22:02:15.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.562" endtime="20201115 22:02:15.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.260" endtime="20201115 22:02:15.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.259" endtime="20201115 22:02:15.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.569" level="INFO">${RESULT} = [{'time': 0.022865153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8083999999998074e-05, 'source_diff': 1.8083999999998074e-05}, {'time': 0.023113806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.565" endtime="20201115 22:02:15.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.582" level="INFO">${OVERHEAD} = {'diff': [1.8083999999998074e-05, 1.8070000000001973e-05, 1.8027999999999794e-05, 1.8070000000001973e-05, 1.804099999999989e-05, 1.805499999999946e-05, 1.8042000000002834e-05, 1.804099999999989e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:02:15.570" endtime="20201115 22:02:15.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.587" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:15.586" endtime="20201115 22:02:15.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.589" level="INFO">VALUE: [1.8083999999998074e-05, 1.8070000000001973e-05, 1.8027999999999794e-05, 1.8070000000001973e-05, 1.804099999999989e-05, 1.805499999999946e-05, 1.8042000000002834e-05, 1.804099999999989e-05, 1.802700000000032e-05, 1.8084000000001543e-05, 1.7971999999998045e-05, 1.8055999999998934e-05, 1.8027999999999794e-05, 1.804099999999989e-05, 1.805499999999946e-05, 1.8014000000000224e-05, 1.806899999999903e-05, 1.802700000000032e-05, 1.806899999999903e-05, 1.8055999999998934e-05, 1.8027999999999794e-05, 1.802700000000032e-05, 1.8084000000001543e-05, 1.8083999999998074e-05, 1.7972000000001515e-05, 1.8028000000003264e-05, 1.809700000000164e-05, 1.805499999999946e-05, 1.8042000000002834e-05, 1.805499999999946e-05, 1.805500000000293e-05, 1.806899999999903e-05, 1.80829999999986e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.8055999999995465e-05, 1.8014000000003694e-05, 1.8042000000002834e-05, 1.8041999999995895e-05, 1.8041999999995895e-05, 1.809700000000164e-05, 1.8041999999995895e-05, 1.8042000000002834e-05, 1.808300000000207e-05, 1.804100000000336e-05, 1.8014000000003694e-05, 1.8042000000002834e-05, 1.8055999999995465e-05, 1.813900000000035e-05, 1.80690000000025e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.588" endtime="20201115 22:02:15.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.583" endtime="20201115 22:02:15.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.592" endtime="20201115 22:02:15.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.596" endtime="20201115 22:02:15.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.594" endtime="20201115 22:02:15.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.591" endtime="20201115 22:02:15.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.190" endtime="20201115 22:02:15.616"></status>
</kw>
<msg timestamp="20201115 22:02:15.617" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.626" endtime="20201115 22:02:15.652"></status>
</kw>
<msg timestamp="20201115 22:02:15.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.624" endtime="20201115 22:02:15.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.653" endtime="20201115 22:02:15.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.656" endtime="20201115 22:02:15.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.621" endtime="20201115 22:02:15.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.619" endtime="20201115 22:02:15.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.665" endtime="20201115 22:02:15.951"></status>
</kw>
<msg timestamp="20201115 22:02:15.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.663" endtime="20201115 22:02:15.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.956" endtime="20201115 22:02:15.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.964" endtime="20201115 22:02:15.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.661" endtime="20201115 22:02:15.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.659" endtime="20201115 22:02:15.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.970" level="INFO">${RESULT} = [{'time': 0.022822681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8027999999999794e-05, 'source_diff': 1.8027999999999794e-05}, {'time': 0.023068111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.967" endtime="20201115 22:02:15.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.984" level="INFO">${OVERHEAD} = {'diff': [1.8027999999999794e-05, 1.805499999999946e-05, 1.8042000000002834e-05, 1.7999999999997185e-05, 1.8041999999999364e-05, 1.8027999999999794e-05, 1.809700000000164e-05, 1.80690000000025e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:02:15.971" endtime="20201115 22:02:15.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.989" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:15.987" endtime="20201115 22:02:15.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.991" level="INFO">VALUE: [1.8027999999999794e-05, 1.805499999999946e-05, 1.8042000000002834e-05, 1.7999999999997185e-05, 1.8041999999999364e-05, 1.8027999999999794e-05, 1.809700000000164e-05, 1.80690000000025e-05, 1.808300000000207e-05, 1.8014000000000224e-05, 1.8070000000001973e-05, 1.8055999999998934e-05, 1.8000000000000654e-05, 1.802700000000032e-05, 1.805499999999946e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.80690000000025e-05, 1.812500000000078e-05, 1.804099999999989e-05, 1.8055999999998934e-05, 1.8027999999999794e-05, 1.809699999999817e-05, 1.8027999999999794e-05, 1.8041999999999364e-05, 1.8069999999998504e-05, 1.804099999999989e-05, 1.804099999999989e-05, 1.808300000000207e-05, 1.804099999999989e-05, 1.808300000000207e-05, 1.8027999999999794e-05, 1.811100000000121e-05, 1.80829999999986e-05, 1.808300000000207e-05, 1.801300000000422e-05, 1.811100000000121e-05, 1.795899999999795e-05, 1.8014000000003694e-05, 1.813900000000035e-05, 1.804099999999642e-05, 1.8055999999995465e-05, 1.8014000000003694e-05, 1.802700000000379e-05, 1.806899999999556e-05, 1.8070000000001973e-05, 1.8013999999996755e-05, 1.7999999999997185e-05, 1.7999999999997185e-05, 1.8070000000001973e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.990" endtime="20201115 22:02:15.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.985" endtime="20201115 22:02:15.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.994" endtime="20201115 22:02:15.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.998" endtime="20201115 22:02:16.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.996" endtime="20201115 22:02:16.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.992" endtime="20201115 22:02:16.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.617" endtime="20201115 22:02:16.019"></status>
</kw>
<msg timestamp="20201115 22:02:16.019" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.028" endtime="20201115 22:02:16.053"></status>
</kw>
<msg timestamp="20201115 22:02:16.054" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.026" endtime="20201115 22:02:16.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.055" endtime="20201115 22:02:16.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.058" endtime="20201115 22:02:16.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.024" endtime="20201115 22:02:16.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.021" endtime="20201115 22:02:16.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.067" endtime="20201115 22:02:16.354"></status>
</kw>
<msg timestamp="20201115 22:02:16.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.065" endtime="20201115 22:02:16.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.358" endtime="20201115 22:02:16.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.366" endtime="20201115 22:02:16.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.062" endtime="20201115 22:02:16.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.061" endtime="20201115 22:02:16.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.373" level="INFO">${RESULT} = [{'time': 0.022879028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8083999999998074e-05, 'source_diff': 1.8083999999998074e-05}, {'time': 0.023128861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.369" endtime="20201115 22:02:16.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.386" level="INFO">${OVERHEAD} = {'diff': [1.8083999999998074e-05, 1.805499999999946e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8055999999998934e-05, 1.8084000000001543e-05, 1.798699999999709e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:16.374" endtime="20201115 22:02:16.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.391" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:16.390" endtime="20201115 22:02:16.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.393" level="INFO">VALUE: [1.8083999999998074e-05, 1.805499999999946e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.8055999999998934e-05, 1.8084000000001543e-05, 1.798699999999709e-05, 1.80829999999986e-05, 1.8027999999999794e-05, 1.8027999999999794e-05, 1.8014000000000224e-05, 1.805500000000293e-05, 1.805499999999946e-05, 1.80829999999986e-05, 1.801300000000075e-05, 1.8042000000002834e-05, 1.8083999999998074e-05, 1.8055999999998934e-05, 1.8056000000002403e-05, 1.805499999999946e-05, 1.80829999999986e-05, 1.801300000000075e-05, 1.8055999999998934e-05, 1.806899999999903e-05, 1.8041999999999364e-05, 1.8000000000000654e-05, 1.8027999999999794e-05, 1.8041999999999364e-05, 1.8014000000000224e-05, 1.8056000000002403e-05, 1.806899999999903e-05, 1.809700000000164e-05, 1.802700000000032e-05, 1.80829999999986e-05, 1.805499999999599e-05, 1.8027999999996325e-05, 1.8098000000001113e-05, 1.811100000000121e-05, 1.809700000000164e-05, 1.805499999999599e-05, 1.805500000000293e-05, 1.808300000000207e-05, 1.805500000000293e-05, 1.8069999999995034e-05, 1.8013999999996755e-05, 1.80690000000025e-05, 1.8027999999996325e-05, 1.804099999999642e-05, 1.8041999999995895e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.392" endtime="20201115 22:02:16.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.387" endtime="20201115 22:02:16.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.397" endtime="20201115 22:02:16.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.400" endtime="20201115 22:02:16.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.399" endtime="20201115 22:02:16.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.395" endtime="20201115 22:02:16.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.019" endtime="20201115 22:02:16.421"></status>
</kw>
<msg timestamp="20201115 22:02:16.421" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.430" endtime="20201115 22:02:16.455"></status>
</kw>
<msg timestamp="20201115 22:02:16.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.428" endtime="20201115 22:02:16.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.458" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.456" endtime="20201115 22:02:16.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.459" endtime="20201115 22:02:16.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.426" endtime="20201115 22:02:16.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.424" endtime="20201115 22:02:16.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.468" endtime="20201115 22:02:16.756"></status>
</kw>
<msg timestamp="20201115 22:02:16.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.467" endtime="20201115 22:02:16.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.760" endtime="20201115 22:02:16.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.769" endtime="20201115 22:02:16.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.464" endtime="20201115 22:02:16.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.462" endtime="20201115 22:02:16.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.776" level="INFO">${RESULT} = [{'time': 0.022182431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8014000000000224e-05, 'source_diff': 1.8014000000000224e-05}, {'time': 0.022427569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.772" endtime="20201115 22:02:16.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.789" level="INFO">${OVERHEAD} = {'diff': [1.8014000000000224e-05, 1.801300000000075e-05, 1.8056000000002403e-05, 1.80829999999986e-05, 1.805499999999946e-05, 1.8042000000002834e-05, 1.8055999999998934e-05, 1.8084000000001543e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:02:16.777" endtime="20201115 22:02:16.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.793" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:16.793" endtime="20201115 22:02:16.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.796" level="INFO">VALUE: [1.8014000000000224e-05, 1.801300000000075e-05, 1.8056000000002403e-05, 1.80829999999986e-05, 1.805499999999946e-05, 1.8042000000002834e-05, 1.8055999999998934e-05, 1.8084000000001543e-05, 1.8055999999998934e-05, 1.80829999999986e-05, 1.8041999999999364e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.8027999999999794e-05, 1.80829999999986e-05, 1.8056000000002403e-05, 1.8014000000000224e-05, 1.8041999999999364e-05, 1.8069999999998504e-05, 1.806899999999903e-05, 1.7958000000001945e-05, 1.805499999999946e-05, 1.8070000000001973e-05, 1.80829999999986e-05, 1.805499999999946e-05, 1.802700000000032e-05, 1.804099999999989e-05, 1.8055999999998934e-05, 1.8069999999998504e-05, 1.8027999999999794e-05, 1.80829999999986e-05, 1.8041999999999364e-05, 1.8056000000002403e-05, 1.7985999999997615e-05, 1.8069999999998504e-05, 1.8027999999999794e-05, 1.809700000000164e-05, 1.8070000000001973e-05, 1.809700000000164e-05, 1.8056000000002403e-05, 1.808300000000207e-05, 1.8042000000002834e-05, 1.804099999999642e-05, 1.808299999999513e-05, 1.8070000000001973e-05, 1.812499999999384e-05, 1.808300000000207e-05, 1.805500000000293e-05, 1.809700000000164e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.795" endtime="20201115 22:02:16.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.790" endtime="20201115 22:02:16.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.800" endtime="20201115 22:02:16.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.803" endtime="20201115 22:02:16.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.802" endtime="20201115 22:02:16.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.798" endtime="20201115 22:02:16.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.422" endtime="20201115 22:02:16.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.788" endtime="20201115 22:02:16.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.787" endtime="20201115 22:02:16.824"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.826" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.835" endtime="20201115 22:02:16.863"></status>
</kw>
<msg timestamp="20201115 22:02:16.863" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.834" endtime="20201115 22:02:16.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.864" endtime="20201115 22:02:16.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.867" endtime="20201115 22:02:16.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.831" endtime="20201115 22:02:16.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.829" endtime="20201115 22:02:16.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.876" endtime="20201115 22:02:17.163"></status>
</kw>
<msg timestamp="20201115 22:02:17.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026227403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026246306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.874" endtime="20201115 22:02:17.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026227403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026246306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.167" endtime="20201115 22:02:17.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.175" endtime="20201115 22:02:17.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.872" endtime="20201115 22:02:17.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.870" endtime="20201115 22:02:17.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.182" level="INFO">${RESULT} = [{'time': 0.026246306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.890300000000067e-05, 'source_diff': 1.890300000000067e-05}, {'time': 0.026510153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:17.179" endtime="20201115 22:02:17.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.195" level="INFO">${OVERHEAD} = {'diff': [1.890300000000067e-05, 1.886100000000196e-05, 1.893099999999981e-05, 1.891700000000024e-05, 1.887500000000153e-05, 1.8915999999997296e-05, 1.891700000000024e-05, 1.8930000000000335e-05, 1.89...</msg>
<status status="PASS" starttime="20201115 22:02:17.183" endtime="20201115 22:02:17.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.200" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:17.199" endtime="20201115 22:02:17.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.203" level="INFO">VALUE: [1.890300000000067e-05, 1.886100000000196e-05, 1.893099999999981e-05, 1.891700000000024e-05, 1.887500000000153e-05, 1.8915999999997296e-05, 1.891700000000024e-05, 1.8930000000000335e-05, 1.891700000000024e-05, 1.891700000000024e-05, 1.886100000000196e-05, 1.884699999999892e-05, 1.89029999999972e-05, 1.88890000000011e-05, 1.893099999999981e-05, 1.8916000000000766e-05, 1.890300000000067e-05, 1.891699999999677e-05, 1.893099999999981e-05, 1.887500000000153e-05, 1.891700000000024e-05, 1.887500000000153e-05, 1.887500000000153e-05, 1.884700000000239e-05, 1.890300000000067e-05, 1.88890000000011e-05, 1.893099999999981e-05, 1.88890000000011e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.8943999999999905e-05, 1.8792000000003584e-05, 1.8902000000001196e-05, 1.891700000000024e-05, 1.883299999999588e-05, 1.8930000000000335e-05, 1.893099999999981e-05, 1.887500000000153e-05, 1.891700000000024e-05, 1.8930000000000335e-05, 1.890300000000067e-05, 1.8916000000000766e-05, 1.893099999999981e-05, 1.891700000000024e-05, 1.886100000000196e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.8902000000001196e-05, 1.888899999999416e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.201" endtime="20201115 22:02:17.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.196" endtime="20201115 22:02:17.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.206" endtime="20201115 22:02:17.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.209" endtime="20201115 22:02:17.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.208" endtime="20201115 22:02:17.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.204" endtime="20201115 22:02:17.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.827" endtime="20201115 22:02:17.230"></status>
</kw>
<msg timestamp="20201115 22:02:17.230" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.239" endtime="20201115 22:02:17.269"></status>
</kw>
<msg timestamp="20201115 22:02:17.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.237" endtime="20201115 22:02:17.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.272" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.270" endtime="20201115 22:02:17.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.273" endtime="20201115 22:02:17.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.235" endtime="20201115 22:02:17.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.233" endtime="20201115 22:02:17.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.282" endtime="20201115 22:02:17.568"></status>
</kw>
<msg timestamp="20201115 22:02:17.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.280" endtime="20201115 22:02:17.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.572" endtime="20201115 22:02:17.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.580" endtime="20201115 22:02:17.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.278" endtime="20201115 22:02:17.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.276" endtime="20201115 22:02:17.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.587" level="INFO">${RESULT} = [{'time': 0.021961792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.893099999999981e-05, 'source_diff': 1.893099999999981e-05}, {'time': 0.022227333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:17.583" endtime="20201115 22:02:17.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.600" level="INFO">${OVERHEAD} = {'diff': [1.893099999999981e-05, 1.888899999999763e-05, 1.891700000000024e-05, 1.8943999999999905e-05, 1.898699999999809e-05, 1.8985999999998615e-05, 1.8930000000000335e-05, 1.894499999999938e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 22:02:17.588" endtime="20201115 22:02:17.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.605" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:17.604" endtime="20201115 22:02:17.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.607" level="INFO">VALUE: [1.893099999999981e-05, 1.888899999999763e-05, 1.891700000000024e-05, 1.8943999999999905e-05, 1.898699999999809e-05, 1.8985999999998615e-05, 1.8930000000000335e-05, 1.894499999999938e-05, 1.8957999999999475e-05, 1.8902000000001196e-05, 1.8901999999997726e-05, 1.8916000000000766e-05, 1.890300000000067e-05, 1.8915999999997296e-05, 1.8930000000000335e-05, 1.8957999999999475e-05, 1.890300000000067e-05, 1.881899999999978e-05, 1.894499999999938e-05, 1.8930000000000335e-05, 1.891700000000024e-05, 1.8916000000000766e-05, 1.888899999999763e-05, 1.8957999999999475e-05, 1.8957999999999475e-05, 1.884699999999892e-05, 1.8957999999999475e-05, 1.890300000000067e-05, 1.887499999999806e-05, 1.8943999999999905e-05, 1.894499999999938e-05, 1.8971999999999045e-05, 1.890300000000067e-05, 1.8943999999999905e-05, 1.8916000000000766e-05, 1.895900000000242e-05, 1.890300000000067e-05, 1.8916000000000766e-05, 1.887500000000153e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.887500000000153e-05, 1.8902000000001196e-05, 1.890300000000067e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.8958000000006414e-05, 1.88890000000011e-05, 1.890300000000067e-05, 1.8916000000000766e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.606" endtime="20201115 22:02:17.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.601" endtime="20201115 22:02:17.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.611" endtime="20201115 22:02:17.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.614" endtime="20201115 22:02:17.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.612" endtime="20201115 22:02:17.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.609" endtime="20201115 22:02:17.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.231" endtime="20201115 22:02:17.635"></status>
</kw>
<msg timestamp="20201115 22:02:17.635" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.644" endtime="20201115 22:02:17.671"></status>
</kw>
<msg timestamp="20201115 22:02:17.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.642" endtime="20201115 22:02:17.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.672" endtime="20201115 22:02:17.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.675" endtime="20201115 22:02:17.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.640" endtime="20201115 22:02:17.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.637" endtime="20201115 22:02:17.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.684" endtime="20201115 22:02:17.971"></status>
</kw>
<msg timestamp="20201115 22:02:17.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02417925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:17.682" endtime="20201115 22:02:17.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02417925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024198139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:17.975" endtime="20201115 22:02:17.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.983" endtime="20201115 22:02:17.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.680" endtime="20201115 22:02:17.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.678" endtime="20201115 22:02:17.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.990" level="INFO">${RESULT} = [{'time': 0.024198139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.88890000000011e-05, 'source_diff': 1.88890000000011e-05}, {'time': 0.024464764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:17.986" endtime="20201115 22:02:17.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.003" level="INFO">${OVERHEAD} = {'diff': [1.88890000000011e-05, 1.894499999999938e-05, 1.8916000000000766e-05, 1.8957999999999475e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.8819999999999254e-05, 1.894499999999938e-05, 1.89...</msg>
<status status="PASS" starttime="20201115 22:02:17.991" endtime="20201115 22:02:18.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.008" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:18.007" endtime="20201115 22:02:18.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.011" level="INFO">VALUE: [1.88890000000011e-05, 1.894499999999938e-05, 1.8916000000000766e-05, 1.8957999999999475e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.8819999999999254e-05, 1.894499999999938e-05, 1.893099999999981e-05, 1.891700000000024e-05, 1.8902000000001196e-05, 1.890300000000067e-05, 1.8930000000000335e-05, 1.888899999999763e-05, 1.891700000000024e-05, 1.886099999999849e-05, 1.886099999999849e-05, 1.8930000000000335e-05, 1.8916000000000766e-05, 1.890300000000067e-05, 1.891700000000024e-05, 1.88890000000011e-05, 1.88890000000011e-05, 1.8902000000001196e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.888899999999763e-05, 1.890300000000067e-05, 1.893099999999981e-05, 1.8916000000000766e-05, 1.890300000000067e-05, 1.893099999999981e-05, 1.9000000000005124e-05, 1.8930000000000335e-05, 1.8888000000001626e-05, 1.887500000000153e-05, 1.890300000000067e-05, 1.8888000000001626e-05, 1.883299999999588e-05, 1.890300000000067e-05, 1.893099999999981e-05, 1.887500000000153e-05, 1.8916000000000766e-05, 1.890300000000067e-05, 1.88890000000011e-05, 1.8943999999999905e-05, 1.88890000000011e-05, 1.8943999999999905e-05, 1.890300000000067e-05, 1.890300000000067e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.009" endtime="20201115 22:02:18.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.004" endtime="20201115 22:02:18.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.014" endtime="20201115 22:02:18.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.017" endtime="20201115 22:02:18.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.015" endtime="20201115 22:02:18.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.012" endtime="20201115 22:02:18.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.635" endtime="20201115 22:02:18.038"></status>
</kw>
<msg timestamp="20201115 22:02:18.038" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.047" endtime="20201115 22:02:18.072"></status>
</kw>
<msg timestamp="20201115 22:02:18.073" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.046" endtime="20201115 22:02:18.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.075" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.074" endtime="20201115 22:02:18.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.076" endtime="20201115 22:02:18.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.043" endtime="20201115 22:02:18.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.041" endtime="20201115 22:02:18.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.085" endtime="20201115 22:02:18.373"></status>
</kw>
<msg timestamp="20201115 22:02:18.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022982333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023001278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.084" endtime="20201115 22:02:18.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022982333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023001278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.377" endtime="20201115 22:02:18.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.386" endtime="20201115 22:02:18.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.081" endtime="20201115 22:02:18.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.080" endtime="20201115 22:02:18.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.393" level="INFO">${RESULT} = [{'time': 0.023001278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.894499999999938e-05, 'source_diff': 1.894499999999938e-05}, {'time': 0.023265444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:18.389" endtime="20201115 22:02:18.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.406" level="INFO">${OVERHEAD} = {'diff': [1.894499999999938e-05, 1.8943999999999905e-05, 1.890300000000067e-05, 1.8916000000000766e-05, 1.88890000000011e-05, 1.891700000000024e-05, 1.8901999999997726e-05, 1.89029999999972e-05, 1.890...</msg>
<status status="PASS" starttime="20201115 22:02:18.394" endtime="20201115 22:02:18.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.410" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:18.409" endtime="20201115 22:02:18.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.413" level="INFO">VALUE: [1.894499999999938e-05, 1.8943999999999905e-05, 1.890300000000067e-05, 1.8916000000000766e-05, 1.88890000000011e-05, 1.891700000000024e-05, 1.8901999999997726e-05, 1.89029999999972e-05, 1.89029999999972e-05, 1.894500000000285e-05, 1.886099999999849e-05, 1.891700000000024e-05, 1.894499999999938e-05, 1.8957999999999475e-05, 1.891700000000024e-05, 1.8930000000000335e-05, 1.8943999999999905e-05, 1.884700000000239e-05, 1.893099999999981e-05, 1.8861999999997964e-05, 1.887499999999806e-05, 1.894499999999938e-05, 1.8805999999999684e-05, 1.890300000000067e-05, 1.890300000000067e-05, 1.8930000000000335e-05, 1.893099999999981e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.887500000000153e-05, 1.893099999999981e-05, 1.890300000000067e-05, 1.8916000000000766e-05, 1.884699999999545e-05, 1.891700000000024e-05, 1.890300000000067e-05, 1.887500000000153e-05, 1.8930000000000335e-05, 1.887500000000153e-05, 1.893099999999981e-05, 1.88890000000011e-05, 1.891700000000024e-05, 1.887500000000153e-05, 1.891700000000024e-05, 1.8943999999999905e-05, 1.890300000000067e-05, 1.8943999999999905e-05, 1.887500000000153e-05, 1.887500000000153e-05, 1.891700000000024e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.412" endtime="20201115 22:02:18.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.407" endtime="20201115 22:02:18.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.416" endtime="20201115 22:02:18.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.419" endtime="20201115 22:02:18.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.418" endtime="20201115 22:02:18.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.414" endtime="20201115 22:02:18.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.039" endtime="20201115 22:02:18.440"></status>
</kw>
<msg timestamp="20201115 22:02:18.440" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.449" endtime="20201115 22:02:18.475"></status>
</kw>
<msg timestamp="20201115 22:02:18.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.448" endtime="20201115 22:02:18.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.478" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.477" endtime="20201115 22:02:18.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.479" endtime="20201115 22:02:18.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.445" endtime="20201115 22:02:18.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.443" endtime="20201115 22:02:18.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.488" endtime="20201115 22:02:18.775"></status>
</kw>
<msg timestamp="20201115 22:02:18.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022535958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.486" endtime="20201115 22:02:18.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022535958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.779" endtime="20201115 22:02:18.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.787" endtime="20201115 22:02:18.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.484" endtime="20201115 22:02:18.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.482" endtime="20201115 22:02:18.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.794" level="INFO">${RESULT} = [{'time': 0.022554861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.890300000000067e-05, 'source_diff': 1.890300000000067e-05}, {'time': 0.022821833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:18.791" endtime="20201115 22:02:18.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.808" level="INFO">${OVERHEAD} = {'diff': [1.890300000000067e-05, 1.8943999999999905e-05, 1.891700000000024e-05, 1.886100000000196e-05, 1.893099999999981e-05, 1.888899999999763e-05, 1.887500000000153e-05, 1.8916000000000766e-05, 1.89...</msg>
<status status="PASS" starttime="20201115 22:02:18.795" endtime="20201115 22:02:18.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.813" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:18.812" endtime="20201115 22:02:18.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.815" level="INFO">VALUE: [1.890300000000067e-05, 1.8943999999999905e-05, 1.891700000000024e-05, 1.886100000000196e-05, 1.893099999999981e-05, 1.888899999999763e-05, 1.887500000000153e-05, 1.8916000000000766e-05, 1.894499999999938e-05, 1.890300000000067e-05, 1.891700000000024e-05, 1.886099999999849e-05, 1.8834000000002293e-05, 1.8971999999999045e-05, 1.89029999999972e-05, 1.8916000000000766e-05, 1.891700000000024e-05, 1.8916000000000766e-05, 1.88890000000011e-05, 1.888899999999763e-05, 1.891700000000024e-05, 1.890300000000067e-05, 1.887499999999806e-05, 1.894500000000285e-05, 1.891700000000024e-05, 1.8916000000000766e-05, 1.89029999999972e-05, 1.891700000000024e-05, 1.886100000000196e-05, 1.890300000000067e-05, 1.893099999999981e-05, 1.886099999999849e-05, 1.891700000000024e-05, 1.8916000000000766e-05, 1.8930000000000335e-05, 1.8901999999994257e-05, 1.884700000000239e-05, 1.888899999999416e-05, 1.887499999999459e-05, 1.8971999999999045e-05, 1.8916000000000766e-05, 1.8902000000001196e-05, 1.893099999999981e-05, 1.891700000000024e-05, 1.891700000000024e-05, 1.894499999999938e-05, 1.880500000000368e-05, 1.8929999999993397e-05, 1.8943999999999905e-05, 1.8930000000000335e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.814" endtime="20201115 22:02:18.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.809" endtime="20201115 22:02:18.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.818" endtime="20201115 22:02:18.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.822" endtime="20201115 22:02:18.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.820" endtime="20201115 22:02:18.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.817" endtime="20201115 22:02:18.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.441" endtime="20201115 22:02:18.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.825" endtime="20201115 22:02:18.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.824" endtime="20201115 22:02:18.843"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.845" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.854" endtime="20201115 22:02:18.882"></status>
</kw>
<msg timestamp="20201115 22:02:18.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.852" endtime="20201115 22:02:18.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.884" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.883" endtime="20201115 22:02:18.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.886" endtime="20201115 22:02:18.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.850" endtime="20201115 22:02:18.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.848" endtime="20201115 22:02:18.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.895" endtime="20201115 22:02:19.182"></status>
</kw>
<msg timestamp="20201115 22:02:19.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027110125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027129903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.894" endtime="20201115 22:02:19.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027110125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027129903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.186" endtime="20201115 22:02:19.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.194" endtime="20201115 22:02:19.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.891" endtime="20201115 22:02:19.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.889" endtime="20201115 22:02:19.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.201" level="INFO">${RESULT} = [{'time': 0.027129903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9778000000001544e-05, 'source_diff': 1.9778000000001544e-05}, {'time': 0.027415028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:19.198" endtime="20201115 22:02:19.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.214" level="INFO">${OVERHEAD} = {'diff': [1.9778000000001544e-05, 1.9735999999999365e-05, 1.9763999999998505e-05, 1.977700000000207e-05, 1.9763999999998505e-05, 1.977700000000207e-05, 1.9763999999998505e-05, 1.9792000000001114e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:19.202" endtime="20201115 22:02:19.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.219" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:19.218" endtime="20201115 22:02:19.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.221" level="INFO">VALUE: [1.9778000000001544e-05, 1.9735999999999365e-05, 1.9763999999998505e-05, 1.977700000000207e-05, 1.9763999999998505e-05, 1.977700000000207e-05, 1.9763999999998505e-05, 1.9792000000001114e-05, 1.9749999999998935e-05, 1.9750000000002405e-05, 1.9721999999999795e-05, 1.9764000000001974e-05, 1.977700000000207e-05, 1.9694000000000655e-05, 1.9735999999999365e-05, 1.981899999999731e-05, 1.9777999999998075e-05, 1.9735999999999365e-05, 1.9666000000001516e-05, 1.9791999999997645e-05, 1.9763999999998505e-05, 1.976299999999903e-05, 1.976299999999903e-05, 1.97769999999986e-05, 1.9749999999998935e-05, 1.9764000000005444e-05, 1.9736000000006304e-05, 1.9763999999998505e-05, 1.9777999999998075e-05, 1.9777999999998075e-05, 1.9777999999998075e-05, 1.9721999999999795e-05, 1.9777999999998075e-05, 1.9777999999998075e-05, 1.9735999999999365e-05, 1.981899999999731e-05, 1.972299999999927e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9791999999997645e-05, 1.9763999999998505e-05, 1.9791999999997645e-05, 1.9778000000005014e-05, 1.9708000000000225e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9666000000001516e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.220" endtime="20201115 22:02:19.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.215" endtime="20201115 22:02:19.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.225" endtime="20201115 22:02:19.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.228" endtime="20201115 22:02:19.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.226" endtime="20201115 22:02:19.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.223" endtime="20201115 22:02:19.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.846" endtime="20201115 22:02:19.249"></status>
</kw>
<msg timestamp="20201115 22:02:19.249" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.258" endtime="20201115 22:02:19.288"></status>
</kw>
<msg timestamp="20201115 22:02:19.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.257" endtime="20201115 22:02:19.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.292" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.290" endtime="20201115 22:02:19.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.293" endtime="20201115 22:02:19.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.254" endtime="20201115 22:02:19.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.252" endtime="20201115 22:02:19.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.302" endtime="20201115 22:02:19.589"></status>
</kw>
<msg timestamp="20201115 22:02:19.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.300" endtime="20201115 22:02:19.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.593" endtime="20201115 22:02:19.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.601" endtime="20201115 22:02:19.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.298" endtime="20201115 22:02:19.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.296" endtime="20201115 22:02:19.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.608" level="INFO">${RESULT} = [{'time': 0.022802694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.979099999999817e-05, 'source_diff': 1.979099999999817e-05}, {'time': 0.023089667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:19.604" endtime="20201115 22:02:19.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.621" level="INFO">${OVERHEAD} = {'diff': [1.979099999999817e-05, 1.972300000000274e-05, 1.9764000000001974e-05, 1.9736000000002835e-05, 1.969500000000013e-05, 1.9764000000001974e-05, 1.9694000000000655e-05, 1.9847999999999394e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:02:19.609" endtime="20201115 22:02:19.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.626" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:19.625" endtime="20201115 22:02:19.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.628" level="INFO">VALUE: [1.979099999999817e-05, 1.972300000000274e-05, 1.9764000000001974e-05, 1.9736000000002835e-05, 1.969500000000013e-05, 1.9764000000001974e-05, 1.9694000000000655e-05, 1.9847999999999394e-05, 1.980499999999774e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9778000000001544e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9777999999998075e-05, 1.9721999999999795e-05, 1.97089999999997e-05, 1.9749999999998935e-05, 1.981900000000078e-05, 1.9792000000001114e-05, 1.9778000000001544e-05, 1.9777999999998075e-05, 1.9778000000001544e-05, 1.981900000000078e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9764000000001974e-05, 1.969500000000013e-05, 1.9820000000000254e-05, 1.9833999999996355e-05, 1.9721999999999795e-05, 1.9763999999998505e-05, 1.9777999999998075e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9792000000004584e-05, 1.9791999999997645e-05, 1.9735999999999365e-05, 1.97769999999986e-05, 1.981900000000425e-05, 1.9749999999998935e-05, 1.981899999999731e-05, 1.9778000000005014e-05, 1.976299999999903e-05, 1.9680000000001086e-05, 1.9777999999998075e-05, 1.9763999999998505e-05, 1.9735999999999365e-05, 1.9708000000000225e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.627" endtime="20201115 22:02:19.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.622" endtime="20201115 22:02:19.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.632" endtime="20201115 22:02:19.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.635" endtime="20201115 22:02:19.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.634" endtime="20201115 22:02:19.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.630" endtime="20201115 22:02:19.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.250" endtime="20201115 22:02:19.656"></status>
</kw>
<msg timestamp="20201115 22:02:19.656" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.666" endtime="20201115 22:02:19.691"></status>
</kw>
<msg timestamp="20201115 22:02:19.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.664" endtime="20201115 22:02:19.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.694" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.692" endtime="20201115 22:02:19.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.695" endtime="20201115 22:02:19.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.661" endtime="20201115 22:02:19.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.659" endtime="20201115 22:02:19.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.704" endtime="20201115 22:02:19.992"></status>
</kw>
<msg timestamp="20201115 22:02:19.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.702" endtime="20201115 22:02:19.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.996" endtime="20201115 22:02:20.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.004" endtime="20201115 22:02:20.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.700" endtime="20201115 22:02:20.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.698" endtime="20201115 22:02:20.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.011" level="INFO">${RESULT} = [{'time': 0.022391417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9792000000001114e-05, 'source_diff': 1.9792000000001114e-05}, {'time': 0.022676972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:20.008" endtime="20201115 22:02:20.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.025" level="INFO">${OVERHEAD} = {'diff': [1.9792000000001114e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9750000000002405e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9763999999998505e-05, 1.973699999999884e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:20.012" endtime="20201115 22:02:20.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.029" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:20.028" endtime="20201115 22:02:20.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.031" level="INFO">VALUE: [1.9792000000001114e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9750000000002405e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9763999999998505e-05, 1.973699999999884e-05, 1.9777999999998075e-05, 1.9749999999998935e-05, 1.973699999999884e-05, 1.9749999999998935e-05, 1.9764000000001974e-05, 1.9777999999998075e-05, 1.965299999999795e-05, 1.979100000000164e-05, 1.987499999999906e-05, 1.9721999999999795e-05, 1.97630000000025e-05, 1.9778000000001544e-05, 1.9847999999999394e-05, 1.979100000000164e-05, 1.968099999999709e-05, 1.9708000000000225e-05, 1.9778000000001544e-05, 1.9749999999998935e-05, 1.972299999999927e-05, 1.9791999999997645e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.979100000000164e-05, 1.9708000000000225e-05, 1.9791999999997645e-05, 1.9750000000005874e-05, 1.9749999999998935e-05, 1.9791999999997645e-05, 1.9763999999998505e-05, 1.981899999999731e-05, 1.9749999999998935e-05, 1.9791999999997645e-05, 1.9749999999998935e-05, 1.97089999999997e-05, 1.9721999999999795e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9805999999997215e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9763999999998505e-05, 1.9749999999998935e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.030" endtime="20201115 22:02:20.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.025" endtime="20201115 22:02:20.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.035" endtime="20201115 22:02:20.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.038" endtime="20201115 22:02:20.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.036" endtime="20201115 22:02:20.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.033" endtime="20201115 22:02:20.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.657" endtime="20201115 22:02:20.059"></status>
</kw>
<msg timestamp="20201115 22:02:20.059" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.068" endtime="20201115 22:02:20.092"></status>
</kw>
<msg timestamp="20201115 22:02:20.093" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.067" endtime="20201115 22:02:20.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.095" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.094" endtime="20201115 22:02:20.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.096" endtime="20201115 22:02:20.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.064" endtime="20201115 22:02:20.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.062" endtime="20201115 22:02:20.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.105" endtime="20201115 22:02:20.392"></status>
</kw>
<msg timestamp="20201115 22:02:20.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.104" endtime="20201115 22:02:20.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.396" endtime="20201115 22:02:20.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.404" endtime="20201115 22:02:20.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.101" endtime="20201115 22:02:20.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.100" endtime="20201115 22:02:20.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.411" level="INFO">${RESULT} = [{'time': 0.021483681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9778000000001544e-05, 'source_diff': 1.9778000000001544e-05}, {'time': 0.021771611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:20.407" endtime="20201115 22:02:20.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.424" level="INFO">${OVERHEAD} = {'diff': [1.9778000000001544e-05, 1.9792000000001114e-05, 1.979100000000164e-05, 1.9764000000001974e-05, 1.981899999999731e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9737000000002308e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:20.412" endtime="20201115 22:02:20.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.429" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:20.428" endtime="20201115 22:02:20.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.431" level="INFO">VALUE: [1.9778000000001544e-05, 1.9792000000001114e-05, 1.979100000000164e-05, 1.9764000000001974e-05, 1.981899999999731e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9737000000002308e-05, 1.9721999999999795e-05, 1.976299999999903e-05, 1.9735999999999365e-05, 1.980499999999774e-05, 1.9722000000003265e-05, 1.983300000000035e-05, 1.9778000000001544e-05, 1.976299999999903e-05, 1.9778000000001544e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9736000000002835e-05, 1.9792000000001114e-05, 1.9749999999998935e-05, 1.9791999999997645e-05, 1.9764000000001974e-05, 1.9778000000001544e-05, 1.979099999999817e-05, 1.972300000000274e-05, 1.9750000000002405e-05, 1.9749999999998935e-05, 1.9764000000001974e-05, 1.9792000000001114e-05, 1.9749999999998935e-05, 1.983300000000035e-05, 1.9736000000002835e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9777999999998075e-05, 1.9763999999998505e-05, 1.97769999999986e-05, 1.979099999999817e-05, 1.97089999999997e-05, 1.9777999999998075e-05, 1.9791999999997645e-05, 1.9777999999998075e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9735999999999365e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.430" endtime="20201115 22:02:20.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.425" endtime="20201115 22:02:20.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.434" endtime="20201115 22:02:20.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.472" endtime="20201115 22:02:20.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.470" endtime="20201115 22:02:20.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.433" endtime="20201115 22:02:20.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.060" endtime="20201115 22:02:20.493"></status>
</kw>
<msg timestamp="20201115 22:02:20.493" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.502" endtime="20201115 22:02:20.530"></status>
</kw>
<msg timestamp="20201115 22:02:20.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.500" endtime="20201115 22:02:20.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.533" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.532" endtime="20201115 22:02:20.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.534" endtime="20201115 22:02:20.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.497" endtime="20201115 22:02:20.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.495" endtime="20201115 22:02:20.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.543" endtime="20201115 22:02:20.829"></status>
</kw>
<msg timestamp="20201115 22:02:20.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024868792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.542" endtime="20201115 22:02:20.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024849042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024868792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.834" endtime="20201115 22:02:20.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.842" endtime="20201115 22:02:20.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.539" endtime="20201115 22:02:20.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.537" endtime="20201115 22:02:20.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.849" level="INFO">${RESULT} = [{'time': 0.024868792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9750000000002405e-05, 'source_diff': 1.9750000000002405e-05}, {'time': 0.025156389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:20.845" endtime="20201115 22:02:20.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.862" level="INFO">${OVERHEAD} = {'diff': [1.9750000000002405e-05, 1.9764000000001974e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9778000000001544e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9763999999998505e-05...</msg>
<status status="PASS" starttime="20201115 22:02:20.850" endtime="20201115 22:02:20.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.867" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:20.866" endtime="20201115 22:02:20.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.869" level="INFO">VALUE: [1.9750000000002405e-05, 1.9764000000001974e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9778000000001544e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.969500000000013e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.984699999999992e-05, 1.969500000000013e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9764000000001974e-05, 1.9736000000002835e-05, 1.9792000000001114e-05, 1.9778000000001544e-05, 1.9735999999999365e-05, 1.9763999999998505e-05, 1.979100000000511e-05, 1.976299999999903e-05, 1.983300000000382e-05, 1.9721999999999795e-05, 1.9763999999998505e-05, 1.9764000000005444e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9777999999998075e-05, 1.9777999999998075e-05, 1.9749999999998935e-05, 1.977700000000554e-05, 1.9792000000004584e-05, 1.983300000000382e-05, 1.9763999999998505e-05, 1.9820000000003724e-05, 1.9777999999998075e-05, 1.9763999999998505e-05, 1.983300000000382e-05, 1.9792000000004584e-05, 1.979099999999817e-05, 1.973699999999884e-05, 1.9778000000005014e-05, 1.979099999999817e-05, 1.9763999999998505e-05, 1.9791999999997645e-05, 1.9763999999998505e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.868" endtime="20201115 22:02:20.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.863" endtime="20201115 22:02:20.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.873" endtime="20201115 22:02:20.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.876" endtime="20201115 22:02:20.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.875" endtime="20201115 22:02:20.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.871" endtime="20201115 22:02:20.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.493" endtime="20201115 22:02:20.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.844" endtime="20201115 22:02:20.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.843" endtime="20201115 22:02:20.897"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.900" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.909" endtime="20201115 22:02:20.937"></status>
</kw>
<msg timestamp="20201115 22:02:20.937" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.907" endtime="20201115 22:02:20.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.938" endtime="20201115 22:02:20.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.941" endtime="20201115 22:02:20.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.904" endtime="20201115 22:02:20.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.902" endtime="20201115 22:02:20.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.950" endtime="20201115 22:02:21.235"></status>
</kw>
<msg timestamp="20201115 22:02:21.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027554014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027574625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.948" endtime="20201115 22:02:21.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027554014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027574625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.239" endtime="20201115 22:02:21.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.247" endtime="20201115 22:02:21.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.946" endtime="20201115 22:02:21.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.944" endtime="20201115 22:02:21.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.253" level="INFO">${RESULT} = [{'time': 0.027574625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.061099999999677e-05, 'source_diff': 2.061099999999677e-05}, {'time': 0.027881222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:21.250" endtime="20201115 22:02:21.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.267" level="INFO">${OVERHEAD} = {'diff': [2.061099999999677e-05, 2.059700000000067e-05, 2.061100000000024e-05, 2.0570000000001004e-05, 2.0598000000000144e-05, 2.063899999999938e-05, 2.063899999999938e-05, 2.061100000000024e-05, 2.06...</msg>
<status status="PASS" starttime="20201115 22:02:21.254" endtime="20201115 22:02:21.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.271" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:21.270" endtime="20201115 22:02:21.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.274" level="INFO">VALUE: [2.061099999999677e-05, 2.059700000000067e-05, 2.061100000000024e-05, 2.0570000000001004e-05, 2.0598000000000144e-05, 2.063899999999938e-05, 2.063899999999938e-05, 2.061100000000024e-05, 2.061100000000024e-05, 2.0637999999999906e-05, 2.061100000000024e-05, 2.061100000000024e-05, 2.0693999999998186e-05, 2.05969999999972e-05, 2.0541999999998395e-05, 2.055499999999849e-05, 2.054099999999892e-05, 2.061100000000371e-05, 2.062499999999634e-05, 2.061099999999677e-05, 2.065300000000242e-05, 2.0583999999997105e-05, 2.059700000000414e-05, 2.062499999999634e-05, 2.061100000000371e-05, 2.0680000000002086e-05, 2.063900000000285e-05, 2.0612000000003183e-05, 2.062499999999634e-05, 2.061099999999677e-05, 2.062500000000328e-05, 2.063899999999591e-05, 2.058299999999763e-05, 2.062499999999634e-05, 2.061099999999677e-05, 2.059700000000414e-05, 2.05969999999972e-05, 2.062500000000328e-05, 2.061100000000371e-05, 2.061099999999677e-05, 2.061100000000371e-05, 2.05969999999972e-05, 2.0583999999997105e-05, 2.0611999999996244e-05, 2.063899999999591e-05, 2.059700000000414e-05, 2.061100000000371e-05, 2.059700000000414e-05, 2.063899999999591e-05, 2.054099999999892e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.272" endtime="20201115 22:02:21.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.268" endtime="20201115 22:02:21.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.277" endtime="20201115 22:02:21.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.281" endtime="20201115 22:02:21.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.279" endtime="20201115 22:02:21.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.276" endtime="20201115 22:02:21.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.900" endtime="20201115 22:02:21.302"></status>
</kw>
<msg timestamp="20201115 22:02:21.302" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.311" endtime="20201115 22:02:21.343"></status>
</kw>
<msg timestamp="20201115 22:02:21.343" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.309" endtime="20201115 22:02:21.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.346" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.344" endtime="20201115 22:02:21.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.347" endtime="20201115 22:02:21.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.306" endtime="20201115 22:02:21.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.304" endtime="20201115 22:02:21.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.356" endtime="20201115 22:02:21.642"></status>
</kw>
<msg timestamp="20201115 22:02:21.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024807597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024828194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.354" endtime="20201115 22:02:21.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024807597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024828194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.646" endtime="20201115 22:02:21.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.654" endtime="20201115 22:02:21.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.352" endtime="20201115 22:02:21.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.350" endtime="20201115 22:02:21.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.661" level="INFO">${RESULT} = [{'time': 0.024828194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.059700000000067e-05, 'source_diff': 2.059700000000067e-05}, {'time': 0.025132417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:21.658" endtime="20201115 22:02:21.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.674" level="INFO">${OVERHEAD} = {'diff': [2.059700000000067e-05, 2.066700000000199e-05, 2.0570000000001004e-05, 2.068099999999809e-05, 2.058299999999763e-05, 2.0541999999998395e-05, 2.063899999999938e-05, 2.0637999999999906e-05, 2.0...</msg>
<status status="PASS" starttime="20201115 22:02:21.662" endtime="20201115 22:02:21.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.679" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:21.678" endtime="20201115 22:02:21.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.682" level="INFO">VALUE: [2.059700000000067e-05, 2.066700000000199e-05, 2.0570000000001004e-05, 2.068099999999809e-05, 2.058299999999763e-05, 2.0541999999998395e-05, 2.063899999999938e-05, 2.0637999999999906e-05, 2.055499999999849e-05, 2.061100000000024e-05, 2.063900000000285e-05, 2.059700000000067e-05, 2.059700000000067e-05, 2.058299999999763e-05, 2.0694000000001656e-05, 2.059700000000067e-05, 2.0598000000000144e-05, 2.062499999999981e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.062499999999634e-05, 2.063900000000285e-05, 2.063900000000285e-05, 2.065300000000242e-05, 2.056899999999806e-05, 2.061100000000371e-05, 2.062499999999634e-05, 2.058299999999763e-05, 2.05969999999972e-05, 2.063900000000285e-05, 2.0597999999996675e-05, 2.061099999999677e-05, 2.061099999999677e-05, 2.0651999999996007e-05, 2.0612000000003183e-05, 2.062499999999634e-05, 2.063899999999591e-05, 2.061100000000371e-05, 2.056899999999806e-05, 2.0680000000002086e-05, 2.061099999999677e-05, 2.061099999999677e-05, 2.061099999999677e-05, 2.056899999999806e-05, 2.05969999999972e-05, 2.063899999999591e-05, 2.065300000000242e-05, 2.061100000000371e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.680" endtime="20201115 22:02:21.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.676" endtime="20201115 22:02:21.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.685" endtime="20201115 22:02:21.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.688" endtime="20201115 22:02:21.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.687" endtime="20201115 22:02:21.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.683" endtime="20201115 22:02:21.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.302" endtime="20201115 22:02:21.709"></status>
</kw>
<msg timestamp="20201115 22:02:21.709" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.718" endtime="20201115 22:02:21.745"></status>
</kw>
<msg timestamp="20201115 22:02:21.745" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.716" endtime="20201115 22:02:21.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.746" endtime="20201115 22:02:21.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.749" endtime="20201115 22:02:21.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.714" endtime="20201115 22:02:21.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.712" endtime="20201115 22:02:21.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.758" endtime="20201115 22:02:22.044"></status>
</kw>
<msg timestamp="20201115 22:02:22.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024219264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024239833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.757" endtime="20201115 22:02:22.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024219264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024239833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.049" endtime="20201115 22:02:22.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.056" endtime="20201115 22:02:22.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.754" endtime="20201115 22:02:22.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.752" endtime="20201115 22:02:22.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.063" level="INFO">${RESULT} = [{'time': 0.024239833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.056899999999806e-05, 'source_diff': 2.056899999999806e-05}, {'time': 0.024543014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:22.060" endtime="20201115 22:02:22.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.077" level="INFO">${OVERHEAD} = {'diff': [2.056899999999806e-05, 2.063899999999938e-05, 2.061100000000024e-05, 2.063900000000285e-05, 2.062499999999981e-05, 2.05830000000011e-05, 2.0651999999999476e-05, 2.05830000000011e-05, 2.06119...</msg>
<status status="PASS" starttime="20201115 22:02:22.065" endtime="20201115 22:02:22.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.081" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:22.080" endtime="20201115 22:02:22.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.084" level="INFO">VALUE: [2.056899999999806e-05, 2.063899999999938e-05, 2.061100000000024e-05, 2.063900000000285e-05, 2.062499999999981e-05, 2.05830000000011e-05, 2.0651999999999476e-05, 2.05830000000011e-05, 2.0611999999999714e-05, 2.056900000000153e-05, 2.059700000000067e-05, 2.061100000000024e-05, 2.0611999999999714e-05, 2.0584000000000574e-05, 2.061100000000024e-05, 2.062500000000328e-05, 2.05830000000011e-05, 2.0556000000001434e-05, 2.061100000000024e-05, 2.0556000000001434e-05, 2.059700000000067e-05, 2.059700000000067e-05, 2.062500000000328e-05, 2.0598000000003613e-05, 2.062500000000328e-05, 2.062500000000328e-05, 2.056899999999806e-05, 2.061099999999677e-05, 2.055499999999849e-05, 2.058300000000457e-05, 2.063899999999591e-05, 2.0694000000001656e-05, 2.061100000000371e-05, 2.058299999999763e-05, 2.0651999999996007e-05, 2.062500000000328e-05, 2.065299999999548e-05, 2.061099999999677e-05, 2.063900000000285e-05, 2.0569000000005e-05, 2.065300000000242e-05, 2.063900000000285e-05, 2.063900000000285e-05, 2.062500000000328e-05, 2.059700000000414e-05, 2.061099999999677e-05, 2.065299999999548e-05, 2.05969999999972e-05, 2.061099999999677e-05, 2.065299999999548e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.083" endtime="20201115 22:02:22.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.078" endtime="20201115 22:02:22.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.087" endtime="20201115 22:02:22.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.091" endtime="20201115 22:02:22.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.089" endtime="20201115 22:02:22.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.085" endtime="20201115 22:02:22.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.710" endtime="20201115 22:02:22.111"></status>
</kw>
<msg timestamp="20201115 22:02:22.112" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.120" endtime="20201115 22:02:22.148"></status>
</kw>
<msg timestamp="20201115 22:02:22.148" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.119" endtime="20201115 22:02:22.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.151" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.149" endtime="20201115 22:02:22.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.152" endtime="20201115 22:02:22.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.116" endtime="20201115 22:02:22.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.114" endtime="20201115 22:02:22.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.161" endtime="20201115 22:02:22.452"></status>
</kw>
<msg timestamp="20201115 22:02:22.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023880389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023900986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.159" endtime="20201115 22:02:22.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023880389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023900986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.461" endtime="20201115 22:02:22.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.480" endtime="20201115 22:02:22.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.157" endtime="20201115 22:02:22.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.155" endtime="20201115 22:02:22.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.494" level="INFO">${RESULT} = [{'time': 0.023900986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.059700000000067e-05, 'source_diff': 2.059700000000067e-05}, {'time': 0.024205958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:22.487" endtime="20201115 22:02:22.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.524" level="INFO">${OVERHEAD} = {'diff': [2.059700000000067e-05, 2.061100000000024e-05, 2.063899999999938e-05, 2.0528000000002294e-05, 2.05830000000011e-05, 2.05830000000011e-05, 2.062499999999981e-05, 2.05969999999972e-05, 2.058299...</msg>
<status status="PASS" starttime="20201115 22:02:22.496" endtime="20201115 22:02:22.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.532" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:22.531" endtime="20201115 22:02:22.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.534" level="INFO">VALUE: [2.059700000000067e-05, 2.061100000000024e-05, 2.063899999999938e-05, 2.0528000000002294e-05, 2.05830000000011e-05, 2.05830000000011e-05, 2.062499999999981e-05, 2.05969999999972e-05, 2.058299999999763e-05, 2.061100000000024e-05, 2.055500000000196e-05, 2.05830000000011e-05, 2.061100000000024e-05, 2.05830000000011e-05, 2.062499999999981e-05, 2.05830000000011e-05, 2.055500000000196e-05, 2.059700000000067e-05, 2.0679999999998616e-05, 2.0665999999999046e-05, 2.0584000000000574e-05, 2.058299999999763e-05, 2.0598000000000144e-05, 2.0569999999997535e-05, 2.05830000000011e-05, 2.0527999999998825e-05, 2.066700000000199e-05, 2.055499999999849e-05, 2.054099999999892e-05, 2.0555999999997965e-05, 2.063900000000285e-05, 2.0694000000001656e-05, 2.059700000000414e-05, 2.0583999999997105e-05, 2.059700000000414e-05, 2.061100000000371e-05, 2.0637999999996437e-05, 2.0612000000003183e-05, 2.0611999999996244e-05, 2.063899999999591e-05, 2.058299999999763e-05, 2.059700000000414e-05, 2.0611999999996244e-05, 2.061099999999677e-05, 2.056899999999806e-05, 2.063900000000285e-05, 2.056899999999806e-05, 2.0598000000003613e-05, 2.061100000000371e-05, 2.055499999999849e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.533" endtime="20201115 22:02:22.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.526" endtime="20201115 22:02:22.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.537" endtime="20201115 22:02:22.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.541" endtime="20201115 22:02:22.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.539" endtime="20201115 22:02:22.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.536" endtime="20201115 22:02:22.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.112" endtime="20201115 22:02:22.561"></status>
</kw>
<msg timestamp="20201115 22:02:22.562" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.571" endtime="20201115 22:02:22.594"></status>
</kw>
<msg timestamp="20201115 22:02:22.595" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.569" endtime="20201115 22:02:22.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.597" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.596" endtime="20201115 22:02:22.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.599" endtime="20201115 22:02:22.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.566" endtime="20201115 22:02:22.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.564" endtime="20201115 22:02:22.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.608" endtime="20201115 22:02:22.893"></status>
</kw>
<msg timestamp="20201115 22:02:22.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020883167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.606" endtime="20201115 22:02:22.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020883167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.898" endtime="20201115 22:02:22.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.906" endtime="20201115 22:02:22.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.603" endtime="20201115 22:02:22.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.602" endtime="20201115 22:02:22.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.912" level="INFO">${RESULT} = [{'time': 0.020903792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.062499999999981e-05, 'source_diff': 2.062499999999981e-05}, {'time': 0.021209597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:22.909" endtime="20201115 22:02:22.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.926" level="INFO">${OVERHEAD} = {'diff': [2.062499999999981e-05, 2.0665999999999046e-05, 2.059700000000067e-05, 2.061100000000024e-05, 2.061100000000024e-05, 2.0637999999999906e-05, 2.063900000000285e-05, 2.0583999999997105e-05, 2.0...</msg>
<status status="PASS" starttime="20201115 22:02:22.913" endtime="20201115 22:02:22.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.930" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:22.929" endtime="20201115 22:02:22.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.933" level="INFO">VALUE: [2.062499999999981e-05, 2.0665999999999046e-05, 2.059700000000067e-05, 2.061100000000024e-05, 2.061100000000024e-05, 2.0637999999999906e-05, 2.063900000000285e-05, 2.0583999999997105e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.0556000000001434e-05, 2.0651999999999476e-05, 2.062499999999981e-05, 2.059700000000067e-05, 2.0556000000001434e-05, 2.061100000000024e-05, 2.062499999999981e-05, 2.059700000000067e-05, 2.063900000000285e-05, 2.063900000000285e-05, 2.061099999999677e-05, 2.0583999999997105e-05, 2.061100000000024e-05, 2.066699999999852e-05, 2.056899999999806e-05, 2.061100000000024e-05, 2.0569999999997535e-05, 2.065299999999895e-05, 2.05830000000011e-05, 2.059700000000067e-05, 2.063899999999938e-05, 2.05830000000011e-05, 2.061100000000024e-05, 2.063899999999938e-05, 2.058299999999763e-05, 2.061100000000371e-05, 2.05969999999972e-05, 2.063899999999591e-05, 2.061100000000371e-05, 2.061099999999677e-05, 2.055499999999849e-05, 2.061099999999677e-05, 2.062499999999634e-05, 2.072300000000027e-05, 2.0597999999996675e-05, 2.063899999999591e-05, 2.056899999999806e-05, 2.0499999999999685e-05, 2.065300000000242e-05, 2.0612000000003183e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.931" endtime="20201115 22:02:22.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.927" endtime="20201115 22:02:22.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.936" endtime="20201115 22:02:22.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.939" endtime="20201115 22:02:22.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.938" endtime="20201115 22:02:22.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.934" endtime="20201115 22:02:22.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.562" endtime="20201115 22:02:22.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.899" endtime="20201115 22:02:22.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.898" endtime="20201115 22:02:22.960"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.963" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.972" endtime="20201115 22:02:23.001"></status>
</kw>
<msg timestamp="20201115 22:02:23.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.970" endtime="20201115 22:02:23.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.004" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.002" endtime="20201115 22:02:23.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.005" endtime="20201115 22:02:23.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.967" endtime="20201115 22:02:23.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.965" endtime="20201115 22:02:23.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.014" endtime="20201115 22:02:23.302"></status>
</kw>
<msg timestamp="20201115 22:02:23.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024263, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024284417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:23.013" endtime="20201115 22:02:23.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024263, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024284417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:23.306" endtime="20201115 22:02:23.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.314" endtime="20201115 22:02:23.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.010" endtime="20201115 22:02:23.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.008" endtime="20201115 22:02:23.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.321" level="INFO">${RESULT} = [{'time': 0.024284417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.141699999999927e-05, 'source_diff': 2.141699999999927e-05}, {'time': 0.024611208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:23.318" endtime="20201115 22:02:23.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.334" level="INFO">${OVERHEAD} = {'diff': [2.141699999999927e-05, 2.1514000000000255e-05, 2.1444000000002406e-05, 2.136100000000099e-05, 2.14029999999997e-05, 2.1443999999998936e-05, 2.1514000000000255e-05, 2.1443999999998936e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:23.322" endtime="20201115 22:02:23.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.339" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:23.338" endtime="20201115 22:02:23.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.342" level="INFO">VALUE: [2.141699999999927e-05, 2.1514000000000255e-05, 2.1444000000002406e-05, 2.136100000000099e-05, 2.14029999999997e-05, 2.1443999999998936e-05, 2.1514000000000255e-05, 2.1443999999998936e-05, 2.1457999999998506e-05, 2.144500000000188e-05, 2.1443999999998936e-05, 2.1443999999998936e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.1471999999998076e-05, 2.143100000000231e-05, 2.1458000000001975e-05, 2.1429999999999366e-05, 2.1443999999998936e-05, 2.137500000000056e-05, 2.1472000000001545e-05, 2.1429999999999366e-05, 2.1444000000002406e-05, 2.138899999999666e-05, 2.1499999999993746e-05, 2.143100000000231e-05, 2.1472000000001545e-05, 2.1347999999997425e-05, 2.1514000000000255e-05, 2.1458000000001975e-05, 2.1499999999993746e-05, 2.1457999999995037e-05, 2.1429999999995897e-05, 2.1429999999995897e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.145900000000145e-05, 2.1486000000001115e-05, 2.1458000000001975e-05, 2.1457999999995037e-05, 2.1444000000002406e-05, 2.1444000000002406e-05, 2.1458000000001975e-05, 2.1457999999995037e-05, 2.143099999999537e-05, 2.1444000000002406e-05, 2.148700000000059e-05, 2.147300000000102e-05, 2.145900000000145e-05, 2.148700000000059e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.340" endtime="20201115 22:02:23.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.335" endtime="20201115 22:02:23.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.345" endtime="20201115 22:02:23.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.348" endtime="20201115 22:02:23.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.346" endtime="20201115 22:02:23.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.343" endtime="20201115 22:02:23.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.963" endtime="20201115 22:02:23.369"></status>
</kw>
<msg timestamp="20201115 22:02:23.369" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.378" endtime="20201115 22:02:23.412"></status>
</kw>
<msg timestamp="20201115 22:02:23.413" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.376" endtime="20201115 22:02:23.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.414" endtime="20201115 22:02:23.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.416" endtime="20201115 22:02:23.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.374" endtime="20201115 22:02:23.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.372" endtime="20201115 22:02:23.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.426" endtime="20201115 22:02:23.713"></status>
</kw>
<msg timestamp="20201115 22:02:23.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.424" endtime="20201115 22:02:23.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.717" endtime="20201115 22:02:23.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.725" endtime="20201115 22:02:23.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.421" endtime="20201115 22:02:23.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.420" endtime="20201115 22:02:23.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.731" level="INFO">${RESULT} = [{'time': 0.022466569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1485999999997646e-05, 'source_diff': 2.1485999999997646e-05}, {'time': 0.022794625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:23.728" endtime="20201115 22:02:23.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.745" level="INFO">${OVERHEAD} = {'diff': [2.1485999999997646e-05, 2.1499999999997216e-05, 2.1514000000000255e-05, 2.1486000000001115e-05, 2.1415999999999796e-05, 2.1542000000002864e-05, 2.1429999999999366e-05, 2.141700000000274e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:23.732" endtime="20201115 22:02:23.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.749" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:23.748" endtime="20201115 22:02:23.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.752" level="INFO">VALUE: [2.1485999999997646e-05, 2.1499999999997216e-05, 2.1514000000000255e-05, 2.1486000000001115e-05, 2.1415999999999796e-05, 2.1542000000002864e-05, 2.1429999999999366e-05, 2.141700000000274e-05, 2.1486000000001115e-05, 2.1486000000001115e-05, 2.1486000000001115e-05, 2.1514000000000255e-05, 2.156899999999906e-05, 2.143099999999884e-05, 2.1514000000000255e-05, 2.1471999999998076e-05, 2.141699999999927e-05, 2.1471999999998076e-05, 2.1500000000000685e-05, 2.145899999999798e-05, 2.1486000000001115e-05, 2.1471999999998076e-05, 2.1500000000000685e-05, 2.1471999999998076e-05, 2.145899999999798e-05, 2.1471999999998076e-05, 2.1443999999998936e-05, 2.143099999999537e-05, 2.147300000000102e-05, 2.1458000000001975e-05, 2.1514000000000255e-05, 2.145900000000145e-05, 2.1486000000001115e-05, 2.1472000000001545e-05, 2.1527999999999825e-05, 2.1556000000005904e-05, 2.1415999999996327e-05, 2.1472000000001545e-05, 2.1430000000002836e-05, 2.143100000000231e-05, 2.1458000000001975e-05, 2.1486000000001115e-05, 2.1472000000001545e-05, 2.1514000000000255e-05, 2.1458000000001975e-05, 2.147300000000102e-05, 2.1486000000001115e-05, 2.1443999999995467e-05, 2.147300000000102e-05, 2.143099999999537e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.750" endtime="20201115 22:02:23.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.746" endtime="20201115 22:02:23.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.755" endtime="20201115 22:02:23.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.758" endtime="20201115 22:02:23.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.757" endtime="20201115 22:02:23.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.753" endtime="20201115 22:02:23.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.370" endtime="20201115 22:02:23.779"></status>
</kw>
<msg timestamp="20201115 22:02:23.779" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.789" endtime="20201115 22:02:23.820"></status>
</kw>
<msg timestamp="20201115 22:02:23.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.787" endtime="20201115 22:02:23.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.823" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.822" endtime="20201115 22:02:23.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.824" endtime="20201115 22:02:23.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.784" endtime="20201115 22:02:23.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.782" endtime="20201115 22:02:23.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.833" endtime="20201115 22:02:24.120"></status>
</kw>
<msg timestamp="20201115 22:02:24.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024135417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024156889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.832" endtime="20201115 22:02:24.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024135417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024156889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.124" endtime="20201115 22:02:24.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.132" endtime="20201115 22:02:24.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.829" endtime="20201115 22:02:24.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.828" endtime="20201115 22:02:24.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.139" level="INFO">${RESULT} = [{'time': 0.024156889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1472000000001545e-05, 'source_diff': 2.1472000000001545e-05}, {'time': 0.024486556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:24.135" endtime="20201115 22:02:24.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.152" level="INFO">${OVERHEAD} = {'diff': [2.1472000000001545e-05, 2.141699999999927e-05, 2.1443999999998936e-05, 2.1485999999997646e-05, 2.1541999999999395e-05, 2.1444000000002406e-05, 2.1486000000001115e-05, 2.1486000000001115e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:24.140" endtime="20201115 22:02:24.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.157" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:24.156" endtime="20201115 22:02:24.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.159" level="INFO">VALUE: [2.1472000000001545e-05, 2.141699999999927e-05, 2.1443999999998936e-05, 2.1485999999997646e-05, 2.1541999999999395e-05, 2.1444000000002406e-05, 2.1486000000001115e-05, 2.1486000000001115e-05, 2.145899999999798e-05, 2.1500000000000685e-05, 2.1429999999999366e-05, 2.14029999999997e-05, 2.152700000000035e-05, 2.1472000000001545e-05, 2.1485999999997646e-05, 2.1514000000000255e-05, 2.144500000000188e-05, 2.1471999999998076e-05, 2.147300000000102e-05, 2.1458000000001975e-05, 2.144499999999841e-05, 2.1457999999998506e-05, 2.1472000000001545e-05, 2.143100000000231e-05, 2.1458000000001975e-05, 2.1443999999995467e-05, 2.1457999999995037e-05, 2.1429999999995897e-05, 2.144500000000188e-05, 2.1514000000000255e-05, 2.143099999999537e-05, 2.1500000000000685e-05, 2.1499999999993746e-05, 2.144500000000188e-05, 2.1514000000000255e-05, 2.1486000000001115e-05, 2.14169999999958e-05, 2.145900000000145e-05, 2.1485999999994176e-05, 2.1486000000001115e-05, 2.145900000000145e-05, 2.1500000000000685e-05, 2.1457999999995037e-05, 2.1457999999995037e-05, 2.1430000000002836e-05, 2.1443999999995467e-05, 2.1472000000001545e-05, 2.1458000000001975e-05, 2.1514000000000255e-05, 2.147300000000102e-05]</msg>
<status status="PASS" starttime="20201115 22:02:24.158" endtime="20201115 22:02:24.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.153" endtime="20201115 22:02:24.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.162" endtime="20201115 22:02:24.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.166" endtime="20201115 22:02:24.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.164" endtime="20201115 22:02:24.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.161" endtime="20201115 22:02:24.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.780" endtime="20201115 22:02:24.186"></status>
</kw>
<msg timestamp="20201115 22:02:24.187" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.196" endtime="20201115 22:02:24.227"></status>
</kw>
<msg timestamp="20201115 22:02:24.227" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.195" endtime="20201115 22:02:24.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.229" endtime="20201115 22:02:24.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.231" endtime="20201115 22:02:24.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.192" endtime="20201115 22:02:24.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.190" endtime="20201115 22:02:24.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.240" endtime="20201115 22:02:24.526"></status>
</kw>
<msg timestamp="20201115 22:02:24.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023662319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023683778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.239" endtime="20201115 22:02:24.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023662319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023683778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.530" endtime="20201115 22:02:24.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.538" endtime="20201115 22:02:24.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.236" endtime="20201115 22:02:24.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.234" endtime="20201115 22:02:24.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.545" level="INFO">${RESULT} = [{'time': 0.023683778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.145899999999798e-05, 'source_diff': 2.145899999999798e-05}, {'time': 0.024010361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:24.542" endtime="20201115 22:02:24.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.558" level="INFO">${OVERHEAD} = {'diff': [2.145899999999798e-05, 2.1444000000002406e-05, 2.1443999999998936e-05, 2.1527999999999825e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.1443999999998936e-05, 2.144500000000188e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:24.546" endtime="20201115 22:02:24.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.563" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:24.562" endtime="20201115 22:02:24.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.565" level="INFO">VALUE: [2.145899999999798e-05, 2.1444000000002406e-05, 2.1443999999998936e-05, 2.1527999999999825e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.1443999999998936e-05, 2.144500000000188e-05, 2.1415999999999796e-05, 2.145900000000145e-05, 2.1457999999998506e-05, 2.1486000000001115e-05, 2.1458000000001975e-05, 2.1443999999998936e-05, 2.1472000000001545e-05, 2.143099999999884e-05, 2.143099999999884e-05, 2.1472000000001545e-05, 2.1457999999998506e-05, 2.1499999999997216e-05, 2.152700000000035e-05, 2.1457999999998506e-05, 2.143099999999884e-05, 2.143099999999884e-05, 2.1430000000002836e-05, 2.1500000000000685e-05, 2.143100000000231e-05, 2.1430000000002836e-05, 2.1471999999994607e-05, 2.143100000000231e-05, 2.1472000000001545e-05, 2.1458000000001975e-05, 2.1457999999995037e-05, 2.14169999999958e-05, 2.1486000000001115e-05, 2.1458000000001975e-05, 2.1472000000001545e-05, 2.1472000000001545e-05, 2.151300000000078e-05, 2.144500000000188e-05, 2.1429999999995897e-05, 2.1472000000001545e-05, 2.1486000000001115e-05, 2.1387999999997187e-05, 2.1500000000000685e-05, 2.1485999999994176e-05, 2.145899999999451e-05, 2.145899999999451e-05, 2.147300000000102e-05, 2.1472000000001545e-05]</msg>
<status status="PASS" starttime="20201115 22:02:24.564" endtime="20201115 22:02:24.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.559" endtime="20201115 22:02:24.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.569" endtime="20201115 22:02:24.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.572" endtime="20201115 22:02:24.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.571" endtime="20201115 22:02:24.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.567" endtime="20201115 22:02:24.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.188" endtime="20201115 22:02:24.593"></status>
</kw>
<msg timestamp="20201115 22:02:24.593" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.602" endtime="20201115 22:02:24.634"></status>
</kw>
<msg timestamp="20201115 22:02:24.634" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.601" endtime="20201115 22:02:24.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.635" endtime="20201115 22:02:24.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.638" endtime="20201115 22:02:24.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.598" endtime="20201115 22:02:24.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.596" endtime="20201115 22:02:24.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.647" endtime="20201115 22:02:24.935"></status>
</kw>
<msg timestamp="20201115 22:02:24.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023986306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024007778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.645" endtime="20201115 22:02:24.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023986306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024007778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.939" endtime="20201115 22:02:24.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.947" endtime="20201115 22:02:24.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.643" endtime="20201115 22:02:24.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.641" endtime="20201115 22:02:24.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.954" level="INFO">${RESULT} = [{'time': 0.024007778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1472000000001545e-05, 'source_diff': 2.1472000000001545e-05}, {'time': 0.024336542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:24.951" endtime="20201115 22:02:24.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.011" level="INFO">${OVERHEAD} = {'diff': [2.1472000000001545e-05, 2.1485999999997646e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.145899999999798e-05, 2.143099999999884e-05, 2.144499999999841e-05, 2.1...</msg>
<status status="PASS" starttime="20201115 22:02:24.955" endtime="20201115 22:02:25.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.015" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:25.014" endtime="20201115 22:02:25.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.017" level="INFO">VALUE: [2.1472000000001545e-05, 2.1485999999997646e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.141699999999927e-05, 2.145899999999798e-05, 2.143099999999884e-05, 2.144499999999841e-05, 2.1472000000001545e-05, 2.1485999999997646e-05, 2.1472000000001545e-05, 2.145899999999798e-05, 2.1500000000000685e-05, 2.1457999999998506e-05, 2.1486000000001115e-05, 2.1458000000001975e-05, 2.143100000000231e-05, 2.143099999999884e-05, 2.1458000000001975e-05, 2.1444000000002406e-05, 2.144500000000188e-05, 2.144499999999841e-05, 2.137500000000056e-05, 2.1458000000001975e-05, 2.1458000000001975e-05, 2.143100000000231e-05, 2.1472000000001545e-05, 2.147300000000102e-05, 2.1458000000001975e-05, 2.1429999999995897e-05, 2.1402000000003696e-05, 2.143100000000231e-05, 2.147299999999408e-05, 2.1541999999999395e-05, 2.145900000000145e-05, 2.140299999999623e-05, 2.1514000000000255e-05, 2.1486000000001115e-05, 2.1486000000001115e-05, 2.1486000000001115e-05, 2.1458000000001975e-05, 2.1444000000002406e-05, 2.1500000000000685e-05, 2.1514000000000255e-05, 2.1486000000001115e-05, 2.140300000000317e-05, 2.1444000000002406e-05, 2.145900000000145e-05, 2.141700000000274e-05, 2.1457999999995037e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.016" endtime="20201115 22:02:25.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.011" endtime="20201115 22:02:25.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.021" endtime="20201115 22:02:25.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.024" endtime="20201115 22:02:25.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.023" endtime="20201115 22:02:25.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.019" endtime="20201115 22:02:25.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.594" endtime="20201115 22:02:25.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.962" endtime="20201115 22:02:25.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.961" endtime="20201115 22:02:25.045"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.048" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.057" endtime="20201115 22:02:25.087"></status>
</kw>
<msg timestamp="20201115 22:02:25.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.056" endtime="20201115 22:02:25.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.088" endtime="20201115 22:02:25.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.091" endtime="20201115 22:02:25.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.052" endtime="20201115 22:02:25.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.050" endtime="20201115 22:02:25.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.100" endtime="20201115 22:02:25.386"></status>
</kw>
<msg timestamp="20201115 22:02:25.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024203139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024225417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.098" endtime="20201115 22:02:25.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024203139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024225417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.391" endtime="20201115 22:02:25.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.399" endtime="20201115 22:02:25.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.096" endtime="20201115 22:02:25.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.094" endtime="20201115 22:02:25.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.405" level="INFO">${RESULT} = [{'time': 0.024225417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2278000000000575e-05, 'source_diff': 2.2278000000000575e-05}, {'time': 0.024571764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.402" endtime="20201115 22:02:25.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.419" level="INFO">${OVERHEAD} = {'diff': [2.2278000000000575e-05, 2.233299999999938e-05, 2.2278000000000575e-05, 2.2319999999999285e-05, 2.233299999999938e-05, 2.230500000000024e-05, 2.233299999999938e-05, 2.2278000000000575e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:25.406" endtime="20201115 22:02:25.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.423" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:25.422" endtime="20201115 22:02:25.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.426" level="INFO">VALUE: [2.2278000000000575e-05, 2.233299999999938e-05, 2.2278000000000575e-05, 2.2319999999999285e-05, 2.233299999999938e-05, 2.230500000000024e-05, 2.233299999999938e-05, 2.2278000000000575e-05, 2.236099999999852e-05, 2.234699999999895e-05, 2.2319999999999285e-05, 2.2278000000000575e-05, 2.229100000000067e-05, 2.2319999999999285e-05, 2.230500000000024e-05, 2.230500000000024e-05, 2.2277999999997106e-05, 2.230500000000024e-05, 2.2305999999999715e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.231899999999981e-05, 2.2333999999998855e-05, 2.23890000000046e-05, 2.2278000000000575e-05, 2.234699999999895e-05, 2.2347999999998425e-05, 2.2305999999999715e-05, 2.2319999999999285e-05, 2.230500000000024e-05, 2.236099999999852e-05, 2.2319999999999285e-05, 2.234699999999895e-05, 2.2278000000000575e-05, 2.230500000000024e-05, 2.231899999999981e-05, 2.234700000000589e-05, 2.234699999999895e-05, 2.2263999999994066e-05, 2.230500000000024e-05, 2.2347999999998425e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.234700000000589e-05, 2.2292000000000145e-05, 2.229100000000067e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.425" endtime="20201115 22:02:25.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.420" endtime="20201115 22:02:25.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.430" endtime="20201115 22:02:25.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.433" endtime="20201115 22:02:25.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.431" endtime="20201115 22:02:25.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.428" endtime="20201115 22:02:25.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.048" endtime="20201115 22:02:25.454"></status>
</kw>
<msg timestamp="20201115 22:02:25.454" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.463" endtime="20201115 22:02:25.493"></status>
</kw>
<msg timestamp="20201115 22:02:25.494" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.462" endtime="20201115 22:02:25.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.495" endtime="20201115 22:02:25.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.497" endtime="20201115 22:02:25.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.459" endtime="20201115 22:02:25.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.456" endtime="20201115 22:02:25.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.506" endtime="20201115 22:02:25.791"></status>
</kw>
<msg timestamp="20201115 22:02:25.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.505" endtime="20201115 22:02:25.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.796" endtime="20201115 22:02:25.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.804" endtime="20201115 22:02:25.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.502" endtime="20201115 22:02:25.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.501" endtime="20201115 22:02:25.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.810" level="INFO">${RESULT} = [{'time': 0.022665542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2278000000000575e-05, 'source_diff': 2.2278000000000575e-05}, {'time': 0.023016944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.807" endtime="20201115 22:02:25.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.824" level="INFO">${OVERHEAD} = {'diff': [2.2278000000000575e-05, 2.233299999999938e-05, 2.231899999999981e-05, 2.2362000000001464e-05, 2.230500000000024e-05, 2.234699999999895e-05, 2.2319999999999285e-05, 2.233300000000285e-05, 2.2...</msg>
<status status="PASS" starttime="20201115 22:02:25.811" endtime="20201115 22:02:25.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.832" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:25.831" endtime="20201115 22:02:25.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.835" level="INFO">VALUE: [2.2278000000000575e-05, 2.233299999999938e-05, 2.231899999999981e-05, 2.2362000000001464e-05, 2.230500000000024e-05, 2.234699999999895e-05, 2.2319999999999285e-05, 2.233300000000285e-05, 2.2348000000001894e-05, 2.2334000000002324e-05, 2.2333999999998855e-05, 2.229100000000067e-05, 2.2333999999998855e-05, 2.2305999999999715e-05, 2.2263999999997536e-05, 2.233300000000285e-05, 2.233299999999938e-05, 2.231899999999981e-05, 2.2333999999998855e-05, 2.2305999999999715e-05, 2.231899999999981e-05, 2.233300000000285e-05, 2.2292000000000145e-05, 2.236100000000199e-05, 2.231899999999981e-05, 2.234699999999895e-05, 2.237499999999809e-05, 2.233299999999938e-05, 2.229100000000067e-05, 2.231899999999981e-05, 2.2264000000001005e-05, 2.2388000000005126e-05, 2.229100000000067e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.236099999999852e-05, 2.2320000000006224e-05, 2.234699999999895e-05, 2.2292000000000145e-05, 2.230500000000024e-05, 2.2334000000005794e-05, 2.2319999999999285e-05, 2.236100000000546e-05, 2.22770000000011e-05, 2.2334000000005794e-05, 2.2278000000000575e-05, 2.2305999999999715e-05, 2.236099999999852e-05, 2.237499999999809e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.833" endtime="20201115 22:02:25.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.829" endtime="20201115 22:02:25.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.838" endtime="20201115 22:02:25.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.841" endtime="20201115 22:02:25.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.840" endtime="20201115 22:02:25.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.836" endtime="20201115 22:02:25.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.454" endtime="20201115 22:02:25.862"></status>
</kw>
<msg timestamp="20201115 22:02:25.862" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.871" endtime="20201115 22:02:25.905"></status>
</kw>
<msg timestamp="20201115 22:02:25.906" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.870" endtime="20201115 22:02:25.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.907" endtime="20201115 22:02:25.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.910" endtime="20201115 22:02:25.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.867" endtime="20201115 22:02:25.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.865" endtime="20201115 22:02:25.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.919" endtime="20201115 22:02:26.204"></status>
</kw>
<msg timestamp="20201115 22:02:26.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025974639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025997, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:25.917" endtime="20201115 22:02:26.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025974639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025997, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:26.209" endtime="20201115 22:02:26.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.216" endtime="20201115 22:02:26.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.915" endtime="20201115 22:02:26.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.913" endtime="20201115 22:02:26.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.223" level="INFO">${RESULT} = [{'time': 0.025997, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.236099999999852e-05, 'source_diff': 2.236099999999852e-05}, {'time': 0.026348958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:26.220" endtime="20201115 22:02:26.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.237" level="INFO">${OVERHEAD} = {'diff': [2.236099999999852e-05, 2.2290999999997202e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.233299999999938e-05, 2.230500000000024e-05, 2.2333999999998855e-05, 2.230500000000024e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:26.225" endtime="20201115 22:02:26.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.242" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:26.241" endtime="20201115 22:02:26.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.244" level="INFO">VALUE: [2.236099999999852e-05, 2.2290999999997202e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.233299999999938e-05, 2.230500000000024e-05, 2.2333999999998855e-05, 2.230500000000024e-05, 2.2221999999998826e-05, 2.234699999999895e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2250000000001435e-05, 2.2207999999999256e-05, 2.2348000000001894e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.229100000000067e-05, 2.2264000000001005e-05, 2.233299999999938e-05, 2.2305999999999715e-05, 2.233300000000632e-05, 2.2292000000000145e-05, 2.234699999999895e-05, 2.230500000000024e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.231899999999981e-05, 2.233299999999938e-05, 2.236100000000546e-05, 2.22770000000011e-05, 2.234699999999895e-05, 2.233299999999938e-05, 2.229100000000067e-05, 2.2278000000000575e-05, 2.2306000000006654e-05, 2.230500000000024e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.2333999999998855e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.2319999999999285e-05, 2.2278000000000575e-05, 2.234700000000589e-05, 2.2292000000000145e-05, 2.233299999999938e-05, 2.2347999999998425e-05, 2.2278000000000575e-05, 2.2278000000000575e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.243" endtime="20201115 22:02:26.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.238" endtime="20201115 22:02:26.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.247" endtime="20201115 22:02:26.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.251" endtime="20201115 22:02:26.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.249" endtime="20201115 22:02:26.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.246" endtime="20201115 22:02:26.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.863" endtime="20201115 22:02:26.272"></status>
</kw>
<msg timestamp="20201115 22:02:26.272" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.281" endtime="20201115 22:02:26.313"></status>
</kw>
<msg timestamp="20201115 22:02:26.313" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.279" endtime="20201115 22:02:26.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.314" endtime="20201115 22:02:26.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.317" endtime="20201115 22:02:26.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.277" endtime="20201115 22:02:26.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.274" endtime="20201115 22:02:26.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.326" endtime="20201115 22:02:26.612"></status>
</kw>
<msg timestamp="20201115 22:02:26.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023453389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023475722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.324" endtime="20201115 22:02:26.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023453389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023475722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.616" endtime="20201115 22:02:26.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.624" endtime="20201115 22:02:26.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.322" endtime="20201115 22:02:26.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.320" endtime="20201115 22:02:26.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.631" level="INFO">${RESULT} = [{'time': 0.023475722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.233299999999938e-05, 'source_diff': 2.233299999999938e-05}, {'time': 0.023827278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:26.628" endtime="20201115 22:02:26.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.646" level="INFO">${OVERHEAD} = {'diff': [2.233299999999938e-05, 2.2319999999999285e-05, 2.231900000000328e-05, 2.2249999999997966e-05, 2.2305999999999715e-05, 2.236099999999852e-05, 2.2290999999997202e-05, 2.236099999999852e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:26.632" endtime="20201115 22:02:26.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.650" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:26.649" endtime="20201115 22:02:26.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.653" level="INFO">VALUE: [2.233299999999938e-05, 2.2319999999999285e-05, 2.231900000000328e-05, 2.2249999999997966e-05, 2.2305999999999715e-05, 2.236099999999852e-05, 2.2290999999997202e-05, 2.236099999999852e-05, 2.233300000000285e-05, 2.230500000000024e-05, 2.230500000000024e-05, 2.2319999999999285e-05, 2.231899999999981e-05, 2.230500000000024e-05, 2.230500000000024e-05, 2.2305999999999715e-05, 2.2277999999997106e-05, 2.2278000000000575e-05, 2.236099999999852e-05, 2.229100000000067e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.2320000000002754e-05, 2.234700000000589e-05, 2.237500000000503e-05, 2.2276999999994163e-05, 2.230500000000024e-05, 2.231899999999981e-05, 2.231899999999981e-05, 2.236099999999852e-05, 2.233299999999938e-05, 2.230500000000024e-05, 2.2292000000000145e-05, 2.237499999999809e-05, 2.233299999999938e-05, 2.2333999999998855e-05, 2.2305999999999715e-05, 2.2305999999999715e-05, 2.230500000000024e-05, 2.238899999999766e-05, 2.2292000000000145e-05, 2.237500000000503e-05, 2.2278000000000575e-05, 2.230500000000024e-05, 2.234699999999895e-05, 2.2333999999998855e-05, 2.236099999999852e-05, 2.2305999999999715e-05, 2.22770000000011e-05, 2.2292000000000145e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.651" endtime="20201115 22:02:26.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.647" endtime="20201115 22:02:26.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.656" endtime="20201115 22:02:26.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.659" endtime="20201115 22:02:26.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.658" endtime="20201115 22:02:26.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.654" endtime="20201115 22:02:26.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.272" endtime="20201115 22:02:26.680"></status>
</kw>
<msg timestamp="20201115 22:02:26.680" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.689" endtime="20201115 22:02:26.719"></status>
</kw>
<msg timestamp="20201115 22:02:26.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.687" endtime="20201115 22:02:26.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.721" endtime="20201115 22:02:26.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.723" endtime="20201115 22:02:26.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.685" endtime="20201115 22:02:26.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.683" endtime="20201115 22:02:26.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.733" endtime="20201115 22:02:27.019"></status>
</kw>
<msg timestamp="20201115 22:02:27.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.732" endtime="20201115 22:02:27.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.024" endtime="20201115 22:02:27.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.032" endtime="20201115 22:02:27.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.729" endtime="20201115 22:02:27.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.727" endtime="20201115 22:02:27.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.039" level="INFO">${RESULT} = [{'time': 0.022071264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.236099999999852e-05, 'source_diff': 2.236099999999852e-05}, {'time': 0.022423972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:27.035" endtime="20201115 22:02:27.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.052" level="INFO">${OVERHEAD} = {'diff': [2.236099999999852e-05, 2.229100000000067e-05, 2.22770000000011e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.234700000000242e-05, 2.234699999999895e-05, 2.2402000000001226e-05, 2.23...</msg>
<status status="PASS" starttime="20201115 22:02:27.040" endtime="20201115 22:02:27.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.057" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:27.056" endtime="20201115 22:02:27.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.059" level="INFO">VALUE: [2.236099999999852e-05, 2.229100000000067e-05, 2.22770000000011e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.234700000000242e-05, 2.234699999999895e-05, 2.2402000000001226e-05, 2.236100000000199e-05, 2.231900000000328e-05, 2.2305999999999715e-05, 2.236099999999852e-05, 2.2306000000003184e-05, 2.2304999999996772e-05, 2.2278000000000575e-05, 2.2221999999998826e-05, 2.2278000000000575e-05, 2.234699999999895e-05, 2.231900000000328e-05, 2.2319999999999285e-05, 2.233299999999938e-05, 2.233299999999938e-05, 2.230500000000024e-05, 2.2333999999998855e-05, 2.236100000000199e-05, 2.2319999999999285e-05, 2.2348000000001894e-05, 2.233299999999938e-05, 2.231899999999981e-05, 2.2278000000000575e-05, 2.234699999999895e-05, 2.231899999999981e-05, 2.2207999999995787e-05, 2.2291999999993206e-05, 2.2333999999998855e-05, 2.2292000000000145e-05, 2.22090000000022e-05, 2.236099999999852e-05, 2.237500000000503e-05, 2.231899999999981e-05, 2.2292000000000145e-05, 2.2291999999993206e-05, 2.230500000000024e-05, 2.231899999999981e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.233299999999938e-05, 2.230500000000024e-05, 2.2305999999999715e-05, 2.2333999999998855e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.058" endtime="20201115 22:02:27.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.053" endtime="20201115 22:02:27.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.062" endtime="20201115 22:02:27.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.066" endtime="20201115 22:02:27.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.064" endtime="20201115 22:02:27.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.061" endtime="20201115 22:02:27.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.681" endtime="20201115 22:02:27.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.047" endtime="20201115 22:02:27.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.046" endtime="20201115 22:02:27.087"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.089" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.098" endtime="20201115 22:02:27.131"></status>
</kw>
<msg timestamp="20201115 22:02:27.131" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.096" endtime="20201115 22:02:27.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.132" endtime="20201115 22:02:27.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.135" endtime="20201115 22:02:27.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.094" endtime="20201115 22:02:27.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.092" endtime="20201115 22:02:27.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.144" endtime="20201115 22:02:27.430"></status>
</kw>
<msg timestamp="20201115 22:02:27.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027563944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027587083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.143" endtime="20201115 22:02:27.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027563944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027587083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.434" endtime="20201115 22:02:27.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.442" endtime="20201115 22:02:27.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.140" endtime="20201115 22:02:27.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.139" endtime="20201115 22:02:27.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.449" level="INFO">${RESULT} = [{'time': 0.027587083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.313899999999841e-05, 'source_diff': 2.313899999999841e-05}, {'time': 0.0279605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:27.445" endtime="20201115 22:02:27.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.462" level="INFO">${OVERHEAD} = {'diff': [2.313899999999841e-05, 2.311099999999927e-05, 2.3180000000001116e-05, 2.316699999999755e-05, 2.316699999999755e-05, 2.3165999999998077e-05, 2.315300000000145e-05, 2.3166000000001546e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:02:27.450" endtime="20201115 22:02:27.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.467" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:27.466" endtime="20201115 22:02:27.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.469" level="INFO">VALUE: [2.313899999999841e-05, 2.311099999999927e-05, 2.3180000000001116e-05, 2.316699999999755e-05, 2.316699999999755e-05, 2.3165999999998077e-05, 2.315300000000145e-05, 2.3166000000001546e-05, 2.3138000000002407e-05, 2.315300000000145e-05, 2.3235999999995927e-05, 2.316700000000449e-05, 2.32090000000032e-05, 2.3152000000005446e-05, 2.319500000000363e-05, 2.3193999999997217e-05, 2.313899999999841e-05, 2.3193999999997217e-05, 2.315299999999798e-05, 2.316700000000449e-05, 2.3194000000004156e-05, 2.3236000000002865e-05, 2.3193999999997217e-05, 2.312499999999884e-05, 2.316699999999755e-05, 2.315299999999798e-05, 2.316699999999755e-05, 2.3165999999998077e-05, 2.30969999999997e-05, 2.3165999999998077e-05, 2.3207999999996787e-05, 2.3193999999997217e-05, 2.3222000000003296e-05, 2.319500000000363e-05, 2.316699999999755e-05, 2.318099999999712e-05, 2.316699999999755e-05, 2.312499999999884e-05, 2.3263999999995066e-05, 2.3165999999998077e-05, 2.316699999999755e-05, 2.318100000000406e-05, 2.318099999999712e-05, 2.313899999999841e-05, 2.319500000000363e-05, 2.313899999999841e-05, 2.3193999999997217e-05, 2.315299999999798e-05, 2.3165999999998077e-05, 2.3152000000005446e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.468" endtime="20201115 22:02:27.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.463" endtime="20201115 22:02:27.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.473" endtime="20201115 22:02:27.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.476" endtime="20201115 22:02:27.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.475" endtime="20201115 22:02:27.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.471" endtime="20201115 22:02:27.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.090" endtime="20201115 22:02:27.497"></status>
</kw>
<msg timestamp="20201115 22:02:27.497" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.506" endtime="20201115 22:02:27.538"></status>
</kw>
<msg timestamp="20201115 22:02:27.539" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.504" endtime="20201115 22:02:27.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.542" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.540" endtime="20201115 22:02:27.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.543" endtime="20201115 22:02:27.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.502" endtime="20201115 22:02:27.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.500" endtime="20201115 22:02:27.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.553" endtime="20201115 22:02:27.838"></status>
</kw>
<msg timestamp="20201115 22:02:27.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024201375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024224514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.551" endtime="20201115 22:02:27.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024201375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024224514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.842" endtime="20201115 22:02:27.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.851" endtime="20201115 22:02:27.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.549" endtime="20201115 22:02:27.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.547" endtime="20201115 22:02:27.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.857" level="INFO">${RESULT} = [{'time': 0.024224514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.313899999999841e-05, 'source_diff': 2.313899999999841e-05}, {'time': 0.024597389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:27.854" endtime="20201115 22:02:27.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.871" level="INFO">${OVERHEAD} = {'diff': [2.313899999999841e-05, 2.313900000000188e-05, 2.315299999999798e-05, 2.313899999999841e-05, 2.315299999999798e-05, 2.311099999999927e-05, 2.313900000000188e-05, 2.319500000000016e-05, 2.3181...</msg>
<status status="PASS" starttime="20201115 22:02:27.858" endtime="20201115 22:02:27.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.875" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:27.874" endtime="20201115 22:02:27.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.878" level="INFO">VALUE: [2.313899999999841e-05, 2.313900000000188e-05, 2.315299999999798e-05, 2.313899999999841e-05, 2.315299999999798e-05, 2.311099999999927e-05, 2.313900000000188e-05, 2.319500000000016e-05, 2.318100000000059e-05, 2.3166000000001546e-05, 2.3165999999998077e-05, 2.315300000000145e-05, 2.316700000000102e-05, 2.3194000000000686e-05, 2.3221999999999826e-05, 2.316699999999755e-05, 2.319499999999669e-05, 2.320899999999973e-05, 2.3208000000000256e-05, 2.316699999999755e-05, 2.320899999999626e-05, 2.312500000000578e-05, 2.3179999999997647e-05, 2.316699999999755e-05, 2.315299999999798e-05, 2.315300000000492e-05, 2.3194000000004156e-05, 2.313899999999841e-05, 2.316699999999755e-05, 2.3165999999998077e-05, 2.316699999999755e-05, 2.313899999999841e-05, 2.3166000000005016e-05, 2.320899999999626e-05, 2.313899999999841e-05, 2.312499999999884e-05, 2.312499999999884e-05, 2.315299999999798e-05, 2.318099999999712e-05, 2.313899999999841e-05, 2.313899999999841e-05, 2.319500000000363e-05, 2.3222000000003296e-05, 2.318099999999712e-05, 2.313899999999841e-05, 2.3193999999997217e-05, 2.312499999999884e-05, 2.32090000000032e-05, 2.315300000000492e-05, 2.311100000000621e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.876" endtime="20201115 22:02:27.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.872" endtime="20201115 22:02:27.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.881" endtime="20201115 22:02:27.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.884" endtime="20201115 22:02:27.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.883" endtime="20201115 22:02:27.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.879" endtime="20201115 22:02:27.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.498" endtime="20201115 22:02:27.905"></status>
</kw>
<msg timestamp="20201115 22:02:27.905" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.915" endtime="20201115 22:02:27.945"></status>
</kw>
<msg timestamp="20201115 22:02:27.946" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.913" endtime="20201115 22:02:27.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.948" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.947" endtime="20201115 22:02:27.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.949" endtime="20201115 22:02:27.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.910" endtime="20201115 22:02:27.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.908" endtime="20201115 22:02:27.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.959" endtime="20201115 22:02:28.256"></status>
</kw>
<msg timestamp="20201115 22:02:28.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022762986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.958" endtime="20201115 22:02:28.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022762986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.265" endtime="20201115 22:02:28.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.284" endtime="20201115 22:02:28.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.955" endtime="20201115 22:02:28.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.953" endtime="20201115 22:02:28.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.292" level="INFO">${RESULT} = [{'time': 0.022786139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.315300000000145e-05, 'source_diff': 2.315300000000145e-05}, {'time': 0.023157986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:28.289" endtime="20201115 22:02:28.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.307" level="INFO">${OVERHEAD} = {'diff': [2.315300000000145e-05, 2.3179999999997647e-05, 2.311099999999927e-05, 2.318100000000059e-05, 2.3180000000001116e-05, 2.313900000000188e-05, 2.3165999999998077e-05, 2.30969999999997e-05, 2.31...</msg>
<status status="PASS" starttime="20201115 22:02:28.293" endtime="20201115 22:02:28.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.311" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:28.310" endtime="20201115 22:02:28.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.314" level="INFO">VALUE: [2.315300000000145e-05, 2.3179999999997647e-05, 2.311099999999927e-05, 2.318100000000059e-05, 2.3180000000001116e-05, 2.313900000000188e-05, 2.3165999999998077e-05, 2.30969999999997e-05, 2.313900000000188e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.316699999999755e-05, 2.318100000000059e-05, 2.315299999999798e-05, 2.316700000000102e-05, 2.312500000000231e-05, 2.3180000000001116e-05, 2.3152000000001977e-05, 2.315300000000145e-05, 2.315300000000145e-05, 2.3165999999998077e-05, 2.3180000000001116e-05, 2.313899999999841e-05, 2.313899999999841e-05, 2.3207999999996787e-05, 2.3193999999997217e-05, 2.3137999999998937e-05, 2.32090000000032e-05, 2.3165999999998077e-05, 2.312499999999884e-05, 2.3193999999997217e-05, 2.316699999999755e-05, 2.318100000000406e-05, 2.318099999999712e-05, 2.3208000000003726e-05, 2.3194000000004156e-05, 2.312499999999884e-05, 2.316699999999755e-05, 2.3151999999998507e-05, 2.322299999999583e-05, 2.32090000000032e-05, 2.315299999999798e-05, 2.319500000000363e-05, 2.316699999999755e-05, 2.319499999999669e-05, 2.319500000000363e-05, 2.3112000000005684e-05, 2.3165999999998077e-05, 2.313900000000535e-05, 2.319500000000363e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.312" endtime="20201115 22:02:28.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.308" endtime="20201115 22:02:28.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.317" endtime="20201115 22:02:28.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.320" endtime="20201115 22:02:28.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.319" endtime="20201115 22:02:28.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.315" endtime="20201115 22:02:28.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.906" endtime="20201115 22:02:28.341"></status>
</kw>
<msg timestamp="20201115 22:02:28.342" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.350" endtime="20201115 22:02:28.382"></status>
</kw>
<msg timestamp="20201115 22:02:28.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.349" endtime="20201115 22:02:28.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.383" endtime="20201115 22:02:28.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.385" endtime="20201115 22:02:28.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.346" endtime="20201115 22:02:28.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.344" endtime="20201115 22:02:28.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.395" endtime="20201115 22:02:28.681"></status>
</kw>
<msg timestamp="20201115 22:02:28.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024045847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024069042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.394" endtime="20201115 22:02:28.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024045847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024069042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.685" endtime="20201115 22:02:28.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.693" endtime="20201115 22:02:28.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.391" endtime="20201115 22:02:28.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.390" endtime="20201115 22:02:28.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.700" level="INFO">${RESULT} = [{'time': 0.024069042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319500000000016e-05, 'source_diff': 2.319500000000016e-05}, {'time': 0.024439681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:28.697" endtime="20201115 22:02:28.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.713" level="INFO">${OVERHEAD} = {'diff': [2.319500000000016e-05, 2.312500000000231e-05, 2.315299999999798e-05, 2.318100000000059e-05, 2.3152000000001977e-05, 2.3165999999998077e-05, 2.315299999999798e-05, 2.319500000000016e-05, 2.31...</msg>
<status status="PASS" starttime="20201115 22:02:28.701" endtime="20201115 22:02:28.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.718" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:28.717" endtime="20201115 22:02:28.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.721" level="INFO">VALUE: [2.319500000000016e-05, 2.312500000000231e-05, 2.315299999999798e-05, 2.318100000000059e-05, 2.3152000000001977e-05, 2.3165999999998077e-05, 2.315299999999798e-05, 2.319500000000016e-05, 2.3193999999997217e-05, 2.3208000000000256e-05, 2.311099999999927e-05, 2.316700000000102e-05, 2.316700000000102e-05, 2.3152000000001977e-05, 2.315299999999798e-05, 2.3221999999999826e-05, 2.3250000000002435e-05, 2.3208000000000256e-05, 2.313899999999841e-05, 2.3152000000001977e-05, 2.315299999999798e-05, 2.3165999999998077e-05, 2.323700000000234e-05, 2.3151999999998507e-05, 2.318099999999712e-05, 2.3070000000000035e-05, 2.319499999999669e-05, 2.3180000000004586e-05, 2.315299999999798e-05, 2.318100000000406e-05, 2.311099999999927e-05, 2.312500000000578e-05, 2.319500000000363e-05, 2.3194000000004156e-05, 2.315300000000492e-05, 2.311099999999927e-05, 2.3179999999997647e-05, 2.319499999999669e-05, 2.311099999999927e-05, 2.316699999999755e-05, 2.312499999999884e-05, 2.316699999999755e-05, 2.319499999999669e-05, 2.315300000000492e-05, 2.311099999999927e-05, 2.318099999999712e-05, 2.32090000000032e-05, 2.3180000000004586e-05, 2.3179999999997647e-05, 2.312499999999884e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.719" endtime="20201115 22:02:28.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.714" endtime="20201115 22:02:28.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.724" endtime="20201115 22:02:28.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.728" endtime="20201115 22:02:28.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.726" endtime="20201115 22:02:28.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.722" endtime="20201115 22:02:28.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.342" endtime="20201115 22:02:28.748"></status>
</kw>
<msg timestamp="20201115 22:02:28.749" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.757" endtime="20201115 22:02:28.789"></status>
</kw>
<msg timestamp="20201115 22:02:28.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.756" endtime="20201115 22:02:28.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.791" endtime="20201115 22:02:28.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.793" endtime="20201115 22:02:28.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.753" endtime="20201115 22:02:28.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.751" endtime="20201115 22:02:28.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.803" endtime="20201115 22:02:29.089"></status>
</kw>
<msg timestamp="20201115 22:02:29.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023674403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.802" endtime="20201115 22:02:29.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023674403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.093" endtime="20201115 22:02:29.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.101" endtime="20201115 22:02:29.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.799" endtime="20201115 22:02:29.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.797" endtime="20201115 22:02:29.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.108" level="INFO">${RESULT} = [{'time': 0.023674403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.320899999999973e-05, 'source_diff': 2.320899999999973e-05}, {'time': 0.024045083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:29.104" endtime="20201115 22:02:29.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.121" level="INFO">${OVERHEAD} = {'diff': [2.320899999999973e-05, 2.313899999999841e-05, 2.316700000000102e-05, 2.315300000000145e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.3194000000000686e-05, 2.318100000000059e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:02:29.109" endtime="20201115 22:02:29.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.126" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:29.125" endtime="20201115 22:02:29.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.128" level="INFO">VALUE: [2.320899999999973e-05, 2.313899999999841e-05, 2.316700000000102e-05, 2.315300000000145e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.3194000000000686e-05, 2.318100000000059e-05, 2.313900000000188e-05, 2.311099999999927e-05, 2.312499999999884e-05, 2.316700000000102e-05, 2.318100000000059e-05, 2.3194000000000686e-05, 2.319500000000016e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.313900000000188e-05, 2.313899999999841e-05, 2.3180000000001116e-05, 2.3180000000001116e-05, 2.3179999999997647e-05, 2.313899999999841e-05, 2.320899999999626e-05, 2.3151999999998507e-05, 2.3194000000004156e-05, 2.3193999999997217e-05, 2.312499999999884e-05, 2.3221999999996357e-05, 2.3179999999997647e-05, 2.32369999999954e-05, 2.315299999999798e-05, 2.318099999999712e-05, 2.315300000000492e-05, 2.3208000000003726e-05, 2.3193999999997217e-05, 2.3180000000004586e-05, 2.316699999999755e-05, 2.3193999999997217e-05, 2.3249999999995496e-05, 2.3180000000004586e-05, 2.3179999999997647e-05, 2.318100000000406e-05, 2.311099999999927e-05, 2.315299999999798e-05, 2.318100000000406e-05, 2.318099999999712e-05, 2.313900000000535e-05, 2.313899999999841e-05, 2.318100000000406e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.127" endtime="20201115 22:02:29.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.122" endtime="20201115 22:02:29.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.132" endtime="20201115 22:02:29.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.135" endtime="20201115 22:02:29.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.134" endtime="20201115 22:02:29.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.130" endtime="20201115 22:02:29.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.749" endtime="20201115 22:02:29.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.088" endtime="20201115 22:02:29.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.087" endtime="20201115 22:02:29.156"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.158" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.167" endtime="20201115 22:02:29.196"></status>
</kw>
<msg timestamp="20201115 22:02:29.196" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.166" endtime="20201115 22:02:29.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.197" endtime="20201115 22:02:29.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.200" endtime="20201115 22:02:29.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.163" endtime="20201115 22:02:29.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.161" endtime="20201115 22:02:29.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.209" endtime="20201115 22:02:29.495"></status>
</kw>
<msg timestamp="20201115 22:02:29.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023160042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023184069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.207" endtime="20201115 22:02:29.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023160042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023184069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.499" endtime="20201115 22:02:29.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.508" endtime="20201115 22:02:29.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.205" endtime="20201115 22:02:29.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.203" endtime="20201115 22:02:29.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.514" level="INFO">${RESULT} = [{'time': 0.023184069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.402700000000285e-05, 'source_diff': 2.402700000000285e-05}, {'time': 0.023579556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:29.511" endtime="20201115 22:02:29.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.528" level="INFO">${OVERHEAD} = {'diff': [2.402700000000285e-05, 2.4028000000002325e-05, 2.4013999999999286e-05, 2.4042000000001895e-05, 2.397300000000005e-05, 2.405500000000199e-05, 2.3999999999999716e-05, 2.4013999999999286e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:02:29.515" endtime="20201115 22:02:29.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.533" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:29.532" endtime="20201115 22:02:29.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.535" level="INFO">VALUE: [2.402700000000285e-05, 2.4028000000002325e-05, 2.4013999999999286e-05, 2.4042000000001895e-05, 2.397300000000005e-05, 2.405500000000199e-05, 2.3999999999999716e-05, 2.4013999999999286e-05, 2.4014000000002755e-05, 2.4013999999999286e-05, 2.4028000000002325e-05, 2.3972000000000576e-05, 2.4040999999998952e-05, 2.4013999999999286e-05, 2.3999999999999716e-05, 2.4056000000001465e-05, 2.4098000000000175e-05, 2.3999999999999716e-05, 2.4055999999997996e-05, 2.398699999999962e-05, 2.4041999999998426e-05, 2.4026999999995913e-05, 2.4056000000001465e-05, 2.4014000000002755e-05, 2.3972000000004046e-05, 2.3971999999997107e-05, 2.406900000000156e-05, 2.4014000000002755e-05, 2.4014000000002755e-05, 2.4028000000002325e-05, 2.405500000000199e-05, 2.4014000000002755e-05, 2.404100000000242e-05, 2.4014000000002755e-05, 2.4013999999995816e-05, 2.397299999999658e-05, 2.4056000000001465e-05, 2.3986000000003616e-05, 2.4028000000002325e-05, 2.3971999999997107e-05, 2.3986000000003616e-05, 2.3986000000003616e-05, 2.4014000000002755e-05, 2.4028000000002325e-05, 2.3957999999997537e-05, 2.4054999999995053e-05, 2.3972000000004046e-05, 2.3986000000003616e-05, 2.3986000000003616e-05, 2.3985999999996677e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.534" endtime="20201115 22:02:29.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.529" endtime="20201115 22:02:29.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.539" endtime="20201115 22:02:29.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.542" endtime="20201115 22:02:29.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.541" endtime="20201115 22:02:29.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.537" endtime="20201115 22:02:29.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.159" endtime="20201115 22:02:29.563"></status>
</kw>
<msg timestamp="20201115 22:02:29.563" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.572" endtime="20201115 22:02:29.604"></status>
</kw>
<msg timestamp="20201115 22:02:29.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.570" endtime="20201115 22:02:29.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.605" endtime="20201115 22:02:29.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.608" endtime="20201115 22:02:29.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.568" endtime="20201115 22:02:29.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.566" endtime="20201115 22:02:29.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.617" endtime="20201115 22:02:29.903"></status>
</kw>
<msg timestamp="20201115 22:02:29.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.616" endtime="20201115 22:02:29.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.907" endtime="20201115 22:02:29.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.915" endtime="20201115 22:02:29.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.613" endtime="20201115 22:02:29.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.612" endtime="20201115 22:02:29.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.922" level="INFO">${RESULT} = [{'time': 0.023092056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.398699999999962e-05, 'source_diff': 2.398699999999962e-05}, {'time': 0.023489639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:29.918" endtime="20201115 22:02:29.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.936" level="INFO">${OVERHEAD} = {'diff': [2.398699999999962e-05, 2.4041999999998426e-05, 2.3999999999999716e-05, 2.4054999999998522e-05, 2.3999999999999716e-05, 2.3986000000000146e-05, 2.394500000000091e-05, 2.3999999999999716e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:29.923" endtime="20201115 22:02:29.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.941" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:29.940" endtime="20201115 22:02:29.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.944" level="INFO">VALUE: [2.398699999999962e-05, 2.4041999999998426e-05, 2.3999999999999716e-05, 2.4054999999998522e-05, 2.3999999999999716e-05, 2.3986000000000146e-05, 2.394500000000091e-05, 2.3999999999999716e-05, 2.3958000000001006e-05, 2.3986000000000146e-05, 2.4027999999998856e-05, 2.3999999999999716e-05, 2.398699999999962e-05, 2.4014000000002755e-05, 2.3986000000000146e-05, 2.4027999999998856e-05, 2.4040999999998952e-05, 2.406900000000156e-05, 2.4056000000001465e-05, 2.3999999999999716e-05, 2.3958000000001006e-05, 2.3971999999997107e-05, 2.404100000000242e-05, 2.4014000000002755e-05, 2.406900000000156e-05, 2.4000000000003185e-05, 2.3972000000004046e-05, 2.4013999999995816e-05, 2.3986000000003616e-05, 2.4055999999994526e-05, 2.393100000000481e-05, 2.3985999999996677e-05, 2.4014000000002755e-05, 2.3958000000004476e-05, 2.404100000000242e-05, 2.3958000000004476e-05, 2.4014000000002755e-05, 2.40970000000007e-05, 2.4056000000001465e-05, 2.3972000000004046e-05, 2.4040999999995483e-05, 2.398700000000309e-05, 2.4028000000002325e-05, 2.4040999999995483e-05, 2.4013999999995816e-05, 2.4055999999994526e-05, 2.4040999999995483e-05, 2.4056000000001465e-05, 2.4013999999995816e-05, 2.3972000000004046e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.942" endtime="20201115 22:02:29.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.937" endtime="20201115 22:02:29.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.947" endtime="20201115 22:02:29.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.950" endtime="20201115 22:02:29.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.949" endtime="20201115 22:02:29.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.945" endtime="20201115 22:02:29.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.564" endtime="20201115 22:02:29.971"></status>
</kw>
<msg timestamp="20201115 22:02:29.971" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.980" endtime="20201115 22:02:30.010"></status>
</kw>
<msg timestamp="20201115 22:02:30.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.979" endtime="20201115 22:02:30.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.013" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.012" endtime="20201115 22:02:30.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.014" endtime="20201115 22:02:30.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.976" endtime="20201115 22:02:30.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.974" endtime="20201115 22:02:30.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.024" endtime="20201115 22:02:30.310"></status>
</kw>
<msg timestamp="20201115 22:02:30.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02195125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:30.023" endtime="20201115 22:02:30.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02195125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:30.314" endtime="20201115 22:02:30.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.322" endtime="20201115 22:02:30.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.020" endtime="20201115 22:02:30.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.018" endtime="20201115 22:02:30.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.329" level="INFO">${RESULT} = [{'time': 0.02195125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4027999999998856e-05, 'source_diff': 2.4027999999998856e-05}, {'time': 0.022349389, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:30.326" endtime="20201115 22:02:30.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.343" level="INFO">${OVERHEAD} = {'diff': [2.4027999999998856e-05, 2.4013999999999286e-05, 2.4027999999998856e-05, 2.3986000000000146e-05, 2.3972000000000576e-05, 2.3999999999999716e-05, 2.3986000000000146e-05, 2.4041999999998426e-05...</msg>
<status status="PASS" starttime="20201115 22:02:30.330" endtime="20201115 22:02:30.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.348" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:30.347" endtime="20201115 22:02:30.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.350" level="INFO">VALUE: [2.4027999999998856e-05, 2.4013999999999286e-05, 2.4027999999998856e-05, 2.3986000000000146e-05, 2.3972000000000576e-05, 2.3999999999999716e-05, 2.3986000000000146e-05, 2.4041999999998426e-05, 2.3999999999999716e-05, 2.3999999999999716e-05, 2.3999999999999716e-05, 2.3999999999999716e-05, 2.4028000000002325e-05, 2.398699999999962e-05, 2.3972000000000576e-05, 2.4041999999998426e-05, 2.4041999999998426e-05, 2.395900000000048e-05, 2.4041999999998426e-05, 2.4054999999998522e-05, 2.4041999999998426e-05, 2.3971999999997107e-05, 2.3999999999999716e-05, 2.3986000000000146e-05, 2.3999999999996247e-05, 2.4042000000001895e-05, 2.4028000000002325e-05, 2.4013999999995816e-05, 2.4028000000002325e-05, 2.4027999999995386e-05, 2.4013999999995816e-05, 2.4014000000002755e-05, 2.4014000000002755e-05, 2.3986000000003616e-05, 2.3986000000003616e-05, 2.4056000000001465e-05, 2.3999999999996247e-05, 2.4013000000003282e-05, 2.4068999999994622e-05, 2.4028000000002325e-05, 2.402700000000285e-05, 2.4000000000003185e-05, 2.3999999999996247e-05, 2.4028000000002325e-05, 2.3985999999996677e-05, 2.4014000000002755e-05, 2.402700000000285e-05, 2.4000000000003185e-05, 2.3985999999996677e-05, 2.4013000000003282e-05]</msg>
<status status="PASS" starttime="20201115 22:02:30.349" endtime="20201115 22:02:30.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.344" endtime="20201115 22:02:30.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.353" endtime="20201115 22:02:30.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.357" endtime="20201115 22:02:30.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.355" endtime="20201115 22:02:30.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.352" endtime="20201115 22:02:30.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.972" endtime="20201115 22:02:30.377"></status>
</kw>
<msg timestamp="20201115 22:02:30.378" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.386" endtime="20201115 22:02:30.417"></status>
</kw>
<msg timestamp="20201115 22:02:30.417" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.385" endtime="20201115 22:02:30.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.418" endtime="20201115 22:02:30.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.421" endtime="20201115 22:02:30.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.382" endtime="20201115 22:02:30.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.380" endtime="20201115 22:02:30.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.431" endtime="20201115 22:02:30.716"></status>
</kw>
<msg timestamp="20201115 22:02:30.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02246325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:30.429" endtime="20201115 22:02:30.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02246325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:30.721" endtime="20201115 22:02:30.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.729" endtime="20201115 22:02:30.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.427" endtime="20201115 22:02:30.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.425" endtime="20201115 22:02:30.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.736" level="INFO">${RESULT} = [{'time': 0.022487333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.408300000000113e-05, 'source_diff': 2.408300000000113e-05}, {'time': 0.022881458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:30.733" endtime="20201115 22:02:30.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.749" level="INFO">${OVERHEAD} = {'diff': [2.408300000000113e-05, 2.4040999999998952e-05, 2.412499999999984e-05, 2.3999999999999716e-05, 2.4026999999999382e-05, 2.4027999999998856e-05, 2.4068999999998092e-05, 2.4013999999999286e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:30.737" endtime="20201115 22:02:30.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.754" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:30.753" endtime="20201115 22:02:30.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.756" level="INFO">VALUE: [2.408300000000113e-05, 2.4040999999998952e-05, 2.412499999999984e-05, 2.3999999999999716e-05, 2.4026999999999382e-05, 2.4027999999998856e-05, 2.4068999999998092e-05, 2.4013999999999286e-05, 2.402700000000285e-05, 2.4028000000002325e-05, 2.3972000000000576e-05, 2.3999999999999716e-05, 2.3958000000001006e-05, 2.3986000000000146e-05, 2.3986000000000146e-05, 2.3972000000000576e-05, 2.4026999999999382e-05, 2.4027999999998856e-05, 2.4068999999998092e-05, 2.404100000000242e-05, 2.4042000000001895e-05, 2.4054999999998522e-05, 2.4041999999998426e-05, 2.3972000000004046e-05, 2.3999999999996247e-05, 2.3985999999996677e-05, 2.405500000000199e-05, 2.405500000000199e-05, 2.40970000000007e-05, 2.411100000000027e-05, 2.4012999999996343e-05, 2.412499999999984e-05, 2.397299999999658e-05, 2.3972000000004046e-05, 2.4014000000002755e-05, 2.3985999999996677e-05, 2.4028000000002325e-05, 2.4028000000002325e-05, 2.4014000000002755e-05, 2.404100000000242e-05, 2.3943999999997967e-05, 2.3999999999996247e-05, 2.4055999999994526e-05, 2.3985999999996677e-05, 2.4028000000002325e-05, 2.3985999999996677e-05, 2.4000000000003185e-05, 2.3986000000003616e-05, 2.4028000000002325e-05, 2.4014000000002755e-05]</msg>
<status status="PASS" starttime="20201115 22:02:30.755" endtime="20201115 22:02:30.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.750" endtime="20201115 22:02:30.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.760" endtime="20201115 22:02:30.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.763" endtime="20201115 22:02:30.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.761" endtime="20201115 22:02:30.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.758" endtime="20201115 22:02:30.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.378" endtime="20201115 22:02:30.784"></status>
</kw>
<msg timestamp="20201115 22:02:30.784" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.793" endtime="20201115 22:02:30.823"></status>
</kw>
<msg timestamp="20201115 22:02:30.824" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.791" endtime="20201115 22:02:30.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.825" endtime="20201115 22:02:30.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.827" endtime="20201115 22:02:30.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.789" endtime="20201115 22:02:30.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.786" endtime="20201115 22:02:30.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.837" endtime="20201115 22:02:31.124"></status>
</kw>
<msg timestamp="20201115 22:02:31.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022940431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.836" endtime="20201115 22:02:31.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022940431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.132" endtime="20201115 22:02:31.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.141" endtime="20201115 22:02:31.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.833" endtime="20201115 22:02:31.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.831" endtime="20201115 22:02:31.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.147" level="INFO">${RESULT} = [{'time': 0.022964472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4040999999998952e-05, 'source_diff': 2.4040999999998952e-05}, {'time': 0.023361514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:31.144" endtime="20201115 22:02:31.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.161" level="INFO">${OVERHEAD} = {'diff': [2.4040999999998952e-05, 2.3999999999999716e-05, 2.3971999999997107e-05, 2.4027999999998856e-05, 2.4054999999998522e-05, 2.4026999999999382e-05, 2.4013999999999286e-05, 2.3986000000000146e-05...</msg>
<status status="PASS" starttime="20201115 22:02:31.148" endtime="20201115 22:02:31.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.166" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:31.165" endtime="20201115 22:02:31.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.168" level="INFO">VALUE: [2.4040999999998952e-05, 2.3999999999999716e-05, 2.3971999999997107e-05, 2.4027999999998856e-05, 2.4054999999998522e-05, 2.4026999999999382e-05, 2.4013999999999286e-05, 2.3986000000000146e-05, 2.4056000000001465e-05, 2.4027999999998856e-05, 2.3999999999999716e-05, 2.4055999999997996e-05, 2.4013999999999286e-05, 2.4027999999998856e-05, 2.397300000000005e-05, 2.411100000000027e-05, 2.3999999999999716e-05, 2.395899999999701e-05, 2.3958000000001006e-05, 2.4055999999997996e-05, 2.402700000000285e-05, 2.408300000000113e-05, 2.4028000000002325e-05, 2.4055999999994526e-05, 2.4041999999994956e-05, 2.4055999999994526e-05, 2.4014000000002755e-05, 2.3986000000003616e-05, 2.4028000000002325e-05, 2.4042000000001895e-05, 2.406900000000156e-05, 2.398699999999615e-05, 2.3985999999996677e-05, 2.3985999999996677e-05, 2.4069999999994096e-05, 2.4000000000003185e-05, 2.4042000000001895e-05, 2.4014000000002755e-05, 2.3986000000003616e-05, 2.4042000000001895e-05, 2.4013999999995816e-05, 2.4000000000003185e-05, 2.4000000000003185e-05, 2.3999999999996247e-05, 2.4070000000001035e-05, 2.395899999999701e-05, 2.4054999999995053e-05, 2.405500000000199e-05, 2.4056000000001465e-05, 2.404100000000242e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.167" endtime="20201115 22:02:31.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.162" endtime="20201115 22:02:31.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.171" endtime="20201115 22:02:31.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.175" endtime="20201115 22:02:31.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.173" endtime="20201115 22:02:31.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.170" endtime="20201115 22:02:31.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.784" endtime="20201115 22:02:31.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.157" endtime="20201115 22:02:31.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.156" endtime="20201115 22:02:31.196"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.198" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.207" endtime="20201115 22:02:31.241"></status>
</kw>
<msg timestamp="20201115 22:02:31.241" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.205" endtime="20201115 22:02:31.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.244" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.242" endtime="20201115 22:02:31.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.245" endtime="20201115 22:02:31.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.203" endtime="20201115 22:02:31.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.201" endtime="20201115 22:02:31.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.254" endtime="20201115 22:02:31.540"></status>
</kw>
<msg timestamp="20201115 22:02:31.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023388056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.253" endtime="20201115 22:02:31.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023388056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.544" endtime="20201115 22:02:31.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.552" endtime="20201115 22:02:31.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.250" endtime="20201115 22:02:31.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.248" endtime="20201115 22:02:31.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.559" level="INFO">${RESULT} = [{'time': 0.023388056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4848000000000925e-05, 'source_diff': 2.4848000000000925e-05}, {'time': 0.023807278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:31.555" endtime="20201115 22:02:31.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.573" level="INFO">${OVERHEAD} = {'diff': [2.4848000000000925e-05, 2.490299999999973e-05, 2.4832999999998412e-05, 2.4846999999997982e-05, 2.488900000000016e-05, 2.4888000000000687e-05, 2.490299999999973e-05, 2.486100000000102e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:31.560" endtime="20201115 22:02:31.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.578" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:31.577" endtime="20201115 22:02:31.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.580" level="INFO">VALUE: [2.4848000000000925e-05, 2.490299999999973e-05, 2.4832999999998412e-05, 2.4846999999997982e-05, 2.488900000000016e-05, 2.4888000000000687e-05, 2.490299999999973e-05, 2.486100000000102e-05, 2.4902000000000257e-05, 2.488900000000016e-05, 2.487499999999712e-05, 2.4846999999997982e-05, 2.484700000000145e-05, 2.488900000000016e-05, 2.483300000000188e-05, 2.4846999999997982e-05, 2.4847999999997455e-05, 2.487500000000059e-05, 2.4902000000000257e-05, 2.4834000000001355e-05, 2.4874999999993652e-05, 2.4874999999993652e-05, 2.488900000000016e-05, 2.4846999999994512e-05, 2.484700000000145e-05, 2.4832999999994942e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.4791999999995706e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.488799999999375e-05, 2.490299999999973e-05, 2.4902000000000257e-05, 2.490299999999973e-05, 2.486100000000102e-05, 2.4846999999994512e-05, 2.487500000000059e-05, 2.4846999999994512e-05, 2.484700000000145e-05, 2.4860999999994082e-05, 2.486100000000102e-05, 2.481900000000231e-05, 2.490299999999973e-05, 2.4860999999994082e-05, 2.484700000000145e-05, 2.4750000000003936e-05, 2.486100000000102e-05, 2.483300000000188e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.579" endtime="20201115 22:02:31.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.574" endtime="20201115 22:02:31.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.584" endtime="20201115 22:02:31.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.587" endtime="20201115 22:02:31.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.585" endtime="20201115 22:02:31.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.582" endtime="20201115 22:02:31.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.199" endtime="20201115 22:02:31.608"></status>
</kw>
<msg timestamp="20201115 22:02:31.608" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.617" endtime="20201115 22:02:31.652"></status>
</kw>
<msg timestamp="20201115 22:02:31.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.615" endtime="20201115 22:02:31.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.656" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.654" endtime="20201115 22:02:31.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.657" endtime="20201115 22:02:31.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.613" endtime="20201115 22:02:31.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.611" endtime="20201115 22:02:31.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.667" endtime="20201115 22:02:31.953"></status>
</kw>
<msg timestamp="20201115 22:02:31.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022861917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.665" endtime="20201115 22:02:31.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022861917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.957" endtime="20201115 22:02:31.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.965" endtime="20201115 22:02:31.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.663" endtime="20201115 22:02:31.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.661" endtime="20201115 22:02:31.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.972" level="INFO">${RESULT} = [{'time': 0.022886875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4958000000002006e-05, 'source_diff': 2.4958000000002006e-05}, {'time': 0.023309194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:31.968" endtime="20201115 22:02:31.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.985" level="INFO">${OVERHEAD} = {'diff': [2.4958000000002006e-05, 2.487499999999712e-05, 2.491700000000277e-05, 2.4832999999998412e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.486100000000102e-05, 2.488...</msg>
<status status="PASS" starttime="20201115 22:02:31.973" endtime="20201115 22:02:31.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.990" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:31.989" endtime="20201115 22:02:31.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.993" level="INFO">VALUE: [2.4958000000002006e-05, 2.487499999999712e-05, 2.491700000000277e-05, 2.4832999999998412e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.486100000000102e-05, 2.488899999999669e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.4902000000000257e-05, 2.488899999999669e-05, 2.488900000000016e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.486100000000102e-05, 2.487500000000059e-05, 2.4902000000000257e-05, 2.4943999999998967e-05, 2.488900000000016e-05, 2.484700000000145e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.483300000000188e-05, 2.4832999999994942e-05, 2.486100000000102e-05, 2.488900000000016e-05, 2.49169999999993e-05, 2.487500000000059e-05, 2.487500000000059e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.4902000000000257e-05, 2.487500000000059e-05, 2.4832999999994942e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.484700000000145e-05, 2.488900000000016e-05, 2.49169999999993e-05, 2.4888000000000687e-05, 2.4971999999998107e-05, 2.484700000000145e-05, 2.4915999999999827e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.991" endtime="20201115 22:02:31.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.986" endtime="20201115 22:02:31.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.996" endtime="20201115 22:02:31.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.000" endtime="20201115 22:02:32.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.999" endtime="20201115 22:02:32.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.994" endtime="20201115 22:02:32.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.609" endtime="20201115 22:02:32.021"></status>
</kw>
<msg timestamp="20201115 22:02:32.021" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.031" endtime="20201115 22:02:32.064"></status>
</kw>
<msg timestamp="20201115 22:02:32.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.029" endtime="20201115 22:02:32.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.067" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.066" endtime="20201115 22:02:32.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.068" endtime="20201115 22:02:32.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.026" endtime="20201115 22:02:32.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.024" endtime="20201115 22:02:32.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.078" endtime="20201115 22:02:32.363"></status>
</kw>
<msg timestamp="20201115 22:02:32.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021554722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021579611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.076" endtime="20201115 22:02:32.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021554722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021579611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.367" endtime="20201115 22:02:32.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.375" endtime="20201115 22:02:32.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.074" endtime="20201115 22:02:32.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.072" endtime="20201115 22:02:32.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.382" level="INFO">${RESULT} = [{'time': 0.021579611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.488900000000016e-05, 'source_diff': 2.488900000000016e-05}, {'time': 0.022004486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:32.379" endtime="20201115 22:02:32.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.396" level="INFO">${OVERHEAD} = {'diff': [2.488900000000016e-05, 2.490299999999973e-05, 2.4860999999997552e-05, 2.483300000000188e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.4846999999997982e-05, 2.486100000000102e-05, 2.49...</msg>
<status status="PASS" starttime="20201115 22:02:32.383" endtime="20201115 22:02:32.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.400" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:32.399" endtime="20201115 22:02:32.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.403" level="INFO">VALUE: [2.488900000000016e-05, 2.490299999999973e-05, 2.4860999999997552e-05, 2.483300000000188e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.4846999999997982e-05, 2.486100000000102e-05, 2.490299999999973e-05, 2.4848000000000925e-05, 2.4832999999998412e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.4862000000000495e-05, 2.4888000000000687e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.486100000000102e-05, 2.4820000000001785e-05, 2.490299999999973e-05, 2.486100000000102e-05, 2.4915999999999827e-05, 2.487500000000059e-05, 2.4834000000001355e-05, 2.4848000000000925e-05, 2.488900000000016e-05, 2.4846999999994512e-05, 2.490299999999973e-05, 2.484700000000145e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.486100000000102e-05, 2.4943999999998967e-05, 2.484700000000145e-05, 2.487500000000059e-05, 2.4860999999994082e-05, 2.483300000000188e-05, 2.4860999999994082e-05, 2.490299999999973e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.493099999999887e-05, 2.484700000000145e-05, 2.4848000000000925e-05, 2.4915999999999827e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.490299999999973e-05]</msg>
<status status="PASS" starttime="20201115 22:02:32.401" endtime="20201115 22:02:32.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.397" endtime="20201115 22:02:32.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.406" endtime="20201115 22:02:32.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.409" endtime="20201115 22:02:32.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.408" endtime="20201115 22:02:32.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.404" endtime="20201115 22:02:32.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.022" endtime="20201115 22:02:32.431"></status>
</kw>
<msg timestamp="20201115 22:02:32.431" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.440" endtime="20201115 22:02:32.476"></status>
</kw>
<msg timestamp="20201115 22:02:32.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.438" endtime="20201115 22:02:32.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.479" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.477" endtime="20201115 22:02:32.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.480" endtime="20201115 22:02:32.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.435" endtime="20201115 22:02:32.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.433" endtime="20201115 22:02:32.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.490" endtime="20201115 22:02:32.775"></status>
</kw>
<msg timestamp="20201115 22:02:32.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024456847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.488" endtime="20201115 22:02:32.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024432028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024456847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.779" endtime="20201115 22:02:32.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.787" endtime="20201115 22:02:32.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.486" endtime="20201115 22:02:32.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.484" endtime="20201115 22:02:32.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.794" level="INFO">${RESULT} = [{'time': 0.024456847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4818999999998842e-05, 'source_diff': 2.4818999999998842e-05}, {'time': 0.024878694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:32.790" endtime="20201115 22:02:32.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.807" level="INFO">${OVERHEAD} = {'diff': [2.4818999999998842e-05, 2.487500000000059e-05, 2.4846999999997982e-05, 2.490299999999973e-05, 2.4862000000000495e-05, 2.490299999999973e-05, 2.494500000000191e-05, 2.4846999999997982e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:32.795" endtime="20201115 22:02:32.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.812" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:32.811" endtime="20201115 22:02:32.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.814" level="INFO">VALUE: [2.4818999999998842e-05, 2.487500000000059e-05, 2.4846999999997982e-05, 2.490299999999973e-05, 2.4862000000000495e-05, 2.490299999999973e-05, 2.494500000000191e-05, 2.4846999999997982e-05, 2.488900000000016e-05, 2.4901999999996788e-05, 2.4833999999997886e-05, 2.49030000000032e-05, 2.4832999999998412e-05, 2.4902000000000257e-05, 2.49169999999993e-05, 2.4847999999997455e-05, 2.486100000000102e-05, 2.484700000000145e-05, 2.488900000000016e-05, 2.484700000000145e-05, 2.4776999999996663e-05, 2.488900000000016e-05, 2.486100000000102e-05, 2.4834000000001355e-05, 2.4834000000001355e-05, 2.4888000000000687e-05, 2.4943999999998967e-05, 2.4862000000000495e-05, 2.4902000000000257e-05, 2.483300000000188e-05, 2.486100000000102e-05, 2.490299999999973e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.483300000000188e-05, 2.4888000000000687e-05, 2.4915999999999827e-05, 2.4792000000002645e-05, 2.4915999999999827e-05, 2.483300000000188e-05, 2.4832999999994942e-05, 2.484700000000145e-05, 2.4860999999994082e-05, 2.487500000000059e-05, 2.486100000000102e-05, 2.486100000000102e-05, 2.4862000000000495e-05, 2.486100000000102e-05, 2.486100000000102e-05, 2.487500000000059e-05]</msg>
<status status="PASS" starttime="20201115 22:02:32.813" endtime="20201115 22:02:32.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.808" endtime="20201115 22:02:32.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.818" endtime="20201115 22:02:32.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.821" endtime="20201115 22:02:32.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.820" endtime="20201115 22:02:32.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.816" endtime="20201115 22:02:32.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.431" endtime="20201115 22:02:32.842"></status>
</kw>
<msg timestamp="20201115 22:02:32.842" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.851" endtime="20201115 22:02:32.888"></status>
</kw>
<msg timestamp="20201115 22:02:32.889" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.849" endtime="20201115 22:02:32.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.891" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.890" endtime="20201115 22:02:32.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.892" endtime="20201115 22:02:32.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.847" endtime="20201115 22:02:32.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.844" endtime="20201115 22:02:32.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.903" endtime="20201115 22:02:33.188"></status>
</kw>
<msg timestamp="20201115 22:02:33.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024746403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.901" endtime="20201115 22:02:33.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024746403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.192" endtime="20201115 22:02:33.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.201" endtime="20201115 22:02:33.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.898" endtime="20201115 22:02:33.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.897" endtime="20201115 22:02:33.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.207" level="INFO">${RESULT} = [{'time': 0.024771278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.487500000000059e-05, 'source_diff': 2.487500000000059e-05}, {'time': 0.025190403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:33.204" endtime="20201115 22:02:33.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.222" level="INFO">${OVERHEAD} = {'diff': [2.487500000000059e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.4846999999997982e-05, 2.490299999999973e-05, 2.4818999999998842e-05, 2.4902000000000257e-05, 2.4834000000001355e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:02:33.208" endtime="20201115 22:02:33.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.226" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:33.225" endtime="20201115 22:02:33.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.229" level="INFO">VALUE: [2.487500000000059e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.4846999999997982e-05, 2.490299999999973e-05, 2.4818999999998842e-05, 2.4902000000000257e-05, 2.4834000000001355e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.494499999999844e-05, 2.487500000000059e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.486100000000102e-05, 2.49169999999993e-05, 2.484700000000145e-05, 2.4862000000000495e-05, 2.491700000000624e-05, 2.483300000000188e-05, 2.487500000000059e-05, 2.4819999999994846e-05, 2.486100000000102e-05, 2.488900000000016e-05, 2.4888999999993222e-05, 2.4860999999994082e-05, 2.4820000000001785e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.486100000000102e-05, 2.486100000000102e-05, 2.490299999999973e-05, 2.491700000000624e-05, 2.490299999999973e-05, 2.487500000000059e-05, 2.484700000000145e-05, 2.4902000000000257e-05, 2.487500000000059e-05, 2.4888000000000687e-05, 2.486100000000102e-05, 2.490300000000667e-05, 2.49169999999993e-05, 2.486100000000102e-05, 2.4806000000002215e-05, 2.487500000000059e-05, 2.487500000000059e-05, 2.488900000000016e-05, 2.484700000000145e-05, 2.488900000000016e-05]</msg>
<status status="PASS" starttime="20201115 22:02:33.227" endtime="20201115 22:02:33.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.223" endtime="20201115 22:02:33.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.232" endtime="20201115 22:02:33.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.236" endtime="20201115 22:02:33.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.234" endtime="20201115 22:02:33.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.231" endtime="20201115 22:02:33.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.842" endtime="20201115 22:02:33.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.197" endtime="20201115 22:02:33.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.196" endtime="20201115 22:02:33.257"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.259" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.268" endtime="20201115 22:02:33.306"></status>
</kw>
<msg timestamp="20201115 22:02:33.306" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.266" endtime="20201115 22:02:33.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.309" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.307" endtime="20201115 22:02:33.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.310" endtime="20201115 22:02:33.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.264" endtime="20201115 22:02:33.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.262" endtime="20201115 22:02:33.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.319" endtime="20201115 22:02:33.604"></status>
</kw>
<msg timestamp="20201115 22:02:33.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027155639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027181444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.317" endtime="20201115 22:02:33.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027155639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027181444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.608" endtime="20201115 22:02:33.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.617" endtime="20201115 22:02:33.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.315" endtime="20201115 22:02:33.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.313" endtime="20201115 22:02:33.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.623" level="INFO">${RESULT} = [{'time': 0.027181444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5805000000000272e-05, 'source_diff': 2.5805000000000272e-05}, {'time': 0.027630833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:33.620" endtime="20201115 22:02:33.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.637" level="INFO">${OVERHEAD} = {'diff': [2.5805000000000272e-05, 2.5721999999998857e-05, 2.569499999999919e-05, 2.5680000000000147e-05, 2.5764000000001036e-05, 2.5750000000001466e-05, 2.5736000000001896e-05, 2.5721999999998857e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:33.624" endtime="20201115 22:02:33.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.641" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:33.640" endtime="20201115 22:02:33.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.644" level="INFO">VALUE: [2.5805000000000272e-05, 2.5721999999998857e-05, 2.569499999999919e-05, 2.5680000000000147e-05, 2.5764000000001036e-05, 2.5750000000001466e-05, 2.5736000000001896e-05, 2.5721999999998857e-05, 2.5735999999998427e-05, 2.5749999999997997e-05, 2.5693999999999717e-05, 2.5611999999994306e-05, 2.568100000000656e-05, 2.5735999999998427e-05, 2.5763000000005032e-05, 2.5749999999997997e-05, 2.5707999999999287e-05, 2.5735999999998427e-05, 2.5735999999998427e-05, 2.57090000000057e-05, 2.5735999999998427e-05, 2.5735999999998427e-05, 2.5707999999999287e-05, 2.5735999999998427e-05, 2.5764000000004506e-05, 2.5778000000004075e-05, 2.568099999999962e-05, 2.5721999999998857e-05, 2.5778000000004075e-05, 2.5721999999998857e-05, 2.5749999999997997e-05, 2.569499999999919e-05, 2.5680000000000147e-05, 2.5707999999999287e-05, 2.5707999999999287e-05, 2.5721999999998857e-05, 2.5735999999998427e-05, 2.5749999999997997e-05, 2.5721999999998857e-05, 2.5707999999999287e-05, 2.569500000000613e-05, 2.5736000000005366e-05, 2.569499999999919e-05, 2.5707999999999287e-05, 2.5652000000001007e-05, 2.5735999999998427e-05, 2.5762999999998093e-05, 2.5735999999998427e-05, 2.572300000000527e-05, 2.570899999999876e-05]</msg>
<status status="PASS" starttime="20201115 22:02:33.643" endtime="20201115 22:02:33.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.638" endtime="20201115 22:02:33.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.648" endtime="20201115 22:02:33.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.651" endtime="20201115 22:02:33.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.650" endtime="20201115 22:02:33.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.646" endtime="20201115 22:02:33.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.260" endtime="20201115 22:02:33.672"></status>
</kw>
<msg timestamp="20201115 22:02:33.672" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.681" endtime="20201115 22:02:33.717"></status>
</kw>
<msg timestamp="20201115 22:02:33.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.679" endtime="20201115 22:02:33.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.719" endtime="20201115 22:02:33.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.721" endtime="20201115 22:02:33.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.677" endtime="20201115 22:02:33.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.674" endtime="20201115 22:02:33.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.731" endtime="20201115 22:02:34.033"></status>
</kw>
<msg timestamp="20201115 22:02:34.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023769556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023795222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.729" endtime="20201115 22:02:34.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023769556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023795222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.042" endtime="20201115 22:02:34.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.055" endtime="20201115 22:02:34.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.727" endtime="20201115 22:02:34.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.725" endtime="20201115 22:02:34.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.061" level="INFO">${RESULT} = [{'time': 0.023795222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5666000000000577e-05, 'source_diff': 2.5666000000000577e-05}, {'time': 0.024242208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:34.058" endtime="20201115 22:02:34.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.075" level="INFO">${OVERHEAD} = {'diff': [2.5666000000000577e-05, 2.5693999999999717e-05, 2.5693999999999717e-05, 2.570900000000223e-05, 2.569500000000266e-05, 2.5721999999998857e-05, 2.5750000000001466e-05, 2.5763999999997567e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:34.062" endtime="20201115 22:02:34.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.080" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:34.079" endtime="20201115 22:02:34.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.082" level="INFO">VALUE: [2.5666000000000577e-05, 2.5693999999999717e-05, 2.5693999999999717e-05, 2.570900000000223e-05, 2.569500000000266e-05, 2.5721999999998857e-05, 2.5750000000001466e-05, 2.5763999999997567e-05, 2.5680000000000147e-05, 2.5764000000001036e-05, 2.5750000000001466e-05, 2.569499999999919e-05, 2.5721999999998857e-05, 2.5721999999998857e-05, 2.5707999999999287e-05, 2.5778000000000606e-05, 2.5707999999999287e-05, 2.5707999999999287e-05, 2.5721999999998857e-05, 2.5707999999999287e-05, 2.5722000000005796e-05, 2.5693999999999717e-05, 2.5749999999997997e-05, 2.57090000000057e-05, 2.5735999999998427e-05, 2.5735999999998427e-05, 2.569499999999919e-05, 2.566700000000005e-05, 2.5749999999997997e-05, 2.5735999999998427e-05, 2.5707999999999287e-05, 2.5736000000005366e-05, 2.5693999999999717e-05, 2.569499999999919e-05, 2.5750000000004936e-05, 2.569500000000613e-05, 2.5707999999999287e-05, 2.568099999999962e-05, 2.568099999999962e-05, 2.5736000000005366e-05, 2.569499999999919e-05, 2.565300000000048e-05, 2.5764000000004506e-05, 2.5693999999999717e-05, 2.5735999999998427e-05, 2.573700000000484e-05, 2.5707999999999287e-05, 2.5763999999997567e-05, 2.5749999999997997e-05, 2.5707999999999287e-05]</msg>
<status status="PASS" starttime="20201115 22:02:34.081" endtime="20201115 22:02:34.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.076" endtime="20201115 22:02:34.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.085" endtime="20201115 22:02:34.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.089" endtime="20201115 22:02:34.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.087" endtime="20201115 22:02:34.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.084" endtime="20201115 22:02:34.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.672" endtime="20201115 22:02:34.110"></status>
</kw>
<msg timestamp="20201115 22:02:34.110" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.119" endtime="20201115 22:02:34.155"></status>
</kw>
<msg timestamp="20201115 22:02:34.155" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.117" endtime="20201115 22:02:34.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.156" endtime="20201115 22:02:34.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.159" endtime="20201115 22:02:34.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.114" endtime="20201115 22:02:34.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.112" endtime="20201115 22:02:34.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.169" endtime="20201115 22:02:34.455"></status>
</kw>
<msg timestamp="20201115 22:02:34.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022988972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023014708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.167" endtime="20201115 22:02:34.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022988972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023014708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.460" endtime="20201115 22:02:34.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.468" endtime="20201115 22:02:34.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.165" endtime="20201115 22:02:34.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.163" endtime="20201115 22:02:34.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.474" level="INFO">${RESULT} = [{'time': 0.023014708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5735999999998427e-05, 'source_diff': 2.5735999999998427e-05}, {'time': 0.023461903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:34.471" endtime="20201115 22:02:34.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.489" level="INFO">${OVERHEAD} = {'diff': [2.5735999999998427e-05, 2.5763999999997567e-05, 2.5750000000001466e-05, 2.57369999999979e-05, 2.569500000000266e-05, 2.5735999999998427e-05, 2.5693999999999717e-05, 2.5750000000001466e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:02:34.476" endtime="20201115 22:02:34.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.493" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:34.492" endtime="20201115 22:02:34.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.495" level="INFO">VALUE: [2.5735999999998427e-05, 2.5763999999997567e-05, 2.5750000000001466e-05, 2.57369999999979e-05, 2.569500000000266e-05, 2.5735999999998427e-05, 2.5693999999999717e-05, 2.5750000000001466e-05, 2.5722000000002326e-05, 2.570899999999876e-05, 2.570899999999876e-05, 2.568100000000309e-05, 2.5721999999998857e-05, 2.5721999999998857e-05, 2.5666000000000577e-05, 2.5693999999999717e-05, 2.5666000000000577e-05, 2.5763999999997567e-05, 2.5750000000001466e-05, 2.5806000000003215e-05, 2.5707999999999287e-05, 2.5777000000004602e-05, 2.5764000000004506e-05, 2.5693999999999717e-05, 2.5722000000005796e-05, 2.581900000000331e-05, 2.569499999999919e-05, 2.5735999999998427e-05, 2.5707999999999287e-05, 2.5762999999998093e-05, 2.5749999999997997e-05, 2.5749999999997997e-05, 2.570899999999876e-05, 2.5749999999997997e-05, 2.5721999999998857e-05, 2.5763999999997567e-05, 2.563900000000091e-05, 2.5707999999999287e-05, 2.566700000000005e-05, 2.5707999999999287e-05, 2.57090000000057e-05, 2.5749999999997997e-05, 2.5666000000000577e-05, 2.5693999999999717e-05, 2.5735999999998427e-05, 2.5790999999997233e-05, 2.5693999999999717e-05, 2.5763999999997567e-05, 2.5833999999995416e-05, 2.5778000000004075e-05]</msg>
<status status="PASS" starttime="20201115 22:02:34.494" endtime="20201115 22:02:34.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.489" endtime="20201115 22:02:34.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.499" endtime="20201115 22:02:34.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.502" endtime="20201115 22:02:34.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.501" endtime="20201115 22:02:34.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.497" endtime="20201115 22:02:34.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.110" endtime="20201115 22:02:34.523"></status>
</kw>
<msg timestamp="20201115 22:02:34.523" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.532" endtime="20201115 22:02:34.566"></status>
</kw>
<msg timestamp="20201115 22:02:34.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.530" endtime="20201115 22:02:34.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.568" endtime="20201115 22:02:34.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.571" endtime="20201115 22:02:34.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.528" endtime="20201115 22:02:34.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.525" endtime="20201115 22:02:34.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.581" endtime="20201115 22:02:34.866"></status>
</kw>
<msg timestamp="20201115 22:02:34.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.579" endtime="20201115 22:02:34.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.870" endtime="20201115 22:02:34.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.878" endtime="20201115 22:02:34.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.576" endtime="20201115 22:02:34.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.575" endtime="20201115 22:02:34.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.885" level="INFO">${RESULT} = [{'time': 0.021836208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5735999999998427e-05, 'source_diff': 2.5735999999998427e-05}, {'time': 0.022286264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:34.882" endtime="20201115 22:02:34.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.900" level="INFO">${OVERHEAD} = {'diff': [2.5735999999998427e-05, 2.5819999999999316e-05, 2.5776999999997663e-05, 2.5750000000001466e-05, 2.5750000000001466e-05, 2.5750000000001466e-05, 2.5721999999998857e-05, 2.566700000000005e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:34.886" endtime="20201115 22:02:34.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.904" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:34.903" endtime="20201115 22:02:34.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.906" level="INFO">VALUE: [2.5735999999998427e-05, 2.5819999999999316e-05, 2.5776999999997663e-05, 2.5750000000001466e-05, 2.5750000000001466e-05, 2.5750000000001466e-05, 2.5721999999998857e-05, 2.566700000000005e-05, 2.5722000000002326e-05, 2.5721999999998857e-05, 2.5707999999999287e-05, 2.573700000000137e-05, 2.5749999999997997e-05, 2.5707999999999287e-05, 2.5750000000001466e-05, 2.5736000000001896e-05, 2.5763999999997567e-05, 2.5707999999999287e-05, 2.5749999999997997e-05, 2.570899999999876e-05, 2.569499999999919e-05, 2.572299999999833e-05, 2.5736000000005366e-05, 2.5721999999998857e-05, 2.5749999999997997e-05, 2.5680000000000147e-05, 2.572300000000527e-05, 2.5763999999997567e-05, 2.566700000000005e-05, 2.5693999999999717e-05, 2.568099999999962e-05, 2.5708000000006226e-05, 2.5763999999997567e-05, 2.5778000000004075e-05, 2.5749999999997997e-05, 2.5776999999997663e-05, 2.5736000000005366e-05, 2.5736000000005366e-05, 2.5749999999997997e-05, 2.5693999999999717e-05, 2.5735999999998427e-05, 2.5721999999998857e-05, 2.5638000000001437e-05, 2.5721999999998857e-05, 2.566700000000005e-05, 2.5707999999999287e-05, 2.5707999999999287e-05, 2.5749999999997997e-05, 2.572299999999833e-05, 2.572299999999833e-05]</msg>
<status status="PASS" starttime="20201115 22:02:34.905" endtime="20201115 22:02:34.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.900" endtime="20201115 22:02:34.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.910" endtime="20201115 22:02:34.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.913" endtime="20201115 22:02:34.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.912" endtime="20201115 22:02:34.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.908" endtime="20201115 22:02:34.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.523" endtime="20201115 22:02:34.934"></status>
</kw>
<msg timestamp="20201115 22:02:34.934" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.943" endtime="20201115 22:02:34.979"></status>
</kw>
<msg timestamp="20201115 22:02:34.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.941" endtime="20201115 22:02:34.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.981" endtime="20201115 22:02:34.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.983" endtime="20201115 22:02:34.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.939" endtime="20201115 22:02:34.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.937" endtime="20201115 22:02:34.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.993" endtime="20201115 22:02:35.278"></status>
</kw>
<msg timestamp="20201115 22:02:35.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02272325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:34.992" endtime="20201115 22:02:35.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02272325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:35.283" endtime="20201115 22:02:35.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.291" endtime="20201115 22:02:35.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.989" endtime="20201115 22:02:35.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.987" endtime="20201115 22:02:35.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.298" level="INFO">${RESULT} = [{'time': 0.02272325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5721999999998857e-05, 'source_diff': 2.5721999999998857e-05}, {'time': 0.023167569, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:35.295" endtime="20201115 22:02:35.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.311" level="INFO">${OVERHEAD} = {'diff': [2.5721999999998857e-05, 2.5721999999998857e-05, 2.569500000000266e-05, 2.5694000000003187e-05, 2.5778000000000606e-05, 2.570900000000223e-05, 2.5749999999997997e-05, 2.5693999999999717e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:35.299" endtime="20201115 22:02:35.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.316" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:35.315" endtime="20201115 22:02:35.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.319" level="INFO">VALUE: [2.5721999999998857e-05, 2.5721999999998857e-05, 2.569500000000266e-05, 2.5694000000003187e-05, 2.5778000000000606e-05, 2.570900000000223e-05, 2.5749999999997997e-05, 2.5693999999999717e-05, 2.5722000000002326e-05, 2.5778000000000606e-05, 2.5764000000001036e-05, 2.5693999999999717e-05, 2.5735999999998427e-05, 2.5764000000001036e-05, 2.573700000000137e-05, 2.5763999999997567e-05, 2.5778000000000606e-05, 2.5680000000000147e-05, 2.5749999999997997e-05, 2.566700000000005e-05, 2.5763999999997567e-05, 2.5792000000003645e-05, 2.5736000000005366e-05, 2.5750000000004936e-05, 2.5722000000005796e-05, 2.565300000000048e-05, 2.572299999999833e-05, 2.5707999999999287e-05, 2.5778000000004075e-05, 2.57369999999979e-05, 2.569499999999919e-05, 2.5721999999998857e-05, 2.5764000000004506e-05, 2.5749999999997997e-05, 2.5707999999999287e-05, 2.5736000000005366e-05, 2.5666000000000577e-05, 2.5707999999999287e-05, 2.5750000000004936e-05, 2.569499999999919e-05, 2.572299999999833e-05, 2.566700000000005e-05, 2.5680000000000147e-05, 2.5722000000005796e-05, 2.5750000000004936e-05, 2.565300000000048e-05, 2.5735999999998427e-05, 2.5749999999997997e-05, 2.5764000000004506e-05, 2.572299999999833e-05]</msg>
<status status="PASS" starttime="20201115 22:02:35.317" endtime="20201115 22:02:35.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.312" endtime="20201115 22:02:35.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.322" endtime="20201115 22:02:35.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.325" endtime="20201115 22:02:35.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.324" endtime="20201115 22:02:35.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.320" endtime="20201115 22:02:35.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.935" endtime="20201115 22:02:35.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.258" endtime="20201115 22:02:35.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.257" endtime="20201115 22:02:35.346"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.348" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.357" endtime="20201115 22:02:35.396"></status>
</kw>
<msg timestamp="20201115 22:02:35.396" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.355" endtime="20201115 22:02:35.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.397" endtime="20201115 22:02:35.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.400" endtime="20201115 22:02:35.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.353" endtime="20201115 22:02:35.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.351" endtime="20201115 22:02:35.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.409" endtime="20201115 22:02:35.695"></status>
</kw>
<msg timestamp="20201115 22:02:35.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027829236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027855806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.408" endtime="20201115 22:02:35.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027829236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027855806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.699" endtime="20201115 22:02:35.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.707" endtime="20201115 22:02:35.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.405" endtime="20201115 22:02:35.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.403" endtime="20201115 22:02:35.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.714" level="INFO">${RESULT} = [{'time': 0.027855806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6570000000000066e-05, 'source_diff': 2.6570000000000066e-05}, {'time': 0.028331375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:35.711" endtime="20201115 22:02:35.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.728" level="INFO">${OVERHEAD} = {'diff': [2.6570000000000066e-05, 2.6583000000000162e-05, 2.6583999999999636e-05, 2.6638999999998442e-05, 2.6583999999999636e-05, 2.662500000000234e-05, 2.6610999999999302e-05, 2.6583000000000162e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:35.715" endtime="20201115 22:02:35.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.732" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:35.731" endtime="20201115 22:02:35.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.735" level="INFO">VALUE: [2.6570000000000066e-05, 2.6583000000000162e-05, 2.6583999999999636e-05, 2.6638999999998442e-05, 2.6583999999999636e-05, 2.662500000000234e-05, 2.6610999999999302e-05, 2.6583000000000162e-05, 2.6610999999995832e-05, 2.6556000000003965e-05, 2.6584000000003105e-05, 2.656900000000406e-05, 2.6514000000005256e-05, 2.65970000000032e-05, 2.65970000000032e-05, 2.6598000000002675e-05, 2.6555999999997026e-05, 2.662500000000234e-05, 2.6554999999997553e-05, 2.6680000000001147e-05, 2.656900000000406e-05, 2.6582999999996693e-05, 2.658300000000363e-05, 2.65970000000032e-05, 2.661100000000277e-05, 2.661100000000277e-05, 2.6582999999996693e-05, 2.6541999999997457e-05, 2.6680000000001147e-05, 2.6596999999996263e-05, 2.658300000000363e-05, 2.6514000000005256e-05, 2.6596999999996263e-05, 2.6598000000002675e-05, 2.6612000000002245e-05, 2.6568999999997123e-05, 2.6610999999995832e-05, 2.6513999999998317e-05, 2.662500000000234e-05, 2.65970000000032e-05, 2.6540999999997983e-05, 2.661100000000277e-05, 2.6556000000003965e-05, 2.6584000000003105e-05, 2.6570000000003535e-05, 2.658300000000363e-05, 2.6582999999996693e-05, 2.658300000000363e-05, 2.6526999999998413e-05, 2.6598000000002675e-05]</msg>
<status status="PASS" starttime="20201115 22:02:35.733" endtime="20201115 22:02:35.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.729" endtime="20201115 22:02:35.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.738" endtime="20201115 22:02:35.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.741" endtime="20201115 22:02:35.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.740" endtime="20201115 22:02:35.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.736" endtime="20201115 22:02:35.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.349" endtime="20201115 22:02:35.762"></status>
</kw>
<msg timestamp="20201115 22:02:35.762" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.771" endtime="20201115 22:02:35.807"></status>
</kw>
<msg timestamp="20201115 22:02:35.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.769" endtime="20201115 22:02:35.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.809" endtime="20201115 22:02:35.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.812" endtime="20201115 22:02:35.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.767" endtime="20201115 22:02:35.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.765" endtime="20201115 22:02:35.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.822" endtime="20201115 22:02:36.108"></status>
</kw>
<msg timestamp="20201115 22:02:36.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.820" endtime="20201115 22:02:36.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.112" endtime="20201115 22:02:36.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.120" endtime="20201115 22:02:36.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.818" endtime="20201115 22:02:36.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.816" endtime="20201115 22:02:36.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.127" level="INFO">${RESULT} = [{'time': 0.023619556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6624999999998872e-05, 'source_diff': 2.6624999999998872e-05}, {'time': 0.024092319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:36.123" endtime="20201115 22:02:36.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.140" level="INFO">${OVERHEAD} = {'diff': [2.6624999999998872e-05, 2.6541000000001452e-05, 2.6610999999999302e-05, 2.662500000000234e-05, 2.6528000000001356e-05, 2.6596999999999732e-05, 2.6556000000000496e-05, 2.661100000000277e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:36.128" endtime="20201115 22:02:36.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.145" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:36.144" endtime="20201115 22:02:36.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.147" level="INFO">VALUE: [2.6624999999998872e-05, 2.6541000000001452e-05, 2.6610999999999302e-05, 2.662500000000234e-05, 2.6528000000001356e-05, 2.6596999999999732e-05, 2.6556000000000496e-05, 2.661100000000277e-05, 2.6527999999997887e-05, 2.6596999999999732e-05, 2.6638999999998442e-05, 2.662500000000234e-05, 2.6541000000001452e-05, 2.6596999999999732e-05, 2.6611999999998776e-05, 2.6500000000002216e-05, 2.6542000000000926e-05, 2.6556000000003965e-05, 2.6582999999996693e-05, 2.6555999999997026e-05, 2.6596999999996263e-05, 2.6624999999995402e-05, 2.65970000000032e-05, 2.6596999999996263e-05, 2.6570000000003535e-05, 2.6555999999997026e-05, 2.662500000000234e-05, 2.6513999999998317e-05, 2.6555999999997026e-05, 2.661100000000277e-05, 2.6555999999997026e-05, 2.6597999999995736e-05, 2.656900000000406e-05, 2.6582999999996693e-05, 2.6556000000003965e-05, 2.6582999999996693e-05, 2.6542000000004395e-05, 2.662500000000234e-05, 2.661100000000277e-05, 2.6598000000002675e-05, 2.6568999999997123e-05, 2.6555999999997026e-05, 2.6485999999999177e-05, 2.6527999999997887e-05, 2.6540999999997983e-05, 2.6556000000003965e-05, 2.6583999999996166e-05, 2.655500000000449e-05, 2.6570000000003535e-05, 2.668100000000062e-05]</msg>
<status status="PASS" starttime="20201115 22:02:36.146" endtime="20201115 22:02:36.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.141" endtime="20201115 22:02:36.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.150" endtime="20201115 22:02:36.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.154" endtime="20201115 22:02:36.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.152" endtime="20201115 22:02:36.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.149" endtime="20201115 22:02:36.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.763" endtime="20201115 22:02:36.174"></status>
</kw>
<msg timestamp="20201115 22:02:36.175" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.188" endtime="20201115 22:02:36.225"></status>
</kw>
<msg timestamp="20201115 22:02:36.225" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.186" endtime="20201115 22:02:36.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.227" endtime="20201115 22:02:36.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.229" endtime="20201115 22:02:36.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.179" endtime="20201115 22:02:36.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.177" endtime="20201115 22:02:36.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.239" endtime="20201115 22:02:36.524"></status>
</kw>
<msg timestamp="20201115 22:02:36.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028078181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028104778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.238" endtime="20201115 22:02:36.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028078181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028104778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.528" endtime="20201115 22:02:36.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.536" endtime="20201115 22:02:36.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.235" endtime="20201115 22:02:36.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.233" endtime="20201115 22:02:36.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.543" level="INFO">${RESULT} = [{'time': 0.028104778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.028576514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:36.540" endtime="20201115 22:02:36.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.558" level="INFO">${OVERHEAD} = {'diff': [2.6596999999999732e-05, 2.6583000000000162e-05, 2.6596999999999732e-05, 2.6583999999999636e-05, 2.668100000000062e-05, 2.6596999999999732e-05, 2.6555000000001022e-05, 2.6582999999996693e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:36.544" endtime="20201115 22:02:36.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.562" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:36.561" endtime="20201115 22:02:36.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.565" level="INFO">VALUE: [2.6596999999999732e-05, 2.6583000000000162e-05, 2.6596999999999732e-05, 2.6583999999999636e-05, 2.668100000000062e-05, 2.6596999999999732e-05, 2.6555000000001022e-05, 2.6582999999996693e-05, 2.6652999999994542e-05, 2.65970000000032e-05, 2.6596999999996263e-05, 2.6596999999996263e-05, 2.6569999999996596e-05, 2.6610999999995832e-05, 2.6527999999997887e-05, 2.6541999999997457e-05, 2.65970000000032e-05, 2.665300000000148e-05, 2.656900000000406e-05, 2.6582999999996693e-05, 2.6527999999997887e-05, 2.656900000000406e-05, 2.6514000000005256e-05, 2.661100000000277e-05, 2.6582999999996693e-05, 2.662500000000234e-05, 2.661100000000277e-05, 2.6554999999997553e-05, 2.6570000000003535e-05, 2.6542000000004395e-05, 2.6570000000003535e-05, 2.662500000000234e-05, 2.6582999999996693e-05, 2.6512999999998843e-05, 2.668100000000062e-05, 2.6527999999997887e-05, 2.6582999999996693e-05, 2.6610999999995832e-05, 2.6583999999996166e-05, 2.6513999999998317e-05, 2.6513000000005782e-05, 2.6624999999995402e-05, 2.6514000000005256e-05, 2.6555999999997026e-05, 2.663900000000191e-05, 2.656900000000406e-05, 2.6568999999997123e-05, 2.656900000000406e-05, 2.6610999999995832e-05, 2.6597999999995736e-05]</msg>
<status status="PASS" starttime="20201115 22:02:36.563" endtime="20201115 22:02:36.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.559" endtime="20201115 22:02:36.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.568" endtime="20201115 22:02:36.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.571" endtime="20201115 22:02:36.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.570" endtime="20201115 22:02:36.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.566" endtime="20201115 22:02:36.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.175" endtime="20201115 22:02:36.593"></status>
</kw>
<msg timestamp="20201115 22:02:36.593" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.602" endtime="20201115 22:02:36.637"></status>
</kw>
<msg timestamp="20201115 22:02:36.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.600" endtime="20201115 22:02:36.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.638" endtime="20201115 22:02:36.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.641" endtime="20201115 22:02:36.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.598" endtime="20201115 22:02:36.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.595" endtime="20201115 22:02:36.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.650" endtime="20201115 22:02:36.947"></status>
</kw>
<msg timestamp="20201115 22:02:36.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:36.649" endtime="20201115 22:02:36.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:36.956" endtime="20201115 22:02:36.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.974" endtime="20201115 22:02:36.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.646" endtime="20201115 22:02:36.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.645" endtime="20201115 22:02:36.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.981" level="INFO">${RESULT} = [{'time': 0.0222845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6583000000000162e-05, 'source_diff': 2.6583000000000162e-05}, {'time': 0.022755778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:36.978" endtime="20201115 22:02:36.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.995" level="INFO">${OVERHEAD} = {'diff': [2.6583000000000162e-05, 2.6528000000001356e-05, 2.665300000000148e-05, 2.6528000000001356e-05, 2.6569000000000592e-05, 2.6485999999999177e-05, 2.6596999999999732e-05, 2.6583000000000162e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:36.982" endtime="20201115 22:02:36.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.999" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:36.998" endtime="20201115 22:02:37.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.002" level="INFO">VALUE: [2.6583000000000162e-05, 2.6528000000001356e-05, 2.665300000000148e-05, 2.6528000000001356e-05, 2.6569000000000592e-05, 2.6485999999999177e-05, 2.6596999999999732e-05, 2.6583000000000162e-05, 2.6528000000001356e-05, 2.6555000000001022e-05, 2.6569000000000592e-05, 2.6624999999998872e-05, 2.6555000000001022e-05, 2.6583000000000162e-05, 2.6584000000003105e-05, 2.6526999999998413e-05, 2.6555999999997026e-05, 2.6556000000000496e-05, 2.6596999999999732e-05, 2.655500000000449e-05, 2.658300000000363e-05, 2.6555999999997026e-05, 2.6542000000004395e-05, 2.658300000000363e-05, 2.6554999999997553e-05, 2.661100000000277e-05, 2.6542000000004395e-05, 2.6624999999995402e-05, 2.65970000000032e-05, 2.662500000000234e-05, 2.6569999999996596e-05, 2.6527999999997887e-05, 2.655500000000449e-05, 2.6555999999997026e-05, 2.6596999999996263e-05, 2.6582999999996693e-05, 2.6555999999997026e-05, 2.65970000000032e-05, 2.656900000000406e-05, 2.6528000000004825e-05, 2.6527999999997887e-05, 2.6652999999994542e-05, 2.6568999999997123e-05, 2.6540999999997983e-05, 2.6610999999995832e-05, 2.6541999999997457e-05, 2.6583999999996166e-05, 2.6582999999996693e-05, 2.663900000000191e-05, 2.656900000000406e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.000" endtime="20201115 22:02:37.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.996" endtime="20201115 22:02:37.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.005" endtime="20201115 22:02:37.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.009" endtime="20201115 22:02:37.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.007" endtime="20201115 22:02:37.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.004" endtime="20201115 22:02:37.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.593" endtime="20201115 22:02:37.030"></status>
</kw>
<msg timestamp="20201115 22:02:37.030" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.039" endtime="20201115 22:02:37.073"></status>
</kw>
<msg timestamp="20201115 22:02:37.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.037" endtime="20201115 22:02:37.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.076" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.075" endtime="20201115 22:02:37.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.077" endtime="20201115 22:02:37.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.034" endtime="20201115 22:02:37.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.032" endtime="20201115 22:02:37.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.088" endtime="20201115 22:02:37.374"></status>
</kw>
<msg timestamp="20201115 22:02:37.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022024944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.086" endtime="20201115 22:02:37.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022024944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.379" endtime="20201115 22:02:37.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.387" endtime="20201115 22:02:37.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.083" endtime="20201115 22:02:37.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.081" endtime="20201115 22:02:37.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.393" level="INFO">${RESULT} = [{'time': 0.022051542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6597999999999206e-05, 'source_diff': 2.6597999999999206e-05}, {'time': 0.022528653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:37.390" endtime="20201115 22:02:37.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.407" level="INFO">${OVERHEAD} = {'diff': [2.6597999999999206e-05, 2.6583999999999636e-05, 2.6540999999997983e-05, 2.6610999999999302e-05, 2.6556000000000496e-05, 2.6555000000001022e-05, 2.6569000000000592e-05, 2.6596999999999732e-05...</msg>
<status status="PASS" starttime="20201115 22:02:37.394" endtime="20201115 22:02:37.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.411" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:37.410" endtime="20201115 22:02:37.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.414" level="INFO">VALUE: [2.6597999999999206e-05, 2.6583999999999636e-05, 2.6540999999997983e-05, 2.6610999999999302e-05, 2.6556000000000496e-05, 2.6555000000001022e-05, 2.6569000000000592e-05, 2.6596999999999732e-05, 2.6596999999999732e-05, 2.6570000000000066e-05, 2.6555000000001022e-05, 2.6582999999996693e-05, 2.6569000000000592e-05, 2.6556000000000496e-05, 2.6583000000000162e-05, 2.6542000000000926e-05, 2.6485999999999177e-05, 2.6541000000001452e-05, 2.6541999999997457e-05, 2.6596999999999732e-05, 2.6610999999995832e-05, 2.6568999999997123e-05, 2.6528000000004825e-05, 2.6570000000003535e-05, 2.6570000000003535e-05, 2.6555999999997026e-05, 2.65970000000032e-05, 2.6568999999997123e-05, 2.6610999999995832e-05, 2.6527999999997887e-05, 2.662500000000234e-05, 2.6556000000003965e-05, 2.6569999999996596e-05, 2.6584000000003105e-05, 2.6554999999997553e-05, 2.6527999999997887e-05, 2.6555999999997026e-05, 2.6612000000002245e-05, 2.6582999999996693e-05, 2.6598000000002675e-05, 2.658300000000363e-05, 2.6554999999997553e-05, 2.6541999999997457e-05, 2.6526999999998413e-05, 2.65970000000032e-05, 2.6526999999998413e-05, 2.658300000000363e-05, 2.65970000000032e-05, 2.6528000000004825e-05, 2.6582999999996693e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.412" endtime="20201115 22:02:37.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.408" endtime="20201115 22:02:37.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.418" endtime="20201115 22:02:37.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.421" endtime="20201115 22:02:37.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.419" endtime="20201115 22:02:37.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.416" endtime="20201115 22:02:37.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.030" endtime="20201115 22:02:37.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.347" endtime="20201115 22:02:37.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.346" endtime="20201115 22:02:37.442"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.444" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.453" endtime="20201115 22:02:37.491"></status>
</kw>
<msg timestamp="20201115 22:02:37.491" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.451" endtime="20201115 22:02:37.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.494" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.492" endtime="20201115 22:02:37.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.495" endtime="20201115 22:02:37.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.449" endtime="20201115 22:02:37.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.447" endtime="20201115 22:02:37.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.504" endtime="20201115 22:02:37.790"></status>
</kw>
<msg timestamp="20201115 22:02:37.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026933028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026960514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.502" endtime="20201115 22:02:37.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026933028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026960514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.794" endtime="20201115 22:02:37.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.802" endtime="20201115 22:02:37.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.500" endtime="20201115 22:02:37.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.498" endtime="20201115 22:02:37.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.809" level="INFO">${RESULT} = [{'time': 0.026960514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7486000000000177e-05, 'source_diff': 2.7486000000000177e-05}, {'time': 0.027464556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:37.805" endtime="20201115 22:02:37.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.822" level="INFO">${OVERHEAD} = {'diff': [2.7486000000000177e-05, 2.738900000000266e-05, 2.7444000000001467e-05, 2.7401999999999288e-05, 2.74170000000018e-05, 2.738900000000266e-05, 2.748699999999965e-05, 2.7444000000001467e-05, 2.7...</msg>
<status status="PASS" starttime="20201115 22:02:37.810" endtime="20201115 22:02:37.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.826" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:37.826" endtime="20201115 22:02:37.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.829" level="INFO">VALUE: [2.7486000000000177e-05, 2.738900000000266e-05, 2.7444000000001467e-05, 2.7401999999999288e-05, 2.74170000000018e-05, 2.738900000000266e-05, 2.748699999999965e-05, 2.7444000000001467e-05, 2.74170000000018e-05, 2.7416000000002327e-05, 2.7416000000002327e-05, 2.7416999999994862e-05, 2.74170000000018e-05, 2.74170000000018e-05, 2.7472000000000607e-05, 2.745900000000051e-05, 2.7458000000001037e-05, 2.744399999999453e-05, 2.7402999999995292e-05, 2.740199999999582e-05, 2.7416999999994862e-05, 2.740300000000223e-05, 2.7416999999994862e-05, 2.740300000000223e-05, 2.744500000000094e-05, 2.744500000000094e-05, 2.744500000000094e-05, 2.74170000000018e-05, 2.7444000000001467e-05, 2.7458000000001037e-05, 2.7458000000001037e-05, 2.7416000000002327e-05, 2.7402000000002757e-05, 2.7402000000002757e-05, 2.7472000000000607e-05, 2.740199999999582e-05, 2.744500000000094e-05, 2.744500000000094e-05, 2.7360999999996582e-05, 2.7430000000001897e-05, 2.74170000000018e-05, 2.743100000000137e-05, 2.7430000000001897e-05, 2.742999999999496e-05, 2.7458000000001037e-05, 2.747300000000008e-05, 2.7430000000001897e-05, 2.74170000000018e-05, 2.738900000000266e-05, 2.744500000000094e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.828" endtime="20201115 22:02:37.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.823" endtime="20201115 22:02:37.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.833" endtime="20201115 22:02:37.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.836" endtime="20201115 22:02:37.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.835" endtime="20201115 22:02:37.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.831" endtime="20201115 22:02:37.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.445" endtime="20201115 22:02:37.857"></status>
</kw>
<msg timestamp="20201115 22:02:37.857" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.866" endtime="20201115 22:02:37.902"></status>
</kw>
<msg timestamp="20201115 22:02:37.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.864" endtime="20201115 22:02:37.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.905" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.904" endtime="20201115 22:02:37.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.906" endtime="20201115 22:02:37.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.862" endtime="20201115 22:02:37.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.860" endtime="20201115 22:02:37.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.916" endtime="20201115 22:02:38.202"></status>
</kw>
<msg timestamp="20201115 22:02:38.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:37.915" endtime="20201115 22:02:38.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023731083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:38.206" endtime="20201115 22:02:38.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.215" endtime="20201115 22:02:38.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.912" endtime="20201115 22:02:38.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.910" endtime="20201115 22:02:38.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.223" level="INFO">${RESULT} = [{'time': 0.0237585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.741699999999833e-05, 'source_diff': 2.741699999999833e-05}, {'time': 0.024261028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:38.219" endtime="20201115 22:02:38.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.238" level="INFO">${OVERHEAD} = {'diff': [2.741699999999833e-05, 2.745900000000051e-05, 2.7443999999997998e-05, 2.7361000000000052e-05, 2.7430000000001897e-05, 2.7374999999999622e-05, 2.744500000000094e-05, 2.7458000000001037e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:02:38.224" endtime="20201115 22:02:38.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.243" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:38.242" endtime="20201115 22:02:38.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.245" level="INFO">VALUE: [2.741699999999833e-05, 2.745900000000051e-05, 2.7443999999997998e-05, 2.7361000000000052e-05, 2.7430000000001897e-05, 2.7374999999999622e-05, 2.744500000000094e-05, 2.7458000000001037e-05, 2.7486000000000177e-05, 2.74309999999979e-05, 2.7444000000001467e-05, 2.740300000000223e-05, 2.744500000000094e-05, 2.744499999999747e-05, 2.740300000000223e-05, 2.7499999999999747e-05, 2.7416999999994862e-05, 2.7513999999999317e-05, 2.7499999999999747e-05, 2.7360999999996582e-05, 2.7485999999993238e-05, 2.738900000000266e-05, 2.740300000000223e-05, 2.744500000000094e-05, 2.7388999999995722e-05, 2.7402999999995292e-05, 2.74170000000018e-05, 2.7416000000002327e-05, 2.7458000000001037e-05, 2.740300000000223e-05, 2.7346999999997013e-05, 2.7416999999994862e-05, 2.7402999999995292e-05, 2.737500000000309e-05, 2.745900000000051e-05, 2.7444000000001467e-05, 2.7444000000001467e-05, 2.7458000000001037e-05, 2.74170000000018e-05, 2.740199999999582e-05, 2.74170000000018e-05, 2.743100000000137e-05, 2.7458000000001037e-05, 2.744399999999453e-05, 2.7458000000001037e-05, 2.7374999999996152e-05, 2.744500000000094e-05, 2.743100000000137e-05, 2.7472000000000607e-05, 2.738900000000266e-05]</msg>
<status status="PASS" starttime="20201115 22:02:38.244" endtime="20201115 22:02:38.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.239" endtime="20201115 22:02:38.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.249" endtime="20201115 22:02:38.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.252" endtime="20201115 22:02:38.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.251" endtime="20201115 22:02:38.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.247" endtime="20201115 22:02:38.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.858" endtime="20201115 22:02:38.273"></status>
</kw>
<msg timestamp="20201115 22:02:38.273" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.283" endtime="20201115 22:02:38.320"></status>
</kw>
<msg timestamp="20201115 22:02:38.321" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.281" endtime="20201115 22:02:38.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.322" endtime="20201115 22:02:38.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.324" endtime="20201115 22:02:38.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.278" endtime="20201115 22:02:38.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.276" endtime="20201115 22:02:38.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.335" endtime="20201115 22:02:38.644"></status>
</kw>
<msg timestamp="20201115 22:02:38.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024411264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024438722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.333" endtime="20201115 22:02:38.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024411264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024438722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.648" endtime="20201115 22:02:38.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.656" endtime="20201115 22:02:38.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.331" endtime="20201115 22:02:38.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.329" endtime="20201115 22:02:38.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.663" level="INFO">${RESULT} = [{'time': 0.024438722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7458000000001037e-05, 'source_diff': 2.7458000000001037e-05}, {'time': 0.024940347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:38.660" endtime="20201115 22:02:38.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.678" level="INFO">${OVERHEAD} = {'diff': [2.7458000000001037e-05, 2.740300000000223e-05, 2.7429999999998428e-05, 2.7388999999999192e-05, 2.740300000000223e-05, 2.745899999999704e-05, 2.7361000000000052e-05, 2.7429999999998428e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:02:38.665" endtime="20201115 22:02:38.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.683" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:38.682" endtime="20201115 22:02:38.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.685" level="INFO">VALUE: [2.7458000000001037e-05, 2.740300000000223e-05, 2.7429999999998428e-05, 2.7388999999999192e-05, 2.740300000000223e-05, 2.745899999999704e-05, 2.7361000000000052e-05, 2.7429999999998428e-05, 2.7388999999999192e-05, 2.7443999999997998e-05, 2.741699999999833e-05, 2.740299999999876e-05, 2.7416000000002327e-05, 2.745899999999704e-05, 2.734700000000395e-05, 2.744399999999453e-05, 2.7444000000001467e-05, 2.744500000000094e-05, 2.747300000000008e-05, 2.7402999999995292e-05, 2.738799999999625e-05, 2.7472000000000607e-05, 2.745900000000051e-05, 2.7416999999994862e-05, 2.74170000000018e-05, 2.744500000000094e-05, 2.738799999999625e-05, 2.744500000000094e-05, 2.7458000000001037e-05, 2.7472000000000607e-05, 2.740300000000223e-05, 2.743100000000137e-05, 2.743100000000137e-05, 2.738900000000266e-05, 2.7402999999995292e-05, 2.7346999999997013e-05, 2.7472000000000607e-05, 2.740300000000223e-05, 2.740300000000223e-05, 2.7458000000001037e-05, 2.741599999999539e-05, 2.7416000000002327e-05, 2.7472000000000607e-05, 2.744500000000094e-05, 2.740300000000223e-05, 2.7374999999996152e-05, 2.745900000000051e-05, 2.7430000000001897e-05, 2.744399999999453e-05, 2.7499999999999747e-05]</msg>
<status status="PASS" starttime="20201115 22:02:38.684" endtime="20201115 22:02:38.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.679" endtime="20201115 22:02:38.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.689" endtime="20201115 22:02:38.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.692" endtime="20201115 22:02:38.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.691" endtime="20201115 22:02:38.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.687" endtime="20201115 22:02:38.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.274" endtime="20201115 22:02:38.713"></status>
</kw>
<msg timestamp="20201115 22:02:38.713" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.723" endtime="20201115 22:02:38.757"></status>
</kw>
<msg timestamp="20201115 22:02:38.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.721" endtime="20201115 22:02:38.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.760" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.759" endtime="20201115 22:02:38.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.761" endtime="20201115 22:02:38.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.718" endtime="20201115 22:02:38.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.716" endtime="20201115 22:02:38.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.772" endtime="20201115 22:02:39.059"></status>
</kw>
<msg timestamp="20201115 22:02:39.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.771" endtime="20201115 22:02:39.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.063" endtime="20201115 22:02:39.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.072" endtime="20201115 22:02:39.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.768" endtime="20201115 22:02:39.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.766" endtime="20201115 22:02:39.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.079" level="INFO">${RESULT} = [{'time': 0.021635958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7388999999999192e-05, 'source_diff': 2.7388999999999192e-05}, {'time': 0.022134917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:39.075" endtime="20201115 22:02:39.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.093" level="INFO">${OVERHEAD} = {'diff': [2.7388999999999192e-05, 2.744500000000094e-05, 2.7415999999998858e-05, 2.7429999999998428e-05, 2.745899999999704e-05, 2.7388999999999192e-05, 2.7458000000001037e-05, 2.7388999999999192e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:39.080" endtime="20201115 22:02:39.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.098" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:39.096" endtime="20201115 22:02:39.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.100" level="INFO">VALUE: [2.7388999999999192e-05, 2.744500000000094e-05, 2.7415999999998858e-05, 2.7429999999998428e-05, 2.745899999999704e-05, 2.7388999999999192e-05, 2.7458000000001037e-05, 2.7388999999999192e-05, 2.745900000000051e-05, 2.7443999999997998e-05, 2.74170000000018e-05, 2.7388999999999192e-05, 2.740300000000223e-05, 2.7457999999997568e-05, 2.744500000000094e-05, 2.7443999999997998e-05, 2.7361000000000052e-05, 2.744500000000094e-05, 2.744500000000094e-05, 2.74170000000018e-05, 2.7458000000001037e-05, 2.7458000000001037e-05, 2.74170000000018e-05, 2.7416000000002327e-05, 2.747300000000008e-05, 2.7444000000001467e-05, 2.7430000000001897e-05, 2.743100000000137e-05, 2.744500000000094e-05, 2.7332999999997443e-05, 2.747300000000008e-05, 2.7388999999995722e-05, 2.740199999999582e-05, 2.738900000000266e-05, 2.740300000000223e-05, 2.7402999999995292e-05, 2.7402999999995292e-05, 2.7444000000001467e-05, 2.7388999999995722e-05, 2.7388999999995722e-05, 2.743100000000137e-05, 2.740300000000223e-05, 2.7458000000001037e-05, 2.7458000000001037e-05, 2.7430999999994432e-05, 2.7430999999994432e-05, 2.7472000000000607e-05, 2.7374999999996152e-05, 2.7471999999993668e-05, 2.740300000000223e-05]</msg>
<status status="PASS" starttime="20201115 22:02:39.099" endtime="20201115 22:02:39.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.094" endtime="20201115 22:02:39.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.103" endtime="20201115 22:02:39.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.107" endtime="20201115 22:02:39.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.105" endtime="20201115 22:02:39.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.102" endtime="20201115 22:02:39.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.714" endtime="20201115 22:02:39.128"></status>
</kw>
<msg timestamp="20201115 22:02:39.128" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.138" endtime="20201115 22:02:39.173"></status>
</kw>
<msg timestamp="20201115 22:02:39.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.136" endtime="20201115 22:02:39.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.175" endtime="20201115 22:02:39.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.177" endtime="20201115 22:02:39.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.133" endtime="20201115 22:02:39.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.131" endtime="20201115 22:02:39.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.188" endtime="20201115 22:02:39.474"></status>
</kw>
<msg timestamp="20201115 22:02:39.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02374725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:39.186" endtime="20201115 22:02:39.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023719861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02374725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:39.479" endtime="20201115 22:02:39.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.487" endtime="20201115 22:02:39.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.184" endtime="20201115 22:02:39.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.182" endtime="20201115 22:02:39.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.494" level="INFO">${RESULT} = [{'time': 0.02374725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.738900000000266e-05, 'source_diff': 2.738900000000266e-05}, {'time': 0.024249958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:39.491" endtime="20201115 22:02:39.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.508" level="INFO">${OVERHEAD} = {'diff': [2.738900000000266e-05, 2.7388999999999192e-05, 2.74170000000018e-05, 2.7429999999998428e-05, 2.740300000000223e-05, 2.744500000000094e-05, 2.740300000000223e-05, 2.7444000000001467e-05, 2.74...</msg>
<status status="PASS" starttime="20201115 22:02:39.495" endtime="20201115 22:02:39.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.513" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:39.512" endtime="20201115 22:02:39.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.515" level="INFO">VALUE: [2.738900000000266e-05, 2.7388999999999192e-05, 2.74170000000018e-05, 2.7429999999998428e-05, 2.740300000000223e-05, 2.744500000000094e-05, 2.740300000000223e-05, 2.7444000000001467e-05, 2.747300000000008e-05, 2.744499999999747e-05, 2.747300000000008e-05, 2.740299999999876e-05, 2.7499999999999747e-05, 2.744499999999747e-05, 2.74309999999979e-05, 2.7388999999999192e-05, 2.7402000000002757e-05, 2.7444000000001467e-05, 2.7444000000001467e-05, 2.7444000000001467e-05, 2.740300000000223e-05, 2.74170000000018e-05, 2.743100000000137e-05, 2.74170000000018e-05, 2.7458000000001037e-05, 2.745900000000051e-05, 2.740199999999582e-05, 2.7458000000001037e-05, 2.7416000000002327e-05, 2.7402000000002757e-05, 2.74170000000018e-05, 2.745900000000051e-05, 2.745900000000051e-05, 2.736100000000352e-05, 2.74170000000018e-05, 2.7388999999995722e-05, 2.744500000000094e-05, 2.738900000000266e-05, 2.745900000000051e-05, 2.7458000000001037e-05, 2.7444000000001467e-05, 2.7472000000000607e-05, 2.7402000000002757e-05, 2.7444000000001467e-05, 2.7458000000001037e-05, 2.7430000000001897e-05, 2.741599999999539e-05, 2.740300000000223e-05, 2.744500000000094e-05, 2.7486000000000177e-05]</msg>
<status status="PASS" starttime="20201115 22:02:39.514" endtime="20201115 22:02:39.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.509" endtime="20201115 22:02:39.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.519" endtime="20201115 22:02:39.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.523" endtime="20201115 22:02:39.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.521" endtime="20201115 22:02:39.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.517" endtime="20201115 22:02:39.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.129" endtime="20201115 22:02:39.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.443" endtime="20201115 22:02:39.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.442" endtime="20201115 22:02:39.544"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.546" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.555" endtime="20201115 22:02:39.596"></status>
</kw>
<msg timestamp="20201115 22:02:39.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.554" endtime="20201115 22:02:39.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.599" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.597" endtime="20201115 22:02:39.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.600" endtime="20201115 22:02:39.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.551" endtime="20201115 22:02:39.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.549" endtime="20201115 22:02:39.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.610" endtime="20201115 22:02:39.896"></status>
</kw>
<msg timestamp="20201115 22:02:39.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02528675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025315014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:39.608" endtime="20201115 22:02:39.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02528675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025315014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:39.901" endtime="20201115 22:02:39.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.909" endtime="20201115 22:02:39.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.606" endtime="20201115 22:02:39.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.604" endtime="20201115 22:02:39.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.916" level="INFO">${RESULT} = [{'time': 0.025315014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8264000000000067e-05, 'source_diff': 2.8264000000000067e-05}, {'time': 0.025845597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:39.912" endtime="20201115 22:02:39.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.931" level="INFO">${OVERHEAD} = {'diff': [2.8264000000000067e-05, 2.8305000000002772e-05, 2.8306000000002246e-05, 2.8250000000000497e-05, 2.8277999999999637e-05, 2.8319000000002342e-05, 2.8291999999999207e-05, 2.8262999999997124e-05...</msg>
<status status="PASS" starttime="20201115 22:02:39.917" endtime="20201115 22:02:39.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.936" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:39.935" endtime="20201115 22:02:39.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.939" level="INFO">VALUE: [2.8264000000000067e-05, 2.8305000000002772e-05, 2.8306000000002246e-05, 2.8250000000000497e-05, 2.8277999999999637e-05, 2.8319000000002342e-05, 2.8291999999999207e-05, 2.8262999999997124e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8221999999997888e-05, 2.8374999999997152e-05, 2.8221999999994418e-05, 2.8320000000005285e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8291999999999207e-05, 2.8264000000000067e-05, 2.8292000000006146e-05, 2.8277999999999637e-05, 2.8334000000004855e-05, 2.8236000000000927e-05, 2.8290999999999733e-05, 2.8291999999999207e-05, 2.8319999999998346e-05, 2.8304999999999303e-05, 2.8236000000000927e-05, 2.82370000000004e-05, 2.8334000000004855e-05, 2.8250000000000497e-05, 2.8264000000000067e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.8333999999997916e-05, 2.8304999999999303e-05, 2.8291999999999207e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8236000000000927e-05, 2.8305999999998777e-05, 2.8332999999998443e-05, 2.8291999999999207e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8207999999994848e-05, 2.8277999999999637e-05, 2.8236000000000927e-05, 2.8264000000000067e-05]</msg>
<status status="PASS" starttime="20201115 22:02:39.937" endtime="20201115 22:02:39.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.932" endtime="20201115 22:02:39.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.942" endtime="20201115 22:02:39.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.946" endtime="20201115 22:02:39.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.944" endtime="20201115 22:02:39.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.940" endtime="20201115 22:02:39.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.547" endtime="20201115 22:02:39.966"></status>
</kw>
<msg timestamp="20201115 22:02:39.967" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.976" endtime="20201115 22:02:40.017"></status>
</kw>
<msg timestamp="20201115 22:02:40.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.975" endtime="20201115 22:02:40.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.019" endtime="20201115 22:02:40.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.022" endtime="20201115 22:02:40.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.972" endtime="20201115 22:02:40.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.970" endtime="20201115 22:02:40.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.033" endtime="20201115 22:02:40.320"></status>
</kw>
<msg timestamp="20201115 22:02:40.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024149514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024177764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.031" endtime="20201115 22:02:40.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024149514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024177764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.324" endtime="20201115 22:02:40.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.333" endtime="20201115 22:02:40.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.028" endtime="20201115 22:02:40.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.027" endtime="20201115 22:02:40.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.340" level="INFO">${RESULT} = [{'time': 0.024177764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8250000000000497e-05, 'source_diff': 2.8250000000000497e-05}, {'time': 0.024706111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:40.336" endtime="20201115 22:02:40.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.354" level="INFO">${OVERHEAD} = {'diff': [2.8250000000000497e-05, 2.8304999999999303e-05, 2.8305999999998777e-05, 2.8305000000002772e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8235999999997458e-05...</msg>
<status status="PASS" starttime="20201115 22:02:40.341" endtime="20201115 22:02:40.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.359" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:40.358" endtime="20201115 22:02:40.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.361" level="INFO">VALUE: [2.8250000000000497e-05, 2.8304999999999303e-05, 2.8305999999998777e-05, 2.8305000000002772e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8235999999997458e-05, 2.8250000000000497e-05, 2.8361000000001052e-05, 2.822299999999736e-05, 2.820900000000126e-05, 2.8278000000003106e-05, 2.8333000000001912e-05, 2.8249999999993558e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8320000000005285e-05, 2.8264000000000067e-05, 2.82370000000004e-05, 2.8263000000000593e-05, 2.8304999999999303e-05, 2.8374999999997152e-05, 2.8290999999999733e-05, 2.8277999999999637e-05, 2.8264000000000067e-05, 2.8361999999997056e-05, 2.8264000000000067e-05, 2.8290999999999733e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8236000000000927e-05, 2.8277999999999637e-05, 2.8250000000000497e-05, 2.8277999999999637e-05, 2.8277999999999637e-05, 2.8221999999994418e-05, 2.8374999999997152e-05, 2.8305999999998777e-05, 2.8222000000001357e-05, 2.8346999999998013e-05, 2.8360999999997583e-05, 2.8277000000000163e-05, 2.8264000000000067e-05, 2.8360999999997583e-05, 2.8264000000000067e-05, 2.8319999999998346e-05, 2.8318999999998873e-05, 2.8222000000001357e-05, 2.8304999999999303e-05]</msg>
<status status="PASS" starttime="20201115 22:02:40.360" endtime="20201115 22:02:40.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.355" endtime="20201115 22:02:40.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.364" endtime="20201115 22:02:40.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.368" endtime="20201115 22:02:40.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.366" endtime="20201115 22:02:40.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.363" endtime="20201115 22:02:40.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.967" endtime="20201115 22:02:40.389"></status>
</kw>
<msg timestamp="20201115 22:02:40.389" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.399" endtime="20201115 22:02:40.439"></status>
</kw>
<msg timestamp="20201115 22:02:40.440" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.397" endtime="20201115 22:02:40.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.441" endtime="20201115 22:02:40.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.443" endtime="20201115 22:02:40.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.394" endtime="20201115 22:02:40.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.392" endtime="20201115 22:02:40.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.454" endtime="20201115 22:02:40.740"></status>
</kw>
<msg timestamp="20201115 22:02:40.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023677611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023705931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.452" endtime="20201115 22:02:40.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023677611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023705931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.745" endtime="20201115 22:02:40.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.753" endtime="20201115 22:02:40.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.449" endtime="20201115 22:02:40.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.448" endtime="20201115 22:02:40.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.760" level="INFO">${RESULT} = [{'time': 0.023705931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8319999999998346e-05, 'source_diff': 2.8319999999998346e-05}, {'time': 0.024232431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:40.756" endtime="20201115 22:02:40.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.774" level="INFO">${OVERHEAD} = {'diff': [2.8319999999998346e-05, 2.82370000000004e-05, 2.8250000000000497e-05, 2.8207999999998318e-05, 2.8264000000000067e-05, 2.8305999999998777e-05, 2.8249999999997027e-05, 2.8291999999999207e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:40.761" endtime="20201115 22:02:40.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.779" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:40.778" endtime="20201115 22:02:40.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.782" level="INFO">VALUE: [2.8319999999998346e-05, 2.82370000000004e-05, 2.8250000000000497e-05, 2.8207999999998318e-05, 2.8264000000000067e-05, 2.8305999999998777e-05, 2.8249999999997027e-05, 2.8291999999999207e-05, 2.8277999999999637e-05, 2.8264000000000067e-05, 2.8277000000000163e-05, 2.8346999999998013e-05, 2.8236000000000927e-05, 2.8291999999999207e-05, 2.8277999999999637e-05, 2.8305999999998777e-05, 2.8332999999998443e-05, 2.8305999999998777e-05, 2.8222000000001357e-05, 2.8264000000000067e-05, 2.8318999999998873e-05, 2.8250000000000497e-05, 2.8277999999999637e-05, 2.8305999999998777e-05, 2.8277999999999637e-05, 2.8250000000000497e-05, 2.8291999999999207e-05, 2.8318999999998873e-05, 2.8319999999998346e-05, 2.8250000000000497e-05, 2.8277999999999637e-05, 2.8318999999998873e-05, 2.8320000000005285e-05, 2.822300000000083e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.8374999999997152e-05, 2.8320000000005285e-05, 2.8320000000005285e-05, 2.8318999999998873e-05, 2.8318999999998873e-05, 2.8277999999999637e-05, 2.8346999999998013e-05, 2.8291999999999207e-05, 2.8264000000000067e-05, 2.8236000000000927e-05, 2.8264000000000067e-05, 2.8304999999999303e-05, 2.8306000000005715e-05, 2.8291999999999207e-05]</msg>
<status status="PASS" starttime="20201115 22:02:40.780" endtime="20201115 22:02:40.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.775" endtime="20201115 22:02:40.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.785" endtime="20201115 22:02:40.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.788" endtime="20201115 22:02:40.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.787" endtime="20201115 22:02:40.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.783" endtime="20201115 22:02:40.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.390" endtime="20201115 22:02:40.809"></status>
</kw>
<msg timestamp="20201115 22:02:40.810" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.820" endtime="20201115 22:02:40.862"></status>
</kw>
<msg timestamp="20201115 22:02:40.862" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.818" endtime="20201115 22:02:40.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.865" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.863" endtime="20201115 22:02:40.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.866" endtime="20201115 22:02:40.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.815" endtime="20201115 22:02:40.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.813" endtime="20201115 22:02:40.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.877" endtime="20201115 22:02:41.163"></status>
</kw>
<msg timestamp="20201115 22:02:41.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025493583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025521889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.875" endtime="20201115 22:02:41.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025493583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025521889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.167" endtime="20201115 22:02:41.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.176" endtime="20201115 22:02:41.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.872" endtime="20201115 22:02:41.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.870" endtime="20201115 22:02:41.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.183" level="INFO">${RESULT} = [{'time': 0.025521889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8305999999998777e-05, 'source_diff': 2.8305999999998777e-05}, {'time': 0.026049764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:41.180" endtime="20201115 22:02:41.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.197" level="INFO">${OVERHEAD} = {'diff': [2.8305999999998777e-05, 2.8319999999998346e-05, 2.8264000000000067e-05, 2.8306000000002246e-05, 2.8235999999997458e-05, 2.8277999999999637e-05, 2.8319000000002342e-05, 2.8221999999997888e-05...</msg>
<status status="PASS" starttime="20201115 22:02:41.184" endtime="20201115 22:02:41.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.202" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:41.201" endtime="20201115 22:02:41.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.204" level="INFO">VALUE: [2.8305999999998777e-05, 2.8319999999998346e-05, 2.8264000000000067e-05, 2.8306000000002246e-05, 2.8235999999997458e-05, 2.8277999999999637e-05, 2.8319000000002342e-05, 2.8221999999997888e-05, 2.8278000000003106e-05, 2.8263000000000593e-05, 2.8264000000000067e-05, 2.8291999999999207e-05, 2.8264000000000067e-05, 2.8290999999999733e-05, 2.8250000000000497e-05, 2.8264000000000067e-05, 2.8320000000005285e-05, 2.8306000000005715e-05, 2.8264000000000067e-05, 2.8236000000000927e-05, 2.834700000000495e-05, 2.8290999999999733e-05, 2.8250000000000497e-05, 2.8222999999993892e-05, 2.8332999999998443e-05, 2.8305999999998777e-05, 2.8291999999999207e-05, 2.8304999999999303e-05, 2.8264000000000067e-05, 2.8222999999993892e-05, 2.8277000000000163e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8292000000006146e-05, 2.8332999999998443e-05, 2.8304999999999303e-05, 2.8304999999999303e-05, 2.8305999999998777e-05, 2.8291999999999207e-05, 2.8291999999999207e-05, 2.8264000000000067e-05, 2.8277000000000163e-05, 2.8250000000000497e-05, 2.8236000000000927e-05, 2.8305999999998777e-05, 2.8208000000001787e-05, 2.8277000000000163e-05, 2.8333999999997916e-05]</msg>
<status status="PASS" starttime="20201115 22:02:41.203" endtime="20201115 22:02:41.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.198" endtime="20201115 22:02:41.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.208" endtime="20201115 22:02:41.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.218" endtime="20201115 22:02:41.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.216" endtime="20201115 22:02:41.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.206" endtime="20201115 22:02:41.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.810" endtime="20201115 22:02:41.239"></status>
</kw>
<msg timestamp="20201115 22:02:41.239" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.248" endtime="20201115 22:02:41.289"></status>
</kw>
<msg timestamp="20201115 22:02:41.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.246" endtime="20201115 22:02:41.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.292" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.290" endtime="20201115 22:02:41.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.293" endtime="20201115 22:02:41.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.244" endtime="20201115 22:02:41.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.242" endtime="20201115 22:02:41.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.303" endtime="20201115 22:02:41.588"></status>
</kw>
<msg timestamp="20201115 22:02:41.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023150917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023179139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.302" endtime="20201115 22:02:41.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023150917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023179139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.593" endtime="20201115 22:02:41.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.601" endtime="20201115 22:02:41.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.299" endtime="20201115 22:02:41.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.297" endtime="20201115 22:02:41.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.608" level="INFO">${RESULT} = [{'time': 0.023179139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8222000000001357e-05, 'source_diff': 2.8222000000001357e-05}, {'time': 0.023706347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:41.604" endtime="20201115 22:02:41.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.623" level="INFO">${OVERHEAD} = {'diff': [2.8222000000001357e-05, 2.8290999999999733e-05, 2.8361000000001052e-05, 2.8249999999997027e-05, 2.8264000000000067e-05, 2.8236000000000927e-05, 2.8264000000000067e-05, 2.8250000000000497e-05...</msg>
<status status="PASS" starttime="20201115 22:02:41.609" endtime="20201115 22:02:41.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.628" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:41.627" endtime="20201115 22:02:41.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.631" level="INFO">VALUE: [2.8222000000001357e-05, 2.8290999999999733e-05, 2.8361000000001052e-05, 2.8249999999997027e-05, 2.8264000000000067e-05, 2.8236000000000927e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8318999999998873e-05, 2.8277999999999637e-05, 2.8236000000000927e-05, 2.8277999999999637e-05, 2.8250000000000497e-05, 2.8291999999999207e-05, 2.8388999999996722e-05, 2.819500000000169e-05, 2.833300000000538e-05, 2.8291999999999207e-05, 2.8250000000000497e-05, 2.817999999999571e-05, 2.8264000000000067e-05, 2.8290999999999733e-05, 2.8291999999999207e-05, 2.819500000000169e-05, 2.8264000000000067e-05, 2.8277000000000163e-05, 2.8222000000001357e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.8304999999999303e-05, 2.8194000000002217e-05, 2.8305999999998777e-05, 2.8250000000000497e-05, 2.8304999999999303e-05, 2.82370000000004e-05, 2.8332999999998443e-05, 2.8250000000000497e-05, 2.8277000000000163e-05, 2.819500000000169e-05, 2.8277000000000163e-05, 2.8318999999998873e-05, 2.8332999999998443e-05, 2.836100000000452e-05, 2.8277999999999637e-05, 2.82370000000004e-05, 2.8305999999998777e-05, 2.8264000000000067e-05]</msg>
<status status="PASS" starttime="20201115 22:02:41.629" endtime="20201115 22:02:41.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.624" endtime="20201115 22:02:41.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.634" endtime="20201115 22:02:41.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.638" endtime="20201115 22:02:41.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.636" endtime="20201115 22:02:41.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.633" endtime="20201115 22:02:41.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.239" endtime="20201115 22:02:41.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.545" endtime="20201115 22:02:41.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.544" endtime="20201115 22:02:41.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.640" endtime="20201115 22:02:41.659"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.666" endtime="20201115 22:02:41.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.664" endtime="20201115 22:02:41.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.662" endtime="20201115 22:02:41.686"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:50.563" endtime="20201115 22:02:41.687" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.695" endtime="20201115 22:02:41.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.693" endtime="20201115 22:02:41.715"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.730" endtime="20201115 22:02:41.746"></status>
</kw>
<msg timestamp="20201115 22:02:41.747" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.728" endtime="20201115 22:02:41.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.749" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.748" endtime="20201115 22:02:41.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.753" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:41.751" endtime="20201115 22:02:41.753"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:41.725" endtime="20201115 22:02:41.754"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:41.723" endtime="20201115 22:02:41.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.720" endtime="20201115 22:02:41.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:41.758" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:41.758" endtime="20201115 22:02:41.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.755" endtime="20201115 22:02:41.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.719" endtime="20201115 22:02:41.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.719" endtime="20201115 22:02:41.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.760" endtime="20201115 22:02:41.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.717" endtime="20201115 22:02:41.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.715" endtime="20201115 22:02:41.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.692" endtime="20201115 22:02:41.763"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.767" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.777" endtime="20201115 22:02:41.791"></status>
</kw>
<msg timestamp="20201115 22:02:41.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.775" endtime="20201115 22:02:41.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.794" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.793" endtime="20201115 22:02:41.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.795" endtime="20201115 22:02:41.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.772" endtime="20201115 22:02:41.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.769" endtime="20201115 22:02:41.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.806" endtime="20201115 22:02:42.092"></status>
</kw>
<msg timestamp="20201115 22:02:42.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073648875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073650819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.804" endtime="20201115 22:02:42.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073648875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073650819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.096" endtime="20201115 22:02:42.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.105" endtime="20201115 22:02:42.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.801" endtime="20201115 22:02:42.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.799" endtime="20201115 22:02:42.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.112" level="INFO">${RESULT} = [{'time': 0.073650819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9440000000037205e-06, 'source_diff': 1.9440000000037205e-06}, {'time': 0.073741472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:42.108" endtime="20201115 22:02:42.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.126" level="INFO">${OVERHEAD} = {'diff': [1.9440000000037205e-06, 2.000000000002e-06, 1.9439999999898427e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 2.000000000002e-06, 1.986000000009369e-06, 1.985999999...</msg>
<status status="PASS" starttime="20201115 22:02:42.113" endtime="20201115 22:02:42.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.131" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:42.130" endtime="20201115 22:02:42.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.133" level="INFO">VALUE: [1.9440000000037205e-06, 2.000000000002e-06, 1.9439999999898427e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 2.000000000002e-06, 1.986000000009369e-06, 1.9859999999954914e-06, 1.986000000009369e-06, 2.041000000008175e-06, 1.9299999999972117e-06, 1.9720000000028604e-06, 2.013999999994631e-06, 1.9999999999881224e-06, 2.000000000002e-06, 2.055000000000806e-06, 2.02800000000114e-06, 2.014000000008509e-06, 2.000000000002e-06, 2.041999999993771e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.0270000000016664e-06, 2.013999999994631e-06, 2.02800000000114e-06, 2.013999999994631e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9439999999898427e-06, 1.986000000009369e-06, 1.9859999999954914e-06, 2.000000000002e-06, 1.9719999999889826e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.000000000002e-06, 2.000000000002e-06, 2.055000000000806e-06, 2.0129999999951576e-06, 2.000000000002e-06, 2.02800000000114e-06, 1.986999999994965e-06, 2.069000000007315e-06, 1.987000000008843e-06, 1.986000000009369e-06, 2.000000000002e-06, 2.000000000002e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.132" endtime="20201115 22:02:42.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.127" endtime="20201115 22:02:42.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.136" endtime="20201115 22:02:42.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.140" endtime="20201115 22:02:42.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.139" endtime="20201115 22:02:42.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.135" endtime="20201115 22:02:42.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.767" endtime="20201115 22:02:42.162"></status>
</kw>
<msg timestamp="20201115 22:02:42.162" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.172" endtime="20201115 22:02:42.188"></status>
</kw>
<msg timestamp="20201115 22:02:42.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.170" endtime="20201115 22:02:42.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.190" endtime="20201115 22:02:42.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.193" endtime="20201115 22:02:42.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.167" endtime="20201115 22:02:42.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.165" endtime="20201115 22:02:42.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.202" endtime="20201115 22:02:42.489"></status>
</kw>
<msg timestamp="20201115 22:02:42.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025018292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025020292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.200" endtime="20201115 22:02:42.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025018292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025020292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.494" endtime="20201115 22:02:42.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.502" endtime="20201115 22:02:42.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.198" endtime="20201115 22:02:42.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.196" endtime="20201115 22:02:42.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.509" level="INFO">${RESULT} = [{'time': 0.025020292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.025106764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:42.506" endtime="20201115 22:02:42.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.523" level="INFO">${OVERHEAD} = {'diff': [1.9999999999985307e-06, 1.9999999999985307e-06, 2.000000000002e-06, 2.000000000002e-06, 1.959000000002764e-06, 1.971999999999391e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.97299999999...</msg>
<status status="PASS" starttime="20201115 22:02:42.510" endtime="20201115 22:02:42.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.528" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:42.527" endtime="20201115 22:02:42.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.531" level="INFO">VALUE: [1.9999999999985307e-06, 1.9999999999985307e-06, 2.000000000002e-06, 2.000000000002e-06, 1.959000000002764e-06, 1.971999999999391e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.9729999999988646e-06, 1.971999999999391e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9589999999992946e-06, 1.985999999998961e-06, 2.0139999999981006e-06, 1.9860000000024303e-06, 2.012999999998627e-06, 1.987000000001904e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 2.0139999999981006e-06, 1.9999999999985307e-06, 2.01400000000157e-06, 1.917000000000585e-06, 1.9999999999985307e-06, 2.000000000002e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 2.05600000000028e-06, 2.000000000002e-06, 1.9860000000024303e-06, 2.01400000000157e-06, 2.0279999999976706e-06, 1.9999999999985307e-06, 1.944000000000251e-06, 1.985999999998961e-06, 2.01400000000157e-06, 1.9999999999985307e-06, 2.000000000002e-06, 2.01400000000157e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9729999999988646e-06, 1.985999999998961e-06, 2.000000000002e-06, 2.0139999999981006e-06, 1.9589999999992946e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.529" endtime="20201115 22:02:42.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.524" endtime="20201115 22:02:42.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.534" endtime="20201115 22:02:42.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.538" endtime="20201115 22:02:42.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.536" endtime="20201115 22:02:42.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.533" endtime="20201115 22:02:42.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.163" endtime="20201115 22:02:42.559"></status>
</kw>
<msg timestamp="20201115 22:02:42.559" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.569" endtime="20201115 22:02:42.585"></status>
</kw>
<msg timestamp="20201115 22:02:42.585" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.567" endtime="20201115 22:02:42.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.588" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.587" endtime="20201115 22:02:42.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.589" endtime="20201115 22:02:42.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.564" endtime="20201115 22:02:42.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.562" endtime="20201115 22:02:42.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.599" endtime="20201115 22:02:42.885"></status>
</kw>
<msg timestamp="20201115 22:02:42.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023795903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023797917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.597" endtime="20201115 22:02:42.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023795903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023797917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.890" endtime="20201115 22:02:42.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.899" endtime="20201115 22:02:42.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.594" endtime="20201115 22:02:42.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.593" endtime="20201115 22:02:42.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.906" level="INFO">${RESULT} = [{'time': 0.023797917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.023882611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:42.902" endtime="20201115 22:02:42.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.920" level="INFO">${OVERHEAD} = {'diff': [2.0139999999981006e-06, 2.000000000002e-06, 2.000000000002e-06, 1.971999999999391e-06, 1.971999999999391e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 2.01400000000157e-06, 1.985999999...</msg>
<status status="PASS" starttime="20201115 22:02:42.907" endtime="20201115 22:02:42.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.924" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:42.923" endtime="20201115 22:02:42.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.927" level="INFO">VALUE: [2.0139999999981006e-06, 2.000000000002e-06, 2.000000000002e-06, 1.971999999999391e-06, 1.971999999999391e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 2.01400000000157e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.000000000002e-06, 2.01400000000157e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 1.971999999999391e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 1.971999999999391e-06, 2.02800000000114e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9860000000024303e-06, 1.971999999999391e-06, 1.9860000000024303e-06, 2.0279999999976706e-06, 1.985999999998961e-06, 2.0410000000012363e-06, 2.0139999999981006e-06, 2.000000000002e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 1.931000000000155e-06, 2.04200000000071e-06, 1.957999999999821e-06, 2.000000000002e-06, 1.971999999999391e-06, 1.944000000000251e-06, 2.01400000000157e-06, 1.985999999998961e-06, 1.9449999999997247e-06, 1.9729999999988646e-06, 1.985999999998961e-06, 1.985999999998961e-06, 1.971999999999391e-06, 2.0130000000020964e-06, 1.9999999999985307e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.926" endtime="20201115 22:02:42.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.921" endtime="20201115 22:02:42.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.931" endtime="20201115 22:02:42.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.934" endtime="20201115 22:02:42.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.933" endtime="20201115 22:02:42.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.929" endtime="20201115 22:02:42.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.560" endtime="20201115 22:02:42.955"></status>
</kw>
<msg timestamp="20201115 22:02:42.955" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.965" endtime="20201115 22:02:42.981"></status>
</kw>
<msg timestamp="20201115 22:02:42.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.963" endtime="20201115 22:02:42.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.983" endtime="20201115 22:02:42.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.986" endtime="20201115 22:02:42.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.960" endtime="20201115 22:02:42.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.958" endtime="20201115 22:02:42.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.995" endtime="20201115 22:02:43.282"></status>
</kw>
<msg timestamp="20201115 22:02:43.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024487208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024489208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.993" endtime="20201115 22:02:43.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024487208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024489208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.287" endtime="20201115 22:02:43.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.295" endtime="20201115 22:02:43.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.991" endtime="20201115 22:02:43.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.989" endtime="20201115 22:02:43.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.302" level="INFO">${RESULT} = [{'time': 0.024489208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.024579569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:43.299" endtime="20201115 22:02:43.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.316" level="INFO">${OVERHEAD} = {'diff': [1.9999999999985307e-06, 2.012999999998627e-06, 1.9449999999997247e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.944000000000251e-06, 1.9589999999992946e-06, 1.9720000000028604e-06, 2.014...</msg>
<status status="PASS" starttime="20201115 22:02:43.303" endtime="20201115 22:02:43.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.321" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:43.320" endtime="20201115 22:02:43.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.323" level="INFO">VALUE: [1.9999999999985307e-06, 2.012999999998627e-06, 1.9449999999997247e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.944000000000251e-06, 1.9589999999992946e-06, 1.9720000000028604e-06, 2.01400000000157e-06, 1.985999999998961e-06, 1.973000000002334e-06, 1.9720000000028604e-06, 2.000000000002e-06, 1.9589999999992946e-06, 2.0139999999981006e-06, 1.9860000000024303e-06, 2.000000000002e-06, 2.000000000002e-06, 2.0689999999969066e-06, 2.0139999999981006e-06, 2.0130000000020964e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 2.0139999999981006e-06, 1.9999999999985307e-06, 1.971999999999391e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.959000000002764e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 2.0139999999981006e-06, 1.987000000001904e-06, 1.9999999999985307e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.944000000000251e-06, 1.9999999999985307e-06, 1.973000000002334e-06, 2.04200000000071e-06, 1.9720000000028604e-06, 2.0139999999981006e-06, 1.985999999998961e-06, 2.000000000002e-06, 2.000000000002e-06, 2.000000000002e-06, 2.0139999999981006e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.322" endtime="20201115 22:02:43.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.317" endtime="20201115 22:02:43.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.327" endtime="20201115 22:02:43.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.331" endtime="20201115 22:02:43.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.329" endtime="20201115 22:02:43.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.325" endtime="20201115 22:02:43.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.956" endtime="20201115 22:02:43.352"></status>
</kw>
<msg timestamp="20201115 22:02:43.352" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.361" endtime="20201115 22:02:43.379"></status>
</kw>
<msg timestamp="20201115 22:02:43.380" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.360" endtime="20201115 22:02:43.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.381" endtime="20201115 22:02:43.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.383" endtime="20201115 22:02:43.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.357" endtime="20201115 22:02:43.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.355" endtime="20201115 22:02:43.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.393" endtime="20201115 22:02:43.680"></status>
</kw>
<msg timestamp="20201115 22:02:43.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024864944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.391" endtime="20201115 22:02:43.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024864944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.684" endtime="20201115 22:02:43.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.693" endtime="20201115 22:02:43.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.388" endtime="20201115 22:02:43.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.387" endtime="20201115 22:02:43.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.700" level="INFO">${RESULT} = [{'time': 0.024864944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.024955569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:43.697" endtime="20201115 22:02:43.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.714" level="INFO">${OVERHEAD} = {'diff': [1.9999999999985307e-06, 2.0270000000016664e-06, 1.985999999998961e-06, 2.000000000002e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.971999999999391e-06, 2.000000000002e-06, 2.05500000000...</msg>
<status status="PASS" starttime="20201115 22:02:43.701" endtime="20201115 22:02:43.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.719" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:43.718" endtime="20201115 22:02:43.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.721" level="INFO">VALUE: [1.9999999999985307e-06, 2.0270000000016664e-06, 1.985999999998961e-06, 2.000000000002e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.971999999999391e-06, 2.000000000002e-06, 2.055000000000806e-06, 2.0139999999981006e-06, 2.0139999999981006e-06, 2.04200000000071e-06, 2.012999999998627e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9869999999984345e-06, 1.971999999999391e-06, 2.000000000002e-06, 2.000000000002e-06, 1.957999999999821e-06, 1.9860000000024303e-06, 2.01400000000157e-06, 1.9999999999985307e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 1.944000000000251e-06, 1.957999999999821e-06, 1.9999999999985307e-06, 1.931000000000155e-06, 2.000000000002e-06, 1.987000000001904e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 2.026999999998197e-06, 1.9860000000024303e-06, 1.9860000000024303e-06, 2.01400000000157e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 2.0139999999981006e-06, 1.9860000000024303e-06, 1.9869999999984345e-06, 2.0139999999981006e-06, 2.01400000000157e-06, 1.985999999998961e-06, 2.000000000002e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.720" endtime="20201115 22:02:43.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.715" endtime="20201115 22:02:43.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.725" endtime="20201115 22:02:43.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.729" endtime="20201115 22:02:43.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.727" endtime="20201115 22:02:43.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.723" endtime="20201115 22:02:43.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.352" endtime="20201115 22:02:43.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.765" endtime="20201115 22:02:43.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.764" endtime="20201115 22:02:43.750"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.752" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.762" endtime="20201115 22:02:43.777"></status>
</kw>
<msg timestamp="20201115 22:02:43.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.760" endtime="20201115 22:02:43.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.778" endtime="20201115 22:02:43.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.781" endtime="20201115 22:02:43.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.757" endtime="20201115 22:02:43.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.755" endtime="20201115 22:02:43.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.791" endtime="20201115 22:02:44.079"></status>
</kw>
<msg timestamp="20201115 22:02:44.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023979375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023981625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.790" endtime="20201115 22:02:44.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023979375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023981625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.083" endtime="20201115 22:02:44.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.092" endtime="20201115 22:02:44.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.787" endtime="20201115 22:02:44.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.785" endtime="20201115 22:02:44.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.099" level="INFO">${RESULT} = [{'time': 0.023981625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2499999999987808e-06, 'source_diff': 2.2499999999987808e-06}, {'time': 0.024081014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:44.095" endtime="20201115 22:02:44.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.113" level="INFO">${OVERHEAD} = {'diff': [2.2499999999987808e-06, 2.167000000000835e-06, 2.221999999999641e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2...</msg>
<status status="PASS" starttime="20201115 22:02:44.100" endtime="20201115 22:02:44.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.118" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.117" endtime="20201115 22:02:44.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.121" level="INFO">VALUE: [2.2499999999987808e-06, 2.167000000000835e-06, 2.221999999999641e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.2360000000026803e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 2.2229999999991146e-06, 2.2499999999987808e-06, 2.25000000000225e-06, 2.221999999999641e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.319000000000626e-06, 2.235999999999211e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.2360000000026803e-06, 2.2630000000023465e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.1939999999970317e-06, 2.235999999999211e-06, 2.2639999999983507e-06, 2.2360000000026803e-06, 2.235999999999211e-06, 2.1939999999970317e-06, 2.221999999999641e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.2089999999995447e-06, 2.2229999999991146e-06, 2.181000000000405e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.2360000000026803e-06, 2.3200000000000998e-06, 2.26400000000182e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.2089999999995447e-06, 2.25000000000225e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.119" endtime="20201115 22:02:44.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.114" endtime="20201115 22:02:44.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.124" endtime="20201115 22:02:44.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.128" endtime="20201115 22:02:44.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.126" endtime="20201115 22:02:44.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.122" endtime="20201115 22:02:44.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.753" endtime="20201115 22:02:44.149"></status>
</kw>
<msg timestamp="20201115 22:02:44.149" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.158" endtime="20201115 22:02:44.172"></status>
</kw>
<msg timestamp="20201115 22:02:44.173" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.156" endtime="20201115 22:02:44.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.174" endtime="20201115 22:02:44.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.176" endtime="20201115 22:02:44.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.154" endtime="20201115 22:02:44.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.152" endtime="20201115 22:02:44.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.186" endtime="20201115 22:02:44.473"></status>
</kw>
<msg timestamp="20201115 22:02:44.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.184" endtime="20201115 22:02:44.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.478" endtime="20201115 22:02:44.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.487" endtime="20201115 22:02:44.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.182" endtime="20201115 22:02:44.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.180" endtime="20201115 22:02:44.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.494" level="INFO">${RESULT} = [{'time': 0.021689917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2499999999987808e-06, 'source_diff': 2.2499999999987808e-06}, {'time': 0.021785042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:44.490" endtime="20201115 22:02:44.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.508" level="INFO">${OVERHEAD} = {'diff': [2.2499999999987808e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.194000000000501e-06, 2.1949999999999747e-06, 2.235999999999211e-06, 2.26400000000182e-06, 2.2499999999987808e-06, 2.2370...</msg>
<status status="PASS" starttime="20201115 22:02:44.495" endtime="20201115 22:02:44.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.513" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.512" endtime="20201115 22:02:44.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.515" level="INFO">VALUE: [2.2499999999987808e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.194000000000501e-06, 2.1949999999999747e-06, 2.235999999999211e-06, 2.26400000000182e-06, 2.2499999999987808e-06, 2.237000000002154e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.2229999999991146e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.25000000000225e-06, 2.2639999999983507e-06, 2.2229999999991146e-06, 2.2360000000026803e-06, 2.235999999999211e-06, 2.208000000000071e-06, 2.235999999999211e-06, 2.180000000000931e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.2499999999987808e-06, 2.194000000000501e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.237000000002154e-06, 2.2499999999987808e-06, 2.1949999999999747e-06, 2.25000000000225e-06, 2.1949999999999747e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.26400000000182e-06, 2.2499999999987808e-06, 2.26400000000182e-06, 2.25000000000225e-06, 2.26400000000182e-06, 2.2639999999983507e-06, 2.2360000000026803e-06, 2.26400000000182e-06, 2.2089999999995447e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.514" endtime="20201115 22:02:44.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.509" endtime="20201115 22:02:44.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.519" endtime="20201115 22:02:44.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.522" endtime="20201115 22:02:44.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.521" endtime="20201115 22:02:44.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.517" endtime="20201115 22:02:44.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.150" endtime="20201115 22:02:44.543"></status>
</kw>
<msg timestamp="20201115 22:02:44.543" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.553" endtime="20201115 22:02:44.570"></status>
</kw>
<msg timestamp="20201115 22:02:44.570" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.551" endtime="20201115 22:02:44.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.573" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.572" endtime="20201115 22:02:44.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.574" endtime="20201115 22:02:44.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.548" endtime="20201115 22:02:44.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.546" endtime="20201115 22:02:44.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.584" endtime="20201115 22:02:44.872"></status>
</kw>
<msg timestamp="20201115 22:02:44.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024211403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024213694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.582" endtime="20201115 22:02:44.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024211403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024213694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.876" endtime="20201115 22:02:44.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.885" endtime="20201115 22:02:44.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.579" endtime="20201115 22:02:44.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.577" endtime="20201115 22:02:44.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.892" level="INFO">${RESULT} = [{'time': 0.024213694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.024307208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:44.889" endtime="20201115 22:02:44.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.906" level="INFO">${OVERHEAD} = {'diff': [2.2910000000014863e-06, 2.221999999999641e-06, 2.2360000000026803e-06, 2.208000000000071e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 2.333000000000196e-06, 2.2639999999983507e-06, 2...</msg>
<status status="PASS" starttime="20201115 22:02:44.893" endtime="20201115 22:02:44.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.911" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.910" endtime="20201115 22:02:44.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.914" level="INFO">VALUE: [2.2910000000014863e-06, 2.221999999999641e-06, 2.2360000000026803e-06, 2.208000000000071e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 2.333000000000196e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.221999999999641e-06, 2.26400000000182e-06, 2.29200000000096e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.26400000000182e-06, 2.1949999999999747e-06, 2.2639999999983507e-06, 2.2360000000026803e-06, 2.180000000000931e-06, 2.262999999998877e-06, 2.2630000000023465e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.2360000000026803e-06, 2.25000000000225e-06, 2.29200000000096e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.208000000000071e-06, 2.25000000000225e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.2089999999995447e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.26400000000182e-06, 2.221999999999641e-06, 2.2639999999983507e-06, 2.235999999999211e-06, 2.2630000000023465e-06, 2.221999999999641e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.912" endtime="20201115 22:02:44.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.907" endtime="20201115 22:02:44.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.917" endtime="20201115 22:02:44.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.921" endtime="20201115 22:02:44.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.919" endtime="20201115 22:02:44.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.915" endtime="20201115 22:02:44.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.544" endtime="20201115 22:02:44.941"></status>
</kw>
<msg timestamp="20201115 22:02:44.942" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.951" endtime="20201115 22:02:44.966"></status>
</kw>
<msg timestamp="20201115 22:02:44.967" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.949" endtime="20201115 22:02:44.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.969" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.968" endtime="20201115 22:02:44.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.971" endtime="20201115 22:02:44.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.946" endtime="20201115 22:02:44.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.944" endtime="20201115 22:02:44.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.981" endtime="20201115 22:02:45.268"></status>
</kw>
<msg timestamp="20201115 22:02:45.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022910097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022912347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.979" endtime="20201115 22:02:45.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022910097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022912347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.273" endtime="20201115 22:02:45.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.282" endtime="20201115 22:02:45.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.976" endtime="20201115 22:02:45.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.974" endtime="20201115 22:02:45.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.289" level="INFO">${RESULT} = [{'time': 0.022912347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2499999999987808e-06, 'source_diff': 2.2499999999987808e-06}, {'time': 0.023007819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:45.285" endtime="20201115 22:02:45.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.303" level="INFO">${OVERHEAD} = {'diff': [2.2499999999987808e-06, 2.290999999998017e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.25...</msg>
<status status="PASS" starttime="20201115 22:02:45.290" endtime="20201115 22:02:45.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.308" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:45.307" endtime="20201115 22:02:45.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.310" level="INFO">VALUE: [2.2499999999987808e-06, 2.290999999998017e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.208000000000071e-06, 2.25000000000225e-06, 2.2499999999987808e-06, 2.221999999999641e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.262999999998877e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.221999999999641e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.221999999999641e-06, 2.1660000000013613e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.29200000000096e-06, 2.25000000000225e-06, 2.208000000000071e-06, 2.2639999999983507e-06, 2.221999999999641e-06, 2.235999999999211e-06, 2.319000000000626e-06, 2.2499999999987808e-06, 2.2360000000026803e-06, 2.235999999999211e-06, 2.221999999999641e-06, 2.25000000000225e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 2.3189999999971567e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.208000000000071e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.309" endtime="20201115 22:02:45.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.304" endtime="20201115 22:02:45.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.314" endtime="20201115 22:02:45.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.317" endtime="20201115 22:02:45.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.316" endtime="20201115 22:02:45.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.312" endtime="20201115 22:02:45.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.942" endtime="20201115 22:02:45.338"></status>
</kw>
<msg timestamp="20201115 22:02:45.338" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.348" endtime="20201115 22:02:45.363"></status>
</kw>
<msg timestamp="20201115 22:02:45.363" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.346" endtime="20201115 22:02:45.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.366" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.364" endtime="20201115 22:02:45.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.367" endtime="20201115 22:02:45.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.343" endtime="20201115 22:02:45.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.341" endtime="20201115 22:02:45.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.377" endtime="20201115 22:02:45.663"></status>
</kw>
<msg timestamp="20201115 22:02:45.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023109403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.375" endtime="20201115 22:02:45.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023109403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.668" endtime="20201115 22:02:45.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.677" endtime="20201115 22:02:45.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.372" endtime="20201115 22:02:45.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.370" endtime="20201115 22:02:45.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.684" level="INFO">${RESULT} = [{'time': 0.023109403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.221999999999641e-06, 'source_diff': 2.221999999999641e-06}, {'time': 0.023208139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:45.680" endtime="20201115 22:02:45.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.698" level="INFO">${OVERHEAD} = {'diff': [2.221999999999641e-06, 2.2499999999987808e-06, 2.3200000000000998e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.2369999999986845e-06, ...</msg>
<status status="PASS" starttime="20201115 22:02:45.685" endtime="20201115 22:02:45.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.703" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:45.702" endtime="20201115 22:02:45.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.705" level="INFO">VALUE: [2.221999999999641e-06, 2.2499999999987808e-06, 2.3200000000000998e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.2369999999986845e-06, 2.2369999999986845e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.221999999999641e-06, 2.2639999999983507e-06, 2.221999999999641e-06, 2.2499999999987808e-06, 2.1669999999973655e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.2630000000023465e-06, 2.2639999999983507e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.237000000002154e-06, 2.2499999999987808e-06, 2.235999999999211e-06, 2.26400000000182e-06, 2.235999999999211e-06, 2.2360000000026803e-06, 2.235999999999211e-06, 2.2910000000014863e-06, 2.235999999999211e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 2.237000000002154e-06, 2.2360000000026803e-06, 2.1949999999999747e-06, 2.2360000000026803e-06, 2.221999999999641e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.221999999999641e-06, 2.2089999999995447e-06, 2.29200000000096e-06, 2.2360000000026803e-06, 2.2369999999986845e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.221999999999641e-06, 2.290999999998017e-06, 2.235999999999211e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.704" endtime="20201115 22:02:45.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.699" endtime="20201115 22:02:45.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.709" endtime="20201115 22:02:45.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.712" endtime="20201115 22:02:45.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.711" endtime="20201115 22:02:45.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.707" endtime="20201115 22:02:45.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.339" endtime="20201115 22:02:45.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.751" endtime="20201115 22:02:45.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.750" endtime="20201115 22:02:45.733"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.736" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.745" endtime="20201115 22:02:45.764"></status>
</kw>
<msg timestamp="20201115 22:02:45.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.743" endtime="20201115 22:02:45.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.767" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.765" endtime="20201115 22:02:45.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.768" endtime="20201115 22:02:45.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.741" endtime="20201115 22:02:45.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.738" endtime="20201115 22:02:45.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.778" endtime="20201115 22:02:46.066"></status>
</kw>
<msg timestamp="20201115 22:02:46.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025072139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025074611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.776" endtime="20201115 22:02:46.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025072139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025074611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.070" endtime="20201115 22:02:46.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.078" endtime="20201115 22:02:46.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.774" endtime="20201115 22:02:46.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.772" endtime="20201115 22:02:46.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.085" level="INFO">${RESULT} = [{'time': 0.025074611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.025182097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:46.082" endtime="20201115 22:02:46.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.099" level="INFO">${OVERHEAD} = {'diff': [2.471999999999891e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.485999999999461e-06, 2.4020000000020414e-06, 2.4450000000002248e-06, 2.471999999999891e-06, 2.44...</msg>
<status status="PASS" starttime="20201115 22:02:46.086" endtime="20201115 22:02:46.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.104" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.103" endtime="20201115 22:02:46.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.107" level="INFO">VALUE: [2.471999999999891e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.485999999999461e-06, 2.4020000000020414e-06, 2.4450000000002248e-06, 2.471999999999891e-06, 2.4439999999972817e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.403000000001515e-06, 2.458000000000321e-06, 2.4160000000016113e-06, 2.471999999999891e-06, 2.4300000000011812e-06, 2.471999999999891e-06, 2.431000000000655e-06, 2.458000000000321e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.4169999999976155e-06, 2.4169999999976155e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.4300000000011812e-06, 2.4579999999968516e-06, 2.54200000000121e-06, 2.4999999999990308e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.4589999999997947e-06, 2.4589999999997947e-06, 2.458000000000321e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.105" endtime="20201115 22:02:46.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.100" endtime="20201115 22:02:46.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.110" endtime="20201115 22:02:46.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.114" endtime="20201115 22:02:46.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.112" endtime="20201115 22:02:46.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.108" endtime="20201115 22:02:46.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.736" endtime="20201115 22:02:46.134"></status>
</kw>
<msg timestamp="20201115 22:02:46.135" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.144" endtime="20201115 22:02:46.167"></status>
</kw>
<msg timestamp="20201115 22:02:46.167" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.142" endtime="20201115 22:02:46.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.170" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.168" endtime="20201115 22:02:46.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.171" endtime="20201115 22:02:46.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.140" endtime="20201115 22:02:46.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.137" endtime="20201115 22:02:46.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.181" endtime="20201115 22:02:46.469"></status>
</kw>
<msg timestamp="20201115 22:02:46.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025558972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025561431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.179" endtime="20201115 22:02:46.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025558972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025561431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.474" endtime="20201115 22:02:46.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.482" endtime="20201115 22:02:46.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.176" endtime="20201115 22:02:46.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.175" endtime="20201115 22:02:46.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.489" level="INFO">${RESULT} = [{'time': 0.025561431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.025670903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:46.486" endtime="20201115 22:02:46.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.503" level="INFO">${OVERHEAD} = {'diff': [2.4589999999997947e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.4439999999972817e-06, 2.4449999999967553e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2....</msg>
<status status="PASS" starttime="20201115 22:02:46.490" endtime="20201115 22:02:46.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.508" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.507" endtime="20201115 22:02:46.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.510" level="INFO">VALUE: [2.4589999999997947e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.4439999999972817e-06, 2.4449999999967553e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.4450000000002248e-06, 2.4589999999997947e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.4169999999976155e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.444000000000751e-06, 2.4029999999980456e-06, 2.4589999999997947e-06, 2.4589999999997947e-06, 2.431000000000655e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.5279999999981706e-06, 2.444000000000751e-06, 2.4860000000029303e-06, 2.4439999999972817e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.473000000002834e-06, 2.4729999999993646e-06, 2.4300000000011812e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.444000000000751e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.4450000000002248e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.4450000000002248e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.509" endtime="20201115 22:02:46.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.504" endtime="20201115 22:02:46.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.514" endtime="20201115 22:02:46.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.517" endtime="20201115 22:02:46.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.516" endtime="20201115 22:02:46.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.512" endtime="20201115 22:02:46.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.135" endtime="20201115 22:02:46.538"></status>
</kw>
<msg timestamp="20201115 22:02:46.538" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.552" endtime="20201115 22:02:46.573"></status>
</kw>
<msg timestamp="20201115 22:02:46.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.550" endtime="20201115 22:02:46.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.576" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.575" endtime="20201115 22:02:46.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.577" endtime="20201115 22:02:46.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.543" endtime="20201115 22:02:46.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.541" endtime="20201115 22:02:46.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.587" endtime="20201115 22:02:46.874"></status>
</kw>
<msg timestamp="20201115 22:02:46.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028890347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02889275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:46.586" endtime="20201115 22:02:46.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028890347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02889275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:46.878" endtime="20201115 22:02:46.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.887" endtime="20201115 22:02:46.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.583" endtime="20201115 22:02:46.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.581" endtime="20201115 22:02:46.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.894" level="INFO">${RESULT} = [{'time': 0.02889275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.029002264, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:46.890" endtime="20201115 22:02:46.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.908" level="INFO">${OVERHEAD} = {'diff': [2.4029999999980456e-06, 2.4450000000002248e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.4579999999968516e-06, 2.4999999999990308e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2...</msg>
<status status="PASS" starttime="20201115 22:02:46.895" endtime="20201115 22:02:46.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.912" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.911" endtime="20201115 22:02:46.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.915" level="INFO">VALUE: [2.4029999999980456e-06, 2.4450000000002248e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.4579999999968516e-06, 2.4999999999990308e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.4579999999968516e-06, 2.485999999999461e-06, 2.375000000002375e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.5270000000021664e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.471999999999891e-06, 2.4450000000002248e-06, 2.4300000000011812e-06, 2.458000000000321e-06, 2.4299999999977118e-06, 2.4580000000037905e-06, 2.4579999999968516e-06, 2.4579999999968516e-06, 2.4719999999964215e-06, 2.52800000000164e-06, 2.4450000000036942e-06, 2.4029999999980456e-06, 2.5000000000025002e-06, 2.4450000000036942e-06, 2.4310000000041243e-06, 2.4719999999964215e-06, 2.5270000000021664e-06, 2.4439999999972817e-06, 2.4580000000037905e-06, 2.3749999999989058e-06, 2.4439999999972817e-06, 2.459000000003264e-06, 2.4449999999967553e-06, 2.527999999994701e-06, 2.4580000000037905e-06, 2.473000000002834e-06, 2.4719999999964215e-06, 2.4439999999972817e-06, 2.51400000000207e-06, 2.4579999999968516e-06, 2.4450000000036942e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.913" endtime="20201115 22:02:46.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.909" endtime="20201115 22:02:46.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.918" endtime="20201115 22:02:46.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.922" endtime="20201115 22:02:46.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.920" endtime="20201115 22:02:46.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.916" endtime="20201115 22:02:46.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.539" endtime="20201115 22:02:46.943"></status>
</kw>
<msg timestamp="20201115 22:02:46.943" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.953" endtime="20201115 22:02:46.975"></status>
</kw>
<msg timestamp="20201115 22:02:46.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.951" endtime="20201115 22:02:46.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.976" endtime="20201115 22:02:46.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.979" endtime="20201115 22:02:46.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.948" endtime="20201115 22:02:46.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.946" endtime="20201115 22:02:46.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.989" endtime="20201115 22:02:47.276"></status>
</kw>
<msg timestamp="20201115 22:02:47.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026223097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026225556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.987" endtime="20201115 22:02:47.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026223097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026225556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.280" endtime="20201115 22:02:47.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.289" endtime="20201115 22:02:47.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.984" endtime="20201115 22:02:47.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.982" endtime="20201115 22:02:47.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.296" level="INFO">${RESULT} = [{'time': 0.026225556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.026333042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:47.292" endtime="20201115 22:02:47.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.310" level="INFO">${OVERHEAD} = {'diff': [2.4589999999997947e-06, 2.4589999999997947e-06, 2.444000000000751e-06, 2.4300000000011812e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2....</msg>
<status status="PASS" starttime="20201115 22:02:47.297" endtime="20201115 22:02:47.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.315" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:47.313" endtime="20201115 22:02:47.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.317" level="INFO">VALUE: [2.4589999999997947e-06, 2.4589999999997947e-06, 2.444000000000751e-06, 2.4300000000011812e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.4579999999968516e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.4439999999972817e-06, 2.4450000000002248e-06, 2.4589999999997947e-06, 2.431000000000655e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.4300000000011812e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.4589999999997947e-06, 2.431000000000655e-06, 2.4439999999972817e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.417000000001085e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.4589999999997947e-06, 2.4160000000016113e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.4299999999977118e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.52800000000164e-06, 2.472999999995895e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.316" endtime="20201115 22:02:47.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.311" endtime="20201115 22:02:47.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.321" endtime="20201115 22:02:47.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.325" endtime="20201115 22:02:47.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.323" endtime="20201115 22:02:47.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.319" endtime="20201115 22:02:47.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.944" endtime="20201115 22:02:47.345"></status>
</kw>
<msg timestamp="20201115 22:02:47.346" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.355" endtime="20201115 22:02:47.376"></status>
</kw>
<msg timestamp="20201115 22:02:47.377" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.353" endtime="20201115 22:02:47.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.380" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.378" endtime="20201115 22:02:47.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.381" endtime="20201115 22:02:47.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.351" endtime="20201115 22:02:47.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.348" endtime="20201115 22:02:47.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.390" endtime="20201115 22:02:47.678"></status>
</kw>
<msg timestamp="20201115 22:02:47.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025413444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:47.389" endtime="20201115 22:02:47.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025413444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:47.683" endtime="20201115 22:02:47.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.691" endtime="20201115 22:02:47.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.386" endtime="20201115 22:02:47.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.384" endtime="20201115 22:02:47.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.698" level="INFO">${RESULT} = [{'time': 0.025413444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.025521583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:47.695" endtime="20201115 22:02:47.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.712" level="INFO">${OVERHEAD} = {'diff': [2.444000000000751e-06, 2.3749999999989058e-06, 2.4589999999997947e-06, 2.4579999999968516e-06, 2.4720000000033604e-06, 2.4439999999972817e-06, 2.471999999999891e-06, 2.4439999999972817e-06, ...</msg>
<status status="PASS" starttime="20201115 22:02:47.699" endtime="20201115 22:02:47.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.717" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:47.716" endtime="20201115 22:02:47.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.720" level="INFO">VALUE: [2.444000000000751e-06, 2.3749999999989058e-06, 2.4589999999997947e-06, 2.4579999999968516e-06, 2.4720000000033604e-06, 2.4439999999972817e-06, 2.471999999999891e-06, 2.4439999999972817e-06, 2.4579999999968516e-06, 2.444000000000751e-06, 2.431000000000655e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.4589999999997947e-06, 2.4579999999968516e-06, 2.4160000000016113e-06, 2.4579999999968516e-06, 2.360999999999336e-06, 2.4729999999993646e-06, 2.403000000001515e-06, 2.4450000000002248e-06, 2.4300000000011812e-06, 2.459000000003264e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.473000000002834e-06, 2.4589999999997947e-06, 2.54200000000121e-06, 2.444000000000751e-06, 2.3749999999989058e-06, 2.4299999999977118e-06, 2.4450000000002248e-06, 2.51400000000207e-06, 2.444000000000751e-06, 2.459000000003264e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.4439999999972817e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.403000000001515e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.417000000001085e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.718" endtime="20201115 22:02:47.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.713" endtime="20201115 22:02:47.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.723" endtime="20201115 22:02:47.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.727" endtime="20201115 22:02:47.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.725" endtime="20201115 22:02:47.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.722" endtime="20201115 22:02:47.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.346" endtime="20201115 22:02:47.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.735" endtime="20201115 22:02:47.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.734" endtime="20201115 22:02:47.748"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.751" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.760" endtime="20201115 22:02:47.780"></status>
</kw>
<msg timestamp="20201115 22:02:47.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.758" endtime="20201115 22:02:47.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.781" endtime="20201115 22:02:47.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.784" endtime="20201115 22:02:47.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.755" endtime="20201115 22:02:47.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.753" endtime="20201115 22:02:47.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.794" endtime="20201115 22:02:48.082"></status>
</kw>
<msg timestamp="20201115 22:02:48.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024925917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024928514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.792" endtime="20201115 22:02:48.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024925917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024928514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.086" endtime="20201115 22:02:48.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.094" endtime="20201115 22:02:48.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.789" endtime="20201115 22:02:48.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.787" endtime="20201115 22:02:48.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.101" level="INFO">${RESULT} = [{'time': 0.024928514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.025045083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:48.098" endtime="20201115 22:02:48.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.115" level="INFO">${OVERHEAD} = {'diff': [2.597000000000016e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6...</msg>
<status status="PASS" starttime="20201115 22:02:48.102" endtime="20201115 22:02:48.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.120" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.119" endtime="20201115 22:02:48.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.123" level="INFO">VALUE: [2.597000000000016e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6250000000026252e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.653000000001765e-06, 2.5979999999994896e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6949999999970053e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.651999999998822e-06, 2.6249999999991558e-06, 2.6520000000022914e-06, 2.695000000000475e-06, 2.6520000000022914e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.5839999999999197e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6520000000022914e-06, 2.598000000002959e-06, 2.679999999997962e-06, 2.639000000002195e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.610999999999586e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.121" endtime="20201115 22:02:48.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.116" endtime="20201115 22:02:48.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.126" endtime="20201115 22:02:48.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.130" endtime="20201115 22:02:48.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.128" endtime="20201115 22:02:48.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.125" endtime="20201115 22:02:48.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.751" endtime="20201115 22:02:48.151"></status>
</kw>
<msg timestamp="20201115 22:02:48.151" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.160" endtime="20201115 22:02:48.181"></status>
</kw>
<msg timestamp="20201115 22:02:48.182" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.159" endtime="20201115 22:02:48.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.184" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.183" endtime="20201115 22:02:48.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.185" endtime="20201115 22:02:48.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.156" endtime="20201115 22:02:48.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.154" endtime="20201115 22:02:48.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.195" endtime="20201115 22:02:48.482"></status>
</kw>
<msg timestamp="20201115 22:02:48.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023683597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023686236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.193" endtime="20201115 22:02:48.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023683597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023686236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.486" endtime="20201115 22:02:48.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.495" endtime="20201115 22:02:48.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.191" endtime="20201115 22:02:48.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.189" endtime="20201115 22:02:48.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.502" level="INFO">${RESULT} = [{'time': 0.023686236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.023803833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:48.498" endtime="20201115 22:02:48.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.516" level="INFO">${OVERHEAD} = {'diff': [2.6389999999987257e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.610999999999586e-06, 2.63...</msg>
<status status="PASS" starttime="20201115 22:02:48.503" endtime="20201115 22:02:48.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.521" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.520" endtime="20201115 22:02:48.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.523" level="INFO">VALUE: [2.6389999999987257e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.610999999999586e-06, 2.639000000002195e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.639000000002195e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.651999999998822e-06, 2.6380000000027215e-06, 2.653000000001765e-06, 2.749999999999281e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.722000000000141e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.6249999999991558e-06, 2.6939999999975317e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.569000000000876e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.637999999999252e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.522" endtime="20201115 22:02:48.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.517" endtime="20201115 22:02:48.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.527" endtime="20201115 22:02:48.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.530" endtime="20201115 22:02:48.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.529" endtime="20201115 22:02:48.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.525" endtime="20201115 22:02:48.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.152" endtime="20201115 22:02:48.551"></status>
</kw>
<msg timestamp="20201115 22:02:48.551" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.561" endtime="20201115 22:02:48.583"></status>
</kw>
<msg timestamp="20201115 22:02:48.583" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.559" endtime="20201115 22:02:48.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.586" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.585" endtime="20201115 22:02:48.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.587" endtime="20201115 22:02:48.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.556" endtime="20201115 22:02:48.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.554" endtime="20201115 22:02:48.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.597" endtime="20201115 22:02:48.884"></status>
</kw>
<msg timestamp="20201115 22:02:48.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025269417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025272083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.595" endtime="20201115 22:02:48.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025269417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025272083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.888" endtime="20201115 22:02:48.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.896" endtime="20201115 22:02:48.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.592" endtime="20201115 22:02:48.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.591" endtime="20201115 22:02:48.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.904" level="INFO">${RESULT} = [{'time': 0.025272083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.025387875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:48.900" endtime="20201115 22:02:48.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.918" level="INFO">${OVERHEAD} = {'diff': [2.6660000000018613e-06, 2.694000000001001e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.735999999999711e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.63...</msg>
<status status="PASS" starttime="20201115 22:02:48.905" endtime="20201115 22:02:48.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.923" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.922" endtime="20201115 22:02:48.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.925" level="INFO">VALUE: [2.6660000000018613e-06, 2.694000000001001e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.735999999999711e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.639000000002195e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.637999999999252e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.7229999999996146e-06, 2.6520000000022914e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.695000000000475e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.639000000002195e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6250000000026252e-06, 2.639000000002195e-06, 2.665999999998392e-06, 2.639000000002195e-06, 2.6389999999987257e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.924" endtime="20201115 22:02:48.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.919" endtime="20201115 22:02:48.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.929" endtime="20201115 22:02:48.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.932" endtime="20201115 22:02:48.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.930" endtime="20201115 22:02:48.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.927" endtime="20201115 22:02:48.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.552" endtime="20201115 22:02:48.953"></status>
</kw>
<msg timestamp="20201115 22:02:48.953" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.962" endtime="20201115 22:02:48.985"></status>
</kw>
<msg timestamp="20201115 22:02:48.985" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.961" endtime="20201115 22:02:48.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.988" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.986" endtime="20201115 22:02:48.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.989" endtime="20201115 22:02:48.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.958" endtime="20201115 22:02:48.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.956" endtime="20201115 22:02:48.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.998" endtime="20201115 22:02:49.285"></status>
</kw>
<msg timestamp="20201115 22:02:49.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025485542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025488194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.997" endtime="20201115 22:02:49.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025485542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025488194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.289" endtime="20201115 22:02:49.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.298" endtime="20201115 22:02:49.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.994" endtime="20201115 22:02:49.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.992" endtime="20201115 22:02:49.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.305" level="INFO">${RESULT} = [{'time': 0.025488194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.025606472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:49.302" endtime="20201115 22:02:49.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.319" level="INFO">${OVERHEAD} = {'diff': [2.651999999998822e-06, 2.694000000001001e-06, 2.5979999999994896e-06, 2.639000000002195e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2....</msg>
<status status="PASS" starttime="20201115 22:02:49.306" endtime="20201115 22:02:49.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.324" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:49.323" endtime="20201115 22:02:49.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.326" level="INFO">VALUE: [2.651999999998822e-06, 2.694000000001001e-06, 2.5979999999994896e-06, 2.639000000002195e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.737000000002654e-06, 2.667000000001335e-06, 2.5839999999999197e-06, 2.6389999999987257e-06, 2.708000000000571e-06, 2.653000000001765e-06, 2.610999999999586e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.639000000002195e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.708000000000571e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.6520000000022914e-06, 2.6520000000022914e-06, 2.6520000000022914e-06, 2.6389999999987257e-06, 2.653000000001765e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.6389999999987257e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.325" endtime="20201115 22:02:49.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.320" endtime="20201115 22:02:49.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.330" endtime="20201115 22:02:49.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.333" endtime="20201115 22:02:49.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.332" endtime="20201115 22:02:49.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.328" endtime="20201115 22:02:49.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.954" endtime="20201115 22:02:49.354"></status>
</kw>
<msg timestamp="20201115 22:02:49.354" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.364" endtime="20201115 22:02:49.386"></status>
</kw>
<msg timestamp="20201115 22:02:49.387" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.362" endtime="20201115 22:02:49.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.388" endtime="20201115 22:02:49.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.391" endtime="20201115 22:02:49.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.359" endtime="20201115 22:02:49.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.357" endtime="20201115 22:02:49.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.400" endtime="20201115 22:02:49.689"></status>
</kw>
<msg timestamp="20201115 22:02:49.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026125486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026128153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.398" endtime="20201115 22:02:49.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026125486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026128153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.693" endtime="20201115 22:02:49.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.702" endtime="20201115 22:02:49.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.396" endtime="20201115 22:02:49.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.394" endtime="20201115 22:02:49.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.709" level="INFO">${RESULT} = [{'time': 0.026128153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.026247875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:49.705" endtime="20201115 22:02:49.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.723" level="INFO">${OVERHEAD} = {'diff': [2.667000000001335e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6249...</msg>
<status status="PASS" starttime="20201115 22:02:49.710" endtime="20201115 22:02:49.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.728" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:49.726" endtime="20201115 22:02:49.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.730" level="INFO">VALUE: [2.667000000001335e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.639000000002195e-06, 2.6809999999974354e-06, 2.651999999998822e-06, 2.651999999998822e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.722000000000141e-06, 2.6529999999982956e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.583000000000446e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.639000000002195e-06, 2.7369999999991845e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6250000000060947e-06, 2.6670000000048044e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.729" endtime="20201115 22:02:49.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.724" endtime="20201115 22:02:49.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.733" endtime="20201115 22:02:49.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.737" endtime="20201115 22:02:49.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.735" endtime="20201115 22:02:49.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.732" endtime="20201115 22:02:49.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.355" endtime="20201115 22:02:49.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.749" endtime="20201115 22:02:49.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.749" endtime="20201115 22:02:49.758"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.761" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.770" endtime="20201115 22:02:49.789"></status>
</kw>
<msg timestamp="20201115 22:02:49.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.768" endtime="20201115 22:02:49.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.791" endtime="20201115 22:02:49.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.794" endtime="20201115 22:02:49.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.765" endtime="20201115 22:02:49.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.763" endtime="20201115 22:02:49.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.804" endtime="20201115 22:02:50.091"></status>
</kw>
<msg timestamp="20201115 22:02:50.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024422639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0244255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:49.802" endtime="20201115 22:02:50.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024422639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0244255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:50.095" endtime="20201115 22:02:50.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.103" endtime="20201115 22:02:50.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.799" endtime="20201115 22:02:50.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.797" endtime="20201115 22:02:50.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.110" level="INFO">${RESULT} = [{'time': 0.0244255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.024556861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:50.107" endtime="20201115 22:02:50.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.124" level="INFO">${OVERHEAD} = {'diff': [2.860999999999836e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8479999999997396e-06, 2.917000000001585e-06, 2....</msg>
<status status="PASS" starttime="20201115 22:02:50.111" endtime="20201115 22:02:50.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.129" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.128" endtime="20201115 22:02:50.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.132" level="INFO">VALUE: [2.860999999999836e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8479999999997396e-06, 2.917000000001585e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.80600000000103e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8189999999976567e-06, 2.8200000000006e-06, 2.860999999999836e-06, 2.9160000000021113e-06, 2.847000000000266e-06, 2.8610000000033053e-06, 2.8479999999997396e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.9020000000025414e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.860999999999836e-06, 2.889000000002445e-06, 2.804999999998087e-06, 2.9169999999981155e-06, 2.9160000000021113e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.915999999998642e-06, 2.860999999999836e-06, 2.8750000000028753e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.130" endtime="20201115 22:02:50.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.125" endtime="20201115 22:02:50.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.135" endtime="20201115 22:02:50.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.139" endtime="20201115 22:02:50.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.137" endtime="20201115 22:02:50.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.133" endtime="20201115 22:02:50.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.761" endtime="20201115 22:02:50.159"></status>
</kw>
<msg timestamp="20201115 22:02:50.160" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.169" endtime="20201115 22:02:50.191"></status>
</kw>
<msg timestamp="20201115 22:02:50.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.167" endtime="20201115 22:02:50.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.193" endtime="20201115 22:02:50.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.196" endtime="20201115 22:02:50.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.164" endtime="20201115 22:02:50.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.162" endtime="20201115 22:02:50.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.205" endtime="20201115 22:02:50.493"></status>
</kw>
<msg timestamp="20201115 22:02:50.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024852417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024855292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.204" endtime="20201115 22:02:50.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024852417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024855292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.498" endtime="20201115 22:02:50.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.506" endtime="20201115 22:02:50.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.201" endtime="20201115 22:02:50.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.199" endtime="20201115 22:02:50.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.513" level="INFO">${RESULT} = [{'time': 0.024855292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.024984875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:50.509" endtime="20201115 22:02:50.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.527" level="INFO">${OVERHEAD} = {'diff': [2.874999999999406e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8339999999967003e-06, 2.8...</msg>
<status status="PASS" starttime="20201115 22:02:50.514" endtime="20201115 22:02:50.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.532" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.531" endtime="20201115 22:02:50.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.534" level="INFO">VALUE: [2.874999999999406e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8339999999967003e-06, 2.8199999999971304e-06, 2.860999999999836e-06, 2.848000000003209e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.9439999999977817e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.889000000002445e-06, 2.8619999999993095e-06, 2.8610000000033053e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.79200000000146e-06, 2.847000000000266e-06, 2.9160000000021113e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.860999999999836e-06, 2.929999999998212e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.917000000001585e-06, 2.8189999999976567e-06, 2.874999999999406e-06, 2.874999999999406e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.533" endtime="20201115 22:02:50.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.528" endtime="20201115 22:02:50.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.538" endtime="20201115 22:02:50.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.541" endtime="20201115 22:02:50.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.540" endtime="20201115 22:02:50.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.536" endtime="20201115 22:02:50.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.160" endtime="20201115 22:02:50.562"></status>
</kw>
<msg timestamp="20201115 22:02:50.562" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.572" endtime="20201115 22:02:50.593"></status>
</kw>
<msg timestamp="20201115 22:02:50.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.570" endtime="20201115 22:02:50.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.594" endtime="20201115 22:02:50.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.597" endtime="20201115 22:02:50.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.567" endtime="20201115 22:02:50.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.565" endtime="20201115 22:02:50.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.606" endtime="20201115 22:02:50.894"></status>
</kw>
<msg timestamp="20201115 22:02:50.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023812319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023815181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.605" endtime="20201115 22:02:50.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023812319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023815181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.898" endtime="20201115 22:02:50.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.907" endtime="20201115 22:02:50.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.602" endtime="20201115 22:02:50.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.600" endtime="20201115 22:02:50.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.914" level="INFO">${RESULT} = [{'time': 0.023815181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.862000000002779e-06, 'source_diff': 2.862000000002779e-06}, {'time': 0.023940514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:50.910" endtime="20201115 22:02:50.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.928" level="INFO">${OVERHEAD} = {'diff': [2.862000000002779e-06, 2.8200000000006e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.804999999998087e-06, 2.8889999999989757e-06, 2.9029...</msg>
<status status="PASS" starttime="20201115 22:02:50.915" endtime="20201115 22:02:50.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.933" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.932" endtime="20201115 22:02:50.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.935" level="INFO">VALUE: [2.862000000002779e-06, 2.8200000000006e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.804999999998087e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.8329999999972266e-06, 2.860999999999836e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.833000000000696e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.77800000000189e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.8479999999997396e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.934" endtime="20201115 22:02:50.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.929" endtime="20201115 22:02:50.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.939" endtime="20201115 22:02:50.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.942" endtime="20201115 22:02:50.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.941" endtime="20201115 22:02:50.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.937" endtime="20201115 22:02:50.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.563" endtime="20201115 22:02:50.963"></status>
</kw>
<msg timestamp="20201115 22:02:50.964" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.973" endtime="20201115 22:02:50.994"></status>
</kw>
<msg timestamp="20201115 22:02:50.995" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.972" endtime="20201115 22:02:50.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.997" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.996" endtime="20201115 22:02:50.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.999" endtime="20201115 22:02:51.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.969" endtime="20201115 22:02:51.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.966" endtime="20201115 22:02:51.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.008" endtime="20201115 22:02:51.299"></status>
</kw>
<msg timestamp="20201115 22:02:51.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024831764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024834625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.006" endtime="20201115 22:02:51.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024831764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024834625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.303" endtime="20201115 22:02:51.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.312" endtime="20201115 22:02:51.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.004" endtime="20201115 22:02:51.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.002" endtime="20201115 22:02:51.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.319" level="INFO">${RESULT} = [{'time': 0.024834625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.024961403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:51.315" endtime="20201115 22:02:51.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.333" level="INFO">${OVERHEAD} = {'diff': [2.860999999999836e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.860999999999836e-06, 2.8619999999993095e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.86...</msg>
<status status="PASS" starttime="20201115 22:02:51.320" endtime="20201115 22:02:51.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.337" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:51.336" endtime="20201115 22:02:51.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.340" level="INFO">VALUE: [2.860999999999836e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.860999999999836e-06, 2.8619999999993095e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.8610000000033053e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.887999999999502e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8200000000006e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.9169999999981155e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.917000000001585e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8329999999972266e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.901999999999072e-06, 2.8610000000033053e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.929999999998212e-06, 2.8469999999967965e-06, 2.8189999999976567e-06, 2.860999999999836e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.339" endtime="20201115 22:02:51.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.334" endtime="20201115 22:02:51.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.344" endtime="20201115 22:02:51.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.348" endtime="20201115 22:02:51.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.346" endtime="20201115 22:02:51.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.342" endtime="20201115 22:02:51.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.964" endtime="20201115 22:02:51.369"></status>
</kw>
<msg timestamp="20201115 22:02:51.369" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.378" endtime="20201115 22:02:51.397"></status>
</kw>
<msg timestamp="20201115 22:02:51.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.376" endtime="20201115 22:02:51.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.399" endtime="20201115 22:02:51.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.401" endtime="20201115 22:02:51.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.374" endtime="20201115 22:02:51.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.371" endtime="20201115 22:02:51.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.411" endtime="20201115 22:02:51.699"></status>
</kw>
<msg timestamp="20201115 22:02:51.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021445806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.409" endtime="20201115 22:02:51.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021442944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021445806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.704" endtime="20201115 22:02:51.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.712" endtime="20201115 22:02:51.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.406" endtime="20201115 22:02:51.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.405" endtime="20201115 22:02:51.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.719" level="INFO">${RESULT} = [{'time': 0.021445806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.862000000002779e-06, 'source_diff': 2.862000000002779e-06}, {'time': 0.021575458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:51.716" endtime="20201115 22:02:51.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.733" level="INFO">${OVERHEAD} = {'diff': [2.862000000002779e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.7910000000019863e-06, 2.887999999999502e-06, 2.8469999999967965e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2....</msg>
<status status="PASS" starttime="20201115 22:02:51.720" endtime="20201115 22:02:51.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.738" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:51.737" endtime="20201115 22:02:51.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.740" level="INFO">VALUE: [2.862000000002779e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.7910000000019863e-06, 2.887999999999502e-06, 2.8469999999967965e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.847000000000266e-06, 2.8750000000028753e-06, 2.860999999999836e-06, 2.8200000000006e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.819000000001126e-06, 2.874999999999406e-06, 2.9449999999972554e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.9300000000016813e-06, 2.889000000002445e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.79200000000146e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.874999999999406e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.739" endtime="20201115 22:02:51.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.734" endtime="20201115 22:02:51.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.748" endtime="20201115 22:02:51.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.751" endtime="20201115 22:02:51.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.750" endtime="20201115 22:02:51.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.746" endtime="20201115 22:02:51.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.369" endtime="20201115 22:02:51.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.759" endtime="20201115 22:02:51.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.759" endtime="20201115 22:02:51.772"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.775" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.784" endtime="20201115 22:02:51.804"></status>
</kw>
<msg timestamp="20201115 22:02:51.804" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.782" endtime="20201115 22:02:51.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.807" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.805" endtime="20201115 22:02:51.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.808" endtime="20201115 22:02:51.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.779" endtime="20201115 22:02:51.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.777" endtime="20201115 22:02:51.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.817" endtime="20201115 22:02:52.114"></status>
</kw>
<msg timestamp="20201115 22:02:52.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024764542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024767597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.815" endtime="20201115 22:02:52.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024764542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024767597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.119" endtime="20201115 22:02:52.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.127" endtime="20201115 22:02:52.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.813" endtime="20201115 22:02:52.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.811" endtime="20201115 22:02:52.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.134" level="INFO">${RESULT} = [{'time': 0.024767597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.024906097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.130" endtime="20201115 22:02:52.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.147" level="INFO">${OVERHEAD} = {'diff': [3.054999999998337e-06, 3.0279999999986706e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.151999999999322e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.042...</msg>
<status status="PASS" starttime="20201115 22:02:52.135" endtime="20201115 22:02:52.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.152" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.151" endtime="20201115 22:02:52.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.155" level="INFO">VALUE: [3.054999999998337e-06, 3.0279999999986706e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.151999999999322e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.0689999999979067e-06, 3.0979999999999897e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.137999999999752e-06, 3.1529999999987957e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.0279999999986706e-06, 3.0969999999970466e-06, 3.0699999999973804e-06, 3.083000000000946e-06, 3.0689999999979067e-06, 3.0699999999973804e-06, 3.0699999999973804e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.0829999999974766e-06, 3.0000000000030003e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.026999999999197e-06, 3.0969999999970466e-06, 3.0829999999974766e-06, 3.1250000000031253e-06, 3.05600000000128e-06, 3.111000000000086e-06, 3.026999999999197e-06, 3.0689999999979067e-06, 3.0000000000030003e-06, 3.07000000000085e-06, 3.0689999999944373e-06, 3.0000000000030003e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.153" endtime="20201115 22:02:52.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.148" endtime="20201115 22:02:52.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.158" endtime="20201115 22:02:52.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.161" endtime="20201115 22:02:52.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.160" endtime="20201115 22:02:52.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.156" endtime="20201115 22:02:52.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.775" endtime="20201115 22:02:52.182"></status>
</kw>
<msg timestamp="20201115 22:02:52.182" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.191" endtime="20201115 22:02:52.210"></status>
</kw>
<msg timestamp="20201115 22:02:52.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.190" endtime="20201115 22:02:52.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.212" endtime="20201115 22:02:52.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.215" endtime="20201115 22:02:52.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.187" endtime="20201115 22:02:52.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.185" endtime="20201115 22:02:52.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.224" endtime="20201115 22:02:52.510"></status>
</kw>
<msg timestamp="20201115 22:02:52.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021708361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.222" endtime="20201115 22:02:52.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021708361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.514" endtime="20201115 22:02:52.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.523" endtime="20201115 22:02:52.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.220" endtime="20201115 22:02:52.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.218" endtime="20201115 22:02:52.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.530" level="INFO">${RESULT} = [{'time': 0.021708361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.021845778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:52.526" endtime="20201115 22:02:52.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.544" level="INFO">${OVERHEAD} = {'diff': [3.0279999999986706e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.15299...</msg>
<status status="PASS" starttime="20201115 22:02:52.531" endtime="20201115 22:02:52.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.550" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.549" endtime="20201115 22:02:52.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.553" level="INFO">VALUE: [3.0279999999986706e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.1529999999987957e-06, 3.1119999999995596e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.111000000000086e-06, 3.0419999999982406e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.0139999999991007e-06, 3.0969999999970466e-06, 3.0550000000018063e-06, 3.0829999999974766e-06, 3.0689999999979067e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.0559999999978105e-06, 3.0840000000004197e-06, 3.0979999999999897e-06, 3.167000000001835e-06, 3.0410000000022364e-06, 3.0829999999974766e-06, 3.0979999999999897e-06, 3.026999999999197e-06, 3.0969999999970466e-06, 3.07000000000085e-06, 3.0689999999979067e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.0829999999974766e-06, 3.0839999999969503e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.551" endtime="20201115 22:02:52.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.546" endtime="20201115 22:02:52.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.556" endtime="20201115 22:02:52.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.560" endtime="20201115 22:02:52.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.558" endtime="20201115 22:02:52.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.554" endtime="20201115 22:02:52.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.183" endtime="20201115 22:02:52.580"></status>
</kw>
<msg timestamp="20201115 22:02:52.581" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.591" endtime="20201115 22:02:52.613"></status>
</kw>
<msg timestamp="20201115 22:02:52.614" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.589" endtime="20201115 22:02:52.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.616" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.615" endtime="20201115 22:02:52.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.617" endtime="20201115 22:02:52.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.586" endtime="20201115 22:02:52.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.583" endtime="20201115 22:02:52.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.627" endtime="20201115 22:02:52.932"></status>
</kw>
<msg timestamp="20201115 22:02:52.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025340319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025343375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.625" endtime="20201115 22:02:52.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025340319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025343375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.937" endtime="20201115 22:02:52.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.945" endtime="20201115 22:02:52.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.623" endtime="20201115 22:02:52.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.621" endtime="20201115 22:02:52.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.952" level="INFO">${RESULT} = [{'time': 0.025343375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.05600000000128e-06, 'source_diff': 3.05600000000128e-06}, {'time': 0.025481486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:52.949" endtime="20201115 22:02:52.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.966" level="INFO">${OVERHEAD} = {'diff': [3.05600000000128e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.0969999999970466e-06, 3.111000000000086e-06, 3.0829999999974766e-06, 3.0829999999974766e-06, 3.0829999999974766e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:02:52.954" endtime="20201115 22:02:52.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.971" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.970" endtime="20201115 22:02:52.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.974" level="INFO">VALUE: [3.05600000000128e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.0969999999970466e-06, 3.111000000000086e-06, 3.0829999999974766e-06, 3.0829999999974766e-06, 3.0829999999974766e-06, 3.0829999999974766e-06, 3.0829999999974766e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.124999999999656e-06, 3.07000000000085e-06, 3.0550000000018063e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.0279999999986706e-06, 3.054999999998337e-06, 3.083000000000946e-06, 3.0559999999978105e-06, 3.097000000000516e-06, 3.0969999999970466e-06, 3.0559999999978105e-06, 3.0840000000004197e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.124999999999656e-06, 3.0559999999978105e-06, 3.0410000000022364e-06, 3.083000000000946e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.069000000001376e-06, 3.082999999994007e-06, 3.0979999999999897e-06, 3.096999999993577e-06, 3.097000000000516e-06, 3.083000000000946e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.972" endtime="20201115 22:02:52.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.967" endtime="20201115 22:02:52.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.977" endtime="20201115 22:02:52.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.981" endtime="20201115 22:02:53.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.979" endtime="20201115 22:02:53.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.975" endtime="20201115 22:02:53.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.581" endtime="20201115 22:02:53.002"></status>
</kw>
<msg timestamp="20201115 22:02:53.002" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.011" endtime="20201115 22:02:53.030"></status>
</kw>
<msg timestamp="20201115 22:02:53.030" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.009" endtime="20201115 22:02:53.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.031" endtime="20201115 22:02:53.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.034" endtime="20201115 22:02:53.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.007" endtime="20201115 22:02:53.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.005" endtime="20201115 22:02:53.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.043" endtime="20201115 22:02:53.331"></status>
</kw>
<msg timestamp="20201115 22:02:53.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021186417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0211895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:53.042" endtime="20201115 22:02:53.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021186417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0211895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:53.336" endtime="20201115 22:02:53.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.345" endtime="20201115 22:02:53.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.039" endtime="20201115 22:02:53.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.037" endtime="20201115 22:02:53.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.352" level="INFO">${RESULT} = [{'time': 0.0211895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.021329056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:53.349" endtime="20201115 22:02:53.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.366" level="INFO">${OVERHEAD} = {'diff': [3.083000000000946e-06, 3.0840000000004197e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.04200000000171e-06, 3.1530...</msg>
<status status="PASS" starttime="20201115 22:02:53.353" endtime="20201115 22:02:53.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.371" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.370" endtime="20201115 22:02:53.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.373" level="INFO">VALUE: [3.083000000000946e-06, 3.0840000000004197e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.04200000000171e-06, 3.153000000002265e-06, 3.0840000000004197e-06, 3.07000000000085e-06, 3.0689999999979067e-06, 3.0979999999999897e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.0840000000004197e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0410000000022364e-06, 3.083000000000946e-06, 3.0979999999999897e-06, 3.0699999999973804e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.0969999999970466e-06, 3.0840000000004197e-06, 3.0829999999974766e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.07000000000085e-06, 2.999999999999531e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.139000000002695e-06, 3.0829999999974766e-06, 3.05600000000128e-06, 3.151999999999322e-06, 3.0969999999970466e-06, 3.05600000000128e-06, 3.069000000001376e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.372" endtime="20201115 22:02:53.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.367" endtime="20201115 22:02:53.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.377" endtime="20201115 22:02:53.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.380" endtime="20201115 22:02:53.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.379" endtime="20201115 22:02:53.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.375" endtime="20201115 22:02:53.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.002" endtime="20201115 22:02:53.401"></status>
</kw>
<msg timestamp="20201115 22:02:53.401" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.411" endtime="20201115 22:02:53.431"></status>
</kw>
<msg timestamp="20201115 22:02:53.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.409" endtime="20201115 22:02:53.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.433" endtime="20201115 22:02:53.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.436" endtime="20201115 22:02:53.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.406" endtime="20201115 22:02:53.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.404" endtime="20201115 22:02:53.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.445" endtime="20201115 22:02:53.732"></status>
</kw>
<msg timestamp="20201115 22:02:53.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023599042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023602111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.443" endtime="20201115 22:02:53.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023599042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023602111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.736" endtime="20201115 22:02:53.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.745" endtime="20201115 22:02:53.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.441" endtime="20201115 22:02:53.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.439" endtime="20201115 22:02:53.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.752" level="INFO">${RESULT} = [{'time': 0.023602111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0689999999979067e-06, 'source_diff': 3.0689999999979067e-06}, {'time': 0.023742097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:53.748" endtime="20201115 22:02:53.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.766" level="INFO">${OVERHEAD} = {'diff': [3.0689999999979067e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.1530...</msg>
<status status="PASS" starttime="20201115 22:02:53.753" endtime="20201115 22:02:53.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.771" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.770" endtime="20201115 22:02:53.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.773" level="INFO">VALUE: [3.0689999999979067e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.153000000002265e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.012999999999627e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.0829999999974766e-06, 3.07000000000085e-06, 3.0969999999970466e-06, 3.0840000000004197e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.0840000000004197e-06, 3.026999999999197e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.1389999999992257e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.0559999999978105e-06, 3.0840000000004197e-06, 3.069000000001376e-06, 3.0829999999974766e-06, 3.069000000001376e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.772" endtime="20201115 22:02:53.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.767" endtime="20201115 22:02:53.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.776" endtime="20201115 22:02:53.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.780" endtime="20201115 22:02:53.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.778" endtime="20201115 22:02:53.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.775" endtime="20201115 22:02:53.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.402" endtime="20201115 22:02:53.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.774" endtime="20201115 22:02:53.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.773" endtime="20201115 22:02:53.801"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.804" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.813" endtime="20201115 22:02:53.834"></status>
</kw>
<msg timestamp="20201115 22:02:53.835" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.811" endtime="20201115 22:02:53.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.837" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.836" endtime="20201115 22:02:53.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.838" endtime="20201115 22:02:53.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.808" endtime="20201115 22:02:53.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.806" endtime="20201115 22:02:53.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.848" endtime="20201115 22:02:54.137"></status>
</kw>
<msg timestamp="20201115 22:02:54.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025678153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025681444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.847" endtime="20201115 22:02:54.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025678153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025681444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.141" endtime="20201115 22:02:54.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.150" endtime="20201115 22:02:54.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.844" endtime="20201115 22:02:54.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.842" endtime="20201115 22:02:54.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.157" level="INFO">${RESULT} = [{'time': 0.025681444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2910000000024864e-06, 'source_diff': 3.2910000000024864e-06}, {'time': 0.025837903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:54.153" endtime="20201115 22:02:54.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.171" level="INFO">${OVERHEAD} = {'diff': [3.2910000000024864e-06, 3.2919999999984906e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.27800000000239e-06, 3.290999999999017e-06, 3.27800000000239e-06, 3.2910000000024864e-06, 3.320...</msg>
<status status="PASS" starttime="20201115 22:02:54.158" endtime="20201115 22:02:54.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.175" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.174" endtime="20201115 22:02:54.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.178" level="INFO">VALUE: [3.2910000000024864e-06, 3.2919999999984906e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.27800000000239e-06, 3.290999999999017e-06, 3.27800000000239e-06, 3.2910000000024864e-06, 3.3200000000011e-06, 3.2639999999993508e-06, 3.2919999999984906e-06, 3.2230000000001147e-06, 3.29200000000196e-06, 3.2770000000029165e-06, 3.290999999999017e-06, 3.3200000000011e-06, 3.3059999999980605e-06, 3.3059999999980605e-06, 3.3050000000020563e-06, 3.2500000000032503e-06, 3.249999999999781e-06, 3.290999999999017e-06, 3.290999999999017e-06, 3.27800000000239e-06, 3.2919999999984906e-06, 3.276999999999447e-06, 3.2919999999984906e-06, 3.3189999999981568e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.27800000000239e-06, 3.2919999999984906e-06, 3.2919999999984906e-06, 3.2919999999984906e-06, 3.249999999999781e-06, 3.27800000000239e-06, 3.27800000000239e-06, 3.29200000000196e-06, 3.27800000000239e-06, 3.29200000000196e-06, 3.2770000000029165e-06, 3.291999999995021e-06, 3.374999999999906e-06, 3.26400000000282e-06, 3.2769999999959776e-06, 3.27800000000239e-06, 3.2909999999955475e-06, 3.2779999999954512e-06, 3.29200000000196e-06, 3.2769999999959776e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.177" endtime="20201115 22:02:54.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.172" endtime="20201115 22:02:54.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.181" endtime="20201115 22:02:54.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.185" endtime="20201115 22:02:54.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.183" endtime="20201115 22:02:54.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.180" endtime="20201115 22:02:54.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.804" endtime="20201115 22:02:54.206"></status>
</kw>
<msg timestamp="20201115 22:02:54.206" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.215" endtime="20201115 22:02:54.236"></status>
</kw>
<msg timestamp="20201115 22:02:54.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.214" endtime="20201115 22:02:54.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.237" endtime="20201115 22:02:54.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.240" endtime="20201115 22:02:54.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.211" endtime="20201115 22:02:54.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.209" endtime="20201115 22:02:54.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.250" endtime="20201115 22:02:54.539"></status>
</kw>
<msg timestamp="20201115 22:02:54.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022756639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.248" endtime="20201115 22:02:54.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022756639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.543" endtime="20201115 22:02:54.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.551" endtime="20201115 22:02:54.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.246" endtime="20201115 22:02:54.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.244" endtime="20201115 22:02:54.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.558" level="INFO">${RESULT} = [{'time': 0.022759847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.022914361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.555" endtime="20201115 22:02:54.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.572" level="INFO">${OVERHEAD} = {'diff': [3.208000000001071e-06, 3.3050000000020563e-06, 3.304999999998587e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.2910000000024864e-06, 3.2639999999993508e-06, 3...</msg>
<status status="PASS" starttime="20201115 22:02:54.559" endtime="20201115 22:02:54.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.577" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.576" endtime="20201115 22:02:54.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.579" level="INFO">VALUE: [3.208000000001071e-06, 3.3050000000020563e-06, 3.304999999998587e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.2910000000024864e-06, 3.2639999999993508e-06, 3.3340000000006698e-06, 3.290999999999017e-06, 3.2779999999989207e-06, 3.222000000000641e-06, 3.3050000000020563e-06, 3.2919999999984906e-06, 3.3059999999980605e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.2639999999993508e-06, 3.26400000000282e-06, 3.290999999999017e-06, 3.29200000000196e-06, 3.30600000000153e-06, 3.27800000000239e-06, 3.2639999999993508e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.2639999999993508e-06, 3.27800000000239e-06, 3.2779999999989207e-06, 3.26400000000282e-06, 3.29200000000196e-06, 3.319000000001626e-06, 3.2359999999967415e-06, 3.290999999999017e-06, 3.276999999999447e-06, 3.29200000000196e-06, 3.222000000000641e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.30600000000153e-06, 3.3329999999977267e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.249999999999781e-06, 3.29200000000196e-06, 3.29200000000196e-06, 3.2919999999984906e-06, 3.2770000000029165e-06, 3.2639999999993508e-06, 3.29200000000196e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.578" endtime="20201115 22:02:54.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.573" endtime="20201115 22:02:54.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.583" endtime="20201115 22:02:54.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.586" endtime="20201115 22:02:54.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.585" endtime="20201115 22:02:54.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.581" endtime="20201115 22:02:54.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.206" endtime="20201115 22:02:54.607"></status>
</kw>
<msg timestamp="20201115 22:02:54.607" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.617" endtime="20201115 22:02:54.637"></status>
</kw>
<msg timestamp="20201115 22:02:54.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.615" endtime="20201115 22:02:54.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.639" endtime="20201115 22:02:54.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.641" endtime="20201115 22:02:54.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.612" endtime="20201115 22:02:54.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.610" endtime="20201115 22:02:54.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.651" endtime="20201115 22:02:54.937"></status>
</kw>
<msg timestamp="20201115 22:02:54.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023328722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.649" endtime="20201115 22:02:54.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023328722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.941" endtime="20201115 22:02:54.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.950" endtime="20201115 22:02:54.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.647" endtime="20201115 22:02:54.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.645" endtime="20201115 22:02:54.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.957" level="INFO">${RESULT} = [{'time': 0.023332014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.023487069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:54.953" endtime="20201115 22:02:54.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.971" level="INFO">${OVERHEAD} = {'diff': [3.29200000000196e-06, 3.290999999999017e-06, 3.3059999999980605e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.3059999999980605e-06, 3.2639999999993508e-06, 3.2919999999984906e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:02:54.958" endtime="20201115 22:02:54.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.976" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.974" endtime="20201115 22:02:54.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.978" level="INFO">VALUE: [3.29200000000196e-06, 3.290999999999017e-06, 3.3059999999980605e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.3059999999980605e-06, 3.2639999999993508e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.27800000000239e-06, 3.30600000000153e-06, 3.374999999999906e-06, 3.276999999999447e-06, 3.290999999999017e-06, 3.29200000000196e-06, 3.29200000000196e-06, 3.2770000000029165e-06, 3.2779999999989207e-06, 3.2919999999984906e-06, 3.2919999999984906e-06, 3.290999999999017e-06, 3.3050000000020563e-06, 3.2090000000005448e-06, 3.2919999999984906e-06, 3.30600000000153e-06, 3.27800000000239e-06, 3.290999999999017e-06, 3.3059999999980605e-06, 3.249999999999781e-06, 3.2919999999984906e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.29200000000196e-06, 3.30600000000153e-06, 3.2639999999993508e-06, 3.2919999999984906e-06, 3.290999999999017e-06, 3.262999999999877e-06, 3.2779999999989207e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.2779999999989207e-06, 3.2919999999984906e-06, 3.26400000000282e-06, 3.2639999999993508e-06, 3.3050000000020563e-06, 3.29200000000196e-06, 3.276999999999447e-06, 3.3059999999980605e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.977" endtime="20201115 22:02:54.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.972" endtime="20201115 22:02:54.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.981" endtime="20201115 22:02:54.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.985" endtime="20201115 22:02:55.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.983" endtime="20201115 22:02:55.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.980" endtime="20201115 22:02:55.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.608" endtime="20201115 22:02:55.006"></status>
</kw>
<msg timestamp="20201115 22:02:55.007" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.016" endtime="20201115 22:02:55.039"></status>
</kw>
<msg timestamp="20201115 22:02:55.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.014" endtime="20201115 22:02:55.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.040" endtime="20201115 22:02:55.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.043" endtime="20201115 22:02:55.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.012" endtime="20201115 22:02:55.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.009" endtime="20201115 22:02:55.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.053" endtime="20201115 22:02:55.340"></status>
</kw>
<msg timestamp="20201115 22:02:55.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0264465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026449764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:55.051" endtime="20201115 22:02:55.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0264465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026449764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:55.344" endtime="20201115 22:02:55.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.352" endtime="20201115 22:02:55.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.048" endtime="20201115 22:02:55.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.046" endtime="20201115 22:02:55.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.360" level="INFO">${RESULT} = [{'time': 0.026449764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.026605861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:55.356" endtime="20201115 22:02:55.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.375" level="INFO">${OVERHEAD} = {'diff': [3.2639999999993508e-06, 3.3050000000020563e-06, 3.276999999999447e-06, 3.29200000000196e-06, 3.2639999999993508e-06, 3.27800000000239e-06, 3.262999999999877e-06, 3.2919999999984906e-06, 3.29...</msg>
<status status="PASS" starttime="20201115 22:02:55.361" endtime="20201115 22:02:55.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.380" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.378" endtime="20201115 22:02:55.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.382" level="INFO">VALUE: [3.2639999999993508e-06, 3.3050000000020563e-06, 3.276999999999447e-06, 3.29200000000196e-06, 3.2639999999993508e-06, 3.27800000000239e-06, 3.262999999999877e-06, 3.2919999999984906e-06, 3.2910000000024864e-06, 3.290999999999017e-06, 3.276999999999447e-06, 3.3050000000020563e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.2779999999989207e-06, 3.2639999999993508e-06, 3.27800000000239e-06, 3.276999999999447e-06, 3.3199999999976304e-06, 3.276999999999447e-06, 3.249999999999781e-06, 3.2779999999989207e-06, 3.249999999999781e-06, 3.29200000000196e-06, 3.2779999999989207e-06, 3.2639999999993508e-06, 3.3050000000020563e-06, 3.26400000000282e-06, 3.29200000000196e-06, 3.2219999999971716e-06, 3.2779999999989207e-06, 3.27800000000239e-06, 3.2909999999955475e-06, 3.2769999999959776e-06, 3.2770000000029165e-06, 3.2769999999959776e-06, 3.29200000000196e-06, 3.29200000000196e-06, 3.291999999995021e-06, 3.29200000000196e-06, 3.2909999999955475e-06, 3.29200000000196e-06, 3.2769999999959776e-06, 3.30600000000153e-06, 3.2770000000029165e-06, 3.305999999994591e-06, 3.29200000000196e-06, 3.27800000000239e-06, 3.2769999999959776e-06, 3.29200000000196e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.381" endtime="20201115 22:02:55.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.375" endtime="20201115 22:02:55.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.386" endtime="20201115 22:02:55.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.390" endtime="20201115 22:02:55.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.388" endtime="20201115 22:02:55.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.384" endtime="20201115 22:02:55.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.007" endtime="20201115 22:02:55.411"></status>
</kw>
<msg timestamp="20201115 22:02:55.411" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.420" endtime="20201115 22:02:55.442"></status>
</kw>
<msg timestamp="20201115 22:02:55.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.418" endtime="20201115 22:02:55.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.443" endtime="20201115 22:02:55.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.446" endtime="20201115 22:02:55.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.416" endtime="20201115 22:02:55.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.413" endtime="20201115 22:02:55.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.456" endtime="20201115 22:02:55.743"></status>
</kw>
<msg timestamp="20201115 22:02:55.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023699931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023703208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.454" endtime="20201115 22:02:55.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023699931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023703208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.748" endtime="20201115 22:02:55.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.756" endtime="20201115 22:02:55.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.451" endtime="20201115 22:02:55.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.449" endtime="20201115 22:02:55.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.763" level="INFO">${RESULT} = [{'time': 0.023703208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.276999999999447e-06, 'source_diff': 3.276999999999447e-06}, {'time': 0.023859889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:55.760" endtime="20201115 22:02:55.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.777" level="INFO">${OVERHEAD} = {'diff': [3.276999999999447e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.2919999999984906e-06, 3.27800000000239e-06, 3.319000000001626e-06, 3.2919999999984906e-06, 3.2...</msg>
<status status="PASS" starttime="20201115 22:02:55.764" endtime="20201115 22:02:55.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.782" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.781" endtime="20201115 22:02:55.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.784" level="INFO">VALUE: [3.276999999999447e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.2919999999984906e-06, 3.27800000000239e-06, 3.319000000001626e-06, 3.2919999999984906e-06, 3.2770000000029165e-06, 3.290999999999017e-06, 3.3050000000020563e-06, 3.2779999999989207e-06, 3.27800000000239e-06, 3.249999999999781e-06, 3.304999999998587e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.2779999999989207e-06, 3.2639999999993508e-06, 3.30600000000153e-06, 3.2779999999989207e-06, 3.27800000000239e-06, 3.30600000000153e-06, 3.3199999999976304e-06, 3.2919999999984906e-06, 3.3050000000020563e-06, 3.27800000000239e-06, 3.3059999999980605e-06, 3.2079999999976017e-06, 3.2919999999984906e-06, 3.374999999999906e-06, 3.333000000001196e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.2910000000024864e-06, 3.2779999999989207e-06, 3.3050000000020563e-06, 3.30600000000153e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.276999999999447e-06, 3.249999999999781e-06, 3.2910000000024864e-06, 3.2779999999989207e-06, 3.27800000000239e-06, 3.3050000000020563e-06, 3.2230000000001147e-06, 3.27800000000239e-06, 3.29200000000196e-06, 3.2779999999989207e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.783" endtime="20201115 22:02:55.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.778" endtime="20201115 22:02:55.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.788" endtime="20201115 22:02:55.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.792" endtime="20201115 22:02:55.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.790" endtime="20201115 22:02:55.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.786" endtime="20201115 22:02:55.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.411" endtime="20201115 22:02:55.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.803" endtime="20201115 22:02:55.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.802" endtime="20201115 22:02:55.813"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.815" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.825" endtime="20201115 22:02:55.848"></status>
</kw>
<msg timestamp="20201115 22:02:55.849" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.823" endtime="20201115 22:02:55.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.850" endtime="20201115 22:02:55.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.852" endtime="20201115 22:02:55.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.820" endtime="20201115 22:02:55.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.818" endtime="20201115 22:02:55.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.862" endtime="20201115 22:02:56.149"></status>
</kw>
<msg timestamp="20201115 22:02:56.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028431333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028434819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.860" endtime="20201115 22:02:56.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028431333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028434819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.154" endtime="20201115 22:02:56.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.162" endtime="20201115 22:02:56.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.858" endtime="20201115 22:02:56.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.856" endtime="20201115 22:02:56.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.169" level="INFO">${RESULT} = [{'time': 0.028434819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.028601403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.166" endtime="20201115 22:02:56.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.183" level="INFO">${OVERHEAD} = {'diff': [3.486000000000461e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.445000000001225e-06, 3.486000000000461e-06, 3.5000...</msg>
<status status="PASS" starttime="20201115 22:02:56.170" endtime="20201115 22:02:56.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.188" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.187" endtime="20201115 22:02:56.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.191" level="INFO">VALUE: [3.486000000000461e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.445000000001225e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4730000000003647e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4719999999974216e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.5140000000030702e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.5139999999961313e-06, 3.5140000000030702e-06, 3.4860000000039304e-06, 3.5139999999961313e-06, 3.4720000000043605e-06, 3.5139999999961313e-06, 3.4860000000039304e-06, 3.5139999999961313e-06, 3.4719999999974216e-06, 3.4450000000046943e-06, 3.4860000000039304e-06, 3.4999999999965614e-06, 3.473000000003834e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.541999999995271e-06, 3.4719999999974216e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4030000000059846e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.189" endtime="20201115 22:02:56.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.184" endtime="20201115 22:02:56.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.194" endtime="20201115 22:02:56.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.198" endtime="20201115 22:02:56.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.196" endtime="20201115 22:02:56.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.193" endtime="20201115 22:02:56.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.816" endtime="20201115 22:02:56.219"></status>
</kw>
<msg timestamp="20201115 22:02:56.219" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.228" endtime="20201115 22:02:56.250"></status>
</kw>
<msg timestamp="20201115 22:02:56.250" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.227" endtime="20201115 22:02:56.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.251" endtime="20201115 22:02:56.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.254" endtime="20201115 22:02:56.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.224" endtime="20201115 22:02:56.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.222" endtime="20201115 22:02:56.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.263" endtime="20201115 22:02:56.551"></status>
</kw>
<msg timestamp="20201115 22:02:56.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024200472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024203944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.262" endtime="20201115 22:02:56.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024200472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024203944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.555" endtime="20201115 22:02:56.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.563" endtime="20201115 22:02:56.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.259" endtime="20201115 22:02:56.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.257" endtime="20201115 22:02:56.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.570" level="INFO">${RESULT} = [{'time': 0.024203944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.024374458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.567" endtime="20201115 22:02:56.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.584" level="INFO">${OVERHEAD} = {'diff': [3.472000000000891e-06, 3.486000000000461e-06, 3.5690000000018762e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.4...</msg>
<status status="PASS" starttime="20201115 22:02:56.571" endtime="20201115 22:02:56.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.590" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.588" endtime="20201115 22:02:56.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.592" level="INFO">VALUE: [3.472000000000891e-06, 3.486000000000461e-06, 3.5690000000018762e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.4300000000021813e-06, 3.486000000000461e-06, 3.526999999999697e-06, 3.5279999999991707e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.5559999999983105e-06, 3.4869999999999346e-06, 3.5140000000030702e-06, 3.4590000000007948e-06, 3.500000000000031e-06, 3.4869999999999346e-06, 3.458000000001321e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.55600000000178e-06, 3.458000000001321e-06, 3.4579999999978517e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.472000000000891e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.431000000001655e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4439999999982818e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.5140000000030702e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.5139999999961313e-06, 3.4999999999965614e-06, 3.4860000000039304e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.591" endtime="20201115 22:02:56.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.586" endtime="20201115 22:02:56.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.595" endtime="20201115 22:02:56.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.599" endtime="20201115 22:02:56.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.597" endtime="20201115 22:02:56.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.594" endtime="20201115 22:02:56.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.220" endtime="20201115 22:02:56.620"></status>
</kw>
<msg timestamp="20201115 22:02:56.620" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.629" endtime="20201115 22:02:56.652"></status>
</kw>
<msg timestamp="20201115 22:02:56.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.628" endtime="20201115 22:02:56.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.656" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.654" endtime="20201115 22:02:56.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.657" endtime="20201115 22:02:56.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.625" endtime="20201115 22:02:56.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.623" endtime="20201115 22:02:56.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.666" endtime="20201115 22:02:56.953"></status>
</kw>
<msg timestamp="20201115 22:02:56.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025246597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025250069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.665" endtime="20201115 22:02:56.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025246597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025250069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.958" endtime="20201115 22:02:56.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.966" endtime="20201115 22:02:56.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.662" endtime="20201115 22:02:56.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.660" endtime="20201115 22:02:56.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.973" level="INFO">${RESULT} = [{'time': 0.025250069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.025417528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.970" endtime="20201115 22:02:56.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.992" level="INFO">${OVERHEAD} = {'diff': [3.472000000000891e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.5410000000027364e-06, 3.4859999999969915e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.5559999999983105e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:02:56.979" endtime="20201115 22:02:56.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.996" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.995" endtime="20201115 22:02:56.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.999" level="INFO">VALUE: [3.472000000000891e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.5410000000027364e-06, 3.4859999999969915e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.5559999999983105e-06, 3.4590000000007948e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.54200000000221e-06, 3.486000000000461e-06, 3.5140000000030702e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.4869999999999346e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.486000000000461e-06, 3.4439999999982818e-06, 3.4590000000007948e-06, 3.4579999999978517e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.4169999999986156e-06, 3.4590000000007948e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.458000000001321e-06, 3.5139999999996008e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.5550000000023063e-06, 3.541999999995271e-06, 3.5550000000023063e-06, 3.4860000000039304e-06, 3.4720000000043605e-06, 3.4719999999974216e-06, 3.5000000000035003e-06, 3.4719999999974216e-06, 3.4999999999965614e-06, 3.5139999999961313e-06, 3.5000000000035003e-06, 3.4309999999981855e-06, 3.4859999999969915e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.998" endtime="20201115 22:02:56.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.993" endtime="20201115 22:02:57.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.003" endtime="20201115 22:02:57.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.006" endtime="20201115 22:02:57.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.005" endtime="20201115 22:02:57.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.001" endtime="20201115 22:02:57.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.621" endtime="20201115 22:02:57.027"></status>
</kw>
<msg timestamp="20201115 22:02:57.027" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.037" endtime="20201115 22:02:57.059"></status>
</kw>
<msg timestamp="20201115 22:02:57.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.035" endtime="20201115 22:02:57.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.060" endtime="20201115 22:02:57.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.063" endtime="20201115 22:02:57.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.032" endtime="20201115 22:02:57.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.030" endtime="20201115 22:02:57.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.073" endtime="20201115 22:02:57.360"></status>
</kw>
<msg timestamp="20201115 22:02:57.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024755333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024758819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.071" endtime="20201115 22:02:57.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024755333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024758819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.365" endtime="20201115 22:02:57.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.373" endtime="20201115 22:02:57.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.068" endtime="20201115 22:02:57.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.066" endtime="20201115 22:02:57.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.380" level="INFO">${RESULT} = [{'time': 0.024758819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.024926167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.377" endtime="20201115 22:02:57.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.395" level="INFO">${OVERHEAD} = {'diff': [3.486000000000461e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.4869999999999346e-06, 3.500000000000031e-06, 3.4719999999974216e-06, 3.4859999999969915e-06, 3.5139999999996008e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:02:57.381" endtime="20201115 22:02:57.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.400" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.399" endtime="20201115 22:02:57.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.402" level="INFO">VALUE: [3.486000000000461e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.4869999999999346e-06, 3.500000000000031e-06, 3.4719999999974216e-06, 3.4859999999969915e-06, 3.5139999999996008e-06, 3.472000000000891e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.583000000001446e-06, 3.500000000000031e-06, 3.57000000000135e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.5559999999983105e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.4719999999974216e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4730000000003647e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.4869999999999346e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4169999999986156e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.4860000000039304e-06, 3.4999999999965614e-06, 3.4860000000039304e-06, 3.486999999996465e-06, 3.4719999999974216e-06, 3.4719999999974216e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4450000000046943e-06, 3.4860000000039304e-06, 3.4859999999969915e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.401" endtime="20201115 22:02:57.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.396" endtime="20201115 22:02:57.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.406" endtime="20201115 22:02:57.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.410" endtime="20201115 22:02:57.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.408" endtime="20201115 22:02:57.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.404" endtime="20201115 22:02:57.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.028" endtime="20201115 22:02:57.430"></status>
</kw>
<msg timestamp="20201115 22:02:57.431" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.440" endtime="20201115 22:02:57.461"></status>
</kw>
<msg timestamp="20201115 22:02:57.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.438" endtime="20201115 22:02:57.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.462" endtime="20201115 22:02:57.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.465" endtime="20201115 22:02:57.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.436" endtime="20201115 22:02:57.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.433" endtime="20201115 22:02:57.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.474" endtime="20201115 22:02:57.762"></status>
</kw>
<msg timestamp="20201115 22:02:57.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023392597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.473" endtime="20201115 22:02:57.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023392597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.767" endtime="20201115 22:02:57.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.775" endtime="20201115 22:02:57.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.470" endtime="20201115 22:02:57.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.468" endtime="20201115 22:02:57.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.782" level="INFO">${RESULT} = [{'time': 0.023396069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.023561083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:57.779" endtime="20201115 22:02:57.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.796" level="INFO">${OVERHEAD} = {'diff': [3.4719999999974216e-06, 3.500000000000031e-06, 3.4859999999969915e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.52800000000264e-06, 3.486000000000461e-06, 3.500...</msg>
<status status="PASS" starttime="20201115 22:02:57.783" endtime="20201115 22:02:57.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.801" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.800" endtime="20201115 22:02:57.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.803" level="INFO">VALUE: [3.4719999999974216e-06, 3.500000000000031e-06, 3.4859999999969915e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.472000000000891e-06, 3.52800000000264e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.540999999999267e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.4439999999982818e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.4859999999969915e-06, 3.54200000000221e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.4730000000003647e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.4859999999969915e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.4309999999981855e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.5419999999987406e-06, 3.5140000000030702e-06, 3.4730000000003647e-06, 3.4859999999969915e-06, 3.4860000000039304e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.802" endtime="20201115 22:02:57.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.797" endtime="20201115 22:02:57.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.807" endtime="20201115 22:02:57.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.810" endtime="20201115 22:02:57.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.809" endtime="20201115 22:02:57.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.805" endtime="20201115 22:02:57.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.431" endtime="20201115 22:02:57.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.814" endtime="20201115 22:02:57.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.813" endtime="20201115 22:02:57.831"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.834" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.843" endtime="20201115 22:02:57.863"></status>
</kw>
<msg timestamp="20201115 22:02:57.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.841" endtime="20201115 22:02:57.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.865" endtime="20201115 22:02:57.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.867" endtime="20201115 22:02:57.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.839" endtime="20201115 22:02:57.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.836" endtime="20201115 22:02:57.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.877" endtime="20201115 22:02:58.165"></status>
</kw>
<msg timestamp="20201115 22:02:58.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:57.876" endtime="20201115 22:02:58.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024715806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0247195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:58.169" endtime="20201115 22:02:58.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.178" endtime="20201115 22:02:58.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.873" endtime="20201115 22:02:58.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.871" endtime="20201115 22:02:58.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.185" level="INFO">${RESULT} = [{'time': 0.0247195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.024900014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:58.181" endtime="20201115 22:02:58.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.198" level="INFO">${OVERHEAD} = {'diff': [3.693999999998532e-06, 3.708000000001571e-06, 3.709000000001045e-06, 3.6949999999980054e-06, 3.7079999999981017e-06, 3.651999999999822e-06, 3.6809999999984355e-06, 3.7079999999981017e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:02:58.186" endtime="20201115 22:02:58.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.203" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.202" endtime="20201115 22:02:58.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.206" level="INFO">VALUE: [3.693999999998532e-06, 3.708000000001571e-06, 3.709000000001045e-06, 3.6949999999980054e-06, 3.7079999999981017e-06, 3.651999999999822e-06, 3.6809999999984355e-06, 3.7079999999981017e-06, 3.709000000001045e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.679999999998962e-06, 3.7219999999976716e-06, 3.708000000001571e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 3.709000000001045e-06, 3.6809999999984355e-06, 3.722000000001141e-06, 3.679999999998962e-06, 3.736000000000711e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.679999999998962e-06, 3.679999999998962e-06, 3.7079999999981017e-06, 3.736000000000711e-06, 3.708000000001571e-06, 3.7230000000006147e-06, 3.6940000000020012e-06, 3.722000000001141e-06, 3.681000000001905e-06, 3.708000000001571e-06, 3.679999999998962e-06, 3.693999999998532e-06, 3.693999999998532e-06, 3.679999999998962e-06, 3.6809999999984355e-06, 3.7639999999963814e-06, 3.7089999999975753e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.7080000000050406e-06, 3.6810000000053744e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 3.7079999999981017e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.204" endtime="20201115 22:02:58.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.199" endtime="20201115 22:02:58.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.209" endtime="20201115 22:02:58.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.213" endtime="20201115 22:02:58.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.211" endtime="20201115 22:02:58.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.208" endtime="20201115 22:02:58.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.834" endtime="20201115 22:02:58.234"></status>
</kw>
<msg timestamp="20201115 22:02:58.234" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.243" endtime="20201115 22:02:58.265"></status>
</kw>
<msg timestamp="20201115 22:02:58.265" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.242" endtime="20201115 22:02:58.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.268" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.266" endtime="20201115 22:02:58.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.269" endtime="20201115 22:02:58.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.239" endtime="20201115 22:02:58.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.237" endtime="20201115 22:02:58.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.279" endtime="20201115 22:02:58.566"></status>
</kw>
<msg timestamp="20201115 22:02:58.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024081819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024085542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.277" endtime="20201115 22:02:58.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024081819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024085542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.571" endtime="20201115 22:02:58.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.579" endtime="20201115 22:02:58.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.275" endtime="20201115 22:02:58.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.273" endtime="20201115 22:02:58.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.586" level="INFO">${RESULT} = [{'time': 0.024085542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.024267833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:58.583" endtime="20201115 22:02:58.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.600" level="INFO">${OVERHEAD} = {'diff': [3.7230000000006147e-06, 3.7219999999976716e-06, 3.722000000001141e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.693999999998532e-06, 3.722000000001141e-06, 3.709000000001045e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:02:58.587" endtime="20201115 22:02:58.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.605" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.604" endtime="20201115 22:02:58.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.608" level="INFO">VALUE: [3.7230000000006147e-06, 3.7219999999976716e-06, 3.722000000001141e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.693999999998532e-06, 3.722000000001141e-06, 3.709000000001045e-06, 3.695000000001475e-06, 3.722000000001141e-06, 3.6940000000020012e-06, 3.667000000002335e-06, 3.693999999998532e-06, 3.6800000000024313e-06, 3.7079999999981017e-06, 3.7089999999975753e-06, 3.6389999999997258e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.681000000001905e-06, 3.6949999999980054e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.708000000001571e-06, 3.693999999998532e-06, 3.6940000000020012e-06, 3.709000000001045e-06, 3.6109999999971165e-06, 3.763999999999851e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.679999999998962e-06, 3.722000000001141e-06, 3.763999999999851e-06, 3.708000000001571e-06, 3.722000000001141e-06, 3.6940000000020012e-06, 3.7230000000006147e-06, 3.695000000001475e-06, 3.6800000000024313e-06, 3.7089999999975753e-06, 3.6950000000049443e-06, 3.7089999999975753e-06, 3.7080000000050406e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 3.6809999999984355e-06, 3.6809999999984355e-06, 3.7219999999976716e-06, 3.7220000000046105e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.606" endtime="20201115 22:02:58.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.601" endtime="20201115 22:02:58.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.611" endtime="20201115 22:02:58.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.614" endtime="20201115 22:02:58.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.613" endtime="20201115 22:02:58.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.609" endtime="20201115 22:02:58.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.234" endtime="20201115 22:02:58.635"></status>
</kw>
<msg timestamp="20201115 22:02:58.635" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.645" endtime="20201115 22:02:58.666"></status>
</kw>
<msg timestamp="20201115 22:02:58.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.644" endtime="20201115 22:02:58.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.669" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.668" endtime="20201115 22:02:58.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.671" endtime="20201115 22:02:58.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.640" endtime="20201115 22:02:58.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.638" endtime="20201115 22:02:58.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.681" endtime="20201115 22:02:58.969"></status>
</kw>
<msg timestamp="20201115 22:02:58.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024351694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024355403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.679" endtime="20201115 22:02:58.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024351694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024355403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.973" endtime="20201115 22:02:58.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.981" endtime="20201115 22:02:58.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.676" endtime="20201115 22:02:58.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.674" endtime="20201115 22:02:58.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.988" level="INFO">${RESULT} = [{'time': 0.024355403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.709000000001045e-06, 'source_diff': 3.709000000001045e-06}, {'time': 0.024535444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.985" endtime="20201115 22:02:58.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.002" level="INFO">${OVERHEAD} = {'diff': [3.709000000001045e-06, 3.665999999999392e-06, 3.6809999999984355e-06, 3.7079999999981017e-06, 3.651999999999822e-06, 3.7230000000006147e-06, 3.693999999998532e-06, 3.7370000000001846e-06, 3....</msg>
<status status="PASS" starttime="20201115 22:02:58.989" endtime="20201115 22:02:59.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.007" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.006" endtime="20201115 22:02:59.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.010" level="INFO">VALUE: [3.709000000001045e-06, 3.665999999999392e-06, 3.6809999999984355e-06, 3.7079999999981017e-06, 3.651999999999822e-06, 3.7230000000006147e-06, 3.693999999998532e-06, 3.7370000000001846e-06, 3.667000000002335e-06, 3.709000000001045e-06, 3.695000000001475e-06, 3.693999999998532e-06, 3.750000000000281e-06, 3.695000000001475e-06, 3.6800000000024313e-06, 3.6940000000020012e-06, 3.695000000001475e-06, 3.695000000001475e-06, 3.693999999998532e-06, 3.7219999999976716e-06, 3.6940000000020012e-06, 3.695000000001475e-06, 3.679999999998962e-06, 3.693999999998532e-06, 3.6949999999980054e-06, 3.667000000002335e-06, 3.709000000001045e-06, 3.763999999999851e-06, 3.679999999998962e-06, 3.709000000001045e-06, 3.693999999998532e-06, 3.681000000001905e-06, 3.693999999998532e-06, 3.638000000000252e-06, 3.7079999999981017e-06, 3.7089999999975753e-06, 3.695000000001475e-06, 3.7079999999981017e-06, 3.7219999999976716e-06, 3.693999999998532e-06, 3.6950000000049443e-06, 3.6949999999980054e-06, 3.6800000000059008e-06, 3.6389999999997258e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.6949999999980054e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.7090000000045142e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.008" endtime="20201115 22:02:59.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.003" endtime="20201115 22:02:59.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.013" endtime="20201115 22:02:59.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.017" endtime="20201115 22:02:59.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.015" endtime="20201115 22:02:59.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.011" endtime="20201115 22:02:59.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.636" endtime="20201115 22:02:59.038"></status>
</kw>
<msg timestamp="20201115 22:02:59.038" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.047" endtime="20201115 22:02:59.069"></status>
</kw>
<msg timestamp="20201115 22:02:59.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.046" endtime="20201115 22:02:59.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.072" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.071" endtime="20201115 22:02:59.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.073" endtime="20201115 22:02:59.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.043" endtime="20201115 22:02:59.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.041" endtime="20201115 22:02:59.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.083" endtime="20201115 22:02:59.371"></status>
</kw>
<msg timestamp="20201115 22:02:59.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024100097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024103792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.081" endtime="20201115 22:02:59.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024100097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024103792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.375" endtime="20201115 22:02:59.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.384" endtime="20201115 22:02:59.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.078" endtime="20201115 22:02:59.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.077" endtime="20201115 22:02:59.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.391" level="INFO">${RESULT} = [{'time': 0.024103792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6949999999980054e-06, 'source_diff': 3.6949999999980054e-06}, {'time': 0.024288833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:59.387" endtime="20201115 22:02:59.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.404" level="INFO">${OVERHEAD} = {'diff': [3.6949999999980054e-06, 3.679999999998962e-06, 3.708000000001571e-06, 3.6949999999980054e-06, 3.709000000001045e-06, 3.709000000001045e-06, 3.709000000001045e-06, 3.679999999998962e-06, 3.69...</msg>
<status status="PASS" starttime="20201115 22:02:59.392" endtime="20201115 22:02:59.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.409" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.408" endtime="20201115 22:02:59.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.412" level="INFO">VALUE: [3.6949999999980054e-06, 3.679999999998962e-06, 3.708000000001571e-06, 3.6949999999980054e-06, 3.709000000001045e-06, 3.709000000001045e-06, 3.709000000001045e-06, 3.679999999998962e-06, 3.6949999999980054e-06, 3.695000000001475e-06, 3.7359999999972415e-06, 3.679999999998962e-06, 3.695000000001475e-06, 3.708000000001571e-06, 3.695000000001475e-06, 3.709000000001045e-06, 3.708000000001571e-06, 3.681000000001905e-06, 3.6940000000020012e-06, 3.6940000000020012e-06, 3.6660000000028614e-06, 3.7089999999975753e-06, 3.6529999999992957e-06, 3.693999999998532e-06, 3.679999999998962e-06, 3.708000000001571e-06, 3.693999999998532e-06, 3.708000000001571e-06, 3.6809999999984355e-06, 3.7089999999975753e-06, 3.736000000000711e-06, 3.6809999999984355e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.6669999999988656e-06, 3.7219999999976716e-06, 3.695000000001475e-06, 3.7219999999976716e-06, 3.695000000001475e-06, 3.6940000000020012e-06, 3.7359999999972415e-06, 3.7219999999976716e-06, 3.693999999998532e-06, 3.679999999998962e-06, 3.693999999998532e-06, 3.6800000000059008e-06, 3.6940000000054707e-06, 3.7079999999981017e-06, 3.6529999999992957e-06, 3.6949999999980054e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.411" endtime="20201115 22:02:59.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.405" endtime="20201115 22:02:59.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.416" endtime="20201115 22:02:59.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.420" endtime="20201115 22:02:59.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.418" endtime="20201115 22:02:59.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.414" endtime="20201115 22:02:59.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.039" endtime="20201115 22:02:59.441"></status>
</kw>
<msg timestamp="20201115 22:02:59.441" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.451" endtime="20201115 22:02:59.471"></status>
</kw>
<msg timestamp="20201115 22:02:59.471" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.449" endtime="20201115 22:02:59.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.474" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.472" endtime="20201115 22:02:59.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.475" endtime="20201115 22:02:59.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.446" endtime="20201115 22:02:59.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.444" endtime="20201115 22:02:59.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.484" endtime="20201115 22:02:59.770"></status>
</kw>
<msg timestamp="20201115 22:02:59.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022402125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.483" endtime="20201115 22:02:59.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022402125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.774" endtime="20201115 22:02:59.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.782" endtime="20201115 22:02:59.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.480" endtime="20201115 22:02:59.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.478" endtime="20201115 22:02:59.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.789" level="INFO">${RESULT} = [{'time': 0.022405806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.681000000001905e-06, 'source_diff': 3.681000000001905e-06}, {'time': 0.022591264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.786" endtime="20201115 22:02:59.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.803" level="INFO">${OVERHEAD} = {'diff': [3.681000000001905e-06, 3.763999999999851e-06, 3.695000000001475e-06, 3.6809999999984355e-06, 3.708000000001571e-06, 3.750000000000281e-06, 3.709000000001045e-06, 3.6660000000028614e-06, 3.69...</msg>
<status status="PASS" starttime="20201115 22:02:59.790" endtime="20201115 22:02:59.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.808" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.807" endtime="20201115 22:02:59.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.811" level="INFO">VALUE: [3.681000000001905e-06, 3.763999999999851e-06, 3.695000000001475e-06, 3.6809999999984355e-06, 3.708000000001571e-06, 3.750000000000281e-06, 3.709000000001045e-06, 3.6660000000028614e-06, 3.6949999999980054e-06, 3.7079999999981017e-06, 3.6809999999984355e-06, 3.6940000000020012e-06, 3.6949999999980054e-06, 3.693999999998532e-06, 3.651999999999822e-06, 3.736000000000711e-06, 3.695000000001475e-06, 3.709000000001045e-06, 3.681000000001905e-06, 3.693999999998532e-06, 3.7089999999975753e-06, 3.708000000001571e-06, 3.681000000001905e-06, 3.708000000001571e-06, 3.695000000001475e-06, 3.7079999999981017e-06, 3.6800000000024313e-06, 3.722000000001141e-06, 3.722000000001141e-06, 3.6940000000020012e-06, 3.653000000002765e-06, 3.708000000001571e-06, 3.695000000001475e-06, 3.6940000000020012e-06, 3.665999999999392e-06, 3.708000000001571e-06, 3.708000000001571e-06, 3.665999999999392e-06, 3.681000000001905e-06, 3.709000000001045e-06, 3.695000000001475e-06, 3.6809999999984355e-06, 3.625000000000156e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.709000000001045e-06, 3.7219999999976716e-06, 3.6949999999980054e-06, 3.6810000000053744e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.809" endtime="20201115 22:02:59.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.804" endtime="20201115 22:02:59.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.814" endtime="20201115 22:02:59.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.818" endtime="20201115 22:02:59.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.816" endtime="20201115 22:02:59.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.813" endtime="20201115 22:02:59.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.442" endtime="20201115 22:02:59.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.833" endtime="20201115 22:02:59.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.832" endtime="20201115 22:02:59.839"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.841" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.851" endtime="20201115 22:02:59.872"></status>
</kw>
<msg timestamp="20201115 22:02:59.873" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.849" endtime="20201115 22:02:59.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.875" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.874" endtime="20201115 22:02:59.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.876" endtime="20201115 22:02:59.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.846" endtime="20201115 22:02:59.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.844" endtime="20201115 22:02:59.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.886" endtime="20201115 22:03:00.174"></status>
</kw>
<msg timestamp="20201115 22:03:00.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0267555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026759417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:59.884" endtime="20201115 22:03:00.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0267555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026759417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:00.178" endtime="20201115 22:03:00.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.187" endtime="20201115 22:03:00.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.882" endtime="20201115 22:03:00.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.880" endtime="20201115 22:03:00.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.194" level="INFO">${RESULT} = [{'time': 0.026759417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.026956431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.190" endtime="20201115 22:03:00.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.208" level="INFO">${OVERHEAD} = {'diff': [3.916999999999116e-06, 3.916999999999116e-06, 3.889000000003445e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.9449999999982555e-06, 3.888999999999976e-06, 3.902...</msg>
<status status="PASS" starttime="20201115 22:03:00.195" endtime="20201115 22:03:00.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.213" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.212" endtime="20201115 22:03:00.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.216" level="INFO">VALUE: [3.916999999999116e-06, 3.916999999999116e-06, 3.889000000003445e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.9449999999982555e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.917000000002585e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.915999999999642e-06, 3.917000000002585e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.915999999999642e-06, 3.903000000006485e-06, 3.902000000000072e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.957999999998352e-06, 3.915999999999642e-06, 3.861000000000836e-06, 3.915999999999642e-06, 3.915999999999642e-06, 3.902000000000072e-06, 3.902000000000072e-06, 3.9309999999986855e-06, 3.903000000006485e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902000000000072e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.214" endtime="20201115 22:03:00.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.209" endtime="20201115 22:03:00.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.219" endtime="20201115 22:03:00.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.223" endtime="20201115 22:03:00.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.221" endtime="20201115 22:03:00.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.217" endtime="20201115 22:03:00.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.842" endtime="20201115 22:03:00.243"></status>
</kw>
<msg timestamp="20201115 22:03:00.244" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.253" endtime="20201115 22:03:00.275"></status>
</kw>
<msg timestamp="20201115 22:03:00.275" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.251" endtime="20201115 22:03:00.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.278" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.276" endtime="20201115 22:03:00.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.279" endtime="20201115 22:03:00.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.249" endtime="20201115 22:03:00.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.246" endtime="20201115 22:03:00.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.289" endtime="20201115 22:03:00.576"></status>
</kw>
<msg timestamp="20201115 22:03:00.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024019681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024023514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.287" endtime="20201115 22:03:00.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024019681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024023514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.580" endtime="20201115 22:03:00.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.589" endtime="20201115 22:03:00.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.284" endtime="20201115 22:03:00.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.283" endtime="20201115 22:03:00.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.596" level="INFO">${RESULT} = [{'time': 0.024023514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.024221861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.592" endtime="20201115 22:03:00.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.610" level="INFO">${OVERHEAD} = {'diff': [3.832999999998227e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.929999999999212e-06, 3.959000000001295e-06, 3.915999999999642e-06, 3.9160...</msg>
<status status="PASS" starttime="20201115 22:03:00.597" endtime="20201115 22:03:00.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.615" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.614" endtime="20201115 22:03:00.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.617" level="INFO">VALUE: [3.832999999998227e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.929999999999212e-06, 3.959000000001295e-06, 3.915999999999642e-06, 3.9160000000031114e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.9309999999986855e-06, 3.915999999999642e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.888000000000502e-06, 3.917000000002585e-06, 3.915999999999642e-06, 3.903000000003015e-06, 3.832999999998227e-06, 3.957999999998352e-06, 3.902000000000072e-06, 3.943999999998782e-06, 3.901999999996603e-06, 3.973000000000865e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.833999999994231e-06, 3.847000000001266e-06, 3.888999999999976e-06, 3.957999999998352e-06, 3.929999999999212e-06, 3.943999999998782e-06, 3.929999999999212e-06, 3.915999999999642e-06, 3.9170000000060545e-06, 3.916999999999116e-06, 3.875000000000406e-06, 3.902999999999546e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.616" endtime="20201115 22:03:00.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.611" endtime="20201115 22:03:00.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.621" endtime="20201115 22:03:00.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.624" endtime="20201115 22:03:00.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.623" endtime="20201115 22:03:00.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.619" endtime="20201115 22:03:00.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.244" endtime="20201115 22:03:00.645"></status>
</kw>
<msg timestamp="20201115 22:03:00.645" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.655" endtime="20201115 22:03:00.676"></status>
</kw>
<msg timestamp="20201115 22:03:00.677" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.653" endtime="20201115 22:03:00.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.680" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.678" endtime="20201115 22:03:00.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.681" endtime="20201115 22:03:00.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.650" endtime="20201115 22:03:00.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.648" endtime="20201115 22:03:00.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.690" endtime="20201115 22:03:00.979"></status>
</kw>
<msg timestamp="20201115 22:03:00.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024186958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024190889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.689" endtime="20201115 22:03:00.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024186958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024190889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.983" endtime="20201115 22:03:00.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.991" endtime="20201115 22:03:00.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.686" endtime="20201115 22:03:00.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.684" endtime="20201115 22:03:00.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.998" level="INFO">${RESULT} = [{'time': 0.024190889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.024386819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:00.995" endtime="20201115 22:03:00.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.013" level="INFO">${OVERHEAD} = {'diff': [3.9309999999986855e-06, 3.861000000000836e-06, 3.9309999999986855e-06, 3.902999999999546e-06, 3.958000000001821e-06, 3.971999999997922e-06, 3.917000000002585e-06, 3.943999999998782e-06, 3.87...</msg>
<status status="PASS" starttime="20201115 22:03:01.000" endtime="20201115 22:03:01.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.017" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.016" endtime="20201115 22:03:01.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.020" level="INFO">VALUE: [3.9309999999986855e-06, 3.861000000000836e-06, 3.9309999999986855e-06, 3.902999999999546e-06, 3.958000000001821e-06, 3.971999999997922e-06, 3.917000000002585e-06, 3.943999999998782e-06, 3.875000000000406e-06, 3.902000000000072e-06, 3.916999999999116e-06, 3.902000000000072e-06, 3.916999999999116e-06, 3.917000000002585e-06, 3.916999999999116e-06, 3.9449999999982555e-06, 3.915999999999642e-06, 3.915999999999642e-06, 3.832999999998227e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.916999999999116e-06, 3.903000000003015e-06, 3.902999999999546e-06, 3.917000000002585e-06, 3.832999999998227e-06, 3.9449999999982555e-06, 3.86200000000031e-06, 3.83400000000117e-06, 3.917000000002585e-06, 3.902000000000072e-06, 3.917000000002585e-06, 3.903000000003015e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.916999999999116e-06, 3.916000000006581e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.9309999999986855e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.903000000006485e-06, 3.902999999999546e-06, 3.9170000000060545e-06, 3.916999999999116e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.902999999999546e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.018" endtime="20201115 22:03:01.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.014" endtime="20201115 22:03:01.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.023" endtime="20201115 22:03:01.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.027" endtime="20201115 22:03:01.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.025" endtime="20201115 22:03:01.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.021" endtime="20201115 22:03:01.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.646" endtime="20201115 22:03:01.048"></status>
</kw>
<msg timestamp="20201115 22:03:01.048" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.057" endtime="20201115 22:03:01.082"></status>
</kw>
<msg timestamp="20201115 22:03:01.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.055" endtime="20201115 22:03:01.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.084" endtime="20201115 22:03:01.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.087" endtime="20201115 22:03:01.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.053" endtime="20201115 22:03:01.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.051" endtime="20201115 22:03:01.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.096" endtime="20201115 22:03:01.383"></status>
</kw>
<msg timestamp="20201115 22:03:01.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023592889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.094" endtime="20201115 22:03:01.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023592889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.387" endtime="20201115 22:03:01.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.396" endtime="20201115 22:03:01.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.092" endtime="20201115 22:03:01.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.090" endtime="20201115 22:03:01.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.403" level="INFO">${RESULT} = [{'time': 0.023592889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.023790417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.399" endtime="20201115 22:03:01.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.417" level="INFO">${OVERHEAD} = {'diff': [3.902999999999546e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.929999999999212e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.9029...</msg>
<status status="PASS" starttime="20201115 22:03:01.404" endtime="20201115 22:03:01.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.421" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.420" endtime="20201115 22:03:01.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.424" level="INFO">VALUE: [3.902999999999546e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.929999999999212e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.915999999999642e-06, 3.916999999999116e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.9309999999986855e-06, 3.915999999999642e-06, 3.930000000002681e-06, 3.9309999999986855e-06, 3.971999999997922e-06, 3.916999999999116e-06, 3.902000000000072e-06, 3.931000000002155e-06, 3.929999999999212e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.929999999999212e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.917000000002585e-06, 3.902000000000072e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.847000000001266e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.930000000006151e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.943999999998782e-06, 3.916999999999116e-06, 3.957999999998352e-06, 3.819000000002126e-06, 3.888999999999976e-06, 3.888999999999976e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.422" endtime="20201115 22:03:01.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.418" endtime="20201115 22:03:01.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.427" endtime="20201115 22:03:01.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.431" endtime="20201115 22:03:01.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.429" endtime="20201115 22:03:01.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.425" endtime="20201115 22:03:01.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.048" endtime="20201115 22:03:01.452"></status>
</kw>
<msg timestamp="20201115 22:03:01.452" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.462" endtime="20201115 22:03:01.485"></status>
</kw>
<msg timestamp="20201115 22:03:01.485" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.461" endtime="20201115 22:03:01.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.488" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.486" endtime="20201115 22:03:01.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.489" endtime="20201115 22:03:01.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.458" endtime="20201115 22:03:01.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.455" endtime="20201115 22:03:01.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.498" endtime="20201115 22:03:01.788"></status>
</kw>
<msg timestamp="20201115 22:03:01.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026634458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026638375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.497" endtime="20201115 22:03:01.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026634458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026638375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.793" endtime="20201115 22:03:01.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.801" endtime="20201115 22:03:01.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.494" endtime="20201115 22:03:01.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.492" endtime="20201115 22:03:01.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.808" level="INFO">${RESULT} = [{'time': 0.026638375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.026835403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.805" endtime="20201115 22:03:01.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.822" level="INFO">${OVERHEAD} = {'diff': [3.916999999999116e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.915999999999642e-06, 3.916999999999116e-06, 3.959000000001295e-06, 3.9029...</msg>
<status status="PASS" starttime="20201115 22:03:01.809" endtime="20201115 22:03:01.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.827" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.826" endtime="20201115 22:03:01.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.830" level="INFO">VALUE: [3.916999999999116e-06, 3.888999999999976e-06, 3.915999999999642e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.915999999999642e-06, 3.916999999999116e-06, 3.959000000001295e-06, 3.902999999999546e-06, 3.888999999999976e-06, 3.861000000000836e-06, 3.888999999999976e-06, 3.9309999999986855e-06, 3.915999999999642e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.889000000003445e-06, 3.917000000002585e-06, 3.929999999999212e-06, 3.915999999999642e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.9859999999974915e-06, 3.888999999999976e-06, 3.929999999999212e-06, 3.916999999999116e-06, 3.929999999999212e-06, 3.902000000000072e-06, 3.957999999998352e-06, 3.902999999999546e-06, 3.875000000000406e-06, 3.902999999999546e-06, 3.902000000000072e-06, 3.9310000000056244e-06, 3.9170000000060545e-06, 3.9170000000060545e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.929999999999212e-06, 3.9309999999986855e-06, 3.902999999999546e-06, 3.902999999999546e-06, 3.915999999999642e-06, 3.902999999999546e-06, 3.916999999999116e-06, 3.902999999999546e-06, 3.916000000006581e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.828" endtime="20201115 22:03:01.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.823" endtime="20201115 22:03:01.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.833" endtime="20201115 22:03:01.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.836" endtime="20201115 22:03:01.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.835" endtime="20201115 22:03:01.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.831" endtime="20201115 22:03:01.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.453" endtime="20201115 22:03:01.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.840" endtime="20201115 22:03:01.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.840" endtime="20201115 22:03:01.858"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.860" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.870" endtime="20201115 22:03:01.897"></status>
</kw>
<msg timestamp="20201115 22:03:01.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.868" endtime="20201115 22:03:01.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.899" endtime="20201115 22:03:01.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.901" endtime="20201115 22:03:01.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.865" endtime="20201115 22:03:01.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.863" endtime="20201115 22:03:01.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.911" endtime="20201115 22:03:02.199"></status>
</kw>
<msg timestamp="20201115 22:03:02.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027919139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02792325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:01.910" endtime="20201115 22:03:02.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027919139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02792325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:02.203" endtime="20201115 22:03:02.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.212" endtime="20201115 22:03:02.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.907" endtime="20201115 22:03:02.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.905" endtime="20201115 22:03:02.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.219" level="INFO">${RESULT} = [{'time': 0.02792325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.028139458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:02.215" endtime="20201115 22:03:02.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.233" level="INFO">${OVERHEAD} = {'diff': [4.111000000001086e-06, 4.096999999998047e-06, 4.139000000000226e-06, 4.08400000000142e-06, 4.152999999999796e-06, 4.1109999999976166e-06, 4.139000000000226e-06, 4.097000000001516e-06, 4.1110...</msg>
<status status="PASS" starttime="20201115 22:03:02.220" endtime="20201115 22:03:02.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.237" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.236" endtime="20201115 22:03:02.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.240" level="INFO">VALUE: [4.111000000001086e-06, 4.096999999998047e-06, 4.139000000000226e-06, 4.08400000000142e-06, 4.152999999999796e-06, 4.1109999999976166e-06, 4.139000000000226e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.1249999999971865e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.11200000000056e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.11200000000056e-06, 4.193999999999032e-06, 4.09800000000099e-06, 4.083000000001946e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.110999999994147e-06, 4.08400000000142e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.055999999995341e-06, 4.111000000001086e-06, 4.179999999999462e-06, 4.111000000001086e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.238" endtime="20201115 22:03:02.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.234" endtime="20201115 22:03:02.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.243" endtime="20201115 22:03:02.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.247" endtime="20201115 22:03:02.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.245" endtime="20201115 22:03:02.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.241" endtime="20201115 22:03:02.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.861" endtime="20201115 22:03:02.268"></status>
</kw>
<msg timestamp="20201115 22:03:02.268" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.277" endtime="20201115 22:03:02.304"></status>
</kw>
<msg timestamp="20201115 22:03:02.304" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.275" endtime="20201115 22:03:02.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.307" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.305" endtime="20201115 22:03:02.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.308" endtime="20201115 22:03:02.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.273" endtime="20201115 22:03:02.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.271" endtime="20201115 22:03:02.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.318" endtime="20201115 22:03:02.607"></status>
</kw>
<msg timestamp="20201115 22:03:02.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024519014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.316" endtime="20201115 22:03:02.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024519014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024523111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.611" endtime="20201115 22:03:02.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.620" endtime="20201115 22:03:02.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.314" endtime="20201115 22:03:02.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.312" endtime="20201115 22:03:02.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.627" level="INFO">${RESULT} = [{'time': 0.024523111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.024736861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.623" endtime="20201115 22:03:02.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.640" level="INFO">${OVERHEAD} = {'diff': [4.097000000001516e-06, 4.096999999998047e-06, 4.09800000000099e-06, 4.125000000000656e-06, 4.08399999999795e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.125000...</msg>
<status status="PASS" starttime="20201115 22:03:02.628" endtime="20201115 22:03:02.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.645" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.644" endtime="20201115 22:03:02.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.648" level="INFO">VALUE: [4.097000000001516e-06, 4.096999999998047e-06, 4.09800000000099e-06, 4.125000000000656e-06, 4.08399999999795e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.152999999999796e-06, 4.152000000000322e-06, 4.082999999998477e-06, 4.1109999999976166e-06, 4.082999999998477e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.11200000000056e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 4.09799999999752e-06, 4.125000000000656e-06, 4.082999999998477e-06, 4.097000000001516e-06, 4.1109999999976166e-06, 4.125000000000656e-06, 4.11200000000056e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.083000000001946e-06, 4.124999999993717e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.165999999999892e-06, 4.04200000000271e-06, 4.096999999994577e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.646" endtime="20201115 22:03:02.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.641" endtime="20201115 22:03:02.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.651" endtime="20201115 22:03:02.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.655" endtime="20201115 22:03:02.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.653" endtime="20201115 22:03:02.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.649" endtime="20201115 22:03:02.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.268" endtime="20201115 22:03:02.676"></status>
</kw>
<msg timestamp="20201115 22:03:02.676" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.686" endtime="20201115 22:03:02.710"></status>
</kw>
<msg timestamp="20201115 22:03:02.711" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.683" endtime="20201115 22:03:02.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.713" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.712" endtime="20201115 22:03:02.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.714" endtime="20201115 22:03:02.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.681" endtime="20201115 22:03:02.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.679" endtime="20201115 22:03:02.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.724" endtime="20201115 22:03:03.011"></status>
</kw>
<msg timestamp="20201115 22:03:03.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023553361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023557458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.723" endtime="20201115 22:03:03.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023553361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023557458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.015" endtime="20201115 22:03:03.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.024" endtime="20201115 22:03:03.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.720" endtime="20201115 22:03:03.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.718" endtime="20201115 22:03:03.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.031" level="INFO">${RESULT} = [{'time': 0.023557458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.023769125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:03.027" endtime="20201115 22:03:03.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.045" level="INFO">${OVERHEAD} = {'diff': [4.097000000001516e-06, 4.1109999999976166e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.082999999998477e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.165999999999892e-06, 4.0970...</msg>
<status status="PASS" starttime="20201115 22:03:03.032" endtime="20201115 22:03:03.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.050" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.049" endtime="20201115 22:03:03.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.052" level="INFO">VALUE: [4.097000000001516e-06, 4.1109999999976166e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.082999999998477e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.165999999999892e-06, 4.097000000001516e-06, 4.09800000000099e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.166999999999366e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.1109999999976166e-06, 4.1109999999976166e-06, 4.1109999999976166e-06, 4.1249999999971865e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.166999999999366e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.096999999998047e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.111000000001086e-06, 4.082999999995007e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.152000000000322e-06, 4.138000000000752e-06, 4.069999999994911e-06, 4.111999999993621e-06, 4.110999999994147e-06, 4.139000000000226e-06, 4.096999999994577e-06, 4.110999999994147e-06, 4.111000000001086e-06, 4.082999999995007e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.051" endtime="20201115 22:03:03.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.046" endtime="20201115 22:03:03.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.055" endtime="20201115 22:03:03.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.059" endtime="20201115 22:03:03.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.058" endtime="20201115 22:03:03.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.054" endtime="20201115 22:03:03.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.676" endtime="20201115 22:03:03.080"></status>
</kw>
<msg timestamp="20201115 22:03:03.081" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.090" endtime="20201115 22:03:03.118"></status>
</kw>
<msg timestamp="20201115 22:03:03.118" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.088" endtime="20201115 22:03:03.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.121" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.119" endtime="20201115 22:03:03.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.122" endtime="20201115 22:03:03.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.086" endtime="20201115 22:03:03.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.083" endtime="20201115 22:03:03.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.131" endtime="20201115 22:03:03.419"></status>
</kw>
<msg timestamp="20201115 22:03:03.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025969431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025973556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.130" endtime="20201115 22:03:03.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025969431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025973556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.423" endtime="20201115 22:03:03.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.432" endtime="20201115 22:03:03.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.127" endtime="20201115 22:03:03.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.125" endtime="20201115 22:03:03.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.439" level="INFO">${RESULT} = [{'time': 0.025973556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1249999999971865e-06, 'source_diff': 4.1249999999971865e-06}, {'time': 0.026188028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:03.435" endtime="20201115 22:03:03.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.453" level="INFO">${OVERHEAD} = {'diff': [4.1249999999971865e-06, 4.1249999999971865e-06, 4.097000000001516e-06, 4.041999999999241e-06, 4.09799999999752e-06, 4.125000000000656e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.1249...</msg>
<status status="PASS" starttime="20201115 22:03:03.440" endtime="20201115 22:03:03.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.457" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.456" endtime="20201115 22:03:03.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.460" level="INFO">VALUE: [4.1249999999971865e-06, 4.1249999999971865e-06, 4.097000000001516e-06, 4.041999999999241e-06, 4.09799999999752e-06, 4.125000000000656e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.1249999999971865e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.082999999998477e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.152000000000322e-06, 4.083000000001946e-06, 4.125000000000656e-06, 4.153000000003265e-06, 4.1109999999976166e-06, 4.11200000000056e-06, 4.069000000002376e-06, 4.097000000001516e-06, 4.09800000000099e-06, 4.110999999994147e-06, 4.097000000001516e-06, 4.110999999994147e-06, 4.110999999994147e-06, 4.083000000001946e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.082999999995007e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.165999999999892e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.0549999999958675e-06, 4.111000000001086e-06, 4.05600000000228e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.458" endtime="20201115 22:03:03.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.453" endtime="20201115 22:03:03.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.464" endtime="20201115 22:03:03.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.468" endtime="20201115 22:03:03.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.466" endtime="20201115 22:03:03.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.462" endtime="20201115 22:03:03.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.081" endtime="20201115 22:03:03.489"></status>
</kw>
<msg timestamp="20201115 22:03:03.489" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.499" endtime="20201115 22:03:03.525"></status>
</kw>
<msg timestamp="20201115 22:03:03.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.497" endtime="20201115 22:03:03.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.526" endtime="20201115 22:03:03.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.529" endtime="20201115 22:03:03.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.494" endtime="20201115 22:03:03.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.492" endtime="20201115 22:03:03.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.539" endtime="20201115 22:03:03.827"></status>
</kw>
<msg timestamp="20201115 22:03:03.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024520736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024524847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.537" endtime="20201115 22:03:03.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024520736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024524847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.831" endtime="20201115 22:03:03.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.840" endtime="20201115 22:03:03.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.534" endtime="20201115 22:03:03.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.532" endtime="20201115 22:03:03.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.847" level="INFO">${RESULT} = [{'time': 0.024524847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.024737958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:03.843" endtime="20201115 22:03:03.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.861" level="INFO">${OVERHEAD} = {'diff': [4.1109999999976166e-06, 4.111000000001086e-06, 4.138999999996756e-06, 4.0559999999988106e-06, 4.1109999999976166e-06, 4.09800000000099e-06, 4.1809999999989356e-06, 4.111000000001086e-06, 4.1...</msg>
<status status="PASS" starttime="20201115 22:03:03.848" endtime="20201115 22:03:03.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.865" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.864" endtime="20201115 22:03:03.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.868" level="INFO">VALUE: [4.1109999999976166e-06, 4.111000000001086e-06, 4.138999999996756e-06, 4.0559999999988106e-06, 4.1109999999976166e-06, 4.09800000000099e-06, 4.1809999999989356e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.1249999999971865e-06, 4.09800000000099e-06, 4.11200000000056e-06, 4.139000000000226e-06, 4.138000000000752e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 4.1109999999976166e-06, 4.125000000000656e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.09800000000099e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.166999999999366e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.179999999999462e-06, 4.125000000000656e-06, 4.08400000000142e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.152000000000322e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.09800000000099e-06, 4.139000000000226e-06, 4.08400000000142e-06, 4.09800000000099e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.125000000000656e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.867" endtime="20201115 22:03:03.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.862" endtime="20201115 22:03:03.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.872" endtime="20201115 22:03:03.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.876" endtime="20201115 22:03:03.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.874" endtime="20201115 22:03:03.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.870" endtime="20201115 22:03:03.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.490" endtime="20201115 22:03:03.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.859" endtime="20201115 22:03:03.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.858" endtime="20201115 22:03:03.897"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.899" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.908" endtime="20201115 22:03:03.937"></status>
</kw>
<msg timestamp="20201115 22:03:03.937" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.907" endtime="20201115 22:03:03.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.939" endtime="20201115 22:03:03.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.941" endtime="20201115 22:03:03.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.904" endtime="20201115 22:03:03.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.902" endtime="20201115 22:03:03.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.951" endtime="20201115 22:03:04.239"></status>
</kw>
<msg timestamp="20201115 22:03:04.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028479694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028484014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.949" endtime="20201115 22:03:04.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028479694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028484014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.243" endtime="20201115 22:03:04.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.251" endtime="20201115 22:03:04.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.946" endtime="20201115 22:03:04.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.944" endtime="20201115 22:03:04.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.258" level="INFO">${RESULT} = [{'time': 0.028484014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.028713056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:04.255" endtime="20201115 22:03:04.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.272" level="INFO">${OVERHEAD} = {'diff': [4.3199999999986305e-06, 4.3200000000021e-06, 4.305999999999061e-06, 4.3339999999982e-06, 4.304999999999587e-06, 4.333000000002196e-06, 4.305999999999061e-06, 4.3200000000021e-06, 4.305999999...</msg>
<status status="PASS" starttime="20201115 22:03:04.259" endtime="20201115 22:03:04.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.277" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.276" endtime="20201115 22:03:04.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.280" level="INFO">VALUE: [4.3199999999986305e-06, 4.3200000000021e-06, 4.305999999999061e-06, 4.3339999999982e-06, 4.304999999999587e-06, 4.333000000002196e-06, 4.305999999999061e-06, 4.3200000000021e-06, 4.305999999999061e-06, 4.304999999999587e-06, 4.3199999999986305e-06, 4.277999999999921e-06, 4.319000000002626e-06, 4.332999999995257e-06, 4.333999999994731e-06, 4.33400000000167e-06, 4.318999999995687e-06, 4.319000000002626e-06, 4.34800000000124e-06, 4.318999999995687e-06, 4.333000000002196e-06, 4.33400000000167e-06, 4.30600000000253e-06, 4.305999999995591e-06, 4.33400000000167e-06, 4.3200000000021e-06, 4.319000000002626e-06, 4.416999999999616e-06, 4.333000000002196e-06, 4.319999999995161e-06, 4.332999999995257e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.2499999999973115e-06, 4.416000000000142e-06, 4.347000000001766e-06, 4.346999999994827e-06, 4.333000000002196e-06, 4.319000000002626e-06, 4.33400000000167e-06, 4.3200000000021e-06, 4.318999999995687e-06, 4.346999999994827e-06, 4.291999999996021e-06, 4.319000000002626e-06, 4.318999999995687e-06, 4.30600000000253e-06, 4.3049999999961175e-06, 4.333000000002196e-06, 4.30600000000253e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.278" endtime="20201115 22:03:04.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.273" endtime="20201115 22:03:04.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.284" endtime="20201115 22:03:04.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.287" endtime="20201115 22:03:04.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.285" endtime="20201115 22:03:04.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.282" endtime="20201115 22:03:04.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.900" endtime="20201115 22:03:04.308"></status>
</kw>
<msg timestamp="20201115 22:03:04.308" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.317" endtime="20201115 22:03:04.343"></status>
</kw>
<msg timestamp="20201115 22:03:04.344" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.316" endtime="20201115 22:03:04.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.347" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.345" endtime="20201115 22:03:04.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.348" endtime="20201115 22:03:04.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.313" endtime="20201115 22:03:04.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.311" endtime="20201115 22:03:04.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.357" endtime="20201115 22:03:04.645"></status>
</kw>
<msg timestamp="20201115 22:03:04.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023897542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023901861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.356" endtime="20201115 22:03:04.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023897542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023901861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.649" endtime="20201115 22:03:04.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.657" endtime="20201115 22:03:04.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.353" endtime="20201115 22:03:04.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.351" endtime="20201115 22:03:04.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.664" level="INFO">${RESULT} = [{'time': 0.023901861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.024132, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:03:04.661" endtime="20201115 22:03:04.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.678" level="INFO">${OVERHEAD} = {'diff': [4.318999999999157e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.332999999998727e-06, 4.389000000000476e-06, 4.318999999999157e-06, 4.332999999998727e-06, 4.347000000001766e-06, 4.3199...</msg>
<status status="PASS" starttime="20201115 22:03:04.665" endtime="20201115 22:03:04.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.683" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.682" endtime="20201115 22:03:04.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.686" level="INFO">VALUE: [4.318999999999157e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.332999999998727e-06, 4.389000000000476e-06, 4.318999999999157e-06, 4.332999999998727e-06, 4.347000000001766e-06, 4.3199999999986305e-06, 4.3339999999982e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.305999999999061e-06, 4.29200000000296e-06, 4.332999999998727e-06, 4.319000000002626e-06, 4.277999999999921e-06, 4.333000000002196e-06, 4.3199999999986305e-06, 4.3199999999986305e-06, 4.360999999997867e-06, 4.333000000002196e-06, 4.318999999999157e-06, 4.305999999999061e-06, 4.319000000002626e-06, 4.318999999999157e-06, 4.34800000000124e-06, 4.319000000002626e-06, 4.304999999999587e-06, 4.305000000003056e-06, 4.30600000000253e-06, 4.33400000000167e-06, 4.33400000000167e-06, 4.332999999995257e-06, 4.30600000000253e-06, 4.332999999995257e-06, 4.3200000000021e-06, 4.403000000000046e-06, 4.319000000002626e-06, 4.319000000002626e-06, 4.30600000000253e-06, 4.361000000001336e-06, 4.2770000000039166e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.318999999995687e-06, 4.333000000002196e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.318999999995687e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.685" endtime="20201115 22:03:04.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.679" endtime="20201115 22:03:04.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.689" endtime="20201115 22:03:04.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.693" endtime="20201115 22:03:04.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.691" endtime="20201115 22:03:04.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.688" endtime="20201115 22:03:04.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.309" endtime="20201115 22:03:04.714"></status>
</kw>
<msg timestamp="20201115 22:03:04.714" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.723" endtime="20201115 22:03:04.750"></status>
</kw>
<msg timestamp="20201115 22:03:04.751" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.722" endtime="20201115 22:03:04.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.752" endtime="20201115 22:03:04.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.754" endtime="20201115 22:03:04.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.719" endtime="20201115 22:03:04.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.716" endtime="20201115 22:03:04.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.764" endtime="20201115 22:03:05.052"></status>
</kw>
<msg timestamp="20201115 22:03:05.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025194597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025198917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.762" endtime="20201115 22:03:05.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025194597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025198917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.056" endtime="20201115 22:03:05.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.065" endtime="20201115 22:03:05.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.759" endtime="20201115 22:03:05.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.758" endtime="20201115 22:03:05.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.072" level="INFO">${RESULT} = [{'time': 0.025198917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.025430097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 22:03:05.068" endtime="20201115 22:03:05.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.086" level="INFO">${OVERHEAD} = {'diff': [4.3200000000021e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.333000000002196e-06, 4.346999999998297e-06, 4.3199999999986305e-06, 4.346999999998297e-06, 4.3199999999986305e-06, 4.3480...</msg>
<status status="PASS" starttime="20201115 22:03:05.073" endtime="20201115 22:03:05.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.091" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.090" endtime="20201115 22:03:05.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.094" level="INFO">VALUE: [4.3200000000021e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.333000000002196e-06, 4.346999999998297e-06, 4.3199999999986305e-06, 4.346999999998297e-06, 4.3199999999986305e-06, 4.34800000000124e-06, 4.264000000000351e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.318999999999157e-06, 4.3200000000021e-06, 4.3199999999986305e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.305999999999061e-06, 4.319000000002626e-06, 4.333000000002196e-06, 4.305999999999061e-06, 4.333000000002196e-06, 4.346999999998297e-06, 4.3199999999986305e-06, 4.318999999999157e-06, 4.3199999999986305e-06, 4.3199999999986305e-06, 4.319999999995161e-06, 4.3200000000021e-06, 4.305000000003056e-06, 4.3200000000021e-06, 4.332999999995257e-06, 4.361000000001336e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.305000000003056e-06, 4.33400000000167e-06, 4.319999999995161e-06, 4.305999999995591e-06, 4.27800000000339e-06, 4.319000000002626e-06, 4.347000000001766e-06, 4.305999999995591e-06, 4.332999999995257e-06, 4.319999999995161e-06, 4.333000000002196e-06, 4.3200000000021e-06, 4.319999999995161e-06, 4.33400000000167e-06, 4.305999999995591e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.092" endtime="20201115 22:03:05.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.087" endtime="20201115 22:03:05.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.097" endtime="20201115 22:03:05.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.101" endtime="20201115 22:03:05.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.099" endtime="20201115 22:03:05.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.095" endtime="20201115 22:03:05.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.714" endtime="20201115 22:03:05.122"></status>
</kw>
<msg timestamp="20201115 22:03:05.122" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.131" endtime="20201115 22:03:05.158"></status>
</kw>
<msg timestamp="20201115 22:03:05.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.129" endtime="20201115 22:03:05.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.161" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.160" endtime="20201115 22:03:05.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.162" endtime="20201115 22:03:05.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.127" endtime="20201115 22:03:05.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.124" endtime="20201115 22:03:05.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.172" endtime="20201115 22:03:05.459"></status>
</kw>
<msg timestamp="20201115 22:03:05.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024311361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024315694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.170" endtime="20201115 22:03:05.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024311361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024315694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.463" endtime="20201115 22:03:05.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.472" endtime="20201115 22:03:05.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.168" endtime="20201115 22:03:05.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.166" endtime="20201115 22:03:05.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.479" level="INFO">${RESULT} = [{'time': 0.024315694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.024547347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:05.475" endtime="20201115 22:03:05.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.493" level="INFO">${OVERHEAD} = {'diff': [4.332999999998727e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.346999999998297e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.332999999998727e-06, 4.3199...</msg>
<status status="PASS" starttime="20201115 22:03:05.480" endtime="20201115 22:03:05.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.498" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.496" endtime="20201115 22:03:05.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.500" level="INFO">VALUE: [4.332999999998727e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.346999999998297e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.332999999998727e-06, 4.3199999999986305e-06, 4.291000000000017e-06, 4.30600000000253e-06, 4.34799999999777e-06, 4.347000000001766e-06, 4.3199999999986305e-06, 4.332999999998727e-06, 4.333000000002196e-06, 4.361000000001336e-06, 4.360999999997867e-06, 4.277999999999921e-06, 4.318999999999157e-06, 4.3199999999986305e-06, 4.33400000000167e-06, 4.305999999999061e-06, 4.332999999998727e-06, 4.304999999999587e-06, 4.3199999999986305e-06, 4.319000000002626e-06, 4.319000000002626e-06, 4.304999999999587e-06, 4.319000000002626e-06, 4.3200000000021e-06, 4.347999999994301e-06, 4.33400000000167e-06, 4.34800000000124e-06, 4.361000000001336e-06, 4.25000000000425e-06, 4.33400000000167e-06, 4.347000000001766e-06, 4.277999999996451e-06, 4.361000000001336e-06, 4.2910000000034865e-06, 4.332999999995257e-06, 4.361000000001336e-06, 4.319000000002626e-06, 4.305000000003056e-06, 4.3200000000021e-06, 4.305000000003056e-06, 4.333000000002196e-06, 4.3200000000021e-06, 4.36200000000081e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.499" endtime="20201115 22:03:05.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.494" endtime="20201115 22:03:05.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.504" endtime="20201115 22:03:05.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.507" endtime="20201115 22:03:05.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.505" endtime="20201115 22:03:05.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.502" endtime="20201115 22:03:05.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.122" endtime="20201115 22:03:05.529"></status>
</kw>
<msg timestamp="20201115 22:03:05.529" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.538" endtime="20201115 22:03:05.565"></status>
</kw>
<msg timestamp="20201115 22:03:05.565" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.536" endtime="20201115 22:03:05.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.568" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.566" endtime="20201115 22:03:05.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.569" endtime="20201115 22:03:05.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.534" endtime="20201115 22:03:05.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.531" endtime="20201115 22:03:05.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.579" endtime="20201115 22:03:05.867"></status>
</kw>
<msg timestamp="20201115 22:03:05.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024286, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:05.577" endtime="20201115 22:03:05.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024286, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:05.871" endtime="20201115 22:03:05.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.880" endtime="20201115 22:03:05.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.574" endtime="20201115 22:03:05.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.572" endtime="20201115 22:03:05.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.887" level="INFO">${RESULT} = [{'time': 0.024286, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.024515625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:05.884" endtime="20201115 22:03:05.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.901" level="INFO">${OVERHEAD} = {'diff': [4.3749999999974365e-06, 4.305999999999061e-06, 4.264000000000351e-06, 4.2499999999973115e-06, 4.318999999999157e-06, 4.291999999999491e-06, 4.360999999997867e-06, 4.3339999999982e-06, 4.3189...</msg>
<status status="PASS" starttime="20201115 22:03:05.888" endtime="20201115 22:03:05.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.906" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.905" endtime="20201115 22:03:05.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.908" level="INFO">VALUE: [4.3749999999974365e-06, 4.305999999999061e-06, 4.264000000000351e-06, 4.2499999999973115e-06, 4.318999999999157e-06, 4.291999999999491e-06, 4.360999999997867e-06, 4.3339999999982e-06, 4.318999999999157e-06, 4.3199999999986305e-06, 4.319000000002626e-06, 4.305999999999061e-06, 4.360999999997867e-06, 4.318999999999157e-06, 4.30600000000253e-06, 4.318999999999157e-06, 4.346999999998297e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.319000000002626e-06, 4.361000000001336e-06, 4.318999999999157e-06, 4.305999999999061e-06, 4.304999999999587e-06, 4.3199999999986305e-06, 4.319000000002626e-06, 4.3200000000021e-06, 4.318999999999157e-06, 4.3200000000021e-06, 4.305000000003056e-06, 4.347000000001766e-06, 4.3200000000021e-06, 4.263999999996881e-06, 4.361000000001336e-06, 4.3200000000021e-06, 4.2909999999965476e-06, 4.319000000002626e-06, 4.361000000001336e-06, 4.30600000000253e-06, 4.3049999999961175e-06, 4.276999999996978e-06, 4.33400000000167e-06, 4.319999999995161e-06, 4.346999999994827e-06, 4.34800000000124e-06, 4.319000000002626e-06, 4.361000000001336e-06, 4.34800000000124e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.907" endtime="20201115 22:03:05.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.902" endtime="20201115 22:03:05.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.911" endtime="20201115 22:03:05.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.915" endtime="20201115 22:03:05.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.913" endtime="20201115 22:03:05.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.910" endtime="20201115 22:03:05.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.529" endtime="20201115 22:03:05.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.898" endtime="20201115 22:03:05.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.897" endtime="20201115 22:03:05.936"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.939" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.948" endtime="20201115 22:03:05.976"></status>
</kw>
<msg timestamp="20201115 22:03:05.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.946" endtime="20201115 22:03:05.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.978" endtime="20201115 22:03:05.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.981" endtime="20201115 22:03:05.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.944" endtime="20201115 22:03:05.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.941" endtime="20201115 22:03:05.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.991" endtime="20201115 22:03:06.277"></status>
</kw>
<msg timestamp="20201115 22:03:06.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028801708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028806222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.989" endtime="20201115 22:03:06.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028801708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028806222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.282" endtime="20201115 22:03:06.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.290" endtime="20201115 22:03:06.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.986" endtime="20201115 22:03:06.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.984" endtime="20201115 22:03:06.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.297" level="INFO">${RESULT} = [{'time': 0.028806222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.029052944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:06.294" endtime="20201115 22:03:06.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.311" level="INFO">${OVERHEAD} = {'diff': [4.514000000000601e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.472000000001891e-06, 4.541999999999741e-06, 4.527000000000697e-06, 4.527000000000697e-06, 4.514000000000601e-06, 4.5559...</msg>
<status status="PASS" starttime="20201115 22:03:06.298" endtime="20201115 22:03:06.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.316" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.315" endtime="20201115 22:03:06.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.318" level="INFO">VALUE: [4.514000000000601e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.472000000001891e-06, 4.541999999999741e-06, 4.527000000000697e-06, 4.527000000000697e-06, 4.514000000000601e-06, 4.555999999999311e-06, 4.554999999999837e-06, 4.610999999994647e-06, 4.540999999996798e-06, 4.513999999997131e-06, 4.4999999999975615e-06, 4.54200000000321e-06, 4.611000000001586e-06, 4.513999999997131e-06, 4.54200000000321e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.611000000001586e-06, 4.527000000004167e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.51400000000407e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.583000000002446e-06, 4.4999999999975615e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.51400000000407e-06, 4.52800000000364e-06, 4.527000000004167e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.555000000003306e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.51400000000407e-06, 4.458999999998325e-06, 4.52800000000364e-06, 4.472999999997895e-06, 4.540999999996798e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.317" endtime="20201115 22:03:06.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.312" endtime="20201115 22:03:06.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.322" endtime="20201115 22:03:06.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.325" endtime="20201115 22:03:06.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.324" endtime="20201115 22:03:06.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.320" endtime="20201115 22:03:06.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.939" endtime="20201115 22:03:06.346"></status>
</kw>
<msg timestamp="20201115 22:03:06.346" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.356" endtime="20201115 22:03:06.383"></status>
</kw>
<msg timestamp="20201115 22:03:06.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.354" endtime="20201115 22:03:06.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.386" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.384" endtime="20201115 22:03:06.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.388" endtime="20201115 22:03:06.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.351" endtime="20201115 22:03:06.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.349" endtime="20201115 22:03:06.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.397" endtime="20201115 22:03:06.685"></status>
</kw>
<msg timestamp="20201115 22:03:06.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025477542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025482042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.395" endtime="20201115 22:03:06.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025477542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025482042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.689" endtime="20201115 22:03:06.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.697" endtime="20201115 22:03:06.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.393" endtime="20201115 22:03:06.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.391" endtime="20201115 22:03:06.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.704" level="INFO">${RESULT} = [{'time': 0.025482042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.025729625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:06.701" endtime="20201115 22:03:06.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.718" level="INFO">${OVERHEAD} = {'diff': [4.500000000001031e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.54200000000321e-06, 4.513000000001127e-06, 4.527000000000697e-06, 4.514000000000601e-06, 4.555000000003306e-06, 4.50000...</msg>
<status status="PASS" starttime="20201115 22:03:06.705" endtime="20201115 22:03:06.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.723" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.722" endtime="20201115 22:03:06.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.726" level="INFO">VALUE: [4.500000000001031e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.54200000000321e-06, 4.513000000001127e-06, 4.527000000000697e-06, 4.514000000000601e-06, 4.555000000003306e-06, 4.500000000001031e-06, 4.472000000001891e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.514000000000601e-06, 4.58400000000192e-06, 4.513999999997131e-06, 4.528000000000171e-06, 4.527000000000697e-06, 4.59800000000149e-06, 4.527000000000697e-06, 4.527000000000697e-06, 4.541000000000267e-06, 4.555999999999311e-06, 4.526999999997228e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.5410000000037365e-06, 4.54200000000321e-06, 4.5410000000037365e-06, 4.526999999997228e-06, 4.527000000004167e-06, 4.513999999997131e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.527999999996701e-06, 4.5000000000045e-06, 4.513999999997131e-06, 4.55600000000278e-06, 4.57000000000235e-06, 4.513999999997131e-06, 4.526999999997228e-06, 4.5549999999963675e-06, 4.485999999997992e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.526999999997228e-06, 4.569000000002876e-06, 4.541999999996271e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.724" endtime="20201115 22:03:06.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.719" endtime="20201115 22:03:06.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.729" endtime="20201115 22:03:06.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.733" endtime="20201115 22:03:06.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.731" endtime="20201115 22:03:06.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.727" endtime="20201115 22:03:06.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.347" endtime="20201115 22:03:06.754"></status>
</kw>
<msg timestamp="20201115 22:03:06.754" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.764" endtime="20201115 22:03:06.791"></status>
</kw>
<msg timestamp="20201115 22:03:06.791" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.761" endtime="20201115 22:03:06.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.794" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.792" endtime="20201115 22:03:06.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.795" endtime="20201115 22:03:06.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.759" endtime="20201115 22:03:06.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.756" endtime="20201115 22:03:06.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.804" endtime="20201115 22:03:07.092"></status>
</kw>
<msg timestamp="20201115 22:03:07.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024996583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.803" endtime="20201115 22:03:07.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024996583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025001125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.096" endtime="20201115 22:03:07.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.105" endtime="20201115 22:03:07.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.800" endtime="20201115 22:03:07.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.798" endtime="20201115 22:03:07.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.112" level="INFO">${RESULT} = [{'time': 0.025001125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.025249333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:07.108" endtime="20201115 22:03:07.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.126" level="INFO">${OVERHEAD} = {'diff': [4.541999999999741e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.513999999997131e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.5419...</msg>
<status status="PASS" starttime="20201115 22:03:07.113" endtime="20201115 22:03:07.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.131" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.130" endtime="20201115 22:03:07.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.133" level="INFO">VALUE: [4.541999999999741e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.513999999997131e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.472999999997895e-06, 4.541999999999741e-06, 4.54200000000321e-06, 4.568999999999407e-06, 4.514000000000601e-06, 4.527000000000697e-06, 4.541999999999741e-06, 4.514000000000601e-06, 4.457999999998852e-06, 4.583000000002446e-06, 4.5699999999988805e-06, 4.528000000000171e-06, 4.457999999998852e-06, 4.526999999997228e-06, 4.540999999996798e-06, 4.457999999998852e-06, 4.513999999997131e-06, 4.527999999996701e-06, 4.527000000004167e-06, 4.541999999996271e-06, 4.5410000000037365e-06, 4.513999999997131e-06, 4.472999999997895e-06, 4.485999999997992e-06, 4.5549999999963675e-06, 4.527999999996701e-06, 4.541999999996271e-06, 4.5410000000037365e-06, 4.526999999997228e-06, 4.55600000000278e-06, 4.5000000000045e-06, 4.51400000000407e-06, 4.54200000000321e-06, 4.55600000000278e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.471999999998422e-06, 4.526999999997228e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.132" endtime="20201115 22:03:07.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.127" endtime="20201115 22:03:07.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.136" endtime="20201115 22:03:07.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.140" endtime="20201115 22:03:07.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.139" endtime="20201115 22:03:07.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.135" endtime="20201115 22:03:07.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.754" endtime="20201115 22:03:07.161"></status>
</kw>
<msg timestamp="20201115 22:03:07.161" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.171" endtime="20201115 22:03:07.197"></status>
</kw>
<msg timestamp="20201115 22:03:07.198" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.169" endtime="20201115 22:03:07.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.200" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.199" endtime="20201115 22:03:07.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.201" endtime="20201115 22:03:07.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.166" endtime="20201115 22:03:07.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.164" endtime="20201115 22:03:07.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.211" endtime="20201115 22:03:07.500"></status>
</kw>
<msg timestamp="20201115 22:03:07.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024568569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024573097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.209" endtime="20201115 22:03:07.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024568569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024573097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.504" endtime="20201115 22:03:07.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.512" endtime="20201115 22:03:07.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.207" endtime="20201115 22:03:07.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.205" endtime="20201115 22:03:07.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.519" level="INFO">${RESULT} = [{'time': 0.024573097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.024825972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:07.516" endtime="20201115 22:03:07.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.533" level="INFO">${OVERHEAD} = {'diff': [4.528000000000171e-06, 4.500000000001031e-06, 4.528000000000171e-06, 4.540999999996798e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.568999999999407e-06, 4.485999999997992e-06, 4.5280...</msg>
<status status="PASS" starttime="20201115 22:03:07.520" endtime="20201115 22:03:07.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.538" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.537" endtime="20201115 22:03:07.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.541" level="INFO">VALUE: [4.528000000000171e-06, 4.500000000001031e-06, 4.528000000000171e-06, 4.540999999996798e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.568999999999407e-06, 4.485999999997992e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.527000000000697e-06, 4.527000000000697e-06, 4.513000000001127e-06, 4.528000000000171e-06, 4.527999999996701e-06, 4.471999999998422e-06, 4.528000000000171e-06, 4.55600000000278e-06, 4.554999999999837e-06, 4.514000000000601e-06, 4.541999999999741e-06, 4.514000000000601e-06, 4.527000000000697e-06, 4.55600000000278e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.527999999996701e-06, 4.485999999997992e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.4999999999975615e-06, 4.540999999996798e-06, 4.54200000000321e-06, 4.526999999997228e-06, 4.513999999997131e-06, 4.540999999996798e-06, 4.569000000002876e-06, 4.4999999999975615e-06, 4.5410000000037365e-06, 4.555000000003306e-06, 4.527999999996701e-06, 4.5000000000045e-06, 4.513999999997131e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.57000000000235e-06, 4.527000000004167e-06, 4.540999999996798e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.539" endtime="20201115 22:03:07.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.534" endtime="20201115 22:03:07.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.545" endtime="20201115 22:03:07.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.553" endtime="20201115 22:03:07.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.551" endtime="20201115 22:03:07.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.543" endtime="20201115 22:03:07.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.162" endtime="20201115 22:03:07.574"></status>
</kw>
<msg timestamp="20201115 22:03:07.574" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.584" endtime="20201115 22:03:07.609"></status>
</kw>
<msg timestamp="20201115 22:03:07.609" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.582" endtime="20201115 22:03:07.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.612" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.610" endtime="20201115 22:03:07.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.613" endtime="20201115 22:03:07.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.580" endtime="20201115 22:03:07.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.577" endtime="20201115 22:03:07.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.622" endtime="20201115 22:03:07.910"></status>
</kw>
<msg timestamp="20201115 22:03:07.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023413917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0234185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:07.621" endtime="20201115 22:03:07.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023413917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0234185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:07.914" endtime="20201115 22:03:07.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.923" endtime="20201115 22:03:07.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.618" endtime="20201115 22:03:07.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.616" endtime="20201115 22:03:07.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.930" level="INFO">${RESULT} = [{'time': 0.0234185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.023668694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:07.926" endtime="20201115 22:03:07.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.944" level="INFO">${OVERHEAD} = {'diff': [4.582999999998977e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.5140...</msg>
<status status="PASS" starttime="20201115 22:03:07.931" endtime="20201115 22:03:07.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.949" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.948" endtime="20201115 22:03:07.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.951" level="INFO">VALUE: [4.582999999998977e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.514000000000601e-06, 4.582999999998977e-06, 4.527000000000697e-06, 4.513999999997131e-06, 4.528000000000171e-06, 4.500000000001031e-06, 4.528000000000171e-06, 4.513999999997131e-06, 4.59799999999802e-06, 4.513000000001127e-06, 4.541999999999741e-06, 4.54200000000321e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.4999999999975615e-06, 4.526999999997228e-06, 4.514000000000601e-06, 4.528000000000171e-06, 4.568999999999407e-06, 4.541999999999741e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.555000000003306e-06, 4.485999999997992e-06, 4.51400000000407e-06, 4.51400000000407e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.5549999999963675e-06, 4.597000000002016e-06, 4.527999999996701e-06, 4.555999999995841e-06, 4.527999999996701e-06, 4.54200000000321e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.950" endtime="20201115 22:03:07.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.945" endtime="20201115 22:03:07.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.955" endtime="20201115 22:03:07.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.959" endtime="20201115 22:03:07.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.957" endtime="20201115 22:03:07.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.953" endtime="20201115 22:03:07.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.575" endtime="20201115 22:03:07.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.938" endtime="20201115 22:03:07.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.937" endtime="20201115 22:03:07.980"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.982" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.992" endtime="20201115 22:03:08.017"></status>
</kw>
<msg timestamp="20201115 22:03:08.017" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.990" endtime="20201115 22:03:08.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.020" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.018" endtime="20201115 22:03:08.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.021" endtime="20201115 22:03:08.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.987" endtime="20201115 22:03:08.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.985" endtime="20201115 22:03:08.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.030" endtime="20201115 22:03:08.318"></status>
</kw>
<msg timestamp="20201115 22:03:08.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024949958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024954694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.029" endtime="20201115 22:03:08.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024949958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024954694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.322" endtime="20201115 22:03:08.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.331" endtime="20201115 22:03:08.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.026" endtime="20201115 22:03:08.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.024" endtime="20201115 22:03:08.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.338" level="INFO">${RESULT} = [{'time': 0.024954694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.025222125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:08.334" endtime="20201115 22:03:08.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.352" level="INFO">${OVERHEAD} = {'diff': [4.735999999998242e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 4.721999999998672e-06, 4.750000000001281e-06, 4.778000000000421e-06, 4.723000000001615e-06, 4.805000000000087e-06, 4.736...</msg>
<status status="PASS" starttime="20201115 22:03:08.339" endtime="20201115 22:03:08.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.357" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.355" endtime="20201115 22:03:08.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.360" level="INFO">VALUE: [4.735999999998242e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 4.721999999998672e-06, 4.750000000001281e-06, 4.778000000000421e-06, 4.723000000001615e-06, 4.805000000000087e-06, 4.736000000001711e-06, 4.735999999998242e-06, 4.791999999999991e-06, 4.764000000000851e-06, 4.723000000001615e-06, 4.721999999998672e-06, 4.736000000001711e-06, 4.750000000001281e-06, 4.737000000001185e-06, 4.791000000000517e-06, 4.750000000001281e-06, 4.750000000001281e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 4.723000000001615e-06, 4.764000000000851e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.7360000000051805e-06, 4.6949999999990055e-06, 4.763000000004847e-06, 4.7499999999978115e-06, 4.762999999997908e-06, 4.707999999999102e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.75000000000475e-06, 4.722000000005611e-06, 4.7639999999973814e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.736999999997715e-06, 4.707999999999102e-06, 4.7499999999978115e-06, 4.7089999999985754e-06, 4.735999999998242e-06, 4.7639999999973814e-06, 4.736999999997715e-06, 4.7360000000051805e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.735999999998242e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.358" endtime="20201115 22:03:08.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.353" endtime="20201115 22:03:08.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.363" endtime="20201115 22:03:08.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.366" endtime="20201115 22:03:08.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.365" endtime="20201115 22:03:08.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.361" endtime="20201115 22:03:08.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.983" endtime="20201115 22:03:08.388"></status>
</kw>
<msg timestamp="20201115 22:03:08.388" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.397" endtime="20201115 22:03:08.423"></status>
</kw>
<msg timestamp="20201115 22:03:08.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.395" endtime="20201115 22:03:08.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.425" endtime="20201115 22:03:08.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.427" endtime="20201115 22:03:08.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.393" endtime="20201115 22:03:08.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.391" endtime="20201115 22:03:08.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.437" endtime="20201115 22:03:08.725"></status>
</kw>
<msg timestamp="20201115 22:03:08.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023899194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023903861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.435" endtime="20201115 22:03:08.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023899194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023903861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.729" endtime="20201115 22:03:08.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.738" endtime="20201115 22:03:08.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.432" endtime="20201115 22:03:08.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.431" endtime="20201115 22:03:08.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.745" level="INFO">${RESULT} = [{'time': 0.023903861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.024170458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:08.741" endtime="20201115 22:03:08.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.759" level="INFO">${OVERHEAD} = {'diff': [4.666999999999866e-06, 4.651999999997353e-06, 4.737000000001185e-06, 4.805000000000087e-06, 4.736000000001711e-06, 4.735999999998242e-06, 4.707999999999102e-06, 4.736000000001711e-06, 4.7220...</msg>
<status status="PASS" starttime="20201115 22:03:08.746" endtime="20201115 22:03:08.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.764" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.763" endtime="20201115 22:03:08.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.766" level="INFO">VALUE: [4.666999999999866e-06, 4.651999999997353e-06, 4.737000000001185e-06, 4.805000000000087e-06, 4.736000000001711e-06, 4.735999999998242e-06, 4.707999999999102e-06, 4.736000000001711e-06, 4.722000000002141e-06, 4.763000000001377e-06, 4.778000000000421e-06, 4.7499999999978115e-06, 4.763000000001377e-06, 4.750000000001281e-06, 4.735999999998242e-06, 4.736000000001711e-06, 4.722000000002141e-06, 4.722999999998145e-06, 4.750000000001281e-06, 4.723000000001615e-06, 4.721999999998672e-06, 4.721999999998672e-06, 4.736999999997715e-06, 4.805000000000087e-06, 4.750000000001281e-06, 4.750000000001281e-06, 4.736000000001711e-06, 4.750000000001281e-06, 4.723000000005084e-06, 4.75000000000475e-06, 4.736999999997715e-06, 4.735999999998242e-06, 4.79200000000346e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.707999999999102e-06, 4.7499999999978115e-06, 4.75000000000475e-06, 4.707999999999102e-06, 4.735999999998242e-06, 4.707999999999102e-06, 4.7499999999978115e-06, 4.77800000000389e-06, 4.7499999999978115e-06, 4.7089999999985754e-06, 4.7360000000051805e-06, 4.735999999998242e-06, 4.7360000000051805e-06, 4.791999999996521e-06, 4.7639999999973814e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.765" endtime="20201115 22:03:08.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.760" endtime="20201115 22:03:08.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.770" endtime="20201115 22:03:08.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.773" endtime="20201115 22:03:08.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.772" endtime="20201115 22:03:08.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.768" endtime="20201115 22:03:08.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.388" endtime="20201115 22:03:08.794"></status>
</kw>
<msg timestamp="20201115 22:03:08.794" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.804" endtime="20201115 22:03:08.834"></status>
</kw>
<msg timestamp="20201115 22:03:08.834" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.802" endtime="20201115 22:03:08.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.837" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.835" endtime="20201115 22:03:08.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.838" endtime="20201115 22:03:08.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.799" endtime="20201115 22:03:08.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.797" endtime="20201115 22:03:08.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.848" endtime="20201115 22:03:09.136"></status>
</kw>
<msg timestamp="20201115 22:03:09.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024310944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024315736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.846" endtime="20201115 22:03:09.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024310944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024315736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.141" endtime="20201115 22:03:09.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.149" endtime="20201115 22:03:09.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.843" endtime="20201115 22:03:09.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.841" endtime="20201115 22:03:09.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.156" level="INFO">${RESULT} = [{'time': 0.024315736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.024585847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:09.152" endtime="20201115 22:03:09.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.215" level="INFO">${OVERHEAD} = {'diff': [4.791999999999991e-06, 4.764000000000851e-06, 4.694000000003001e-06, 4.763000000001377e-06, 4.721999999998672e-06, 4.764000000000851e-06, 4.722000000002141e-06, 4.750000000001281e-06, 4.7500...</msg>
<status status="PASS" starttime="20201115 22:03:09.157" endtime="20201115 22:03:09.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.219" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.218" endtime="20201115 22:03:09.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.222" level="INFO">VALUE: [4.791999999999991e-06, 4.764000000000851e-06, 4.694000000003001e-06, 4.763000000001377e-06, 4.721999999998672e-06, 4.764000000000851e-06, 4.722000000002141e-06, 4.750000000001281e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 4.750000000001281e-06, 4.750000000001281e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.7499999999978115e-06, 4.791999999999991e-06, 4.791000000000517e-06, 4.722999999998145e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.736000000001711e-06, 4.707999999999102e-06, 4.721999999998672e-06, 4.735999999998242e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.721999999998672e-06, 4.7499999999978115e-06, 4.7639999999973814e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.75000000000475e-06, 4.723000000005084e-06, 4.76400000000432e-06, 4.75000000000475e-06, 4.7499999999978115e-06, 4.75000000000475e-06, 4.735999999998242e-06, 4.6949999999990055e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.76400000000432e-06, 4.7499999999978115e-06, 4.6949999999990055e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.721999999998672e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.221" endtime="20201115 22:03:09.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.216" endtime="20201115 22:03:09.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.225" endtime="20201115 22:03:09.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.229" endtime="20201115 22:03:09.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.227" endtime="20201115 22:03:09.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.224" endtime="20201115 22:03:09.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.795" endtime="20201115 22:03:09.250"></status>
</kw>
<msg timestamp="20201115 22:03:09.250" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.260" endtime="20201115 22:03:09.287"></status>
</kw>
<msg timestamp="20201115 22:03:09.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.259" endtime="20201115 22:03:09.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.289" endtime="20201115 22:03:09.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.292" endtime="20201115 22:03:09.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.255" endtime="20201115 22:03:09.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.253" endtime="20201115 22:03:09.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.301" endtime="20201115 22:03:09.587"></status>
</kw>
<msg timestamp="20201115 22:03:09.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025542042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025546792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.299" endtime="20201115 22:03:09.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025542042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025546792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.591" endtime="20201115 22:03:09.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.600" endtime="20201115 22:03:09.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.297" endtime="20201115 22:03:09.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.295" endtime="20201115 22:03:09.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.607" level="INFO">${RESULT} = [{'time': 0.025546792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.025813194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:09.603" endtime="20201115 22:03:09.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.621" level="INFO">${OVERHEAD} = {'diff': [4.7499999999978115e-06, 4.750000000001281e-06, 4.707999999999102e-06, 4.735999999998242e-06, 4.6949999999990055e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.750000000001281e-06, 4.76...</msg>
<status status="PASS" starttime="20201115 22:03:09.608" endtime="20201115 22:03:09.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.626" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.625" endtime="20201115 22:03:09.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.628" level="INFO">VALUE: [4.7499999999978115e-06, 4.750000000001281e-06, 4.707999999999102e-06, 4.735999999998242e-06, 4.6949999999990055e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.750000000001281e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.7089999999985754e-06, 4.819000000003126e-06, 4.7499999999978115e-06, 4.721999999998672e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.721999999998672e-06, 4.722000000002141e-06, 4.750000000001281e-06, 4.7499999999978115e-06, 4.722000000005611e-06, 4.75000000000475e-06, 4.722999999998145e-06, 4.722000000005611e-06, 4.777999999996951e-06, 4.7089999999985754e-06, 4.75000000000475e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.721999999998672e-06, 4.7499999999978115e-06, 4.7639999999973814e-06, 4.707999999999102e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.694000000006471e-06, 4.7360000000051805e-06, 4.7499999999978115e-06, 4.736999999997715e-06, 4.819999999995661e-06, 4.76400000000432e-06, 4.76400000000432e-06, 4.721999999998672e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.627" endtime="20201115 22:03:09.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.622" endtime="20201115 22:03:09.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.632" endtime="20201115 22:03:09.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.635" endtime="20201115 22:03:09.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.634" endtime="20201115 22:03:09.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.630" endtime="20201115 22:03:09.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.251" endtime="20201115 22:03:09.656"></status>
</kw>
<msg timestamp="20201115 22:03:09.656" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.667" endtime="20201115 22:03:09.694"></status>
</kw>
<msg timestamp="20201115 22:03:09.694" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.665" endtime="20201115 22:03:09.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.695" endtime="20201115 22:03:09.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.698" endtime="20201115 22:03:09.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.662" endtime="20201115 22:03:09.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.659" endtime="20201115 22:03:09.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.708" endtime="20201115 22:03:09.994"></status>
</kw>
<msg timestamp="20201115 22:03:09.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026191167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026195903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.706" endtime="20201115 22:03:09.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026191167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026195903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.999" endtime="20201115 22:03:10.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.007" endtime="20201115 22:03:10.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.703" endtime="20201115 22:03:10.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.701" endtime="20201115 22:03:10.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.014" level="INFO">${RESULT} = [{'time': 0.026195903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.026467069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:10.011" endtime="20201115 22:03:10.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.028" level="INFO">${OVERHEAD} = {'diff': [4.735999999998242e-06, 4.735999999998242e-06, 4.791999999999991e-06, 4.737000000001185e-06, 4.750000000001281e-06, 4.652000000000822e-06, 4.7499999999978115e-06, 4.750000000001281e-06, 4.736...</msg>
<status status="PASS" starttime="20201115 22:03:10.015" endtime="20201115 22:03:10.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.033" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.032" endtime="20201115 22:03:10.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.036" level="INFO">VALUE: [4.735999999998242e-06, 4.735999999998242e-06, 4.791999999999991e-06, 4.737000000001185e-06, 4.750000000001281e-06, 4.652000000000822e-06, 4.7499999999978115e-06, 4.750000000001281e-06, 4.736000000001711e-06, 4.750000000001281e-06, 4.750000000001281e-06, 4.736000000001711e-06, 4.735999999998242e-06, 4.791999999999991e-06, 4.750000000001281e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.736000000001711e-06, 4.722000000002141e-06, 4.721999999998672e-06, 4.6949999999990055e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.666999999999866e-06, 4.7360000000051805e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.75000000000475e-06, 4.693999999999532e-06, 4.7360000000051805e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.735999999998242e-06, 4.736999999997715e-06, 4.735999999998242e-06, 4.75000000000475e-06, 4.75000000000475e-06, 4.735999999998242e-06, 4.75000000000475e-06, 4.721999999998672e-06, 4.7499999999978115e-06, 4.777999999996951e-06, 4.77800000000389e-06, 4.7360000000051805e-06, 4.735999999998242e-06, 4.75000000000475e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.76400000000432e-06]</msg>
<status status="PASS" starttime="20201115 22:03:10.034" endtime="20201115 22:03:10.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.029" endtime="20201115 22:03:10.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.039" endtime="20201115 22:03:10.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.043" endtime="20201115 22:03:10.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.041" endtime="20201115 22:03:10.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.037" endtime="20201115 22:03:10.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.657" endtime="20201115 22:03:10.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.981" endtime="20201115 22:03:10.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.980" endtime="20201115 22:03:10.064"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.066" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.076" endtime="20201115 22:03:10.102"></status>
</kw>
<msg timestamp="20201115 22:03:10.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.074" endtime="20201115 22:03:10.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.103" endtime="20201115 22:03:10.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.106" endtime="20201115 22:03:10.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.071" endtime="20201115 22:03:10.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.069" endtime="20201115 22:03:10.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.116" endtime="20201115 22:03:10.402"></status>
</kw>
<msg timestamp="20201115 22:03:10.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025810236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025815139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.114" endtime="20201115 22:03:10.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025810236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025815139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.406" endtime="20201115 22:03:10.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.415" endtime="20201115 22:03:10.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.111" endtime="20201115 22:03:10.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.110" endtime="20201115 22:03:10.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.422" level="INFO">${RESULT} = [{'time': 0.025815139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.026105361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:10.418" endtime="20201115 22:03:10.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.436" level="INFO">${OVERHEAD} = {'diff': [4.903000000000546e-06, 4.957999999999352e-06, 4.944000000003251e-06, 4.944000000003251e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.957...</msg>
<status status="PASS" starttime="20201115 22:03:10.423" endtime="20201115 22:03:10.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.441" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.440" endtime="20201115 22:03:10.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.443" level="INFO">VALUE: [4.903000000000546e-06, 4.957999999999352e-06, 4.944000000003251e-06, 4.944000000003251e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.985999999998492e-06, 5.000000000001531e-06, 4.943999999999782e-06, 4.972000000002391e-06, 4.972000000002391e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.944000000006721e-06, 4.943999999999782e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.943999999999782e-06, 5.027999999997201e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.959000000005764e-06, 4.9589999999988255e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.958000000006291e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.972999999998395e-06, 4.930999999999686e-06]</msg>
<status status="PASS" starttime="20201115 22:03:10.442" endtime="20201115 22:03:10.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.437" endtime="20201115 22:03:10.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.447" endtime="20201115 22:03:10.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.450" endtime="20201115 22:03:10.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.449" endtime="20201115 22:03:10.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.445" endtime="20201115 22:03:10.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.067" endtime="20201115 22:03:10.471"></status>
</kw>
<msg timestamp="20201115 22:03:10.471" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.481" endtime="20201115 22:03:10.508"></status>
</kw>
<msg timestamp="20201115 22:03:10.509" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.479" endtime="20201115 22:03:10.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.510" endtime="20201115 22:03:10.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.513" endtime="20201115 22:03:10.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.476" endtime="20201115 22:03:10.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.474" endtime="20201115 22:03:10.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.522" endtime="20201115 22:03:10.809"></status>
</kw>
<msg timestamp="20201115 22:03:10.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025250125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025255056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.521" endtime="20201115 22:03:10.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025250125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025255056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.813" endtime="20201115 22:03:10.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.821" endtime="20201115 22:03:10.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.518" endtime="20201115 22:03:10.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.516" endtime="20201115 22:03:10.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.828" level="INFO">${RESULT} = [{'time': 0.025255056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.931000000003155e-06, 'source_diff': 4.931000000003155e-06}, {'time': 0.025543319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:10.825" endtime="20201115 22:03:10.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.844" level="INFO">${OVERHEAD} = {'diff': [4.931000000003155e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.972999999998395e-06, 4.916000000000642e-06, 4.973000000001865e-06, 4.9449999999992555e-06, 4.973000000001865e-06, 4.958...</msg>
<status status="PASS" starttime="20201115 22:03:10.829" endtime="20201115 22:03:10.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.848" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.847" endtime="20201115 22:03:10.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.851" level="INFO">VALUE: [4.931000000003155e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.972999999998395e-06, 4.916000000000642e-06, 4.973000000001865e-06, 4.9449999999992555e-06, 4.973000000001865e-06, 4.958000000002821e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.972999999998395e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.902000000001072e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.875000000001406e-06, 4.9589999999988255e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.958000000006291e-06, 4.889000000000976e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.902999999993607e-06, 5.0000000000050004e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.971999999998922e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.943999999999782e-06]</msg>
<status status="PASS" starttime="20201115 22:03:10.850" endtime="20201115 22:03:10.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.845" endtime="20201115 22:03:10.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.854" endtime="20201115 22:03:10.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.858" endtime="20201115 22:03:10.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.856" endtime="20201115 22:03:10.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.853" endtime="20201115 22:03:10.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.472" endtime="20201115 22:03:10.879"></status>
</kw>
<msg timestamp="20201115 22:03:10.879" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.889" endtime="20201115 22:03:10.920"></status>
</kw>
<msg timestamp="20201115 22:03:10.920" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.887" endtime="20201115 22:03:10.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.923" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.921" endtime="20201115 22:03:10.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.924" endtime="20201115 22:03:10.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.884" endtime="20201115 22:03:10.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.882" endtime="20201115 22:03:10.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.935" endtime="20201115 22:03:11.220"></status>
</kw>
<msg timestamp="20201115 22:03:11.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024542222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.933" endtime="20201115 22:03:11.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024542222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024547181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.225" endtime="20201115 22:03:11.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.233" endtime="20201115 22:03:11.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.930" endtime="20201115 22:03:11.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.928" endtime="20201115 22:03:11.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.240" level="INFO">${RESULT} = [{'time': 0.024547181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.959000000002295e-06, 'source_diff': 4.959000000002295e-06}, {'time': 0.024833125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:11.237" endtime="20201115 22:03:11.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.254" level="INFO">${OVERHEAD} = {'diff': [4.959000000002295e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.8749999999979365e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.917000000000116e-06, 4.95...</msg>
<status status="PASS" starttime="20201115 22:03:11.241" endtime="20201115 22:03:11.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.259" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.258" endtime="20201115 22:03:11.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.262" level="INFO">VALUE: [4.959000000002295e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.8749999999979365e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.917000000000116e-06, 4.9589999999988255e-06, 4.916000000000642e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.945000000002725e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.971999999998922e-06, 4.9450000000061944e-06, 4.971999999998922e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.889000000000976e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.875000000001406e-06, 5.0139999999976315e-06, 4.903000000000546e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.930000000000212e-06]</msg>
<status status="PASS" starttime="20201115 22:03:11.260" endtime="20201115 22:03:11.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.255" endtime="20201115 22:03:11.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.265" endtime="20201115 22:03:11.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.269" endtime="20201115 22:03:11.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.267" endtime="20201115 22:03:11.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.263" endtime="20201115 22:03:11.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.880" endtime="20201115 22:03:11.290"></status>
</kw>
<msg timestamp="20201115 22:03:11.290" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.299" endtime="20201115 22:03:11.328"></status>
</kw>
<msg timestamp="20201115 22:03:11.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.298" endtime="20201115 22:03:11.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.329" endtime="20201115 22:03:11.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.332" endtime="20201115 22:03:11.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.295" endtime="20201115 22:03:11.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.293" endtime="20201115 22:03:11.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.342" endtime="20201115 22:03:11.628"></status>
</kw>
<msg timestamp="20201115 22:03:11.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025824153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025829097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.341" endtime="20201115 22:03:11.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025824153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025829097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.632" endtime="20201115 22:03:11.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.641" endtime="20201115 22:03:11.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.338" endtime="20201115 22:03:11.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.336" endtime="20201115 22:03:11.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.648" level="INFO">${RESULT} = [{'time': 0.025829097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.026119319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:11.644" endtime="20201115 22:03:11.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.662" level="INFO">${OVERHEAD} = {'diff': [4.943999999999782e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.930999999999686e-06, 5.000000000001531e-06, 4.9449...</msg>
<status status="PASS" starttime="20201115 22:03:11.649" endtime="20201115 22:03:11.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.667" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.666" endtime="20201115 22:03:11.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.669" level="INFO">VALUE: [4.943999999999782e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.930999999999686e-06, 5.000000000001531e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.903000000000546e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.972000000002391e-06, 4.9449999999992555e-06, 4.972000000002391e-06, 4.971999999998922e-06, 4.9449999999992555e-06, 5.000000000001531e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.930999999999686e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.9450000000061944e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.929999999993273e-06, 4.9589999999988255e-06, 5.0000000000050004e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.9450000000061944e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.944000000006721e-06, 4.889000000000976e-06, 5.01400000000457e-06, 4.971999999998922e-06]</msg>
<status status="PASS" starttime="20201115 22:03:11.668" endtime="20201115 22:03:11.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.663" endtime="20201115 22:03:11.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.673" endtime="20201115 22:03:11.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.677" endtime="20201115 22:03:11.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.675" endtime="20201115 22:03:11.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.671" endtime="20201115 22:03:11.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.291" endtime="20201115 22:03:11.698"></status>
</kw>
<msg timestamp="20201115 22:03:11.698" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.707" endtime="20201115 22:03:11.734"></status>
</kw>
<msg timestamp="20201115 22:03:11.735" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.706" endtime="20201115 22:03:11.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.737" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.736" endtime="20201115 22:03:11.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.739" endtime="20201115 22:03:11.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.703" endtime="20201115 22:03:11.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.701" endtime="20201115 22:03:11.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.749" endtime="20201115 22:03:12.036"></status>
</kw>
<msg timestamp="20201115 22:03:12.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024440986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024445931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.747" endtime="20201115 22:03:12.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024440986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024445931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.040" endtime="20201115 22:03:12.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.049" endtime="20201115 22:03:12.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.745" endtime="20201115 22:03:12.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.743" endtime="20201115 22:03:12.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.056" level="INFO">${RESULT} = [{'time': 0.024445931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.024734417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:12.052" endtime="20201115 22:03:12.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.070" level="INFO">${OVERHEAD} = {'diff': [4.9449999999992555e-06, 4.945000000002725e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.931000000003155e-06, 4.957999999999352e-06, 4.95...</msg>
<status status="PASS" starttime="20201115 22:03:12.057" endtime="20201115 22:03:12.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.075" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.074" endtime="20201115 22:03:12.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.077" level="INFO">VALUE: [4.9449999999992555e-06, 4.945000000002725e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.931000000003155e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.959000000002295e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.944000000003251e-06, 4.9999999999980616e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.972000000002391e-06, 4.9589999999988255e-06, 4.9449999999992555e-06, 4.889000000000976e-06, 4.972999999998395e-06, 4.9449999999992555e-06, 4.861000000001836e-06, 4.9449999999992555e-06, 4.971999999998922e-06, 4.971999999998922e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 5.0000000000050004e-06, 4.9589999999988255e-06, 4.971999999998922e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.930999999999686e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.076" endtime="20201115 22:03:12.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.071" endtime="20201115 22:03:12.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.081" endtime="20201115 22:03:12.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.085" endtime="20201115 22:03:12.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.083" endtime="20201115 22:03:12.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.079" endtime="20201115 22:03:12.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.699" endtime="20201115 22:03:12.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.065" endtime="20201115 22:03:12.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.064" endtime="20201115 22:03:12.106"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.108" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.118" endtime="20201115 22:03:12.150"></status>
</kw>
<msg timestamp="20201115 22:03:12.150" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.116" endtime="20201115 22:03:12.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.153" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.152" endtime="20201115 22:03:12.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.154" endtime="20201115 22:03:12.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.113" endtime="20201115 22:03:12.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.111" endtime="20201115 22:03:12.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.164" endtime="20201115 22:03:12.450"></status>
</kw>
<msg timestamp="20201115 22:03:12.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028534111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028539278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.162" endtime="20201115 22:03:12.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028534111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028539278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.454" endtime="20201115 22:03:12.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.462" endtime="20201115 22:03:12.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.159" endtime="20201115 22:03:12.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.158" endtime="20201115 22:03:12.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.469" level="INFO">${RESULT} = [{'time': 0.028539278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.028848917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:12.466" endtime="20201115 22:03:12.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.484" level="INFO">${OVERHEAD} = {'diff': [5.167000000000366e-06, 5.09800000000199e-06, 5.221999999999172e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.236000000002211e-06, 5.166999999996896e-06, 5.152999999997326e-06, 5.20799...</msg>
<status status="PASS" starttime="20201115 22:03:12.470" endtime="20201115 22:03:12.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.489" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.488" endtime="20201115 22:03:12.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.492" level="INFO">VALUE: [5.167000000000366e-06, 5.09800000000199e-06, 5.221999999999172e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.236000000002211e-06, 5.166999999996896e-06, 5.152999999997326e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.166000000000892e-06, 5.153000000000796e-06, 5.180000000000462e-06, 5.152000000001322e-06, 5.166000000000892e-06, 5.152000000001322e-06, 5.151999999994383e-06, 5.152999999993857e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.069000000003376e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.2089999999990755e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.152000000001322e-06, 5.2089999999990755e-06, 5.152000000001322e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.166000000000892e-06, 5.139000000001226e-06, 5.166000000000892e-06, 5.097000000002516e-06, 5.166000000000892e-06, 5.138999999994287e-06, 5.125000000001656e-06, 5.138000000001752e-06, 5.139000000001226e-06, 5.180000000000462e-06, 5.139000000001226e-06, 5.153000000000796e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.490" endtime="20201115 22:03:12.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.485" endtime="20201115 22:03:12.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.496" endtime="20201115 22:03:12.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.499" endtime="20201115 22:03:12.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.498" endtime="20201115 22:03:12.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.494" endtime="20201115 22:03:12.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.109" endtime="20201115 22:03:12.520"></status>
</kw>
<msg timestamp="20201115 22:03:12.520" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.530" endtime="20201115 22:03:12.563"></status>
</kw>
<msg timestamp="20201115 22:03:12.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.528" endtime="20201115 22:03:12.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.564" endtime="20201115 22:03:12.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.567" endtime="20201115 22:03:12.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.525" endtime="20201115 22:03:12.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.523" endtime="20201115 22:03:12.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.578" endtime="20201115 22:03:12.864"></status>
</kw>
<msg timestamp="20201115 22:03:12.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026007361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026012514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.576" endtime="20201115 22:03:12.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026007361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026012514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.869" endtime="20201115 22:03:12.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.877" endtime="20201115 22:03:12.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.573" endtime="20201115 22:03:12.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.571" endtime="20201115 22:03:12.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.884" level="INFO">${RESULT} = [{'time': 0.026012514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.026322236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:12.880" endtime="20201115 22:03:12.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.898" level="INFO">${OVERHEAD} = {'diff': [5.153000000000796e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.138000000001752e-06, 5.139000000001226e-06, 5.152999999997326e-06, 5.152999999997326e-06, 5.139000000001226e-06, 5.1530...</msg>
<status status="PASS" starttime="20201115 22:03:12.885" endtime="20201115 22:03:12.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.908" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.907" endtime="20201115 22:03:12.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.910" level="INFO">VALUE: [5.153000000000796e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.138000000001752e-06, 5.139000000001226e-06, 5.152999999997326e-06, 5.152999999997326e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.152000000001322e-06, 5.166000000000892e-06, 5.153000000000796e-06, 5.166999999996896e-06, 5.125000000001656e-06, 5.1799999999969926e-06, 5.137999999998283e-06, 5.221999999999172e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.138000000001752e-06, 5.138999999994287e-06, 5.152000000001322e-06, 5.167000000000366e-06, 5.125000000001656e-06, 5.138000000001752e-06, 5.138999999994287e-06, 5.153000000000796e-06, 5.194000000000032e-06, 5.124999999994717e-06, 5.152000000001322e-06, 5.167000000000366e-06, 5.180999999999936e-06, 5.166999999993427e-06, 5.166000000000892e-06, 5.194000000000032e-06, 5.166000000000892e-06, 5.111000000002086e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.152000000001322e-06, 5.180000000000462e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.096999999995577e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.153000000000796e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.909" endtime="20201115 22:03:12.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.904" endtime="20201115 22:03:12.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.914" endtime="20201115 22:03:12.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.917" endtime="20201115 22:03:12.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.916" endtime="20201115 22:03:12.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.912" endtime="20201115 22:03:12.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.521" endtime="20201115 22:03:12.938"></status>
</kw>
<msg timestamp="20201115 22:03:12.939" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.948" endtime="20201115 22:03:12.980"></status>
</kw>
<msg timestamp="20201115 22:03:12.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.946" endtime="20201115 22:03:12.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.983" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.981" endtime="20201115 22:03:12.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.984" endtime="20201115 22:03:12.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.943" endtime="20201115 22:03:12.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.941" endtime="20201115 22:03:12.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.994" endtime="20201115 22:03:13.280"></status>
</kw>
<msg timestamp="20201115 22:03:13.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025002625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.993" endtime="20201115 22:03:13.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025002625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.284" endtime="20201115 22:03:13.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.293" endtime="20201115 22:03:13.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.990" endtime="20201115 22:03:13.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.988" endtime="20201115 22:03:13.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.300" level="INFO">${RESULT} = [{'time': 0.025007736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.025313681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:13.296" endtime="20201115 22:03:13.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.314" level="INFO">${OVERHEAD} = {'diff': [5.110999999998617e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.152999999997326e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.2089999999990755e-06, 5.1249999999981866e-06, 5.15...</msg>
<status status="PASS" starttime="20201115 22:03:13.301" endtime="20201115 22:03:13.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.319" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.318" endtime="20201115 22:03:13.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.322" level="INFO">VALUE: [5.110999999998617e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.152999999997326e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.2089999999990755e-06, 5.1249999999981866e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.110999999998617e-06, 5.167000000000366e-06, 5.111000000002086e-06, 5.180000000000462e-06, 5.1249999999981866e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.194000000000032e-06, 5.152000000001322e-06, 5.151999999997853e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.138999999994287e-06, 5.152000000001322e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.069000000003376e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1810000000068746e-06, 5.153000000000796e-06, 5.222999999998645e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.151999999994383e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.110999999995147e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.111000000002086e-06]</msg>
<status status="PASS" starttime="20201115 22:03:13.320" endtime="20201115 22:03:13.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.315" endtime="20201115 22:03:13.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.325" endtime="20201115 22:03:13.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.329" endtime="20201115 22:03:13.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.327" endtime="20201115 22:03:13.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.323" endtime="20201115 22:03:13.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.939" endtime="20201115 22:03:13.350"></status>
</kw>
<msg timestamp="20201115 22:03:13.350" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.359" endtime="20201115 22:03:13.391"></status>
</kw>
<msg timestamp="20201115 22:03:13.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.357" endtime="20201115 22:03:13.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.394" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.393" endtime="20201115 22:03:13.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.395" endtime="20201115 22:03:13.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.355" endtime="20201115 22:03:13.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.353" endtime="20201115 22:03:13.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.406" endtime="20201115 22:03:13.692"></status>
</kw>
<msg timestamp="20201115 22:03:13.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025503625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025508778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.404" endtime="20201115 22:03:13.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025503625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025508778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.696" endtime="20201115 22:03:13.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.705" endtime="20201115 22:03:13.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.401" endtime="20201115 22:03:13.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.400" endtime="20201115 22:03:13.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.712" level="INFO">${RESULT} = [{'time': 0.025508778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.0258205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:13.709" endtime="20201115 22:03:13.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.726" level="INFO">${OVERHEAD} = {'diff': [5.153000000000796e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.1249...</msg>
<status status="PASS" starttime="20201115 22:03:13.713" endtime="20201115 22:03:13.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.731" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.730" endtime="20201115 22:03:13.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.734" level="INFO">VALUE: [5.153000000000796e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.1249999999981866e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.152999999997326e-06, 5.180000000000462e-06, 5.1949999999995056e-06, 5.1389999999977565e-06, 5.221999999999172e-06, 5.139000000001226e-06, 5.222999999998645e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.152000000001322e-06, 5.166000000000892e-06, 5.2360000000056806e-06, 5.069000000003376e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.152999999993857e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.125000000001656e-06, 5.166000000000892e-06, 5.153000000000796e-06, 5.138000000001752e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.235999999998742e-06, 5.167000000000366e-06, 5.194000000000032e-06]</msg>
<status status="PASS" starttime="20201115 22:03:13.732" endtime="20201115 22:03:13.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.727" endtime="20201115 22:03:13.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.737" endtime="20201115 22:03:13.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.741" endtime="20201115 22:03:13.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.739" endtime="20201115 22:03:13.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.735" endtime="20201115 22:03:13.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.350" endtime="20201115 22:03:13.762"></status>
</kw>
<msg timestamp="20201115 22:03:13.762" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.771" endtime="20201115 22:03:13.803"></status>
</kw>
<msg timestamp="20201115 22:03:13.803" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.770" endtime="20201115 22:03:13.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.806" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.804" endtime="20201115 22:03:13.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.807" endtime="20201115 22:03:13.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.767" endtime="20201115 22:03:13.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.765" endtime="20201115 22:03:13.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.817" endtime="20201115 22:03:14.104"></status>
</kw>
<msg timestamp="20201115 22:03:14.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025364444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025369611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.816" endtime="20201115 22:03:14.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025364444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025369611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.109" endtime="20201115 22:03:14.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.117" endtime="20201115 22:03:14.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.813" endtime="20201115 22:03:14.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.811" endtime="20201115 22:03:14.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.124" level="INFO">${RESULT} = [{'time': 0.025369611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.025681764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:14.121" endtime="20201115 22:03:14.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.139" level="INFO">${OVERHEAD} = {'diff': [5.167000000000366e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.180999999999936e-06, 5.167000000000366e-06, 5.151999999997853e-06, 5.165999999997423e-06, 5.167000000000366e-06, 5.179...</msg>
<status status="PASS" starttime="20201115 22:03:14.125" endtime="20201115 22:03:14.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.144" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.143" endtime="20201115 22:03:14.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.147" level="INFO">VALUE: [5.167000000000366e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.180999999999936e-06, 5.167000000000366e-06, 5.151999999997853e-06, 5.165999999997423e-06, 5.167000000000366e-06, 5.1799999999969926e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.110999999998617e-06, 5.167000000000366e-06, 5.152999999997326e-06, 5.0839999999989505e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.180999999999936e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.180000000000462e-06, 5.152999999993857e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.151999999994383e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.166000000000892e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.166000000000892e-06, 5.180000000000462e-06, 5.152000000001322e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.137999999994813e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.167000000000366e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.145" endtime="20201115 22:03:14.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.140" endtime="20201115 22:03:14.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.150" endtime="20201115 22:03:14.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.154" endtime="20201115 22:03:14.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.152" endtime="20201115 22:03:14.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.148" endtime="20201115 22:03:14.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.762" endtime="20201115 22:03:14.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.107" endtime="20201115 22:03:14.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.106" endtime="20201115 22:03:14.175"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.177" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.186" endtime="20201115 22:03:14.216"></status>
</kw>
<msg timestamp="20201115 22:03:14.217" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.185" endtime="20201115 22:03:14.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.218" endtime="20201115 22:03:14.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.221" endtime="20201115 22:03:14.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.182" endtime="20201115 22:03:14.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.180" endtime="20201115 22:03:14.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.231" endtime="20201115 22:03:14.517"></status>
</kw>
<msg timestamp="20201115 22:03:14.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024626542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.229" endtime="20201115 22:03:14.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024626542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.521" endtime="20201115 22:03:14.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.530" endtime="20201115 22:03:14.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.226" endtime="20201115 22:03:14.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.224" endtime="20201115 22:03:14.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.536" level="INFO">${RESULT} = [{'time': 0.024631875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.02496375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:14.533" endtime="20201115 22:03:14.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.551" level="INFO">${OVERHEAD} = {'diff': [5.332999999999727e-06, 5.306000000000061e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.346999999999297e-06, 5.3749...</msg>
<status status="PASS" starttime="20201115 22:03:14.538" endtime="20201115 22:03:14.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.556" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.555" endtime="20201115 22:03:14.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.558" level="INFO">VALUE: [5.332999999999727e-06, 5.306000000000061e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.346999999999297e-06, 5.374999999998437e-06, 5.3339999999992005e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.36199999999834e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.34799999999877e-06, 5.389000000001476e-06, 5.346999999999297e-06, 5.34799999999877e-06, 5.360999999998867e-06, 5.389000000001476e-06, 5.374999999994967e-06, 5.361000000002336e-06, 5.374999999994967e-06, 5.360999999995397e-06, 5.360999999995397e-06, 5.36200000000181e-06, 5.389000000001476e-06, 5.3189999999966875e-06, 5.346999999995827e-06, 5.36200000000181e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.346999999995827e-06, 5.3189999999966875e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.374999999994967e-06, 5.361000000002336e-06, 5.333000000003196e-06, 5.36200000000181e-06, 5.401999999994633e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.34800000000224e-06, 5.36200000000181e-06, 5.346999999995827e-06, 5.361000000002336e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.557" endtime="20201115 22:03:14.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.552" endtime="20201115 22:03:14.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.561" endtime="20201115 22:03:14.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.565" endtime="20201115 22:03:14.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.564" endtime="20201115 22:03:14.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.560" endtime="20201115 22:03:14.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.178" endtime="20201115 22:03:14.586"></status>
</kw>
<msg timestamp="20201115 22:03:14.586" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.596" endtime="20201115 22:03:14.628"></status>
</kw>
<msg timestamp="20201115 22:03:14.628" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.594" endtime="20201115 22:03:14.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.631" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.629" endtime="20201115 22:03:14.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.632" endtime="20201115 22:03:14.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.591" endtime="20201115 22:03:14.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.589" endtime="20201115 22:03:14.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.643" endtime="20201115 22:03:14.930"></status>
</kw>
<msg timestamp="20201115 22:03:14.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025063694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025069014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.642" endtime="20201115 22:03:14.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025063694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025069014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.934" endtime="20201115 22:03:14.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.943" endtime="20201115 22:03:14.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.639" endtime="20201115 22:03:14.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.637" endtime="20201115 22:03:14.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.950" level="INFO">${RESULT} = [{'time': 0.025069014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.025401347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:14.946" endtime="20201115 22:03:14.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.964" level="INFO">${OVERHEAD} = {'diff': [5.319999999999631e-06, 5.403000000001046e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.36199999999834e-06, 5.306000000000061e-06, 5.36100...</msg>
<status status="PASS" starttime="20201115 22:03:14.951" endtime="20201115 22:03:14.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.969" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.968" endtime="20201115 22:03:14.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.971" level="INFO">VALUE: [5.319999999999631e-06, 5.403000000001046e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.332999999999727e-06, 5.346999999999297e-06, 5.36199999999834e-06, 5.306000000000061e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.291000000001017e-06, 5.305000000000587e-06, 5.34799999999877e-06, 5.361000000002336e-06, 5.3889999999980065e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.3339999999992005e-06, 5.34799999999877e-06, 5.347000000002766e-06, 5.360999999995397e-06, 5.360999999995397e-06, 5.346999999995827e-06, 5.403000000001046e-06, 5.34800000000224e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.347999999995301e-06, 5.375000000001906e-06, 5.361999999994871e-06, 5.389000000001476e-06, 5.347000000002766e-06, 5.30600000000353e-06, 5.34800000000224e-06, 5.374999999994967e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.374999999994967e-06, 5.333000000003196e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.3200000000031e-06, 5.3189999999966875e-06, 5.375000000001906e-06, 5.417000000000616e-06, 5.360999999995397e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.970" endtime="20201115 22:03:14.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.965" endtime="20201115 22:03:14.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.975" endtime="20201115 22:03:14.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.978" endtime="20201115 22:03:14.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.977" endtime="20201115 22:03:14.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.973" endtime="20201115 22:03:14.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.587" endtime="20201115 22:03:14.999"></status>
</kw>
<msg timestamp="20201115 22:03:14.999" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.009" endtime="20201115 22:03:15.040"></status>
</kw>
<msg timestamp="20201115 22:03:15.040" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.007" endtime="20201115 22:03:15.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.043" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.041" endtime="20201115 22:03:15.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.044" endtime="20201115 22:03:15.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.004" endtime="20201115 22:03:15.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.002" endtime="20201115 22:03:15.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.054" endtime="20201115 22:03:15.340"></status>
</kw>
<msg timestamp="20201115 22:03:15.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023854597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023859958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.053" endtime="20201115 22:03:15.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023854597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023859958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.344" endtime="20201115 22:03:15.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.353" endtime="20201115 22:03:15.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.050" endtime="20201115 22:03:15.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.048" endtime="20201115 22:03:15.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.360" level="INFO">${RESULT} = [{'time': 0.023859958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.024189194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:15.356" endtime="20201115 22:03:15.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.374" level="INFO">${OVERHEAD} = {'diff': [5.360999999998867e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.34799999999877e-06, 5.36200000000181e-06, 5.374999...</msg>
<status status="PASS" starttime="20201115 22:03:15.361" endtime="20201115 22:03:15.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.379" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.378" endtime="20201115 22:03:15.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.381" level="INFO">VALUE: [5.360999999998867e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.34799999999877e-06, 5.36200000000181e-06, 5.374999999998437e-06, 5.34800000000224e-06, 5.346999999999297e-06, 5.319999999999631e-06, 5.34800000000224e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.360999999998867e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.347000000002766e-06, 5.347000000002766e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.36200000000181e-06, 5.347000000002766e-06, 5.361000000002336e-06, 5.374999999994967e-06, 5.360999999995397e-06, 5.346999999995827e-06, 5.347000000002766e-06, 5.347000000002766e-06, 5.360999999995397e-06, 5.360999999995397e-06, 5.347000000002766e-06, 5.333999999995731e-06, 5.347000000002766e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.360999999995397e-06]</msg>
<status status="PASS" starttime="20201115 22:03:15.380" endtime="20201115 22:03:15.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.375" endtime="20201115 22:03:15.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.385" endtime="20201115 22:03:15.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.388" endtime="20201115 22:03:15.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.387" endtime="20201115 22:03:15.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.383" endtime="20201115 22:03:15.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.000" endtime="20201115 22:03:15.409"></status>
</kw>
<msg timestamp="20201115 22:03:15.410" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.419" endtime="20201115 22:03:15.451"></status>
</kw>
<msg timestamp="20201115 22:03:15.452" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.417" endtime="20201115 22:03:15.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.453" endtime="20201115 22:03:15.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.455" endtime="20201115 22:03:15.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.415" endtime="20201115 22:03:15.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.412" endtime="20201115 22:03:15.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.466" endtime="20201115 22:03:15.752"></status>
</kw>
<msg timestamp="20201115 22:03:15.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025899542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025904972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.464" endtime="20201115 22:03:15.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025899542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025904972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.756" endtime="20201115 22:03:15.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.765" endtime="20201115 22:03:15.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.462" endtime="20201115 22:03:15.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.460" endtime="20201115 22:03:15.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.772" level="INFO">${RESULT} = [{'time': 0.025904972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.429999999997243e-06, 'source_diff': 5.429999999997243e-06}, {'time': 0.026235458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:15.768" endtime="20201115 22:03:15.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.787" level="INFO">${OVERHEAD} = {'diff': [5.429999999997243e-06, 5.346999999999297e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.3609...</msg>
<status status="PASS" starttime="20201115 22:03:15.773" endtime="20201115 22:03:15.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.792" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.791" endtime="20201115 22:03:15.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.795" level="INFO">VALUE: [5.429999999997243e-06, 5.346999999999297e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.374999999998437e-06, 5.374999999998437e-06, 5.346999999999297e-06, 5.305000000000587e-06, 5.361000000002336e-06, 5.346999999999297e-06, 5.374999999998437e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.403000000001046e-06, 5.346999999995827e-06, 5.305999999996591e-06, 5.375000000001906e-06, 5.319000000003626e-06, 5.2639999999978815e-06, 5.34800000000224e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.374999999994967e-06, 5.361000000002336e-06, 5.3200000000031e-06, 5.375000000001906e-06, 5.346999999995827e-06, 5.361000000002336e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.360999999995397e-06, 5.347000000002766e-06, 5.347000000002766e-06, 5.360999999995397e-06, 5.361999999994871e-06, 5.375000000001906e-06]</msg>
<status status="PASS" starttime="20201115 22:03:15.793" endtime="20201115 22:03:15.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.788" endtime="20201115 22:03:15.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.798" endtime="20201115 22:03:15.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.802" endtime="20201115 22:03:15.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.800" endtime="20201115 22:03:15.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.796" endtime="20201115 22:03:15.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.410" endtime="20201115 22:03:15.823"></status>
</kw>
<msg timestamp="20201115 22:03:15.823" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.832" endtime="20201115 22:03:15.864"></status>
</kw>
<msg timestamp="20201115 22:03:15.865" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.831" endtime="20201115 22:03:15.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.867" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.866" endtime="20201115 22:03:15.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.868" endtime="20201115 22:03:15.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.828" endtime="20201115 22:03:15.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.826" endtime="20201115 22:03:15.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.879" endtime="20201115 22:03:16.164"></status>
</kw>
<msg timestamp="20201115 22:03:16.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024185056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.877" endtime="20201115 22:03:16.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024185056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.168" endtime="20201115 22:03:16.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.177" endtime="20201115 22:03:16.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.874" endtime="20201115 22:03:16.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.873" endtime="20201115 22:03:16.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.184" level="INFO">${RESULT} = [{'time': 0.024185056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.024516417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:16.181" endtime="20201115 22:03:16.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.198" level="INFO">${OVERHEAD} = {'diff': [5.374999999998437e-06, 5.3889999999980065e-06, 5.332999999999727e-06, 5.375000000001906e-06, 5.36200000000181e-06, 5.361000000002336e-06, 5.3889999999980065e-06, 5.374999999998437e-06, 5.360...</msg>
<status status="PASS" starttime="20201115 22:03:16.185" endtime="20201115 22:03:16.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.203" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.202" endtime="20201115 22:03:16.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.205" level="INFO">VALUE: [5.374999999998437e-06, 5.3889999999980065e-06, 5.332999999999727e-06, 5.375000000001906e-06, 5.36200000000181e-06, 5.361000000002336e-06, 5.3889999999980065e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.388000000002002e-06, 5.360999999998867e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.374999999998437e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.346999999999297e-06, 5.3889999999980065e-06, 5.34799999999877e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.374999999994967e-06, 5.347000000002766e-06, 5.347000000002766e-06, 5.388000000002002e-06, 5.361000000002336e-06, 5.360999999995397e-06, 5.347000000002766e-06, 5.389000000001476e-06, 5.3200000000031e-06, 5.346999999995827e-06, 5.361000000002336e-06, 5.346999999995827e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.346999999995827e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.375000000001906e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.204" endtime="20201115 22:03:16.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.199" endtime="20201115 22:03:16.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.209" endtime="20201115 22:03:16.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.213" endtime="20201115 22:03:16.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.211" endtime="20201115 22:03:16.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.208" endtime="20201115 22:03:16.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.823" endtime="20201115 22:03:16.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.176" endtime="20201115 22:03:16.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.175" endtime="20201115 22:03:16.234"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.236" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.246" endtime="20201115 22:03:16.276"></status>
</kw>
<msg timestamp="20201115 22:03:16.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.244" endtime="20201115 22:03:16.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.278" endtime="20201115 22:03:16.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.280" endtime="20201115 22:03:16.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.241" endtime="20201115 22:03:16.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.239" endtime="20201115 22:03:16.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.290" endtime="20201115 22:03:16.576"></status>
</kw>
<msg timestamp="20201115 22:03:16.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025240556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025246069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.288" endtime="20201115 22:03:16.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025240556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025246069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.581" endtime="20201115 22:03:16.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.589" endtime="20201115 22:03:16.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.285" endtime="20201115 22:03:16.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.284" endtime="20201115 22:03:16.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.596" level="INFO">${RESULT} = [{'time': 0.025246069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.025602431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:16.593" endtime="20201115 22:03:16.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.610" level="INFO">${OVERHEAD} = {'diff': [5.512999999998658e-06, 5.569999999999881e-06, 5.5839999999994505e-06, 5.556000000000311e-06, 5.5979999999990204e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.56...</msg>
<status status="PASS" starttime="20201115 22:03:16.597" endtime="20201115 22:03:16.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.615" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.614" endtime="20201115 22:03:16.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.618" level="INFO">VALUE: [5.512999999998658e-06, 5.569999999999881e-06, 5.5839999999994505e-06, 5.556000000000311e-06, 5.5979999999990204e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.555999999996841e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.569000000000407e-06, 5.540999999997798e-06, 5.57000000000335e-06, 5.569999999996411e-06, 5.5689999999969375e-06, 5.597000000003016e-06, 5.5689999999969375e-06, 5.5550000000043065e-06, 5.554999999997368e-06, 5.569000000003876e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.582999999996507e-06, 5.555999999996841e-06, 5.583000000003446e-06, 5.51400000000507e-06, 5.540999999997798e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.57000000000335e-06, 5.5689999999969375e-06, 5.541999999997271e-06, 5.583000000003446e-06, 5.597000000003016e-06, 5.569999999996411e-06, 5.541999999997271e-06, 5.554999999997368e-06, 5.555999999996841e-06, 5.569999999996411e-06, 5.499999999998562e-06, 5.58400000000292e-06, 5.597000000003016e-06, 5.597999999995551e-06, 5.597000000003016e-06, 5.569000000003876e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.616" endtime="20201115 22:03:16.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.611" endtime="20201115 22:03:16.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.622" endtime="20201115 22:03:16.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.625" endtime="20201115 22:03:16.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.624" endtime="20201115 22:03:16.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.620" endtime="20201115 22:03:16.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.237" endtime="20201115 22:03:16.646"></status>
</kw>
<msg timestamp="20201115 22:03:16.646" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.656" endtime="20201115 22:03:16.692"></status>
</kw>
<msg timestamp="20201115 22:03:16.692" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.654" endtime="20201115 22:03:16.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.695" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.693" endtime="20201115 22:03:16.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.696" endtime="20201115 22:03:16.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.651" endtime="20201115 22:03:16.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.649" endtime="20201115 22:03:16.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.707" endtime="20201115 22:03:16.992"></status>
</kw>
<msg timestamp="20201115 22:03:16.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024852639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024858208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.705" endtime="20201115 22:03:16.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024852639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024858208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.997" endtime="20201115 22:03:17.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.005" endtime="20201115 22:03:17.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.702" endtime="20201115 22:03:17.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.701" endtime="20201115 22:03:17.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.012" level="INFO">${RESULT} = [{'time': 0.024858208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.025209361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:17.009" endtime="20201115 22:03:17.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.026" level="INFO">${OVERHEAD} = {'diff': [5.569000000000407e-06, 5.569000000000407e-06, 5.555000000000837e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.5689...</msg>
<status status="PASS" starttime="20201115 22:03:17.013" endtime="20201115 22:03:17.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.032" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.031" endtime="20201115 22:03:17.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.034" level="INFO">VALUE: [5.569000000000407e-06, 5.569000000000407e-06, 5.555000000000837e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.5689999999969375e-06, 5.58400000000292e-06, 5.596999999999547e-06, 5.569999999999881e-06, 5.582999999999977e-06, 5.528000000001171e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.554999999997368e-06, 5.582999999996507e-06, 5.527999999997701e-06, 5.569999999996411e-06, 5.57000000000335e-06, 5.596999999996077e-06, 5.58400000000292e-06, 5.555999999996841e-06, 5.569999999996411e-06, 5.582999999996507e-06, 5.569999999996411e-06, 5.5689999999969375e-06, 5.569000000003876e-06, 5.5689999999969375e-06, 5.59800000000249e-06, 5.582999999996507e-06, 5.569000000003876e-06, 5.5689999999969375e-06, 5.5550000000043065e-06, 5.554999999997368e-06, 5.569999999996411e-06, 5.55600000000378e-06, 5.57000000000335e-06, 5.583000000003446e-06, 5.527000000005167e-06, 5.554999999997368e-06, 5.57000000000335e-06, 5.5689999999969375e-06, 5.583000000003446e-06, 5.57000000000335e-06, 5.54200000000421e-06]</msg>
<status status="PASS" starttime="20201115 22:03:17.033" endtime="20201115 22:03:17.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.028" endtime="20201115 22:03:17.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.038" endtime="20201115 22:03:17.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.041" endtime="20201115 22:03:17.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.039" endtime="20201115 22:03:17.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.036" endtime="20201115 22:03:17.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.647" endtime="20201115 22:03:17.062"></status>
</kw>
<msg timestamp="20201115 22:03:17.062" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.072" endtime="20201115 22:03:17.105"></status>
</kw>
<msg timestamp="20201115 22:03:17.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.070" endtime="20201115 22:03:17.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.107" endtime="20201115 22:03:17.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.109" endtime="20201115 22:03:17.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.067" endtime="20201115 22:03:17.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.065" endtime="20201115 22:03:17.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.120" endtime="20201115 22:03:17.407"></status>
</kw>
<msg timestamp="20201115 22:03:17.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025884958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0258905, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:17.118" endtime="20201115 22:03:17.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025884958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0258905, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:17.411" endtime="20201115 22:03:17.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.419" endtime="20201115 22:03:17.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.116" endtime="20201115 22:03:17.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.114" endtime="20201115 22:03:17.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.426" level="INFO">${RESULT} = [{'time': 0.0258905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.026245542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:17.423" endtime="20201115 22:03:17.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.442" level="INFO">${OVERHEAD} = {'diff': [5.542000000000741e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.527999999997701e-06, 5.556000000000311e-06, 5.528000000001171e-06, 5.582999999999977e-06, 5.569...</msg>
<status status="PASS" starttime="20201115 22:03:17.428" endtime="20201115 22:03:17.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.447" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.446" endtime="20201115 22:03:17.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.449" level="INFO">VALUE: [5.542000000000741e-06, 5.5979999999990204e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.527999999997701e-06, 5.556000000000311e-06, 5.528000000001171e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.485999999998992e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.569999999999881e-06, 5.556000000000311e-06, 5.582999999999977e-06, 5.528000000001171e-06, 5.527999999997701e-06, 5.625000000002156e-06, 5.5550000000043065e-06, 5.583999999995981e-06, 5.554999999997368e-06, 5.57000000000335e-06, 5.583000000003446e-06, 5.625000000002156e-06, 5.582999999996507e-06, 5.569000000003876e-06, 5.569999999996411e-06, 5.569000000003876e-06, 5.583000000003446e-06, 5.5550000000043065e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.569000000003876e-06, 5.583000000003446e-06, 5.569999999996411e-06, 5.569999999996411e-06, 5.583999999995981e-06, 5.569999999996411e-06, 5.57000000000335e-06, 5.555999999996841e-06, 5.569000000003876e-06, 5.569000000003876e-06, 5.569000000003876e-06, 5.57000000000335e-06, 5.624999999995217e-06, 5.583000000003446e-06, 5.569000000003876e-06, 5.58400000000292e-06, 5.569000000003876e-06, 5.58400000000292e-06]</msg>
<status status="PASS" starttime="20201115 22:03:17.448" endtime="20201115 22:03:17.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.443" endtime="20201115 22:03:17.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.453" endtime="20201115 22:03:17.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.456" endtime="20201115 22:03:17.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.455" endtime="20201115 22:03:17.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.451" endtime="20201115 22:03:17.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.063" endtime="20201115 22:03:17.477"></status>
</kw>
<msg timestamp="20201115 22:03:17.477" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.487" endtime="20201115 22:03:17.517"></status>
</kw>
<msg timestamp="20201115 22:03:17.517" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.485" endtime="20201115 22:03:17.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.520" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.518" endtime="20201115 22:03:17.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.522" endtime="20201115 22:03:17.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.482" endtime="20201115 22:03:17.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.480" endtime="20201115 22:03:17.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.532" endtime="20201115 22:03:17.818"></status>
</kw>
<msg timestamp="20201115 22:03:17.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.530" endtime="20201115 22:03:17.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.822" endtime="20201115 22:03:17.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.831" endtime="20201115 22:03:17.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.528" endtime="20201115 22:03:17.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.526" endtime="20201115 22:03:17.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.838" level="INFO">${RESULT} = [{'time': 0.022666889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.023018681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:17.835" endtime="20201115 22:03:17.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.852" level="INFO">${OVERHEAD} = {'diff': [5.542000000000741e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.58400000000292e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.58299...</msg>
<status status="PASS" starttime="20201115 22:03:17.839" endtime="20201115 22:03:17.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.857" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.856" endtime="20201115 22:03:17.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.860" level="INFO">VALUE: [5.542000000000741e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.58400000000292e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.5689999999969375e-06, 5.555999999996841e-06, 5.6389999999982565e-06, 5.556000000000311e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.528000000001171e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.556000000000311e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.610999999999117e-06, 5.569999999996411e-06, 5.5689999999969375e-06, 5.583000000003446e-06, 5.5550000000043065e-06, 5.583000000003446e-06, 5.611000000002586e-06, 5.5689999999969375e-06, 5.55600000000378e-06, 5.582999999996507e-06, 5.611000000002586e-06, 5.555999999996841e-06, 5.57000000000335e-06, 5.596999999996077e-06, 5.58400000000292e-06, 5.583999999995981e-06, 5.58400000000292e-06, 5.555999999996841e-06, 5.583000000003446e-06, 5.58400000000292e-06, 5.569000000003876e-06, 5.569000000003876e-06, 5.5689999999969375e-06, 5.582999999996507e-06, 5.58400000000292e-06, 5.5689999999969375e-06]</msg>
<status status="PASS" starttime="20201115 22:03:17.858" endtime="20201115 22:03:17.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.853" endtime="20201115 22:03:17.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.863" endtime="20201115 22:03:17.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.867" endtime="20201115 22:03:17.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.865" endtime="20201115 22:03:17.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.861" endtime="20201115 22:03:17.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.478" endtime="20201115 22:03:17.888"></status>
</kw>
<msg timestamp="20201115 22:03:17.888" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.897" endtime="20201115 22:03:17.928"></status>
</kw>
<msg timestamp="20201115 22:03:17.929" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.896" endtime="20201115 22:03:17.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.930" endtime="20201115 22:03:17.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.933" endtime="20201115 22:03:17.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.893" endtime="20201115 22:03:17.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.891" endtime="20201115 22:03:17.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.946" endtime="20201115 22:03:18.233"></status>
</kw>
<msg timestamp="20201115 22:03:18.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024260278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024265833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.944" endtime="20201115 22:03:18.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024260278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024265833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.238" endtime="20201115 22:03:18.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.246" endtime="20201115 22:03:18.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.941" endtime="20201115 22:03:18.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.939" endtime="20201115 22:03:18.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.254" level="INFO">${RESULT} = [{'time': 0.024265833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.024615972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:18.250" endtime="20201115 22:03:18.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.268" level="INFO">${OVERHEAD} = {'diff': [5.555000000000837e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.5139999999981315e-06, 5.582999999999977e-06, 5.569...</msg>
<status status="PASS" starttime="20201115 22:03:18.255" endtime="20201115 22:03:18.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.273" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.272" endtime="20201115 22:03:18.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.275" level="INFO">VALUE: [5.555000000000837e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.5139999999981315e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.528000000001171e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.556000000000311e-06, 5.611000000002586e-06, 5.582999999999977e-06, 5.569999999999881e-06, 5.596999999999547e-06, 5.569999999996411e-06, 5.57000000000335e-06, 5.57000000000335e-06, 5.540999999997798e-06, 5.569000000003876e-06, 5.569000000003876e-06, 5.527000000005167e-06, 5.583000000003446e-06, 5.55600000000378e-06, 5.5689999999969375e-06, 5.57000000000335e-06, 5.5139999999981315e-06, 5.582999999996507e-06, 5.5689999999969375e-06, 5.582999999996507e-06, 5.5689999999969375e-06, 5.55600000000378e-06, 5.569000000003876e-06, 5.597999999995551e-06, 5.554999999997368e-06, 5.5550000000043065e-06, 5.597000000003016e-06, 5.5689999999969375e-06, 5.597000000003016e-06, 5.485999999998992e-06, 5.527999999997701e-06, 5.610999999995647e-06, 5.5550000000043065e-06, 5.569000000003876e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.274" endtime="20201115 22:03:18.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.269" endtime="20201115 22:03:18.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.279" endtime="20201115 22:03:18.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.282" endtime="20201115 22:03:18.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.281" endtime="20201115 22:03:18.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.277" endtime="20201115 22:03:18.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.888" endtime="20201115 22:03:18.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.235" endtime="20201115 22:03:18.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.234" endtime="20201115 22:03:18.304"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.306" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.315" endtime="20201115 22:03:18.346"></status>
</kw>
<msg timestamp="20201115 22:03:18.347" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.314" endtime="20201115 22:03:18.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.350" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.348" endtime="20201115 22:03:18.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.351" endtime="20201115 22:03:18.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.311" endtime="20201115 22:03:18.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.309" endtime="20201115 22:03:18.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.361" endtime="20201115 22:03:18.647"></status>
</kw>
<msg timestamp="20201115 22:03:18.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025507264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025513028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.359" endtime="20201115 22:03:18.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025507264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025513028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.652" endtime="20201115 22:03:18.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.660" endtime="20201115 22:03:18.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.356" endtime="20201115 22:03:18.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.354" endtime="20201115 22:03:18.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.667" level="INFO">${RESULT} = [{'time': 0.025513028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.025889569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:18.664" endtime="20201115 22:03:18.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.681" level="INFO">${OVERHEAD} = {'diff': [5.7639999999983815e-06, 5.777000000001947e-06, 5.805000000001087e-06, 5.778000000001421e-06, 5.764000000001851e-06, 5.777000000001947e-06, 5.7229999999991454e-06, 5.792000000000991e-06, 5.77...</msg>
<status status="PASS" starttime="20201115 22:03:18.668" endtime="20201115 22:03:18.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.686" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.685" endtime="20201115 22:03:18.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.689" level="INFO">VALUE: [5.7639999999983815e-06, 5.777000000001947e-06, 5.805000000001087e-06, 5.778000000001421e-06, 5.764000000001851e-06, 5.777000000001947e-06, 5.7229999999991454e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.778000000001421e-06, 5.762999999998908e-06, 5.735999999999242e-06, 5.776999999998478e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.806000000000561e-06, 5.736999999998715e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.805999999997091e-06, 5.8200000000036e-06, 5.8329999999967574e-06, 5.833000000003696e-06, 5.735999999999242e-06, 5.762999999998908e-06, 5.776999999998478e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.8050000000045565e-06, 5.790999999998048e-06, 5.79200000000446e-06, 5.80600000000403e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.791999999997521e-06, 5.749999999998812e-06, 5.79200000000446e-06, 5.790999999998048e-06, 5.7639999999983815e-06, 5.79200000000446e-06, 5.708000000000102e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.777000000005417e-06, 5.7779999999979514e-06, 5.776999999998478e-06, 5.790999999998048e-06, 5.76400000000532e-06, 5.7779999999979514e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.687" endtime="20201115 22:03:18.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.682" endtime="20201115 22:03:18.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.692" endtime="20201115 22:03:18.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.696" endtime="20201115 22:03:18.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.694" endtime="20201115 22:03:18.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.690" endtime="20201115 22:03:18.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.307" endtime="20201115 22:03:18.717"></status>
</kw>
<msg timestamp="20201115 22:03:18.717" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.727" endtime="20201115 22:03:18.762"></status>
</kw>
<msg timestamp="20201115 22:03:18.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.725" endtime="20201115 22:03:18.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.766" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.764" endtime="20201115 22:03:18.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.767" endtime="20201115 22:03:18.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.722" endtime="20201115 22:03:18.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.720" endtime="20201115 22:03:18.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.778" endtime="20201115 22:03:19.063"></status>
</kw>
<msg timestamp="20201115 22:03:19.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024231625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024237375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.776" endtime="20201115 22:03:19.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024231625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024237375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.068" endtime="20201115 22:03:19.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.076" endtime="20201115 22:03:19.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.773" endtime="20201115 22:03:19.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.771" endtime="20201115 22:03:19.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.083" level="INFO">${RESULT} = [{'time': 0.024237375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.024617014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:19.080" endtime="20201115 22:03:19.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.098" level="INFO">${OVERHEAD} = {'diff': [5.749999999998812e-06, 5.792000000000991e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.721999999999672e-06, 5.7779999999979514e-06, 5.805999999997091e-06, 5.7...</msg>
<status status="PASS" starttime="20201115 22:03:19.084" endtime="20201115 22:03:19.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.103" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.102" endtime="20201115 22:03:19.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.106" level="INFO">VALUE: [5.749999999998812e-06, 5.792000000000991e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.721999999999672e-06, 5.7779999999979514e-06, 5.805999999997091e-06, 5.791999999997521e-06, 5.778000000001421e-06, 5.764000000001851e-06, 5.777000000001947e-06, 5.792000000000991e-06, 5.7089999999995755e-06, 5.778000000001421e-06, 5.736000000002711e-06, 5.778000000001421e-06, 5.7779999999979514e-06, 5.833000000000227e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7089999999995755e-06, 5.805999999997091e-06, 5.791999999997521e-06, 5.76400000000532e-06, 5.7500000000057505e-06, 5.790999999998048e-06, 5.790999999998048e-06, 5.861000000002836e-06, 5.776999999998478e-06, 5.790999999998048e-06, 5.7779999999979514e-06, 5.8189999999971875e-06, 5.735999999999242e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.8200000000036e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.77800000000489e-06, 5.735999999999242e-06, 5.7779999999979514e-06, 5.77800000000489e-06]</msg>
<status status="PASS" starttime="20201115 22:03:19.104" endtime="20201115 22:03:19.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.100" endtime="20201115 22:03:19.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.109" endtime="20201115 22:03:19.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.113" endtime="20201115 22:03:19.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.111" endtime="20201115 22:03:19.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.107" endtime="20201115 22:03:19.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.718" endtime="20201115 22:03:19.134"></status>
</kw>
<msg timestamp="20201115 22:03:19.134" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.144" endtime="20201115 22:03:19.174"></status>
</kw>
<msg timestamp="20201115 22:03:19.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.142" endtime="20201115 22:03:19.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.176" endtime="20201115 22:03:19.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.178" endtime="20201115 22:03:19.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.139" endtime="20201115 22:03:19.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.136" endtime="20201115 22:03:19.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.189" endtime="20201115 22:03:19.475"></status>
</kw>
<msg timestamp="20201115 22:03:19.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024161139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024166917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.187" endtime="20201115 22:03:19.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024161139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024166917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.479" endtime="20201115 22:03:19.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.488" endtime="20201115 22:03:19.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.185" endtime="20201115 22:03:19.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.183" endtime="20201115 22:03:19.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.495" level="INFO">${RESULT} = [{'time': 0.024166917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.024545986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:19.491" endtime="20201115 22:03:19.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.509" level="INFO">${OVERHEAD} = {'diff': [5.7779999999979514e-06, 5.7779999999979514e-06, 5.846999999999797e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.790999999998048e-06, 5.776999999998478e-06, 5.735999999999242e-06, 5.76...</msg>
<status status="PASS" starttime="20201115 22:03:19.496" endtime="20201115 22:03:19.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.514" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.513" endtime="20201115 22:03:19.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.516" level="INFO">VALUE: [5.7779999999979514e-06, 5.7779999999979514e-06, 5.846999999999797e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.790999999998048e-06, 5.776999999998478e-06, 5.735999999999242e-06, 5.764000000001851e-06, 5.778000000001421e-06, 5.721999999999672e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.778000000001421e-06, 5.790999999998048e-06, 5.750000000002281e-06, 5.778000000001421e-06, 5.792000000000991e-06, 5.776999999998478e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.77800000000489e-06, 5.7779999999979514e-06, 5.77800000000489e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.790999999998048e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.77800000000489e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.735999999999242e-06, 5.79200000000446e-06, 5.776999999998478e-06, 5.776999999998478e-06, 5.804999999997618e-06, 5.791000000004987e-06, 5.7639999999983815e-06, 5.804999999997618e-06, 5.7779999999979514e-06, 5.805999999997091e-06]</msg>
<status status="PASS" starttime="20201115 22:03:19.515" endtime="20201115 22:03:19.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.510" endtime="20201115 22:03:19.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.519" endtime="20201115 22:03:19.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.523" endtime="20201115 22:03:19.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.521" endtime="20201115 22:03:19.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.518" endtime="20201115 22:03:19.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.134" endtime="20201115 22:03:19.544"></status>
</kw>
<msg timestamp="20201115 22:03:19.545" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.554" endtime="20201115 22:03:19.587"></status>
</kw>
<msg timestamp="20201115 22:03:19.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.552" endtime="20201115 22:03:19.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.589" endtime="20201115 22:03:19.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.591" endtime="20201115 22:03:19.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.550" endtime="20201115 22:03:19.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.547" endtime="20201115 22:03:19.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.602" endtime="20201115 22:03:19.888"></status>
</kw>
<msg timestamp="20201115 22:03:19.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025754444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025760278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.600" endtime="20201115 22:03:19.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025754444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025760278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.893" endtime="20201115 22:03:19.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.901" endtime="20201115 22:03:19.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.597" endtime="20201115 22:03:19.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.595" endtime="20201115 22:03:19.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.908" level="INFO">${RESULT} = [{'time': 0.025760278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.026135306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:19.905" endtime="20201115 22:03:19.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.922" level="INFO">${OVERHEAD} = {'diff': [5.8339999999997005e-06, 5.737000000002185e-06, 5.709000000003045e-06, 5.804999999997618e-06, 5.776999999998478e-06, 5.833000000000227e-06, 5.762999999998908e-06, 5.778000000001421e-06, 5.777...</msg>
<status status="PASS" starttime="20201115 22:03:19.909" endtime="20201115 22:03:19.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.927" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.926" endtime="20201115 22:03:19.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.930" level="INFO">VALUE: [5.8339999999997005e-06, 5.737000000002185e-06, 5.709000000003045e-06, 5.804999999997618e-06, 5.776999999998478e-06, 5.833000000000227e-06, 5.762999999998908e-06, 5.778000000001421e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.804999999997618e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.7639999999983815e-06, 5.76400000000532e-06, 5.77800000000489e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.776999999998478e-06, 5.8189999999971875e-06, 5.77800000000489e-06, 5.7639999999983815e-06, 5.76400000000532e-06, 5.791000000004987e-06, 5.7639999999983815e-06, 5.776999999998478e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.7089999999995755e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.762999999998908e-06, 5.805999999997091e-06, 5.7639999999983815e-06, 5.847000000003266e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.735999999999242e-06, 5.791000000004987e-06, 5.7779999999979514e-06, 5.791999999997521e-06]</msg>
<status status="PASS" starttime="20201115 22:03:19.928" endtime="20201115 22:03:19.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.923" endtime="20201115 22:03:19.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.934" endtime="20201115 22:03:19.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.937" endtime="20201115 22:03:19.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.936" endtime="20201115 22:03:19.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.932" endtime="20201115 22:03:19.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.545" endtime="20201115 22:03:19.958"></status>
</kw>
<msg timestamp="20201115 22:03:19.959" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.968" endtime="20201115 22:03:19.998"></status>
</kw>
<msg timestamp="20201115 22:03:19.999" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.966" endtime="20201115 22:03:19.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.002" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.000" endtime="20201115 22:03:20.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.003" endtime="20201115 22:03:20.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.963" endtime="20201115 22:03:20.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.961" endtime="20201115 22:03:20.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.013" endtime="20201115 22:03:20.300"></status>
</kw>
<msg timestamp="20201115 22:03:20.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023391153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.012" endtime="20201115 22:03:20.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023391153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.304" endtime="20201115 22:03:20.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.312" endtime="20201115 22:03:20.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.009" endtime="20201115 22:03:20.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.007" endtime="20201115 22:03:20.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.320" level="INFO">${RESULT} = [{'time': 0.023396861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.023775792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:20.316" endtime="20201115 22:03:20.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.334" level="INFO">${OVERHEAD} = {'diff': [5.708000000000102e-06, 5.764000000001851e-06, 5.791000000001517e-06, 5.778000000001421e-06, 5.791000000001517e-06, 5.749999999998812e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.7780...</msg>
<status status="PASS" starttime="20201115 22:03:20.321" endtime="20201115 22:03:20.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.339" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.337" endtime="20201115 22:03:20.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.341" level="INFO">VALUE: [5.708000000000102e-06, 5.764000000001851e-06, 5.791000000001517e-06, 5.778000000001421e-06, 5.791000000001517e-06, 5.749999999998812e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.806000000000561e-06, 5.750000000002281e-06, 5.736000000002711e-06, 5.846999999999797e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.84800000000274e-06, 5.764000000001851e-06, 5.792000000000991e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.763000000002377e-06, 5.791999999997521e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.749999999998812e-06, 5.8190000000041264e-06, 5.861000000002836e-06, 5.805999999997091e-06, 5.790999999998048e-06, 5.7779999999979514e-06, 5.80600000000403e-06, 5.791999999997521e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.791000000004987e-06, 5.791999999997521e-06, 5.805999999997091e-06, 5.695000000000006e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.776999999998478e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.790999999998048e-06, 5.77800000000489e-06, 5.749999999998812e-06, 5.77800000000489e-06, 5.749999999998812e-06]</msg>
<status status="PASS" starttime="20201115 22:03:20.340" endtime="20201115 22:03:20.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.334" endtime="20201115 22:03:20.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.345" endtime="20201115 22:03:20.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.349" endtime="20201115 22:03:20.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.347" endtime="20201115 22:03:20.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.343" endtime="20201115 22:03:20.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.959" endtime="20201115 22:03:20.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.305" endtime="20201115 22:03:20.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.304" endtime="20201115 22:03:20.370"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.372" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.382" endtime="20201115 22:03:20.410"></status>
</kw>
<msg timestamp="20201115 22:03:20.410" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.380" endtime="20201115 22:03:20.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.413" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.412" endtime="20201115 22:03:20.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.414" endtime="20201115 22:03:20.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.377" endtime="20201115 22:03:20.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.375" endtime="20201115 22:03:20.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.424" endtime="20201115 22:03:20.710"></status>
</kw>
<msg timestamp="20201115 22:03:20.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023966181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023972167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.422" endtime="20201115 22:03:20.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023966181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023972167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.714" endtime="20201115 22:03:20.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.722" endtime="20201115 22:03:20.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.419" endtime="20201115 22:03:20.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.418" endtime="20201115 22:03:20.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.729" level="INFO">${RESULT} = [{'time': 0.023972167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.024373347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:20.726" endtime="20201115 22:03:20.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.745" level="INFO">${OVERHEAD} = {'diff': [5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.985...</msg>
<status status="PASS" starttime="20201115 22:03:20.730" endtime="20201115 22:03:20.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.750" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.749" endtime="20201115 22:03:20.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.754" level="INFO">VALUE: [5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.985999999999492e-06, 6.000000000002531e-06, 5.999999999999062e-06, 5.986000000002961e-06, 5.973000000002865e-06, 5.986000000002961e-06, 5.945000000000256e-06, 5.986000000002961e-06, 5.986000000002961e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.986000000006431e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.05600000000428e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.027000000005667e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 6.02800000000514e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.985999999999492e-06, 6.0139999999986316e-06, 5.957999999993413e-06]</msg>
<status status="PASS" starttime="20201115 22:03:20.752" endtime="20201115 22:03:20.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.746" endtime="20201115 22:03:20.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.757" endtime="20201115 22:03:20.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.761" endtime="20201115 22:03:20.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.759" endtime="20201115 22:03:20.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.755" endtime="20201115 22:03:20.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.373" endtime="20201115 22:03:20.781"></status>
</kw>
<msg timestamp="20201115 22:03:20.782" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.791" endtime="20201115 22:03:20.823"></status>
</kw>
<msg timestamp="20201115 22:03:20.823" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.789" endtime="20201115 22:03:20.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.824" endtime="20201115 22:03:20.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.827" endtime="20201115 22:03:20.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.786" endtime="20201115 22:03:20.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.784" endtime="20201115 22:03:20.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.838" endtime="20201115 22:03:21.123"></status>
</kw>
<msg timestamp="20201115 22:03:21.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024233181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.836" endtime="20201115 22:03:21.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024227181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024233181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.128" endtime="20201115 22:03:21.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.136" endtime="20201115 22:03:21.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.833" endtime="20201115 22:03:21.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.831" endtime="20201115 22:03:21.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.143" level="INFO">${RESULT} = [{'time': 0.024233181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.024632736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.140" endtime="20201115 22:03:21.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.157" level="INFO">${OVERHEAD} = {'diff': [5.999999999999062e-06, 5.971999999999922e-06, 6.012999999999158e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.9859...</msg>
<status status="PASS" starttime="20201115 22:03:21.144" endtime="20201115 22:03:21.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.162" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.161" endtime="20201115 22:03:21.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.165" level="INFO">VALUE: [5.999999999999062e-06, 5.971999999999922e-06, 6.012999999999158e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.055000000001337e-06, 5.9579999999968825e-06, 5.930000000001212e-06, 5.931000000000686e-06, 5.9729999999993955e-06, 5.987000000002435e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.971999999999922e-06, 6.0000000000060005e-06, 5.999999999999062e-06, 6.0140000000055704e-06, 6.0139999999986316e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.931000000000686e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.973000000006334e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.987000000005904e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.987000000005904e-06, 5.999999999999062e-06, 6.0000000000060005e-06, 6.041000000005237e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.986999999998965e-06, 5.986999999998965e-06, 5.945000000000256e-06]</msg>
<status status="PASS" starttime="20201115 22:03:21.164" endtime="20201115 22:03:21.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.159" endtime="20201115 22:03:21.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.168" endtime="20201115 22:03:21.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.172" endtime="20201115 22:03:21.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.170" endtime="20201115 22:03:21.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.167" endtime="20201115 22:03:21.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.782" endtime="20201115 22:03:21.193"></status>
</kw>
<msg timestamp="20201115 22:03:21.193" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.202" endtime="20201115 22:03:21.234"></status>
</kw>
<msg timestamp="20201115 22:03:21.235" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.201" endtime="20201115 22:03:21.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.236" endtime="20201115 22:03:21.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.239" endtime="20201115 22:03:21.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.198" endtime="20201115 22:03:21.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.196" endtime="20201115 22:03:21.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.249" endtime="20201115 22:03:21.535"></status>
</kw>
<msg timestamp="20201115 22:03:21.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02490625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:21.248" endtime="20201115 22:03:21.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02490625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:21.539" endtime="20201115 22:03:21.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.547" endtime="20201115 22:03:21.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.245" endtime="20201115 22:03:21.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.243" endtime="20201115 22:03:21.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.554" level="INFO">${RESULT} = [{'time': 0.024912208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.025312347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.551" endtime="20201115 22:03:21.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.569" level="INFO">${OVERHEAD} = {'diff': [5.958000000000352e-06, 5.985999999999492e-06, 6.000000000002531e-06, 6.014000000002101e-06, 5.971999999999922e-06, 5.986999999998965e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.0139...</msg>
<status status="PASS" starttime="20201115 22:03:21.556" endtime="20201115 22:03:21.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.574" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.573" endtime="20201115 22:03:21.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.576" level="INFO">VALUE: [5.958000000000352e-06, 5.985999999999492e-06, 6.000000000002531e-06, 6.014000000002101e-06, 5.971999999999922e-06, 5.986999999998965e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 6.000000000002531e-06, 6.0279999999982015e-06, 6.0139999999986316e-06, 6.028000000001671e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.0829999999970075e-06, 6.040999999998298e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.055999999997341e-06, 5.985999999999492e-06, 6.026999999998728e-06, 5.999999999999062e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.0000000000060005e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.971999999999922e-06, 6.02800000000514e-06, 5.985999999999492e-06, 6.0000000000060005e-06, 5.943999999993843e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.971999999999922e-06, 6.0139999999986316e-06, 5.986999999998965e-06]</msg>
<status status="PASS" starttime="20201115 22:03:21.575" endtime="20201115 22:03:21.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.570" endtime="20201115 22:03:21.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.580" endtime="20201115 22:03:21.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.583" endtime="20201115 22:03:21.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.582" endtime="20201115 22:03:21.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.578" endtime="20201115 22:03:21.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.193" endtime="20201115 22:03:21.604"></status>
</kw>
<msg timestamp="20201115 22:03:21.604" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.614" endtime="20201115 22:03:21.646"></status>
</kw>
<msg timestamp="20201115 22:03:21.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.612" endtime="20201115 22:03:21.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.649" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.648" endtime="20201115 22:03:21.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.650" endtime="20201115 22:03:21.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.610" endtime="20201115 22:03:21.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.607" endtime="20201115 22:03:21.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.661" endtime="20201115 22:03:21.947"></status>
</kw>
<msg timestamp="20201115 22:03:21.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025410319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025416333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.659" endtime="20201115 22:03:21.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025410319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025416333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.951" endtime="20201115 22:03:21.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.960" endtime="20201115 22:03:21.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.657" endtime="20201115 22:03:21.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.655" endtime="20201115 22:03:21.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.967" level="INFO">${RESULT} = [{'time': 0.025416333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.025815847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:21.964" endtime="20201115 22:03:21.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.982" level="INFO">${OVERHEAD} = {'diff': [6.0139999999986316e-06, 5.985999999999492e-06, 5.986000000002961e-06, 5.986000000002961e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.985999999999492e-06, 6.000000000002531e-06, 6.014...</msg>
<status status="PASS" starttime="20201115 22:03:21.968" endtime="20201115 22:03:21.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.986" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.985" endtime="20201115 22:03:21.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.989" level="INFO">VALUE: [6.0139999999986316e-06, 5.985999999999492e-06, 5.986000000002961e-06, 5.986000000002961e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.985999999999492e-06, 6.000000000002531e-06, 6.014000000002101e-06, 5.9579999999968825e-06, 5.971999999999922e-06, 5.985999999999492e-06, 6.000000000002531e-06, 6.0839999999999506e-06, 6.041000000001767e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.041999999997771e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.903000000001546e-06, 5.957999999993413e-06, 5.986999999998965e-06, 5.971999999999922e-06, 6.0139999999986316e-06, 5.916000000001642e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 6.012999999999158e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.986999999998965e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 5.9729999999993955e-06, 5.985999999999492e-06]</msg>
<status status="PASS" starttime="20201115 22:03:21.987" endtime="20201115 22:03:21.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.983" endtime="20201115 22:03:21.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.992" endtime="20201115 22:03:21.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.996" endtime="20201115 22:03:22.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.994" endtime="20201115 22:03:22.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.990" endtime="20201115 22:03:22.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.605" endtime="20201115 22:03:22.017"></status>
</kw>
<msg timestamp="20201115 22:03:22.017" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.026" endtime="20201115 22:03:22.058"></status>
</kw>
<msg timestamp="20201115 22:03:22.058" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.025" endtime="20201115 22:03:22.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.059" endtime="20201115 22:03:22.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.062" endtime="20201115 22:03:22.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.022" endtime="20201115 22:03:22.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.020" endtime="20201115 22:03:22.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.072" endtime="20201115 22:03:22.358"></status>
</kw>
<msg timestamp="20201115 22:03:22.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024871139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024877097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.071" endtime="20201115 22:03:22.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024871139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024877097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.363" endtime="20201115 22:03:22.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.371" endtime="20201115 22:03:22.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.068" endtime="20201115 22:03:22.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.066" endtime="20201115 22:03:22.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.379" level="INFO">${RESULT} = [{'time': 0.024877097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.0252765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:22.375" endtime="20201115 22:03:22.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.394" level="INFO">${OVERHEAD} = {'diff': [5.958000000000352e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.9719...</msg>
<status status="PASS" starttime="20201115 22:03:22.380" endtime="20201115 22:03:22.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.398" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.397" endtime="20201115 22:03:22.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.401" level="INFO">VALUE: [5.958000000000352e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.985999999999492e-06, 6.028000000001671e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.999999999999062e-06, 6.041999999997771e-06, 5.999999999999062e-06, 5.917000000001116e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.985999999999492e-06, 6.0000000000060005e-06, 5.971999999999922e-06, 5.986999999998965e-06, 5.999999999999062e-06, 5.999999999999062e-06, 6.055999999997341e-06, 5.985999999999492e-06, 5.917000000001116e-06, 5.985999999999492e-06, 5.986000000006431e-06, 5.999999999999062e-06, 5.945000000000256e-06, 5.986999999998965e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 6.041999999997771e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.026999999998728e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.999999999999062e-06]</msg>
<status status="PASS" starttime="20201115 22:03:22.400" endtime="20201115 22:03:22.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.395" endtime="20201115 22:03:22.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.404" endtime="20201115 22:03:22.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.408" endtime="20201115 22:03:22.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.406" endtime="20201115 22:03:22.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.403" endtime="20201115 22:03:22.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.018" endtime="20201115 22:03:22.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.371" endtime="20201115 22:03:22.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.370" endtime="20201115 22:03:22.429"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.432" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.441" endtime="20201115 22:03:22.475"></status>
</kw>
<msg timestamp="20201115 22:03:22.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.439" endtime="20201115 22:03:22.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.479" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.477" endtime="20201115 22:03:22.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.480" endtime="20201115 22:03:22.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.436" endtime="20201115 22:03:22.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.434" endtime="20201115 22:03:22.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.490" endtime="20201115 22:03:22.777"></status>
</kw>
<msg timestamp="20201115 22:03:22.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024647611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024653806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.488" endtime="20201115 22:03:22.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024647611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024653806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.781" endtime="20201115 22:03:22.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.790" endtime="20201115 22:03:22.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.485" endtime="20201115 22:03:22.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.483" endtime="20201115 22:03:22.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.797" level="INFO">${RESULT} = [{'time': 0.024653806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.025081319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:22.793" endtime="20201115 22:03:22.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.811" level="INFO">${OVERHEAD} = {'diff': [6.195000000000506e-06, 6.235999999999742e-06, 6.179999999997993e-06, 6.179999999997993e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.2079999999971325e-06, 6.195...</msg>
<status status="PASS" starttime="20201115 22:03:22.798" endtime="20201115 22:03:22.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.816" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.815" endtime="20201115 22:03:22.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.819" level="INFO">VALUE: [6.195000000000506e-06, 6.235999999999742e-06, 6.179999999997993e-06, 6.179999999997993e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.2079999999971325e-06, 6.195000000000506e-06, 6.2639999999988816e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.2229999999996455e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.152000000002322e-06, 6.180999999993997e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.179999999994523e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.207999999993663e-06, 6.138999999995287e-06, 6.151999999995383e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.166999999994427e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.2639999999988816e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.193999999994093e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.167000000001366e-06]</msg>
<status status="PASS" starttime="20201115 22:03:22.817" endtime="20201115 22:03:22.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.812" endtime="20201115 22:03:22.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.822" endtime="20201115 22:03:22.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.825" endtime="20201115 22:03:22.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.824" endtime="20201115 22:03:22.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.820" endtime="20201115 22:03:22.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.432" endtime="20201115 22:03:22.846"></status>
</kw>
<msg timestamp="20201115 22:03:22.846" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.856" endtime="20201115 22:03:22.892"></status>
</kw>
<msg timestamp="20201115 22:03:22.893" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.854" endtime="20201115 22:03:22.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.894" endtime="20201115 22:03:22.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.897" endtime="20201115 22:03:22.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.852" endtime="20201115 22:03:22.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.849" endtime="20201115 22:03:22.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.907" endtime="20201115 22:03:23.193"></status>
</kw>
<msg timestamp="20201115 22:03:23.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024358153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.906" endtime="20201115 22:03:23.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024358153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.198" endtime="20201115 22:03:23.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.206" endtime="20201115 22:03:23.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.903" endtime="20201115 22:03:23.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.901" endtime="20201115 22:03:23.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.213" level="INFO">${RESULT} = [{'time': 0.024364403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.024792458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:23.210" endtime="20201115 22:03:23.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.227" level="INFO">${OVERHEAD} = {'diff': [6.249999999999312e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.1529999999983265e-06, 6.2229999999996455e-06, 6.18...</msg>
<status status="PASS" starttime="20201115 22:03:23.214" endtime="20201115 22:03:23.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.232" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.231" endtime="20201115 22:03:23.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.235" level="INFO">VALUE: [6.249999999999312e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.1529999999983265e-06, 6.2229999999996455e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.2639999999988816e-06, 6.1939999999975626e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.165999999998423e-06, 6.291999999998021e-06, 6.2229999999996455e-06, 6.166000000001892e-06, 6.235999999999742e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.110999999996147e-06, 6.2639999999988816e-06, 6.166000000001892e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.291999999998021e-06, 6.2229999999996455e-06, 6.153000000001796e-06, 6.2090000000000756e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.166000000001892e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201115 22:03:23.233" endtime="20201115 22:03:23.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.228" endtime="20201115 22:03:23.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.238" endtime="20201115 22:03:23.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.242" endtime="20201115 22:03:23.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.240" endtime="20201115 22:03:23.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.236" endtime="20201115 22:03:23.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.847" endtime="20201115 22:03:23.262"></status>
</kw>
<msg timestamp="20201115 22:03:23.263" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.277" endtime="20201115 22:03:23.314"></status>
</kw>
<msg timestamp="20201115 22:03:23.314" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.270" endtime="20201115 22:03:23.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.317" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.315" endtime="20201115 22:03:23.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.318" endtime="20201115 22:03:23.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.268" endtime="20201115 22:03:23.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.265" endtime="20201115 22:03:23.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.328" endtime="20201115 22:03:23.614"></status>
</kw>
<msg timestamp="20201115 22:03:23.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030168069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030174264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.327" endtime="20201115 22:03:23.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030168069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030174264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.618" endtime="20201115 22:03:23.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.626" endtime="20201115 22:03:23.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.324" endtime="20201115 22:03:23.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.322" endtime="20201115 22:03:23.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.633" level="INFO">${RESULT} = [{'time': 0.030174264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.030599542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:23.630" endtime="20201115 22:03:23.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.647" level="INFO">${OVERHEAD} = {'diff': [6.195000000000506e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.249999999999312e-06, 6.180999999993997e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.194999999993567e-06, 6.1940...</msg>
<status status="PASS" starttime="20201115 22:03:23.634" endtime="20201115 22:03:23.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.652" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.651" endtime="20201115 22:03:23.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.655" level="INFO">VALUE: [6.195000000000506e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.249999999999312e-06, 6.180999999993997e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.194999999993567e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.153000000001796e-06, 6.195000000000506e-06, 6.207999999993663e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.139000000002226e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.194000000001032e-06, 6.179999999994523e-06, 6.208999999993137e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.124999999995717e-06, 6.195000000000506e-06, 6.153000000001796e-06, 6.249999999999312e-06, 6.2090000000000756e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.194000000001032e-06]</msg>
<status status="PASS" starttime="20201115 22:03:23.653" endtime="20201115 22:03:23.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.648" endtime="20201115 22:03:23.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.658" endtime="20201115 22:03:23.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.662" endtime="20201115 22:03:23.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.660" endtime="20201115 22:03:23.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.656" endtime="20201115 22:03:23.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.263" endtime="20201115 22:03:23.683"></status>
</kw>
<msg timestamp="20201115 22:03:23.683" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.693" endtime="20201115 22:03:23.730"></status>
</kw>
<msg timestamp="20201115 22:03:23.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.691" endtime="20201115 22:03:23.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.733" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.732" endtime="20201115 22:03:23.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.734" endtime="20201115 22:03:23.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.688" endtime="20201115 22:03:23.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.686" endtime="20201115 22:03:23.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.745" endtime="20201115 22:03:24.029"></status>
</kw>
<msg timestamp="20201115 22:03:24.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026888625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026894806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.743" endtime="20201115 22:03:24.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026888625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026894806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.034" endtime="20201115 22:03:24.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.042" endtime="20201115 22:03:24.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.741" endtime="20201115 22:03:24.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.739" endtime="20201115 22:03:24.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.049" level="INFO">${RESULT} = [{'time': 0.026894806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.027320347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:24.046" endtime="20201115 22:03:24.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.065" level="INFO">${OVERHEAD} = {'diff': [6.181000000000936e-06, 6.179999999997993e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2090...</msg>
<status status="PASS" starttime="20201115 22:03:24.050" endtime="20201115 22:03:24.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.069" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.068" endtime="20201115 22:03:24.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.072" level="INFO">VALUE: [6.181000000000936e-06, 6.179999999997993e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.264000000002351e-06, 6.194000000001032e-06, 6.193999999994093e-06, 6.195000000000506e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.139000000002226e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.193999999994093e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.152000000002322e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.151999999995383e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.2090000000000756e-06]</msg>
<status status="PASS" starttime="20201115 22:03:24.070" endtime="20201115 22:03:24.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.065" endtime="20201115 22:03:24.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.076" endtime="20201115 22:03:24.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.079" endtime="20201115 22:03:24.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.078" endtime="20201115 22:03:24.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.074" endtime="20201115 22:03:24.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.684" endtime="20201115 22:03:24.100"></status>
</kw>
<msg timestamp="20201115 22:03:24.100" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.111" endtime="20201115 22:03:24.148"></status>
</kw>
<msg timestamp="20201115 22:03:24.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.109" endtime="20201115 22:03:24.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.151" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.150" endtime="20201115 22:03:24.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.152" endtime="20201115 22:03:24.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.106" endtime="20201115 22:03:24.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.103" endtime="20201115 22:03:24.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.163" endtime="20201115 22:03:24.450"></status>
</kw>
<msg timestamp="20201115 22:03:24.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026378597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026384792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.162" endtime="20201115 22:03:24.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026378597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026384792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.454" endtime="20201115 22:03:24.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.462" endtime="20201115 22:03:24.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.159" endtime="20201115 22:03:24.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.157" endtime="20201115 22:03:24.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.469" level="INFO">${RESULT} = [{'time': 0.026384792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.026811389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:24.466" endtime="20201115 22:03:24.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.483" level="INFO">${OVERHEAD} = {'diff': [6.195000000000506e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.1799...</msg>
<status status="PASS" starttime="20201115 22:03:24.470" endtime="20201115 22:03:24.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.488" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.487" endtime="20201115 22:03:24.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.491" level="INFO">VALUE: [6.195000000000506e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.179999999997993e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.195000000000506e-06, 6.193999999994093e-06, 6.2779999999984515e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.165999999994953e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.207999999993663e-06, 6.138999999995287e-06, 6.195000000000506e-06, 6.207999999993663e-06, 6.180999999993997e-06, 6.194999999993567e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.194999999993567e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.235999999999742e-06, 6.153000000001796e-06, 6.249999999999312e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201115 22:03:24.489" endtime="20201115 22:03:24.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.484" endtime="20201115 22:03:24.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.494" endtime="20201115 22:03:24.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.498" endtime="20201115 22:03:24.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.496" endtime="20201115 22:03:24.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.493" endtime="20201115 22:03:24.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.101" endtime="20201115 22:03:24.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.431" endtime="20201115 22:03:24.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.430" endtime="20201115 22:03:24.520"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.522" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.531" endtime="20201115 22:03:24.569"></status>
</kw>
<msg timestamp="20201115 22:03:24.570" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.530" endtime="20201115 22:03:24.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.572" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.571" endtime="20201115 22:03:24.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.574" endtime="20201115 22:03:24.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.527" endtime="20201115 22:03:24.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.525" endtime="20201115 22:03:24.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.583" endtime="20201115 22:03:24.871"></status>
</kw>
<msg timestamp="20201115 22:03:24.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024194486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024200875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.581" endtime="20201115 22:03:24.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024194486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024200875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.875" endtime="20201115 22:03:24.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.883" endtime="20201115 22:03:24.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.579" endtime="20201115 22:03:24.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.577" endtime="20201115 22:03:24.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.890" level="INFO">${RESULT} = [{'time': 0.024200875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.388999999999007e-06, 'source_diff': 6.388999999999007e-06}, {'time': 0.024651861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:24.887" endtime="20201115 22:03:24.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.905" level="INFO">${OVERHEAD} = {'diff': [6.388999999999007e-06, 6.374999999999437e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.387999999999533e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 6.403...</msg>
<status status="PASS" starttime="20201115 22:03:24.891" endtime="20201115 22:03:24.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.909" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.908" endtime="20201115 22:03:24.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.912" level="INFO">VALUE: [6.388999999999007e-06, 6.374999999999437e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.387999999999533e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.431000000001186e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.360999999999867e-06, 6.417000000001616e-06, 6.401999999999103e-06, 6.417000000001616e-06, 6.444000000001282e-06, 6.416000000002142e-06, 6.417000000001616e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.375000000002906e-06, 6.416999999994677e-06, 6.388999999995537e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.417000000001616e-06, 6.401999999995633e-06, 6.416000000002142e-06, 6.401999999995633e-06, 6.389000000002476e-06, 6.375000000002906e-06, 6.402000000002572e-06, 6.417000000001616e-06, 6.360999999996397e-06, 6.430000000001712e-06, 6.429999999994773e-06, 6.360999999996397e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.347000000003766e-06, 6.416000000002142e-06, 6.374999999995967e-06, 6.417000000001616e-06, 6.402999999995107e-06, 6.347000000003766e-06]</msg>
<status status="PASS" starttime="20201115 22:03:24.910" endtime="20201115 22:03:24.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.906" endtime="20201115 22:03:24.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.916" endtime="20201115 22:03:24.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.920" endtime="20201115 22:03:24.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.918" endtime="20201115 22:03:24.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.914" endtime="20201115 22:03:24.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.523" endtime="20201115 22:03:24.940"></status>
</kw>
<msg timestamp="20201115 22:03:24.941" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.950" endtime="20201115 22:03:24.987"></status>
</kw>
<msg timestamp="20201115 22:03:24.987" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.948" endtime="20201115 22:03:24.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.990" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.988" endtime="20201115 22:03:24.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.991" endtime="20201115 22:03:24.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.945" endtime="20201115 22:03:24.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.943" endtime="20201115 22:03:24.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.002" endtime="20201115 22:03:25.288"></status>
</kw>
<msg timestamp="20201115 22:03:25.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025221708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025228111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.000" endtime="20201115 22:03:25.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025221708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025228111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.292" endtime="20201115 22:03:25.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.301" endtime="20201115 22:03:25.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.997" endtime="20201115 22:03:25.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.995" endtime="20201115 22:03:25.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.308" level="INFO">${RESULT} = [{'time': 0.025228111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.025678528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:25.304" endtime="20201115 22:03:25.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.322" level="INFO">${OVERHEAD} = {'diff': [6.403000000002046e-06, 6.4029999999985765e-06, 6.415999999998673e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 6....</msg>
<status status="PASS" starttime="20201115 22:03:25.309" endtime="20201115 22:03:25.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.327" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:25.326" endtime="20201115 22:03:25.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.330" level="INFO">VALUE: [6.403000000002046e-06, 6.4029999999985765e-06, 6.415999999998673e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 6.416999999998146e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.402000000002572e-06, 6.4029999999985765e-06, 6.360999999999867e-06, 6.403000000002046e-06, 6.416000000002142e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.416000000002142e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.459000000000326e-06, 6.346999999996827e-06, 6.445000000000756e-06, 6.389000000002476e-06, 6.361000000003336e-06, 6.388999999995537e-06, 6.375000000002906e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.388999999995537e-06, 6.415999999995203e-06, 6.402000000002572e-06, 6.375000000002906e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.401999999995633e-06, 6.389000000002476e-06, 6.417000000001616e-06, 6.346999999996827e-06]</msg>
<status status="PASS" starttime="20201115 22:03:25.328" endtime="20201115 22:03:25.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.323" endtime="20201115 22:03:25.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.333" endtime="20201115 22:03:25.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.337" endtime="20201115 22:03:25.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.335" endtime="20201115 22:03:25.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.331" endtime="20201115 22:03:25.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.941" endtime="20201115 22:03:25.358"></status>
</kw>
<msg timestamp="20201115 22:03:25.358" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.367" endtime="20201115 22:03:25.404"></status>
</kw>
<msg timestamp="20201115 22:03:25.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.366" endtime="20201115 22:03:25.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.408" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.406" endtime="20201115 22:03:25.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.409" endtime="20201115 22:03:25.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.363" endtime="20201115 22:03:25.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.361" endtime="20201115 22:03:25.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.419" endtime="20201115 22:03:25.705"></status>
</kw>
<msg timestamp="20201115 22:03:25.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024871903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.418" endtime="20201115 22:03:25.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024871903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.709" endtime="20201115 22:03:25.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.718" endtime="20201115 22:03:25.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.415" endtime="20201115 22:03:25.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.413" endtime="20201115 22:03:25.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.725" level="INFO">${RESULT} = [{'time': 0.024871903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.025324653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:25.721" endtime="20201115 22:03:25.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.740" level="INFO">${OVERHEAD} = {'diff': [6.374999999999437e-06, 6.459000000000326e-06, 6.416999999998146e-06, 6.3479999999997705e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.41...</msg>
<status status="PASS" starttime="20201115 22:03:25.726" endtime="20201115 22:03:25.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.745" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:25.744" endtime="20201115 22:03:25.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.748" level="INFO">VALUE: [6.374999999999437e-06, 6.459000000000326e-06, 6.416999999998146e-06, 6.3479999999997705e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.416999999998146e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.417000000001616e-06, 6.415999999998673e-06, 6.416999999998146e-06, 6.402000000002572e-06, 6.402999999995107e-06, 6.402000000002572e-06, 6.389000000002476e-06, 6.375000000002906e-06, 6.388999999995537e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.416999999994677e-06, 6.416999999994677e-06, 6.417000000001616e-06, 6.430999999994247e-06, 6.389000000002476e-06, 6.416000000002142e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.459000000000326e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.374999999995967e-06, 6.417000000001616e-06, 6.375000000002906e-06, 6.431000000001186e-06, 6.389000000002476e-06, 6.346999999996827e-06, 6.3879999999960635e-06, 6.403000000002046e-06, 6.401999999995633e-06, 6.389000000002476e-06, 6.401999999995633e-06, 6.375000000002906e-06, 6.360999999996397e-06, 6.402999999995107e-06, 6.388999999995537e-06]</msg>
<status status="PASS" starttime="20201115 22:03:25.746" endtime="20201115 22:03:25.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.741" endtime="20201115 22:03:25.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.751" endtime="20201115 22:03:25.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.755" endtime="20201115 22:03:25.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.753" endtime="20201115 22:03:25.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.749" endtime="20201115 22:03:25.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.359" endtime="20201115 22:03:25.775"></status>
</kw>
<msg timestamp="20201115 22:03:25.776" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.785" endtime="20201115 22:03:25.821"></status>
</kw>
<msg timestamp="20201115 22:03:25.822" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.783" endtime="20201115 22:03:25.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.824" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.823" endtime="20201115 22:03:25.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.826" endtime="20201115 22:03:25.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.781" endtime="20201115 22:03:25.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.778" endtime="20201115 22:03:25.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.836" endtime="20201115 22:03:26.124"></status>
</kw>
<msg timestamp="20201115 22:03:26.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024094653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024101069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.835" endtime="20201115 22:03:26.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024094653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024101069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.128" endtime="20201115 22:03:26.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.137" endtime="20201115 22:03:26.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.832" endtime="20201115 22:03:26.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.830" endtime="20201115 22:03:26.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.144" level="INFO">${RESULT} = [{'time': 0.024101069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.415999999998673e-06, 'source_diff': 6.415999999998673e-06}, {'time': 0.024549819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.140" endtime="20201115 22:03:26.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.158" level="INFO">${OVERHEAD} = {'diff': [6.415999999998673e-06, 6.387999999999533e-06, 6.416999999998146e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.389000000002476e-06, 6.334000000000201e-06, 6.4029999999985765e-06, 6.415...</msg>
<status status="PASS" starttime="20201115 22:03:26.145" endtime="20201115 22:03:26.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.163" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:26.162" endtime="20201115 22:03:26.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.165" level="INFO">VALUE: [6.415999999998673e-06, 6.387999999999533e-06, 6.416999999998146e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.389000000002476e-06, 6.334000000000201e-06, 6.4029999999985765e-06, 6.415999999998673e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.347000000000297e-06, 6.417000000001616e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.375000000002906e-06, 6.402999999995107e-06, 6.388999999995537e-06, 6.389000000002476e-06, 6.444000000001282e-06, 6.388999999995537e-06, 6.389000000002476e-06, 6.375000000002906e-06, 6.402999999995107e-06, 6.388999999995537e-06, 6.388999999995537e-06, 6.458000000000852e-06, 6.457999999993913e-06, 6.431000000001186e-06, 6.388999999995537e-06, 6.415999999995203e-06, 6.430000000001712e-06, 6.415999999995203e-06, 6.402999999995107e-06, 6.360999999996397e-06, 6.389000000002476e-06, 6.402999999995107e-06, 6.402000000002572e-06, 6.346999999996827e-06, 6.431000000001186e-06, 6.431000000001186e-06, 6.444000000001282e-06, 6.402999999995107e-06, 6.388999999995537e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.416000000002142e-06, 6.389000000002476e-06, 6.444000000001282e-06, 6.458999999993387e-06]</msg>
<status status="PASS" starttime="20201115 22:03:26.164" endtime="20201115 22:03:26.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.159" endtime="20201115 22:03:26.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.169" endtime="20201115 22:03:26.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.172" endtime="20201115 22:03:26.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.171" endtime="20201115 22:03:26.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.167" endtime="20201115 22:03:26.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.776" endtime="20201115 22:03:26.193"></status>
</kw>
<msg timestamp="20201115 22:03:26.193" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.203" endtime="20201115 22:03:26.239"></status>
</kw>
<msg timestamp="20201115 22:03:26.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.201" endtime="20201115 22:03:26.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.240" endtime="20201115 22:03:26.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.243" endtime="20201115 22:03:26.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.198" endtime="20201115 22:03:26.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.196" endtime="20201115 22:03:26.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.253" endtime="20201115 22:03:26.542"></status>
</kw>
<msg timestamp="20201115 22:03:26.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023277486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.252" endtime="20201115 22:03:26.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023277486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.547" endtime="20201115 22:03:26.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.555" endtime="20201115 22:03:26.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.249" endtime="20201115 22:03:26.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.247" endtime="20201115 22:03:26.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.562" level="INFO">${RESULT} = [{'time': 0.023277486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.4029999999985765e-06, 'source_diff': 6.4029999999985765e-06}, {'time': 0.023730458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:26.559" endtime="20201115 22:03:26.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.576" level="INFO">${OVERHEAD} = {'diff': [6.4029999999985765e-06, 6.347000000000297e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.401999999999103e-06, 6.415999999998673e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.38...</msg>
<status status="PASS" starttime="20201115 22:03:26.563" endtime="20201115 22:03:26.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.582" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:26.581" endtime="20201115 22:03:26.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.584" level="INFO">VALUE: [6.4029999999985765e-06, 6.347000000000297e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.401999999999103e-06, 6.415999999998673e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.416000000002142e-06, 6.347000000000297e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 6.360999999999867e-06, 6.389000000002476e-06, 6.388999999995537e-06, 6.403000000002046e-06, 6.388999999995537e-06, 6.401999999995633e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.374999999995967e-06, 6.416000000002142e-06, 6.402999999995107e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.401999999995633e-06, 6.346999999996827e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.417000000001616e-06, 6.3190000000046265e-06, 6.402999999995107e-06, 6.3879999999960635e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.416999999994677e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.388999999995537e-06]</msg>
<status status="PASS" starttime="20201115 22:03:26.583" endtime="20201115 22:03:26.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.578" endtime="20201115 22:03:26.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.588" endtime="20201115 22:03:26.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.591" endtime="20201115 22:03:26.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.590" endtime="20201115 22:03:26.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.586" endtime="20201115 22:03:26.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.194" endtime="20201115 22:03:26.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.521" endtime="20201115 22:03:26.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.520" endtime="20201115 22:03:26.613"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.615" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.624" endtime="20201115 22:03:26.665"></status>
</kw>
<msg timestamp="20201115 22:03:26.666" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.623" endtime="20201115 22:03:26.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.668" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.667" endtime="20201115 22:03:26.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.669" endtime="20201115 22:03:26.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.620" endtime="20201115 22:03:26.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.618" endtime="20201115 22:03:26.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.679" endtime="20201115 22:03:26.966"></status>
</kw>
<msg timestamp="20201115 22:03:26.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026463667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026470319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.678" endtime="20201115 22:03:26.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026463667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026470319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.971" endtime="20201115 22:03:26.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.979" endtime="20201115 22:03:26.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.675" endtime="20201115 22:03:26.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.673" endtime="20201115 22:03:26.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.986" level="INFO">${RESULT} = [{'time': 0.026470319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.651999999999353e-06, 'source_diff': 6.651999999999353e-06}, {'time': 0.026951528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.983" endtime="20201115 22:03:26.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.000" level="INFO">${OVERHEAD} = {'diff': [6.651999999999353e-06, 6.624999999999687e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.6119999999995904e-06, 6.611000000000117e-06, 6.6119999999995904e-06, 6.610999999996647e-06, 6.68...</msg>
<status status="PASS" starttime="20201115 22:03:26.987" endtime="20201115 22:03:27.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.005" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:27.004" endtime="20201115 22:03:27.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.008" level="INFO">VALUE: [6.651999999999353e-06, 6.624999999999687e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.6119999999995904e-06, 6.611000000000117e-06, 6.6119999999995904e-06, 6.610999999996647e-06, 6.680999999997966e-06, 6.611000000000117e-06, 6.624999999999687e-06, 6.611000000003586e-06, 6.694000000001532e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.611999999996121e-06, 6.610999999996647e-06, 6.5969999999970774e-06, 6.625000000003156e-06, 6.639000000002726e-06, 6.555999999997841e-06, 6.638999999995787e-06, 6.625000000003156e-06, 6.624999999996217e-06, 6.55600000000478e-06, 6.652999999995357e-06, 6.611000000003586e-06, 6.611999999996121e-06, 6.625000000003156e-06, 6.554999999998368e-06, 6.653000000002296e-06, 6.568999999997938e-06, 6.610999999996647e-06, 6.5829999999975075e-06, 6.554999999998368e-06, 6.5829999999975075e-06, 6.625000000003156e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.611999999996121e-06, 6.583000000004446e-06, 6.638999999995787e-06, 6.541999999998271e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.597000000004016e-06, 6.5969999999970774e-06]</msg>
<status status="PASS" starttime="20201115 22:03:27.006" endtime="20201115 22:03:27.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.001" endtime="20201115 22:03:27.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.011" endtime="20201115 22:03:27.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.015" endtime="20201115 22:03:27.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.013" endtime="20201115 22:03:27.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.009" endtime="20201115 22:03:27.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.616" endtime="20201115 22:03:27.036"></status>
</kw>
<msg timestamp="20201115 22:03:27.036" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.045" endtime="20201115 22:03:27.082"></status>
</kw>
<msg timestamp="20201115 22:03:27.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.044" endtime="20201115 22:03:27.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.083" endtime="20201115 22:03:27.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.087" endtime="20201115 22:03:27.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.041" endtime="20201115 22:03:27.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.039" endtime="20201115 22:03:27.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.097" endtime="20201115 22:03:27.383"></status>
</kw>
<msg timestamp="20201115 22:03:27.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024734139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024740764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.095" endtime="20201115 22:03:27.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024734139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024740764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.387" endtime="20201115 22:03:27.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.395" endtime="20201115 22:03:27.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.093" endtime="20201115 22:03:27.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.091" endtime="20201115 22:03:27.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.402" level="INFO">${RESULT} = [{'time': 0.024740764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.025221319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:27.399" endtime="20201115 22:03:27.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.417" level="INFO">${OVERHEAD} = {'diff': [6.624999999999687e-06, 6.597000000000547e-06, 6.6119999999995904e-06, 6.611000000000117e-06, 6.638999999999257e-06, 6.597000000000547e-06, 6.624999999999687e-06, 6.597000000000547e-06, 6.611...</msg>
<status status="PASS" starttime="20201115 22:03:27.403" endtime="20201115 22:03:27.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.422" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:27.421" endtime="20201115 22:03:27.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.425" level="INFO">VALUE: [6.624999999999687e-06, 6.597000000000547e-06, 6.6119999999995904e-06, 6.611000000000117e-06, 6.638999999999257e-06, 6.597000000000547e-06, 6.624999999999687e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.583000000000977e-06, 6.624999999999687e-06, 6.638999999999257e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.639000000002726e-06, 6.610999999996647e-06, 6.611000000003586e-06, 6.639000000002726e-06, 6.5279999999987015e-06, 6.5969999999970774e-06, 6.624999999996217e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.624999999996217e-06, 6.610999999996647e-06, 6.59800000000349e-06, 6.610999999996647e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.624999999996217e-06, 6.597000000004016e-06, 6.665999999995453e-06, 6.610999999996647e-06, 6.568999999997938e-06, 6.667000000001866e-06, 6.625000000003156e-06, 6.583999999996981e-06, 6.624999999996217e-06, 6.597000000004016e-06, 6.624999999996217e-06, 6.5969999999970774e-06, 6.624999999996217e-06, 6.597999999996551e-06, 6.625000000003156e-06]</msg>
<status status="PASS" starttime="20201115 22:03:27.423" endtime="20201115 22:03:27.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.418" endtime="20201115 22:03:27.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.428" endtime="20201115 22:03:27.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.432" endtime="20201115 22:03:27.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.430" endtime="20201115 22:03:27.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.426" endtime="20201115 22:03:27.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.037" endtime="20201115 22:03:27.453"></status>
</kw>
<msg timestamp="20201115 22:03:27.453" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.463" endtime="20201115 22:03:27.500"></status>
</kw>
<msg timestamp="20201115 22:03:27.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.460" endtime="20201115 22:03:27.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.501" endtime="20201115 22:03:27.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.504" endtime="20201115 22:03:27.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.458" endtime="20201115 22:03:27.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.455" endtime="20201115 22:03:27.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.514" endtime="20201115 22:03:27.801"></status>
</kw>
<msg timestamp="20201115 22:03:27.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025000792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.512" endtime="20201115 22:03:27.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025000792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.806" endtime="20201115 22:03:27.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.814" endtime="20201115 22:03:27.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.510" endtime="20201115 22:03:27.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.508" endtime="20201115 22:03:27.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.821" level="INFO">${RESULT} = [{'time': 0.025007389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.0254845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:27.818" endtime="20201115 22:03:27.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.835" level="INFO">${OVERHEAD} = {'diff': [6.597000000000547e-06, 6.611000000000117e-06, 6.638999999999257e-06, 6.6119999999995904e-06, 6.540999999998798e-06, 6.597000000000547e-06, 6.624999999999687e-06, 6.653000000002296e-06, 6.584...</msg>
<status status="PASS" starttime="20201115 22:03:27.822" endtime="20201115 22:03:27.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.840" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:27.839" endtime="20201115 22:03:27.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.843" level="INFO">VALUE: [6.597000000000547e-06, 6.611000000000117e-06, 6.638999999999257e-06, 6.6119999999995904e-06, 6.540999999998798e-06, 6.597000000000547e-06, 6.624999999999687e-06, 6.653000000002296e-06, 6.584000000000451e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.569000000001407e-06, 6.624999999999687e-06, 6.584000000000451e-06, 6.611000000003586e-06, 6.680000000001962e-06, 6.611000000003586e-06, 6.625000000003156e-06, 6.611000000003586e-06, 6.611999999996121e-06, 6.639000000002726e-06, 6.5969999999970774e-06, 6.568999999997938e-06, 6.625000000003156e-06, 6.568999999997938e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.61200000000306e-06, 6.611000000003586e-06, 6.639000000002726e-06, 6.5969999999970774e-06, 6.611000000003586e-06, 6.61200000000306e-06, 6.610999999996647e-06, 6.611999999996121e-06, 6.625000000003156e-06, 6.610999999996647e-06, 6.681000000001436e-06, 6.610999999996647e-06, 6.639000000002726e-06, 6.5969999999970774e-06, 6.611000000003586e-06, 6.625000000003156e-06, 6.611000000003586e-06, 6.639000000002726e-06, 6.638000000003252e-06, 6.625000000003156e-06, 6.59800000000349e-06, 6.652000000002822e-06, 6.611000000003586e-06]</msg>
<status status="PASS" starttime="20201115 22:03:27.841" endtime="20201115 22:03:27.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.836" endtime="20201115 22:03:27.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.846" endtime="20201115 22:03:27.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.850" endtime="20201115 22:03:27.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.849" endtime="20201115 22:03:27.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.844" endtime="20201115 22:03:27.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.453" endtime="20201115 22:03:27.872"></status>
</kw>
<msg timestamp="20201115 22:03:27.872" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.882" endtime="20201115 22:03:27.916"></status>
</kw>
<msg timestamp="20201115 22:03:27.917" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.880" endtime="20201115 22:03:27.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.919" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.918" endtime="20201115 22:03:27.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.920" endtime="20201115 22:03:27.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.877" endtime="20201115 22:03:27.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.875" endtime="20201115 22:03:27.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.931" endtime="20201115 22:03:28.217"></status>
</kw>
<msg timestamp="20201115 22:03:28.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023209444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.929" endtime="20201115 22:03:28.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023209444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.222" endtime="20201115 22:03:28.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.230" endtime="20201115 22:03:28.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.927" endtime="20201115 22:03:28.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.925" endtime="20201115 22:03:28.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.237" level="INFO">${RESULT} = [{'time': 0.023216056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.6119999999995904e-06, 'source_diff': 6.6119999999995904e-06}, {'time': 0.023692486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:28.234" endtime="20201115 22:03:28.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.251" level="INFO">${OVERHEAD} = {'diff': [6.6119999999995904e-06, 6.541999999998271e-06, 6.624999999999687e-06, 6.611000000000117e-06, 6.625000000003156e-06, 6.624999999999687e-06, 6.6119999999995904e-06, 6.611000000000117e-06, 6.59...</msg>
<status status="PASS" starttime="20201115 22:03:28.238" endtime="20201115 22:03:28.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.256" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:28.255" endtime="20201115 22:03:28.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.259" level="INFO">VALUE: [6.6119999999995904e-06, 6.541999999998271e-06, 6.624999999999687e-06, 6.611000000000117e-06, 6.625000000003156e-06, 6.624999999999687e-06, 6.6119999999995904e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.625000000003156e-06, 6.624999999999687e-06, 6.5969999999970774e-06, 6.554999999998368e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.5980000000000205e-06, 6.583999999996981e-06, 6.610999999996647e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.5969999999970774e-06, 6.610999999996647e-06, 6.541999999998271e-06, 6.624999999996217e-06, 6.610999999996647e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.597000000004016e-06, 6.695000000001006e-06, 6.624999999996217e-06, 6.652000000002822e-06, 6.624999999996217e-06, 6.5969999999970774e-06, 6.5969999999970774e-06, 6.625000000003156e-06, 6.610999999996647e-06, 6.638999999995787e-06, 6.54200000000521e-06, 6.611000000003586e-06, 6.5969999999970774e-06, 6.61200000000306e-06, 6.624999999996217e-06, 6.5969999999970774e-06, 6.610999999996647e-06, 6.611999999996121e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.5829999999975075e-06, 6.583999999996981e-06]</msg>
<status status="PASS" starttime="20201115 22:03:28.257" endtime="20201115 22:03:28.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.252" endtime="20201115 22:03:28.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.263" endtime="20201115 22:03:28.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.266" endtime="20201115 22:03:28.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.264" endtime="20201115 22:03:28.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.261" endtime="20201115 22:03:28.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.873" endtime="20201115 22:03:28.287"></status>
</kw>
<msg timestamp="20201115 22:03:28.287" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.296" endtime="20201115 22:03:28.334"></status>
</kw>
<msg timestamp="20201115 22:03:28.334" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.295" endtime="20201115 22:03:28.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.337" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.335" endtime="20201115 22:03:28.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.338" endtime="20201115 22:03:28.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.292" endtime="20201115 22:03:28.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.290" endtime="20201115 22:03:28.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.349" endtime="20201115 22:03:28.634"></status>
</kw>
<msg timestamp="20201115 22:03:28.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024598889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0246055, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:28.347" endtime="20201115 22:03:28.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024598889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0246055, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:28.638" endtime="20201115 22:03:28.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.646" endtime="20201115 22:03:28.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.344" endtime="20201115 22:03:28.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.342" endtime="20201115 22:03:28.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.653" level="INFO">${RESULT} = [{'time': 0.0246055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.025080597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:28.650" endtime="20201115 22:03:28.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.668" level="INFO">${OVERHEAD} = {'diff': [6.611000000000117e-06, 6.597000000000547e-06, 6.638999999999257e-06, 6.570000000000881e-06, 6.611000000000117e-06, 6.583000000000977e-06, 6.611000000000117e-06, 6.638999999999257e-06, 6.6110...</msg>
<status status="PASS" starttime="20201115 22:03:28.655" endtime="20201115 22:03:28.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.673" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:28.672" endtime="20201115 22:03:28.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.675" level="INFO">VALUE: [6.611000000000117e-06, 6.597000000000547e-06, 6.638999999999257e-06, 6.570000000000881e-06, 6.611000000000117e-06, 6.583000000000977e-06, 6.611000000000117e-06, 6.638999999999257e-06, 6.611000000000117e-06, 6.625000000003156e-06, 6.624999999999687e-06, 6.624999999999687e-06, 6.638999999999257e-06, 6.624999999999687e-06, 6.6379999999963135e-06, 6.5969999999970774e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.569999999997411e-06, 6.624999999996217e-06, 6.59800000000349e-06, 6.638999999995787e-06, 6.5829999999975075e-06, 6.625000000003156e-06, 6.55600000000478e-06, 6.5829999999975075e-06, 6.625000000003156e-06, 6.611000000003586e-06, 6.541999999998271e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.652999999995357e-06, 6.638999999995787e-06, 6.625000000003156e-06, 6.610999999996647e-06, 6.5829999999975075e-06, 6.5829999999975075e-06, 6.610999999996647e-06, 6.652999999995357e-06, 6.59800000000349e-06, 6.597999999996551e-06, 6.610999999996647e-06, 6.583000000004446e-06, 6.625000000003156e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.625000000003156e-06]</msg>
<status status="PASS" starttime="20201115 22:03:28.674" endtime="20201115 22:03:28.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.669" endtime="20201115 22:03:28.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.683" endtime="20201115 22:03:28.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.686" endtime="20201115 22:03:28.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.685" endtime="20201115 22:03:28.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.681" endtime="20201115 22:03:28.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.288" endtime="20201115 22:03:28.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.614" endtime="20201115 22:03:28.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.613" endtime="20201115 22:03:28.708"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.710" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.720" endtime="20201115 22:03:28.760"></status>
</kw>
<msg timestamp="20201115 22:03:28.760" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.718" endtime="20201115 22:03:28.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.761" endtime="20201115 22:03:28.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.764" endtime="20201115 22:03:28.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.715" endtime="20201115 22:03:28.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.713" endtime="20201115 22:03:28.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.774" endtime="20201115 22:03:29.057"></status>
</kw>
<msg timestamp="20201115 22:03:29.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02629775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026304569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:28.772" endtime="20201115 22:03:29.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02629775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026304569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:29.062" endtime="20201115 22:03:29.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.070" endtime="20201115 22:03:29.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.769" endtime="20201115 22:03:29.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.767" endtime="20201115 22:03:29.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.077" level="INFO">${RESULT} = [{'time': 0.026304569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.026809903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.074" endtime="20201115 22:03:29.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.092" level="INFO">${OVERHEAD} = {'diff': [6.818999999998188e-06, 6.7919999999985214e-06, 6.818999999998188e-06, 6.833000000001227e-06, 6.806000000001561e-06, 6.7919999999985214e-06, 6.763999999999382e-06, 6.847000000000797e-06, 6.79...</msg>
<status status="PASS" starttime="20201115 22:03:29.078" endtime="20201115 22:03:29.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.097" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:29.096" endtime="20201115 22:03:29.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.100" level="INFO">VALUE: [6.818999999998188e-06, 6.7919999999985214e-06, 6.818999999998188e-06, 6.833000000001227e-06, 6.806000000001561e-06, 6.7919999999985214e-06, 6.763999999999382e-06, 6.847000000000797e-06, 6.792000000001991e-06, 6.7919999999985214e-06, 6.8330000000046964e-06, 6.805999999998091e-06, 6.847999999996801e-06, 6.7919999999985214e-06, 6.8329999999977575e-06, 6.804999999998618e-06, 6.7779999999989515e-06, 6.805999999998091e-06, 6.819999999997661e-06, 6.833999999997231e-06, 6.7779999999989515e-06, 6.819999999997661e-06, 6.875000000003406e-06, 6.80600000000503e-06, 6.749999999999812e-06, 6.818999999998188e-06, 6.819999999997661e-06, 6.804999999998618e-06, 6.818999999998188e-06, 6.804999999998618e-06, 6.8190000000051265e-06, 6.790999999999048e-06, 6.819999999997661e-06, 6.8190000000051265e-06, 6.7780000000058904e-06, 6.819999999997661e-06, 6.80600000000503e-06, 6.818999999998188e-06, 6.8329999999977575e-06, 6.818999999998188e-06, 6.8200000000046e-06, 6.749999999999812e-06, 6.818999999998188e-06, 6.8200000000046e-06, 6.818999999998188e-06, 6.8200000000046e-06, 6.8190000000051265e-06, 6.818999999998188e-06, 6.847000000004266e-06, 6.7779999999989515e-06]</msg>
<status status="PASS" starttime="20201115 22:03:29.098" endtime="20201115 22:03:29.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.093" endtime="20201115 22:03:29.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.104" endtime="20201115 22:03:29.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.107" endtime="20201115 22:03:29.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.106" endtime="20201115 22:03:29.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.102" endtime="20201115 22:03:29.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.711" endtime="20201115 22:03:29.128"></status>
</kw>
<msg timestamp="20201115 22:03:29.128" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.138" endtime="20201115 22:03:29.176"></status>
</kw>
<msg timestamp="20201115 22:03:29.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.136" endtime="20201115 22:03:29.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.178" endtime="20201115 22:03:29.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.181" endtime="20201115 22:03:29.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.133" endtime="20201115 22:03:29.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.131" endtime="20201115 22:03:29.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.191" endtime="20201115 22:03:29.477"></status>
</kw>
<msg timestamp="20201115 22:03:29.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.189" endtime="20201115 22:03:29.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.481" endtime="20201115 22:03:29.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.490" endtime="20201115 22:03:29.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.187" endtime="20201115 22:03:29.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.185" endtime="20201115 22:03:29.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.496" level="INFO">${RESULT} = [{'time': 0.022492014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.022995861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.493" endtime="20201115 22:03:29.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.511" level="INFO">${OVERHEAD} = {'diff': [6.792000000001991e-06, 6.847000000000797e-06, 6.818999999998188e-06, 6.805999999998091e-06, 6.805999999998091e-06, 6.763999999999382e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.7910...</msg>
<status status="PASS" starttime="20201115 22:03:29.498" endtime="20201115 22:03:29.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.516" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:29.515" endtime="20201115 22:03:29.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.518" level="INFO">VALUE: [6.792000000001991e-06, 6.847000000000797e-06, 6.818999999998188e-06, 6.805999999998091e-06, 6.805999999998091e-06, 6.763999999999382e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.791000000002517e-06, 6.833000000001227e-06, 6.820000000001131e-06, 6.819999999997661e-06, 6.833000000001227e-06, 6.818999999998188e-06, 6.819000000001657e-06, 6.8480000000002705e-06, 6.819999999997661e-06, 6.819999999997661e-06, 6.804999999998618e-06, 6.8200000000046e-06, 6.7779999999989515e-06, 6.833999999997231e-06, 6.818999999998188e-06, 6.8329999999977575e-06, 6.805999999998091e-06, 6.805999999998091e-06, 6.805000000005557e-06, 6.805999999998091e-06, 6.833999999997231e-06, 6.8190000000051265e-06, 6.749999999999812e-06, 6.818999999998188e-06, 6.805999999998091e-06, 6.7369999999997154e-06, 6.805999999998091e-06, 6.804999999998618e-06, 6.805999999998091e-06, 6.84800000000374e-06, 6.8200000000046e-06, 6.805999999998091e-06, 6.8190000000051265e-06, 6.860999999996897e-06, 6.7919999999985214e-06, 6.805999999998091e-06, 6.847999999996801e-06, 6.819999999997661e-06, 6.874999999996467e-06, 6.8190000000051265e-06, 6.804999999998618e-06, 6.833999999997231e-06]</msg>
<status status="PASS" starttime="20201115 22:03:29.517" endtime="20201115 22:03:29.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.512" endtime="20201115 22:03:29.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.522" endtime="20201115 22:03:29.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.525" endtime="20201115 22:03:29.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.524" endtime="20201115 22:03:29.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.520" endtime="20201115 22:03:29.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.129" endtime="20201115 22:03:29.546"></status>
</kw>
<msg timestamp="20201115 22:03:29.546" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.556" endtime="20201115 22:03:29.598"></status>
</kw>
<msg timestamp="20201115 22:03:29.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.554" endtime="20201115 22:03:29.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.600" endtime="20201115 22:03:29.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.602" endtime="20201115 22:03:29.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.552" endtime="20201115 22:03:29.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.549" endtime="20201115 22:03:29.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.613" endtime="20201115 22:03:29.899"></status>
</kw>
<msg timestamp="20201115 22:03:29.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026315319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026322153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.611" endtime="20201115 22:03:29.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026315319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026322153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.903" endtime="20201115 22:03:29.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.912" endtime="20201115 22:03:29.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.608" endtime="20201115 22:03:29.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.606" endtime="20201115 22:03:29.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.919" level="INFO">${RESULT} = [{'time': 0.026322153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.834000000000701e-06, 'source_diff': 6.834000000000701e-06}, {'time': 0.026829847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.915" endtime="20201115 22:03:29.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.933" level="INFO">${OVERHEAD} = {'diff': [6.834000000000701e-06, 6.819000000001657e-06, 6.792000000001991e-06, 6.804999999998618e-06, 6.833000000001227e-06, 6.847000000000797e-06, 6.819999999997661e-06, 6.763999999999382e-06, 6.7920...</msg>
<status status="PASS" starttime="20201115 22:03:29.920" endtime="20201115 22:03:29.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.938" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:29.937" endtime="20201115 22:03:29.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.941" level="INFO">VALUE: [6.834000000000701e-06, 6.819000000001657e-06, 6.792000000001991e-06, 6.804999999998618e-06, 6.833000000001227e-06, 6.847000000000797e-06, 6.819999999997661e-06, 6.763999999999382e-06, 6.792000000001991e-06, 6.805000000002087e-06, 6.805999999998091e-06, 6.818999999998188e-06, 6.7919999999985214e-06, 6.819999999997661e-06, 6.8329999999977575e-06, 6.805999999998091e-06, 6.819999999997661e-06, 6.874999999996467e-06, 6.80600000000503e-06, 6.819999999997661e-06, 6.888999999996037e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.8469999999973274e-06, 6.818999999998188e-06, 6.763999999999382e-06, 6.818999999998188e-06, 6.8190000000051265e-06, 6.80600000000503e-06, 6.83400000000417e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.8329999999977575e-06, 6.7779999999989515e-06, 6.804999999998618e-06, 6.804999999998618e-06, 6.8200000000046e-06, 6.8190000000051265e-06, 6.8190000000051265e-06, 6.776999999999478e-06, 6.818999999998188e-06, 6.80600000000503e-06, 6.805999999998091e-06, 6.889000000002976e-06, 6.8190000000051265e-06, 6.8329999999977575e-06, 6.80600000000503e-06, 6.805999999998091e-06, 6.8329999999977575e-06, 6.8190000000051265e-06]</msg>
<status status="PASS" starttime="20201115 22:03:29.939" endtime="20201115 22:03:29.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.934" endtime="20201115 22:03:29.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.944" endtime="20201115 22:03:29.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.947" endtime="20201115 22:03:29.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.946" endtime="20201115 22:03:29.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.942" endtime="20201115 22:03:29.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.547" endtime="20201115 22:03:29.968"></status>
</kw>
<msg timestamp="20201115 22:03:29.969" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.978" endtime="20201115 22:03:30.021"></status>
</kw>
<msg timestamp="20201115 22:03:30.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.976" endtime="20201115 22:03:30.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.024" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.023" endtime="20201115 22:03:30.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.025" endtime="20201115 22:03:30.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.974" endtime="20201115 22:03:30.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.971" endtime="20201115 22:03:30.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.036" endtime="20201115 22:03:30.323"></status>
</kw>
<msg timestamp="20201115 22:03:30.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026266083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026272917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.034" endtime="20201115 22:03:30.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026266083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026272917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.327" endtime="20201115 22:03:30.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.336" endtime="20201115 22:03:30.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.031" endtime="20201115 22:03:30.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.030" endtime="20201115 22:03:30.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.343" level="INFO">${RESULT} = [{'time': 0.026272917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.834000000000701e-06, 'source_diff': 6.834000000000701e-06}, {'time': 0.026778542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:30.340" endtime="20201115 22:03:30.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.357" level="INFO">${OVERHEAD} = {'diff': [6.834000000000701e-06, 6.805999999998091e-06, 6.804999999998618e-06, 6.820000000001131e-06, 6.776999999999478e-06, 6.820000000001131e-06, 6.833000000001227e-06, 6.763999999999382e-06, 6.8189...</msg>
<status status="PASS" starttime="20201115 22:03:30.344" endtime="20201115 22:03:30.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.362" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:30.361" endtime="20201115 22:03:30.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.365" level="INFO">VALUE: [6.834000000000701e-06, 6.805999999998091e-06, 6.804999999998618e-06, 6.820000000001131e-06, 6.776999999999478e-06, 6.820000000001131e-06, 6.833000000001227e-06, 6.763999999999382e-06, 6.818999999998188e-06, 6.818999999998188e-06, 6.819999999997661e-06, 6.804999999998618e-06, 6.805999999998091e-06, 6.847999999996801e-06, 6.818999999998188e-06, 6.819999999997661e-06, 6.818999999998188e-06, 6.83400000000417e-06, 6.818999999998188e-06, 6.7919999999985214e-06, 6.790999999999048e-06, 6.8190000000051265e-06, 6.8329999999977575e-06, 6.833999999997231e-06, 6.7919999999985214e-06, 6.749999999999812e-06, 6.805999999998091e-06, 6.805999999998091e-06, 6.8469999999973274e-06, 6.804999999998618e-06, 6.818999999998188e-06, 6.7779999999989515e-06, 6.819999999997661e-06, 6.7779999999989515e-06, 6.819999999997661e-06, 6.804999999998618e-06, 6.7919999999985214e-06, 6.7919999999985214e-06, 6.847000000004266e-06, 6.790999999999048e-06, 6.818999999998188e-06, 6.8469999999973274e-06, 6.805999999998091e-06, 6.8190000000051265e-06, 6.805999999998091e-06, 6.861000000003836e-06, 6.833999999997231e-06, 6.818999999998188e-06, 6.805999999998091e-06, 6.805000000005557e-06]</msg>
<status status="PASS" starttime="20201115 22:03:30.363" endtime="20201115 22:03:30.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.358" endtime="20201115 22:03:30.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.368" endtime="20201115 22:03:30.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.372" endtime="20201115 22:03:30.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.370" endtime="20201115 22:03:30.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.366" endtime="20201115 22:03:30.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.969" endtime="20201115 22:03:30.393"></status>
</kw>
<msg timestamp="20201115 22:03:30.393" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.402" endtime="20201115 22:03:30.442"></status>
</kw>
<msg timestamp="20201115 22:03:30.443" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.401" endtime="20201115 22:03:30.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.444" endtime="20201115 22:03:30.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.447" endtime="20201115 22:03:30.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.398" endtime="20201115 22:03:30.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.396" endtime="20201115 22:03:30.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.457" endtime="20201115 22:03:30.743"></status>
</kw>
<msg timestamp="20201115 22:03:30.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023665694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023672514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.455" endtime="20201115 22:03:30.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023665694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023672514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.748" endtime="20201115 22:03:30.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.756" endtime="20201115 22:03:30.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.453" endtime="20201115 22:03:30.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.451" endtime="20201115 22:03:30.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.763" level="INFO">${RESULT} = [{'time': 0.023672514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.024180847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:30.760" endtime="20201115 22:03:30.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.779" level="INFO">${OVERHEAD} = {'diff': [6.819999999997661e-06, 6.804999999998618e-06, 6.818999999998188e-06, 6.833000000001227e-06, 6.818999999998188e-06, 6.7779999999989515e-06, 6.806000000001561e-06, 6.806000000001561e-06, 6.820...</msg>
<status status="PASS" starttime="20201115 22:03:30.764" endtime="20201115 22:03:30.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.783" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:30.782" endtime="20201115 22:03:30.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.786" level="INFO">VALUE: [6.819999999997661e-06, 6.804999999998618e-06, 6.818999999998188e-06, 6.833000000001227e-06, 6.818999999998188e-06, 6.7779999999989515e-06, 6.806000000001561e-06, 6.806000000001561e-06, 6.820000000001131e-06, 6.806000000001561e-06, 6.819999999997661e-06, 6.804999999998618e-06, 6.805000000002087e-06, 6.819000000001657e-06, 6.820000000001131e-06, 6.8469999999973274e-06, 6.818999999998188e-06, 6.804999999998618e-06, 6.8330000000046964e-06, 6.80600000000503e-06, 6.79200000000546e-06, 6.804999999998618e-06, 6.833999999997231e-06, 6.804999999998618e-06, 6.7779999999989515e-06, 6.847999999996801e-06, 6.8329999999977575e-06, 6.804999999998618e-06, 6.819999999997661e-06, 6.805999999998091e-06, 6.804999999998618e-06, 6.805999999998091e-06, 6.8200000000046e-06, 6.818999999998188e-06, 6.8200000000046e-06, 6.84800000000374e-06, 6.804999999998618e-06, 6.804999999998618e-06, 6.805999999998091e-06, 6.8190000000051265e-06, 6.818999999998188e-06, 6.763999999999382e-06, 6.8190000000051265e-06, 6.818999999998188e-06, 6.804999999998618e-06, 6.8200000000046e-06, 6.818999999998188e-06, 6.8469999999973274e-06, 6.819999999997661e-06, 6.819999999997661e-06]</msg>
<status status="PASS" starttime="20201115 22:03:30.784" endtime="20201115 22:03:30.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.780" endtime="20201115 22:03:30.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.789" endtime="20201115 22:03:30.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.793" endtime="20201115 22:03:30.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.791" endtime="20201115 22:03:30.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.788" endtime="20201115 22:03:30.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.394" endtime="20201115 22:03:30.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.709" endtime="20201115 22:03:30.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.708" endtime="20201115 22:03:30.814"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.816" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.826" endtime="20201115 22:03:30.865"></status>
</kw>
<msg timestamp="20201115 22:03:30.865" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.824" endtime="20201115 22:03:30.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.867" endtime="20201115 22:03:30.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.869" endtime="20201115 22:03:30.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.821" endtime="20201115 22:03:30.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.819" endtime="20201115 22:03:30.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.880" endtime="20201115 22:03:31.166"></status>
</kw>
<msg timestamp="20201115 22:03:31.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024988597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024995611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.878" endtime="20201115 22:03:31.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024988597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024995611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.170" endtime="20201115 22:03:31.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.179" endtime="20201115 22:03:31.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.875" endtime="20201115 22:03:31.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.873" endtime="20201115 22:03:31.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.186" level="INFO">${RESULT} = [{'time': 0.024995611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.025527139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:31.182" endtime="20201115 22:03:31.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.200" level="INFO">${OVERHEAD} = {'diff': [7.013999999999632e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.028000000002671e-06, 7.0829999999980076e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.02...</msg>
<status status="PASS" starttime="20201115 22:03:31.187" endtime="20201115 22:03:31.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.205" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:31.203" endtime="20201115 22:03:31.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.207" level="INFO">VALUE: [7.013999999999632e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.028000000002671e-06, 7.0829999999980076e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.028000000002671e-06, 7.0279999999992016e-06, 7.084000000000951e-06, 7.013999999999632e-06, 7.04200000000571e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.05600000000528e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 6.972999999993457e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0280000000061404e-06, 7.0280000000061404e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 6.986000000000492e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.054999999998868e-06, 7.055999999998341e-06, 7.000000000000062e-06, 6.972000000000922e-06, 7.0419999999987715e-06, 6.972000000000922e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.0419999999987715e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 22:03:31.206" endtime="20201115 22:03:31.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.201" endtime="20201115 22:03:31.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.211" endtime="20201115 22:03:31.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.214" endtime="20201115 22:03:31.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.213" endtime="20201115 22:03:31.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.209" endtime="20201115 22:03:31.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.817" endtime="20201115 22:03:31.235"></status>
</kw>
<msg timestamp="20201115 22:03:31.235" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.245" endtime="20201115 22:03:31.288"></status>
</kw>
<msg timestamp="20201115 22:03:31.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.243" endtime="20201115 22:03:31.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.291" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.289" endtime="20201115 22:03:31.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.292" endtime="20201115 22:03:31.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.240" endtime="20201115 22:03:31.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.238" endtime="20201115 22:03:31.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.303" endtime="20201115 22:03:31.590"></status>
</kw>
<msg timestamp="20201115 22:03:31.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025767861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025774917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.301" endtime="20201115 22:03:31.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025767861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025774917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.594" endtime="20201115 22:03:31.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.603" endtime="20201115 22:03:31.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.299" endtime="20201115 22:03:31.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.297" endtime="20201115 22:03:31.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.610" level="INFO">${RESULT} = [{'time': 0.025774917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.056000000001811e-06, 'source_diff': 7.056000000001811e-06}, {'time': 0.026310722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:31.606" endtime="20201115 22:03:31.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.624" level="INFO">${OVERHEAD} = {'diff': [7.056000000001811e-06, 7.014000000003101e-06, 7.042000000002241e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.028000000002671e-06, 7.013000000000158e-06, 7.013...</msg>
<status status="PASS" starttime="20201115 22:03:31.611" endtime="20201115 22:03:31.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.629" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:31.628" endtime="20201115 22:03:31.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.631" level="INFO">VALUE: [7.056000000001811e-06, 7.014000000003101e-06, 7.042000000002241e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.028000000002671e-06, 7.013000000000158e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.027000000006667e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.069999999997911e-06, 7.0280000000061404e-06, 7.068999999998438e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.040999999999298e-06, 7.04200000000571e-06, 7.026999999999728e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.0280000000061404e-06, 7.013000000000158e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.069999999997911e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0140000000065705e-06, 7.055999999998341e-06]</msg>
<status status="PASS" starttime="20201115 22:03:31.630" endtime="20201115 22:03:31.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.625" endtime="20201115 22:03:31.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.635" endtime="20201115 22:03:31.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.639" endtime="20201115 22:03:31.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.637" endtime="20201115 22:03:31.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.633" endtime="20201115 22:03:31.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.236" endtime="20201115 22:03:31.659"></status>
</kw>
<msg timestamp="20201115 22:03:31.660" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.669" endtime="20201115 22:03:31.709"></status>
</kw>
<msg timestamp="20201115 22:03:31.710" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.667" endtime="20201115 22:03:31.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.712" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.711" endtime="20201115 22:03:31.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.714" endtime="20201115 22:03:31.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.665" endtime="20201115 22:03:31.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.662" endtime="20201115 22:03:31.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.724" endtime="20201115 22:03:32.010"></status>
</kw>
<msg timestamp="20201115 22:03:32.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023260347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023267403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.722" endtime="20201115 22:03:32.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023260347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023267403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.014" endtime="20201115 22:03:32.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.023" endtime="20201115 22:03:32.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.720" endtime="20201115 22:03:32.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.718" endtime="20201115 22:03:32.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.030" level="INFO">${RESULT} = [{'time': 0.023267403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.023803278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:32.027" endtime="20201115 22:03:32.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.044" level="INFO">${OVERHEAD} = {'diff': [7.055999999998341e-06, 7.013999999999632e-06, 7.042000000002241e-06, 7.026999999999728e-06, 7.028000000002671e-06, 7.084000000000951e-06, 7.0279999999992016e-06, 7.055999999998341e-06, 7.026...</msg>
<status status="PASS" starttime="20201115 22:03:32.031" endtime="20201115 22:03:32.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.049" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:32.048" endtime="20201115 22:03:32.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.052" level="INFO">VALUE: [7.055999999998341e-06, 7.013999999999632e-06, 7.042000000002241e-06, 7.026999999999728e-06, 7.028000000002671e-06, 7.084000000000951e-06, 7.0279999999992016e-06, 7.055999999998341e-06, 7.026999999999728e-06, 7.041000000002767e-06, 7.026999999999728e-06, 7.055999999998341e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.026999999999728e-06, 7.013999999999632e-06, 7.013000000000158e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0690000000053765e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.026999999999728e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.040999999999298e-06, 7.000000000000062e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.055000000005807e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 22:03:32.050" endtime="20201115 22:03:32.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.045" endtime="20201115 22:03:32.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.055" endtime="20201115 22:03:32.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.059" endtime="20201115 22:03:32.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.057" endtime="20201115 22:03:32.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.053" endtime="20201115 22:03:32.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.660" endtime="20201115 22:03:32.079"></status>
</kw>
<msg timestamp="20201115 22:03:32.080" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.089" endtime="20201115 22:03:32.131"></status>
</kw>
<msg timestamp="20201115 22:03:32.132" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.088" endtime="20201115 22:03:32.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.133" endtime="20201115 22:03:32.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.135" endtime="20201115 22:03:32.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.085" endtime="20201115 22:03:32.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.083" endtime="20201115 22:03:32.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.146" endtime="20201115 22:03:32.432"></status>
</kw>
<msg timestamp="20201115 22:03:32.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025312569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025319611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.144" endtime="20201115 22:03:32.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025312569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025319611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.436" endtime="20201115 22:03:32.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.445" endtime="20201115 22:03:32.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.141" endtime="20201115 22:03:32.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.140" endtime="20201115 22:03:32.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.452" level="INFO">${RESULT} = [{'time': 0.025319611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.025850639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:32.448" endtime="20201115 22:03:32.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.467" level="INFO">${OVERHEAD} = {'diff': [7.0419999999987715e-06, 7.042000000002241e-06, 7.069000000001907e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.026999999999728e-06, 7.02...</msg>
<status status="PASS" starttime="20201115 22:03:32.453" endtime="20201115 22:03:32.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.472" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:32.471" endtime="20201115 22:03:32.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.475" level="INFO">VALUE: [7.0419999999987715e-06, 7.042000000002241e-06, 7.069000000001907e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 7.08400000000442e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.04200000000571e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.000000000000062e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 6.972000000000922e-06, 7.0279999999992016e-06, 7.0829999999980076e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013000000000158e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 22:03:32.473" endtime="20201115 22:03:32.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.468" endtime="20201115 22:03:32.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.478" endtime="20201115 22:03:32.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.482" endtime="20201115 22:03:32.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.481" endtime="20201115 22:03:32.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.476" endtime="20201115 22:03:32.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.081" endtime="20201115 22:03:32.503"></status>
</kw>
<msg timestamp="20201115 22:03:32.503" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.513" endtime="20201115 22:03:32.553"></status>
</kw>
<msg timestamp="20201115 22:03:32.553" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.511" endtime="20201115 22:03:32.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.554" endtime="20201115 22:03:32.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.557" endtime="20201115 22:03:32.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.508" endtime="20201115 22:03:32.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.506" endtime="20201115 22:03:32.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.567" endtime="20201115 22:03:32.855"></status>
</kw>
<msg timestamp="20201115 22:03:32.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023658097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.566" endtime="20201115 22:03:32.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023658097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.859" endtime="20201115 22:03:32.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.867" endtime="20201115 22:03:32.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.563" endtime="20201115 22:03:32.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.561" endtime="20201115 22:03:32.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.874" level="INFO">${RESULT} = [{'time': 0.023665125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.024197472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:32.871" endtime="20201115 22:03:32.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.889" level="INFO">${OVERHEAD} = {'diff': [7.0279999999992016e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0...</msg>
<status status="PASS" starttime="20201115 22:03:32.875" endtime="20201115 22:03:32.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.893" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:32.892" endtime="20201115 22:03:32.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.896" level="INFO">VALUE: [7.0279999999992016e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.07000000000485e-06, 7.0280000000061404e-06, 7.040999999999298e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 7.041000000006237e-06, 7.054999999998868e-06, 7.026999999999728e-06, 7.04200000000571e-06, 7.0140000000065705e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.040999999999298e-06, 7.026999999999728e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 22:03:32.894" endtime="20201115 22:03:32.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.890" endtime="20201115 22:03:32.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.900" endtime="20201115 22:03:32.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.903" endtime="20201115 22:03:32.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.902" endtime="20201115 22:03:32.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.898" endtime="20201115 22:03:32.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.504" endtime="20201115 22:03:32.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.815" endtime="20201115 22:03:32.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.814" endtime="20201115 22:03:32.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.764" endtime="20201115 22:03:32.925"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.932" endtime="20201115 22:03:32.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.930" endtime="20201115 22:03:32.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.927" endtime="20201115 22:03:32.952"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:41.689" endtime="20201115 22:03:32.953" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:01:44.957" endtime="20201115 22:03:32.959"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:01:42.948" endtime="20201115 22:03:32.979"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
