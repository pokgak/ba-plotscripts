<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 21:59:45.021" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:45.584" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:45.592" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:46.681" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:45.583" endtime="20201115 21:59:46.682"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.685" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:46.683" endtime="20201115 21:59:46.685"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:45.581" endtime="20201115 21:59:46.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:46.688" endtime="20201115 21:59:46.872"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.686" endtime="20201115 21:59:46.872"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.885" endtime="20201115 21:59:46.904"></status>
</kw>
<msg timestamp="20201115 21:59:46.904" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:46.883" endtime="20201115 21:59:46.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.907" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:46.905" endtime="20201115 21:59:46.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.910" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:46.908" endtime="20201115 21:59:46.910"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:46.881" endtime="20201115 21:59:46.911"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:46.879" endtime="20201115 21:59:46.912"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.877" endtime="20201115 21:59:46.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:46.916" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:46.915" endtime="20201115 21:59:46.916"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.913" endtime="20201115 21:59:46.917"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.877" endtime="20201115 21:59:46.917"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.876" endtime="20201115 21:59:46.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.918" endtime="20201115 21:59:46.919"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.874" endtime="20201115 21:59:46.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.920" endtime="20201115 21:59:46.922"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.873" endtime="20201115 21:59:46.923"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:45.579" endtime="20201115 21:59:46.923"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:46.930" endtime="20201115 21:59:46.951"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.928" endtime="20201115 21:59:46.952"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.982" endtime="20201115 21:59:47.006"></status>
</kw>
<msg timestamp="20201115 21:59:47.007" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:46.978" endtime="20201115 21:59:47.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.012" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:47.009" endtime="20201115 21:59:47.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.018" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:47.014" endtime="20201115 21:59:47.019"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:46.971" endtime="20201115 21:59:47.020"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:46.966" endtime="20201115 21:59:47.021"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.963" endtime="20201115 21:59:47.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:47.029" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:47.028" endtime="20201115 21:59:47.030"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.024" endtime="20201115 21:59:47.031"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.961" endtime="20201115 21:59:47.031"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.960" endtime="20201115 21:59:47.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:47.033" endtime="20201115 21:59:47.036"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.957" endtime="20201115 21:59:47.037"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.953" endtime="20201115 21:59:47.037"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.927" endtime="20201115 21:59:47.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:47.045" endtime="20201115 21:59:47.061"></status>
</kw>
<msg timestamp="20201115 21:59:47.062" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:47.043" endtime="20201115 21:59:47.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.064" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:47.063" endtime="20201115 21:59:47.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:47.065" endtime="20201115 21:59:47.067"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.041" endtime="20201115 21:59:47.067"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.039" endtime="20201115 21:59:47.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.073" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 21:59:47.072" endtime="20201115 21:59:47.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.075" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 21:59:47.074" endtime="20201115 21:59:47.075"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.069" endtime="20201115 21:59:47.076"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:46.923" endtime="20201115 21:59:47.077" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:45.133" endtime="20201115 21:59:47.082"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.141" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:47.149" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:48.233" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:47.140" endtime="20201115 21:59:48.234"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.236" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:48.235" endtime="20201115 21:59:48.236"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.138" endtime="20201115 21:59:48.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:48.239" endtime="20201115 21:59:48.461"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.238" endtime="20201115 21:59:48.463"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.488" endtime="20201115 21:59:48.513"></status>
</kw>
<msg timestamp="20201115 21:59:48.514" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['rsion: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.485" endtime="20201115 21:59:48.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.519" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['rsion: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.516" endtime="20201115 21:59:48.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.525" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:48.521" endtime="20201115 21:59:48.526"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.480" endtime="20201115 21:59:48.527"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.475" endtime="20201115 21:59:48.528"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.472" endtime="20201115 21:59:48.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:48.536" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:48.535" endtime="20201115 21:59:48.537"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.531" endtime="20201115 21:59:48.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.471" endtime="20201115 21:59:48.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.470" endtime="20201115 21:59:48.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.540" endtime="20201115 21:59:48.543"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.467" endtime="20201115 21:59:48.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.545" endtime="20201115 21:59:48.549"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.464" endtime="20201115 21:59:48.550"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.137" endtime="20201115 21:59:48.550"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:48.557" endtime="20201115 21:59:48.577"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.556" endtime="20201115 21:59:48.577"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.590" endtime="20201115 21:59:48.611"></status>
</kw>
<msg timestamp="20201115 21:59:48.612" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.589" endtime="20201115 21:59:48.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.613" endtime="20201115 21:59:48.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.617" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:48.616" endtime="20201115 21:59:48.618"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.586" endtime="20201115 21:59:48.618"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.584" endtime="20201115 21:59:48.619"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.583" endtime="20201115 21:59:48.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:48.623" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:48.622" endtime="20201115 21:59:48.623"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.620" endtime="20201115 21:59:48.623"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.582" endtime="20201115 21:59:48.624"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.581" endtime="20201115 21:59:48.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.625" endtime="20201115 21:59:48.626"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.580" endtime="20201115 21:59:48.627"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.578" endtime="20201115 21:59:48.627"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.553" endtime="20201115 21:59:48.627"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:48.630" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.639" endtime="20201115 21:59:48.654"></status>
</kw>
<msg timestamp="20201115 21:59:48.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.636" endtime="20201115 21:59:48.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.657" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.656" endtime="20201115 21:59:48.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.658" endtime="20201115 21:59:48.660"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.634" endtime="20201115 21:59:48.661"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.632" endtime="20201115 21:59:48.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.667" endtime="20201115 21:59:48.959"></status>
</kw>
<msg timestamp="20201115 21:59:48.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073094153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073094625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:48.666" endtime="20201115 21:59:48.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073094153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073094625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:48.963" endtime="20201115 21:59:48.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.971" endtime="20201115 21:59:48.973"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.663" endtime="20201115 21:59:48.973"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.662" endtime="20201115 21:59:48.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:48.978" level="INFO">${RESULT} = [{'time': 0.073094625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.073104139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:48.975" endtime="20201115 21:59:48.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:48.992" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000...</msg>
<status status="PASS" starttime="20201115 21:59:48.979" endtime="20201115 21:59:48.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.996" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:48.995" endtime="20201115 21:59:48.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.998" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.869999999934649e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 21:59:48.997" endtime="20201115 21:59:48.999"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.993" endtime="20201115 21:59:48.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.002" endtime="20201115 21:59:49.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:49.005" endtime="20201115 21:59:49.024"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.004" endtime="20201115 21:59:49.025"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.000" endtime="20201115 21:59:49.025"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.631" endtime="20201115 21:59:49.026"></status>
</kw>
<msg timestamp="20201115 21:59:49.026" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.034" endtime="20201115 21:59:49.052"></status>
</kw>
<msg timestamp="20201115 21:59:49.052" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.032" endtime="20201115 21:59:49.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.055" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.053" endtime="20201115 21:59:49.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.056" endtime="20201115 21:59:49.057"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.030" endtime="20201115 21:59:49.058"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.028" endtime="20201115 21:59:49.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.064" endtime="20201115 21:59:49.351"></status>
</kw>
<msg timestamp="20201115 21:59:49.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.063" endtime="20201115 21:59:49.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.356" endtime="20201115 21:59:49.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.364" endtime="20201115 21:59:49.366"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.060" endtime="20201115 21:59:49.366"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.059" endtime="20201115 21:59:49.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:49.372" level="INFO">${RESULT} = [{'time': 0.022413875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.022423, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 21:59:49.368" endtime="20201115 21:59:49.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:49.385" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201115 21:59:49.373" endtime="20201115 21:59:49.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.389" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:49.388" endtime="20201115 21:59:49.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.392" level="INFO">VALUE: [4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201115 21:59:49.391" endtime="20201115 21:59:49.392"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.386" endtime="20201115 21:59:49.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.395" endtime="20201115 21:59:49.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:49.398" endtime="20201115 21:59:49.418"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.397" endtime="20201115 21:59:49.418"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.393" endtime="20201115 21:59:49.419"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.026" endtime="20201115 21:59:49.419"></status>
</kw>
<msg timestamp="20201115 21:59:49.420" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.428" endtime="20201115 21:59:49.443"></status>
</kw>
<msg timestamp="20201115 21:59:49.443" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.426" endtime="20201115 21:59:49.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.446" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.445" endtime="20201115 21:59:49.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.447" endtime="20201115 21:59:49.449"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.423" endtime="20201115 21:59:49.450"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.421" endtime="20201115 21:59:49.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.457" endtime="20201115 21:59:49.739"></status>
</kw>
<msg timestamp="20201115 21:59:49.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020991917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.455" endtime="20201115 21:59:49.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020991917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.743" endtime="20201115 21:59:49.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.752" endtime="20201115 21:59:49.753"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.453" endtime="20201115 21:59:49.754"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.451" endtime="20201115 21:59:49.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:49.759" level="INFO">${RESULT} = [{'time': 0.020992389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021001319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:49.755" endtime="20201115 21:59:49.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:49.773" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201115 21:59:49.760" endtime="20201115 21:59:49.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.777" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:49.776" endtime="20201115 21:59:49.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.779" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201115 21:59:49.778" endtime="20201115 21:59:49.780"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.774" endtime="20201115 21:59:49.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.783" endtime="20201115 21:59:49.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:49.786" endtime="20201115 21:59:49.805"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.784" endtime="20201115 21:59:49.806"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.781" endtime="20201115 21:59:49.806"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.420" endtime="20201115 21:59:49.807"></status>
</kw>
<msg timestamp="20201115 21:59:49.807" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.814" endtime="20201115 21:59:49.829"></status>
</kw>
<msg timestamp="20201115 21:59:49.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.813" endtime="20201115 21:59:49.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.832" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.831" endtime="20201115 21:59:49.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.833" endtime="20201115 21:59:49.835"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.810" endtime="20201115 21:59:49.836"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.809" endtime="20201115 21:59:49.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.843" endtime="20201115 21:59:50.132"></status>
</kw>
<msg timestamp="20201115 21:59:50.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.842" endtime="20201115 21:59:50.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.136" endtime="20201115 21:59:50.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.144" endtime="20201115 21:59:50.146"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.838" endtime="20201115 21:59:50.146"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.837" endtime="20201115 21:59:50.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:50.151" level="INFO">${RESULT} = [{'time': 0.020335389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020343111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:50.148" endtime="20201115 21:59:50.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:50.164" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201115 21:59:50.152" endtime="20201115 21:59:50.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.169" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:50.168" endtime="20201115 21:59:50.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.171" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 21:59:50.170" endtime="20201115 21:59:50.171"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.165" endtime="20201115 21:59:50.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.174" endtime="20201115 21:59:50.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.177" endtime="20201115 21:59:50.197"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.176" endtime="20201115 21:59:50.198"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.172" endtime="20201115 21:59:50.198"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.807" endtime="20201115 21:59:50.198"></status>
</kw>
<msg timestamp="20201115 21:59:50.198" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.206" endtime="20201115 21:59:50.222"></status>
</kw>
<msg timestamp="20201115 21:59:50.223" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.204" endtime="20201115 21:59:50.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.225" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.224" endtime="20201115 21:59:50.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.226" endtime="20201115 21:59:50.228"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.202" endtime="20201115 21:59:50.228"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.200" endtime="20201115 21:59:50.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.236" endtime="20201115 21:59:50.526"></status>
</kw>
<msg timestamp="20201115 21:59:50.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.234" endtime="20201115 21:59:50.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.530" endtime="20201115 21:59:50.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.538" endtime="20201115 21:59:50.540"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.231" endtime="20201115 21:59:50.540"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.229" endtime="20201115 21:59:50.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:50.545" level="INFO">${RESULT} = [{'time': 0.020533028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020539097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:50.541" endtime="20201115 21:59:50.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:50.558" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7...</msg>
<status status="PASS" starttime="20201115 21:59:50.545" endtime="20201115 21:59:50.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.562" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:50.561" endtime="20201115 21:59:50.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.564" level="INFO">VALUE: [4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201115 21:59:50.563" endtime="20201115 21:59:50.565"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.559" endtime="20201115 21:59:50.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.568" endtime="20201115 21:59:50.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.571" endtime="20201115 21:59:50.590"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.569" endtime="20201115 21:59:50.591"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.566" endtime="20201115 21:59:50.591"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.199" endtime="20201115 21:59:50.592"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.629" endtime="20201115 21:59:50.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.597" endtime="20201115 21:59:50.616"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.595" endtime="20201115 21:59:50.617"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.594" endtime="20201115 21:59:50.617"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:48.550" endtime="20201115 21:59:50.618" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.628" endtime="20201115 21:59:50.647"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.626" endtime="20201115 21:59:50.648"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.662" endtime="20201115 21:59:50.680"></status>
</kw>
<msg timestamp="20201115 21:59:50.681" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.661" endtime="20201115 21:59:50.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.683" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.682" endtime="20201115 21:59:50.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.686" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:50.684" endtime="20201115 21:59:50.686"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:50.657" endtime="20201115 21:59:50.687"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:50.655" endtime="20201115 21:59:50.688"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.653" endtime="20201115 21:59:50.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:50.692" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:50.691" endtime="20201115 21:59:50.692"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.689" endtime="20201115 21:59:50.692"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.652" endtime="20201115 21:59:50.692"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.652" endtime="20201115 21:59:50.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.693" endtime="20201115 21:59:50.695"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.650" endtime="20201115 21:59:50.695"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.649" endtime="20201115 21:59:50.696"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.625" endtime="20201115 21:59:50.696"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:50.699" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.707" endtime="20201115 21:59:50.725"></status>
</kw>
<msg timestamp="20201115 21:59:50.725" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.705" endtime="20201115 21:59:50.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.727" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.726" endtime="20201115 21:59:50.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.729" endtime="20201115 21:59:50.730"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.702" endtime="20201115 21:59:50.731"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.701" endtime="20201115 21:59:50.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.738" endtime="20201115 21:59:51.027"></status>
</kw>
<msg timestamp="20201115 21:59:51.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073087472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073092986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.736" endtime="20201115 21:59:51.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073087472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073092986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.031" endtime="20201115 21:59:51.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.039" endtime="20201115 21:59:51.041"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.733" endtime="20201115 21:59:51.042"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.732" endtime="20201115 21:59:51.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:51.046" level="INFO">${RESULT} = [{'time': 0.073092986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.073103306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:51.043" endtime="20201115 21:59:51.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:51.059" level="INFO">${OVERHEAD} = {'diff': [5.5139999999981315e-06, 5.514000000012009e-06, 5.4729999999919565e-06, 5.485999999998992e-06, 5.52800000000464e-06, 5.5000000000055005e-06, 5.5139999999981315e-06, 5.5000000000055005e-06, 5....</msg>
<status status="PASS" starttime="20201115 21:59:51.047" endtime="20201115 21:59:51.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.063" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:51.062" endtime="20201115 21:59:51.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.066" level="INFO">VALUE: [5.5139999999981315e-06, 5.514000000012009e-06, 5.4729999999919565e-06, 5.485999999998992e-06, 5.52800000000464e-06, 5.5000000000055005e-06, 5.5139999999981315e-06, 5.5000000000055005e-06, 5.487000000012343e-06, 5.5000000000055005e-06, 5.485999999998992e-06, 5.52800000000464e-06, 5.485999999998992e-06, 5.52800000000464e-06, 5.4450000000066945e-06, 5.430000000000712e-06, 5.499999999991623e-06, 5.472000000006361e-06, 5.5000000000055005e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.499999999991623e-06, 5.526999999991289e-06, 5.5139999999981315e-06, 5.52800000000464e-06, 5.485999999998992e-06, 5.597000000009955e-06, 5.5279999999907625e-06, 5.499999999991623e-06, 5.499999999991623e-06, 5.485999999998992e-06, 5.5689999999969375e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.499999999991623e-06, 5.5000000000055005e-06, 5.485999999998992e-06, 5.52800000000464e-06, 5.5000000000055005e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.499999999991623e-06, 5.5139999999981315e-06, 5.471999999992483e-06, 5.55600000000378e-06, 5.457999999999852e-06, 5.5139999999981315e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.485999999998992e-06]</msg>
<status status="PASS" starttime="20201115 21:59:51.064" endtime="20201115 21:59:51.066"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.060" endtime="20201115 21:59:51.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.069" endtime="20201115 21:59:51.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.072" endtime="20201115 21:59:51.092"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.071" endtime="20201115 21:59:51.092"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.067" endtime="20201115 21:59:51.093"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.700" endtime="20201115 21:59:51.093"></status>
</kw>
<msg timestamp="20201115 21:59:51.093" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.101" endtime="20201115 21:59:51.116"></status>
</kw>
<msg timestamp="20201115 21:59:51.117" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.100" endtime="20201115 21:59:51.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.119" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.118" endtime="20201115 21:59:51.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.120" endtime="20201115 21:59:51.122"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.097" endtime="20201115 21:59:51.122"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.095" endtime="20201115 21:59:51.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.129" endtime="20201115 21:59:51.418"></status>
</kw>
<msg timestamp="20201115 21:59:51.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.128" endtime="20201115 21:59:51.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.422" endtime="20201115 21:59:51.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.430" endtime="20201115 21:59:51.432"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.125" endtime="20201115 21:59:51.433"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.123" endtime="20201115 21:59:51.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:51.437" level="INFO">${RESULT} = [{'time': 0.020349778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.020365806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:51.434" endtime="20201115 21:59:51.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:51.452" level="INFO">${OVERHEAD} = {'diff': [5.471999999999422e-06, 5.486999999998465e-06, 5.514000000001601e-06, 5.485999999998992e-06, 5.527999999997701e-06, 5.542000000000741e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.4999...</msg>
<status status="PASS" starttime="20201115 21:59:51.438" endtime="20201115 21:59:51.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.457" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:51.455" endtime="20201115 21:59:51.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.459" level="INFO">VALUE: [5.471999999999422e-06, 5.486999999998465e-06, 5.514000000001601e-06, 5.485999999998992e-06, 5.527999999997701e-06, 5.542000000000741e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.512999999998658e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.472999999998895e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.528000000001171e-06, 5.444000000000282e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.527999999997701e-06, 5.499999999998562e-06, 5.514000000001601e-06, 5.500000000002031e-06, 5.528000000001171e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.542000000000741e-06, 5.514000000001601e-06, 5.500000000002031e-06, 5.500000000002031e-06, 5.526999999998228e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.514000000001601e-06, 5.57000000000335e-06, 5.500000000002031e-06, 5.499999999998562e-06]</msg>
<status status="PASS" starttime="20201115 21:59:51.458" endtime="20201115 21:59:51.460"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.453" endtime="20201115 21:59:51.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.463" endtime="20201115 21:59:51.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.466" endtime="20201115 21:59:51.485"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.465" endtime="20201115 21:59:51.486"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.461" endtime="20201115 21:59:51.486"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.094" endtime="20201115 21:59:51.487"></status>
</kw>
<msg timestamp="20201115 21:59:51.487" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.495" endtime="20201115 21:59:51.510"></status>
</kw>
<msg timestamp="20201115 21:59:51.511" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.493" endtime="20201115 21:59:51.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.513" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.512" endtime="20201115 21:59:51.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.514" endtime="20201115 21:59:51.516"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.491" endtime="20201115 21:59:51.516"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.489" endtime="20201115 21:59:51.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.524" endtime="20201115 21:59:51.811"></status>
</kw>
<msg timestamp="20201115 21:59:51.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018657472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018662958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.522" endtime="20201115 21:59:51.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018657472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018662958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.815" endtime="20201115 21:59:51.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.823" endtime="20201115 21:59:51.825"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.519" endtime="20201115 21:59:51.825"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.518" endtime="20201115 21:59:51.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:51.830" level="INFO">${RESULT} = [{'time': 0.018662958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018674917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:51.827" endtime="20201115 21:59:51.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:51.843" level="INFO">${OVERHEAD} = {'diff': [5.485999999998992e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.472000000002891e-06, 5.485999999998992e-06, 5.554999999997368e-06, 5.471999999999422e-06, 5.459000000002795e-06, 5.4440...</msg>
<status status="PASS" starttime="20201115 21:59:51.831" endtime="20201115 21:59:51.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.848" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:51.846" endtime="20201115 21:59:51.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.850" level="INFO">VALUE: [5.485999999998992e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.472000000002891e-06, 5.485999999998992e-06, 5.554999999997368e-06, 5.471999999999422e-06, 5.459000000002795e-06, 5.444000000000282e-06, 5.528000000001171e-06, 5.556000000000311e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.500000000002031e-06, 5.512999999998658e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.514000000001601e-06, 5.527999999997701e-06, 5.500000000002031e-06, 5.528000000001171e-06, 5.555000000000837e-06, 5.527999999997701e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.499999999998562e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.514000000001601e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.555000000000837e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.542000000000741e-06, 5.513000000002127e-06, 5.431000000000186e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.444999999999756e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.5139999999981315e-06, 5.486999999998465e-06]</msg>
<status status="PASS" starttime="20201115 21:59:51.849" endtime="20201115 21:59:51.850"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.844" endtime="20201115 21:59:51.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.853" endtime="20201115 21:59:51.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.856" endtime="20201115 21:59:51.876"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.855" endtime="20201115 21:59:51.876"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.851" endtime="20201115 21:59:51.877"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.488" endtime="20201115 21:59:51.877"></status>
</kw>
<msg timestamp="20201115 21:59:51.877" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.885" endtime="20201115 21:59:51.900"></status>
</kw>
<msg timestamp="20201115 21:59:51.901" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.883" endtime="20201115 21:59:51.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.903" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.902" endtime="20201115 21:59:51.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.904" endtime="20201115 21:59:51.906"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.881" endtime="20201115 21:59:51.906"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.879" endtime="20201115 21:59:51.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.914" endtime="20201115 21:59:52.201"></status>
</kw>
<msg timestamp="20201115 21:59:52.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020178056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.912" endtime="20201115 21:59:52.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020178056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.205" endtime="20201115 21:59:52.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.213" endtime="20201115 21:59:52.215"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.910" endtime="20201115 21:59:52.215"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.908" endtime="20201115 21:59:52.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.220" level="INFO">${RESULT} = [{'time': 0.020183556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.020193028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:52.217" endtime="20201115 21:59:52.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.233" level="INFO">${OVERHEAD} = {'diff': [5.499999999998562e-06, 5.471999999999422e-06, 5.526999999998228e-06, 5.514000000001601e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.5000...</msg>
<status status="PASS" starttime="20201115 21:59:52.221" endtime="20201115 21:59:52.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.238" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:52.237" endtime="20201115 21:59:52.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.240" level="INFO">VALUE: [5.499999999998562e-06, 5.471999999999422e-06, 5.526999999998228e-06, 5.514000000001601e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.500000000002031e-06, 5.526999999998228e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.485999999998992e-06, 5.512999999998658e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.542000000000741e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.486000000002461e-06, 5.569999999999881e-06, 5.485999999998992e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.486000000002461e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.514000000001601e-06, 5.526999999998228e-06, 5.527999999997701e-06, 5.499999999998562e-06, 5.472999999998895e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.541000000001267e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.556000000000311e-06, 5.499999999998562e-06, 5.527999999997701e-06, 5.486000000002461e-06, 5.528000000001171e-06, 5.500000000002031e-06]</msg>
<status status="PASS" starttime="20201115 21:59:52.239" endtime="20201115 21:59:52.240"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.234" endtime="20201115 21:59:52.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.243" endtime="20201115 21:59:52.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.246" endtime="20201115 21:59:52.266"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.245" endtime="20201115 21:59:52.266"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.242" endtime="20201115 21:59:52.267"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.878" endtime="20201115 21:59:52.267"></status>
</kw>
<msg timestamp="20201115 21:59:52.267" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.275" endtime="20201115 21:59:52.292"></status>
</kw>
<msg timestamp="20201115 21:59:52.292" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.273" endtime="20201115 21:59:52.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.295" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.293" endtime="20201115 21:59:52.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.296" endtime="20201115 21:59:52.298"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.271" endtime="20201115 21:59:52.298"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.269" endtime="20201115 21:59:52.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.305" endtime="20201115 21:59:52.592"></status>
</kw>
<msg timestamp="20201115 21:59:52.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.304" endtime="20201115 21:59:52.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.596" endtime="20201115 21:59:52.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.604" endtime="20201115 21:59:52.606"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.301" endtime="20201115 21:59:52.606"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.299" endtime="20201115 21:59:52.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.611" level="INFO">${RESULT} = [{'time': 0.021977347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.021987736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:52.608" endtime="20201115 21:59:52.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.624" level="INFO">${OVERHEAD} = {'diff': [5.514000000001601e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.486999999998465e-06, 5.5139999999981315e-06, 5.457999999999852e-06, 5.48...</msg>
<status status="PASS" starttime="20201115 21:59:52.612" endtime="20201115 21:59:52.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.628" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:52.627" endtime="20201115 21:59:52.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.631" level="INFO">VALUE: [5.514000000001601e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.486999999998465e-06, 5.5139999999981315e-06, 5.457999999999852e-06, 5.486000000002461e-06, 5.528000000001171e-06, 5.457999999999852e-06, 5.513000000002127e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.527999999997701e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.472000000002891e-06, 5.486000000002461e-06, 5.485999999998992e-06, 5.526999999998228e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.472999999998895e-06, 5.528000000001171e-06, 5.485999999998992e-06, 5.528000000001171e-06, 5.486000000002461e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.444000000000282e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.582999999999977e-06, 5.541999999997271e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.514000000001601e-06, 5.486999999998465e-06, 5.499999999998562e-06]</msg>
<status status="PASS" starttime="20201115 21:59:52.630" endtime="20201115 21:59:52.631"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.625" endtime="20201115 21:59:52.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.634" endtime="20201115 21:59:52.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.637" endtime="20201115 21:59:52.657"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.636" endtime="20201115 21:59:52.658"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.632" endtime="20201115 21:59:52.658"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.268" endtime="20201115 21:59:52.658"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.697" endtime="20201115 21:59:52.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.663" endtime="20201115 21:59:52.682"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.662" endtime="20201115 21:59:52.683"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.660" endtime="20201115 21:59:52.683"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:50.622" endtime="20201115 21:59:52.684" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.693" endtime="20201115 21:59:52.712"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.691" endtime="20201115 21:59:52.713"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.726" endtime="20201115 21:59:52.750"></status>
</kw>
<msg timestamp="20201115 21:59:52.751" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.724" endtime="20201115 21:59:52.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.753" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.752" endtime="20201115 21:59:52.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.756" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:52.754" endtime="20201115 21:59:52.757"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:52.722" endtime="20201115 21:59:52.757"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:52.719" endtime="20201115 21:59:52.758"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.718" endtime="20201115 21:59:52.758"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:52.762" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:52.761" endtime="20201115 21:59:52.762"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.759" endtime="20201115 21:59:52.762"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.717" endtime="20201115 21:59:52.762"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.716" endtime="20201115 21:59:52.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.763" endtime="20201115 21:59:52.765"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.715" endtime="20201115 21:59:52.765"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.714" endtime="20201115 21:59:52.766"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.690" endtime="20201115 21:59:52.766"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.769" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.778" endtime="20201115 21:59:52.795"></status>
</kw>
<msg timestamp="20201115 21:59:52.795" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.777" endtime="20201115 21:59:52.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.798" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.796" endtime="20201115 21:59:52.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.799" endtime="20201115 21:59:52.800"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.774" endtime="20201115 21:59:52.801"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.772" endtime="20201115 21:59:52.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.808" endtime="20201115 21:59:53.095"></status>
</kw>
<msg timestamp="20201115 21:59:53.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078651042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078669514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.807" endtime="20201115 21:59:53.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078651042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078669514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.099" endtime="20201115 21:59:53.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.108" endtime="20201115 21:59:53.109"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.804" endtime="20201115 21:59:53.110"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.802" endtime="20201115 21:59:53.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.114" level="INFO">${RESULT} = [{'time': 0.078669514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8471999999991606e-05, 'source_diff': 1.8471999999991606e-05}, {'time': 0.078755806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:53.111" endtime="20201115 21:59:53.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.130" level="INFO">${OVERHEAD} = {'diff': [1.8471999999991606e-05, 1.844499999999194e-05, 1.833300000000926e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.8457999999998975e-05, 1.8429999999999835e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 21:59:53.115" endtime="20201115 21:59:53.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.134" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:53.133" endtime="20201115 21:59:53.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.136" level="INFO">VALUE: [1.8471999999991606e-05, 1.844499999999194e-05, 1.833300000000926e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.8457999999998975e-05, 1.8429999999999835e-05, 1.847299999999108e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8458000000012853e-05, 1.840300000000017e-05, 1.8389000000007538e-05, 1.8485999999998115e-05, 1.8415999999993327e-05, 1.8443999999992466e-05, 1.8457999999998975e-05, 1.843099999999931e-05, 1.8444000000006344e-05, 1.84169999999928e-05, 1.8528000000003764e-05, 1.8457999999998975e-05, 1.838899999999366e-05, 1.8485999999998115e-05, 1.844499999999194e-05, 1.843099999999931e-05, 1.8443999999992466e-05, 1.8415999999993327e-05, 1.8459000000012327e-05, 1.8444000000006344e-05, 1.8431000000013187e-05, 1.8500000000004624e-05, 1.843099999999931e-05, 1.8444000000006344e-05, 1.8444000000006344e-05, 1.8445000000005818e-05, 1.8417000000006678e-05, 1.8387999999994187e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8415999999993327e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8443999999992466e-05, 1.84169999999928e-05, 1.8429999999999835e-05, 1.8389000000007538e-05, 1.845899999999845e-05, 1.843099999999931e-05]</msg>
<status status="PASS" starttime="20201115 21:59:53.135" endtime="20201115 21:59:53.137"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.131" endtime="20201115 21:59:53.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.140" endtime="20201115 21:59:53.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.143" endtime="20201115 21:59:53.162"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.141" endtime="20201115 21:59:53.163"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.138" endtime="20201115 21:59:53.163"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.770" endtime="20201115 21:59:53.164"></status>
</kw>
<msg timestamp="20201115 21:59:53.164" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.173" endtime="20201115 21:59:53.186"></status>
</kw>
<msg timestamp="20201115 21:59:53.187" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.171" endtime="20201115 21:59:53.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.188" endtime="20201115 21:59:53.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.190" endtime="20201115 21:59:53.192"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.169" endtime="20201115 21:59:53.193"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.166" endtime="20201115 21:59:53.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.200" endtime="20201115 21:59:53.485"></status>
</kw>
<msg timestamp="20201115 21:59:53.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.198" endtime="20201115 21:59:53.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.490" endtime="20201115 21:59:53.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.498" endtime="20201115 21:59:53.500"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.196" endtime="20201115 21:59:53.500"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.194" endtime="20201115 21:59:53.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.505" level="INFO">${RESULT} = [{'time': 0.020428861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.841699999999974e-05, 'source_diff': 1.841699999999974e-05}, {'time': 0.020513903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:53.501" endtime="20201115 21:59:53.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.519" level="INFO">${OVERHEAD} = {'diff': [1.841699999999974e-05, 1.841699999999974e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.8444000000002875e-05, 1.836099999999799e-05, 1.844499999999888e-05, 1.8500000000001154e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 21:59:53.506" endtime="20201115 21:59:53.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.523" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:53.522" endtime="20201115 21:59:53.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.526" level="INFO">VALUE: [1.841699999999974e-05, 1.841699999999974e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.8444000000002875e-05, 1.836099999999799e-05, 1.844499999999888e-05, 1.8500000000001154e-05, 1.841699999999974e-05, 1.8457999999998975e-05, 1.8429999999999835e-05, 1.837500000000103e-05, 1.8429999999999835e-05, 1.8457999999998975e-05, 1.843099999999931e-05, 1.8457999999998975e-05, 1.844499999999888e-05, 1.83890000000006e-05, 1.8416000000000265e-05, 1.836099999999799e-05, 1.840300000000017e-05, 1.8472000000002015e-05, 1.837500000000103e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8402000000000696e-05, 1.8416000000000265e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.845900000000192e-05, 1.843099999999931e-05, 1.8471999999998545e-05, 1.8402000000000696e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.83890000000006e-05, 1.8485999999998115e-05, 1.843099999999931e-05, 1.837500000000103e-05, 1.8429999999999835e-05, 1.8471999999998545e-05, 1.840300000000017e-05, 1.8443999999999405e-05, 1.8471999999998545e-05, 1.8499999999997685e-05, 1.8429999999999835e-05, 1.8429999999999835e-05]</msg>
<status status="PASS" starttime="20201115 21:59:53.524" endtime="20201115 21:59:53.526"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.520" endtime="20201115 21:59:53.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.529" endtime="20201115 21:59:53.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.532" endtime="20201115 21:59:53.551"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.531" endtime="20201115 21:59:53.552"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.527" endtime="20201115 21:59:53.552"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.164" endtime="20201115 21:59:53.553"></status>
</kw>
<msg timestamp="20201115 21:59:53.553" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.562" endtime="20201115 21:59:53.578"></status>
</kw>
<msg timestamp="20201115 21:59:53.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.560" endtime="20201115 21:59:53.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.580" endtime="20201115 21:59:53.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.582" endtime="20201115 21:59:53.584"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.558" endtime="20201115 21:59:53.584"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.556" endtime="20201115 21:59:53.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.591" endtime="20201115 21:59:53.879"></status>
</kw>
<msg timestamp="20201115 21:59:53.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023199847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.590" endtime="20201115 21:59:53.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023199847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.883" endtime="20201115 21:59:53.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.891" endtime="20201115 21:59:53.892"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.587" endtime="20201115 21:59:53.893"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.585" endtime="20201115 21:59:53.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.897" level="INFO">${RESULT} = [{'time': 0.023199847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.83890000000006e-05, 'source_diff': 1.83890000000006e-05}, {'time': 0.023281181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 21:59:53.894" endtime="20201115 21:59:53.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.912" level="INFO">${OVERHEAD} = {'diff': [1.83890000000006e-05, 1.845900000000192e-05, 1.8514000000000724e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.84...</msg>
<status status="PASS" starttime="20201115 21:59:53.898" endtime="20201115 21:59:53.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.916" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:53.915" endtime="20201115 21:59:53.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.919" level="INFO">VALUE: [1.83890000000006e-05, 1.845900000000192e-05, 1.8514000000000724e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8444000000002875e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.837500000000103e-05, 1.8429999999999835e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.8444000000002875e-05, 1.8416000000000265e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.840300000000017e-05, 1.8443999999999405e-05, 1.840300000000017e-05, 1.8500000000001154e-05, 1.841699999999974e-05, 1.851299999999778e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.8429999999999835e-05, 1.844499999999888e-05, 1.841699999999974e-05, 1.8472000000002015e-05, 1.8457999999998975e-05, 1.843100000000278e-05, 1.8472000000002015e-05, 1.8472000000002015e-05, 1.8471999999998545e-05, 1.8457999999998975e-05, 1.8402000000000696e-05, 1.8429999999999835e-05, 1.8458000000002445e-05, 1.8500000000001154e-05, 1.844499999999888e-05, 1.8486000000001584e-05, 1.8429999999999835e-05]</msg>
<status status="PASS" starttime="20201115 21:59:53.917" endtime="20201115 21:59:53.919"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.913" endtime="20201115 21:59:53.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.922" endtime="20201115 21:59:53.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.925" endtime="20201115 21:59:53.944"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.924" endtime="20201115 21:59:53.945"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.920" endtime="20201115 21:59:53.945"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.554" endtime="20201115 21:59:53.946"></status>
</kw>
<msg timestamp="20201115 21:59:53.946" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.955" endtime="20201115 21:59:53.971"></status>
</kw>
<msg timestamp="20201115 21:59:53.971" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.954" endtime="20201115 21:59:53.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.972" endtime="20201115 21:59:53.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.975" endtime="20201115 21:59:53.976"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.951" endtime="20201115 21:59:53.977"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.949" endtime="20201115 21:59:53.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.984" endtime="20201115 21:59:54.269"></status>
</kw>
<msg timestamp="20201115 21:59:54.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.982" endtime="20201115 21:59:54.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.273" endtime="20201115 21:59:54.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.281" endtime="20201115 21:59:54.284"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.979" endtime="20201115 21:59:54.284"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.978" endtime="20201115 21:59:54.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.289" level="INFO">${RESULT} = [{'time': 0.022099556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.843099999999931e-05, 'source_diff': 1.843099999999931e-05}, {'time': 0.022185097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.286" endtime="20201115 21:59:54.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.302" level="INFO">${OVERHEAD} = {'diff': [1.843099999999931e-05, 1.840300000000017e-05, 1.8486000000001584e-05, 1.8500000000001154e-05, 1.836100000000146e-05, 1.8472000000002015e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.84...</msg>
<status status="PASS" starttime="20201115 21:59:54.290" endtime="20201115 21:59:54.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.307" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:54.306" endtime="20201115 21:59:54.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.309" level="INFO">VALUE: [1.843099999999931e-05, 1.840300000000017e-05, 1.8486000000001584e-05, 1.8500000000001154e-05, 1.836100000000146e-05, 1.8472000000002015e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.8429999999999835e-05, 1.83890000000006e-05, 1.834700000000189e-05, 1.841699999999974e-05, 1.8444000000002875e-05, 1.8457999999998975e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8416000000000265e-05, 1.836099999999799e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.8499999999997685e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.836100000000146e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.8486000000001584e-05, 1.844500000000235e-05, 1.8444000000002875e-05, 1.843099999999931e-05, 1.8401999999997226e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8402000000000696e-05, 1.841699999999974e-05, 1.844499999999888e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.83890000000006e-05, 1.8444000000002875e-05, 1.8457999999998975e-05, 1.833299999999885e-05, 1.8457999999998975e-05]</msg>
<status status="PASS" starttime="20201115 21:59:54.308" endtime="20201115 21:59:54.310"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.303" endtime="20201115 21:59:54.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.312" endtime="20201115 21:59:54.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.316" endtime="20201115 21:59:54.335"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.314" endtime="20201115 21:59:54.336"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.311" endtime="20201115 21:59:54.336"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.946" endtime="20201115 21:59:54.337"></status>
</kw>
<msg timestamp="20201115 21:59:54.337" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.346" endtime="20201115 21:59:54.363"></status>
</kw>
<msg timestamp="20201115 21:59:54.363" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.344" endtime="20201115 21:59:54.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.365" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.364" endtime="20201115 21:59:54.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.366" endtime="20201115 21:59:54.368"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.342" endtime="20201115 21:59:54.369"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.340" endtime="20201115 21:59:54.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.375" endtime="20201115 21:59:54.662"></status>
</kw>
<msg timestamp="20201115 21:59:54.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.374" endtime="20201115 21:59:54.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.666" endtime="20201115 21:59:54.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.674" endtime="20201115 21:59:54.675"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.371" endtime="20201115 21:59:54.676"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.370" endtime="20201115 21:59:54.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.681" level="INFO">${RESULT} = [{'time': 0.022939903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.844500000000235e-05, 'source_diff': 1.844500000000235e-05}, {'time': 0.023022361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.677" endtime="20201115 21:59:54.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.694" level="INFO">${OVERHEAD} = {'diff': [1.844500000000235e-05, 1.8458000000002445e-05, 1.8457999999998975e-05, 1.8388000000001126e-05, 1.8443999999999405e-05, 1.838899999999713e-05, 1.8443999999999405e-05, 1.8471999999998545e-05, ...</msg>
<status status="PASS" starttime="20201115 21:59:54.682" endtime="20201115 21:59:54.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.699" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:54.697" endtime="20201115 21:59:54.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.701" level="INFO">VALUE: [1.844500000000235e-05, 1.8458000000002445e-05, 1.8457999999998975e-05, 1.8388000000001126e-05, 1.8443999999999405e-05, 1.838899999999713e-05, 1.8443999999999405e-05, 1.8471999999998545e-05, 1.83890000000006e-05, 1.836100000000146e-05, 1.8443999999999405e-05, 1.83890000000006e-05, 1.843099999999931e-05, 1.841700000000321e-05, 1.841699999999974e-05, 1.8486000000001584e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8457999999998975e-05, 1.841699999999974e-05, 1.8361999999997464e-05, 1.844499999999888e-05, 1.8416000000000265e-05, 1.843100000000278e-05, 1.843099999999931e-05, 1.8471999999998545e-05, 1.844499999999888e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.837499999999756e-05, 1.844499999999888e-05, 1.8472000000002015e-05, 1.841699999999974e-05, 1.830499999999971e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.844499999999888e-05, 1.841700000000321e-05, 1.8457999999998975e-05, 1.8388000000001126e-05, 1.8473000000001488e-05, 1.844499999999888e-05, 1.840300000000017e-05, 1.8472000000002015e-05, 1.837499999999756e-05, 1.841699999999974e-05, 1.8416000000000265e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.8416000000000265e-05]</msg>
<status status="PASS" starttime="20201115 21:59:54.700" endtime="20201115 21:59:54.707"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.695" endtime="20201115 21:59:54.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.710" endtime="20201115 21:59:54.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.713" endtime="20201115 21:59:54.733"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.712" endtime="20201115 21:59:54.733"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.708" endtime="20201115 21:59:54.734"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.338" endtime="20201115 21:59:54.734"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.768" endtime="20201115 21:59:54.734"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.767" endtime="20201115 21:59:54.734"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.737" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.745" endtime="20201115 21:59:54.763"></status>
</kw>
<msg timestamp="20201115 21:59:54.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.744" endtime="20201115 21:59:54.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.766" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.764" endtime="20201115 21:59:54.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.767" endtime="20201115 21:59:54.768"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.741" endtime="20201115 21:59:54.769"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.739" endtime="20201115 21:59:54.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.776" endtime="20201115 21:59:55.061"></status>
</kw>
<msg timestamp="20201115 21:59:55.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022714583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.774" endtime="20201115 21:59:55.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022714583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.065" endtime="20201115 21:59:55.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.073" endtime="20201115 21:59:55.075"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.772" endtime="20201115 21:59:55.075"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.770" endtime="20201115 21:59:55.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.080" level="INFO">${RESULT} = [{'time': 0.022723097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.022832792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.077" endtime="20201115 21:59:55.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.093" level="INFO">${OVERHEAD} = {'diff': [8.514000000001132e-06, 8.473000000001896e-06, 8.528000000000702e-06, 8.417000000000147e-06, 8.486999999997996e-06, 8.527000000001228e-06, 8.485999999998523e-06, 8.487000000001466e-06, 8.5139...</msg>
<status status="PASS" starttime="20201115 21:59:55.081" endtime="20201115 21:59:55.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.098" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:55.097" endtime="20201115 21:59:55.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.101" level="INFO">VALUE: [8.514000000001132e-06, 8.473000000001896e-06, 8.528000000000702e-06, 8.417000000000147e-06, 8.486999999997996e-06, 8.527000000001228e-06, 8.485999999998523e-06, 8.487000000001466e-06, 8.513999999997662e-06, 8.499999999998092e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.514000000001132e-06, 8.527999999997232e-06, 8.486000000001992e-06, 8.528000000000702e-06, 8.555999999999842e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.486000000001992e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.444999999999286e-06, 8.471999999998953e-06, 8.500000000001562e-06, 8.555999999999842e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.471999999998953e-06, 8.528000000000702e-06, 8.485999999998523e-06, 8.513999999997662e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.540999999997329e-06, 8.472999999998426e-06, 8.487000000001466e-06, 8.430999999999716e-06, 8.430000000000243e-06, 8.457999999999383e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.514000000001132e-06, 8.499999999998092e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.099" endtime="20201115 21:59:55.101"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.094" endtime="20201115 21:59:55.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.104" endtime="20201115 21:59:55.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.107" endtime="20201115 21:59:55.127"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.106" endtime="20201115 21:59:55.127"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.102" endtime="20201115 21:59:55.128"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.737" endtime="20201115 21:59:55.128"></status>
</kw>
<msg timestamp="20201115 21:59:55.128" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.137" endtime="20201115 21:59:55.155"></status>
</kw>
<msg timestamp="20201115 21:59:55.155" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.135" endtime="20201115 21:59:55.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.157" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.156" endtime="20201115 21:59:55.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.159" endtime="20201115 21:59:55.160"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.133" endtime="20201115 21:59:55.161"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.131" endtime="20201115 21:59:55.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.167" endtime="20201115 21:59:55.454"></status>
</kw>
<msg timestamp="20201115 21:59:55.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020516861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.166" endtime="20201115 21:59:55.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020516861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.458" endtime="20201115 21:59:55.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.466" endtime="20201115 21:59:55.468"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.163" endtime="20201115 21:59:55.468"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.162" endtime="20201115 21:59:55.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.473" level="INFO">${RESULT} = [{'time': 0.020516861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.020629125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.469" endtime="20201115 21:59:55.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.486" level="INFO">${OVERHEAD} = {'diff': [8.486000000001992e-06, 8.486000000001992e-06, 8.500000000001562e-06, 8.527999999997232e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.513999999997662e-06, 8.499999999998092e-06, 8.4720...</msg>
<status status="PASS" starttime="20201115 21:59:55.474" endtime="20201115 21:59:55.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.491" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:55.490" endtime="20201115 21:59:55.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.493" level="INFO">VALUE: [8.486000000001992e-06, 8.486000000001992e-06, 8.500000000001562e-06, 8.527999999997232e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.513999999997662e-06, 8.499999999998092e-06, 8.472000000002422e-06, 8.486000000001992e-06, 8.471999999998953e-06, 8.528000000000702e-06, 8.471999999998953e-06, 8.513999999997662e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.458999999998856e-06, 8.485999999998523e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.486000000001992e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.514000000001132e-06, 8.528000000000702e-06, 8.443999999999813e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.486000000001992e-06, 8.473000000001896e-06, 8.444999999999286e-06, 8.430000000000243e-06, 8.499999999998092e-06, 8.528000000000702e-06, 8.472999999998426e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.471999999998953e-06, 8.555999999999842e-06, 8.512999999998189e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.457999999999383e-06, 8.514000000001132e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.555000000000368e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.492" endtime="20201115 21:59:55.494"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.487" endtime="20201115 21:59:55.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.496" endtime="20201115 21:59:55.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.500" endtime="20201115 21:59:55.519"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.498" endtime="20201115 21:59:55.520"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.495" endtime="20201115 21:59:55.520"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.129" endtime="20201115 21:59:55.521"></status>
</kw>
<msg timestamp="20201115 21:59:55.521" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.530" endtime="20201115 21:59:55.552"></status>
</kw>
<msg timestamp="20201115 21:59:55.553" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.528" endtime="20201115 21:59:55.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.555" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.554" endtime="20201115 21:59:55.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.556" endtime="20201115 21:59:55.558"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.525" endtime="20201115 21:59:55.559"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.523" endtime="20201115 21:59:55.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.565" endtime="20201115 21:59:55.852"></status>
</kw>
<msg timestamp="20201115 21:59:55.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024941361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024949847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.564" endtime="20201115 21:59:55.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024941361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024949847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.856" endtime="20201115 21:59:55.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.864" endtime="20201115 21:59:55.865"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.561" endtime="20201115 21:59:55.866"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.560" endtime="20201115 21:59:55.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.870" level="INFO">${RESULT} = [{'time': 0.024949847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.025061514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.867" endtime="20201115 21:59:55.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.884" level="INFO">${OVERHEAD} = {'diff': [8.486000000001992e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.499999999998092e-06, 8.458000000002852e-06, 8.485999999998523e-06, 8.513999999997662e-06, 8.485999999998523e-06, 8.5140...</msg>
<status status="PASS" starttime="20201115 21:59:55.872" endtime="20201115 21:59:55.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.888" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:55.887" endtime="20201115 21:59:55.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.891" level="INFO">VALUE: [8.486000000001992e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.499999999998092e-06, 8.458000000002852e-06, 8.485999999998523e-06, 8.513999999997662e-06, 8.485999999998523e-06, 8.514000000001132e-06, 8.457999999999383e-06, 8.472000000002422e-06, 8.486999999997996e-06, 8.527000000001228e-06, 8.471999999998953e-06, 8.500000000001562e-06, 8.471999999998953e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.471999999998953e-06, 8.528000000000702e-06, 8.471999999998953e-06, 8.527999999997232e-06, 8.417000000000147e-06, 8.471999999998953e-06, 8.499999999998092e-06, 8.473000000001896e-06, 8.528000000000702e-06, 8.568999999999938e-06, 8.486000000001992e-06, 8.513999999997662e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.473000000001896e-06, 8.514000000001132e-06, 8.485999999998523e-06, 8.457999999999383e-06, 8.499999999998092e-06, 8.485999999998523e-06, 8.417000000000147e-06, 8.444999999999286e-06, 8.528000000000702e-06, 8.513999999997662e-06, 8.513000000001658e-06, 8.513000000001658e-06, 8.528000000000702e-06, 8.443999999999813e-06, 8.514000000001132e-06, 8.499999999998092e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.890" endtime="20201115 21:59:55.891"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.885" endtime="20201115 21:59:55.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.894" endtime="20201115 21:59:55.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.897" endtime="20201115 21:59:55.917"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.896" endtime="20201115 21:59:55.917"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.892" endtime="20201115 21:59:55.918"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.521" endtime="20201115 21:59:55.918"></status>
</kw>
<msg timestamp="20201115 21:59:55.918" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.927" endtime="20201115 21:59:55.949"></status>
</kw>
<msg timestamp="20201115 21:59:55.950" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.926" endtime="20201115 21:59:55.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.952" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.951" endtime="20201115 21:59:55.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.953" endtime="20201115 21:59:55.955"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.923" endtime="20201115 21:59:55.955"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.921" endtime="20201115 21:59:55.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.962" endtime="20201115 21:59:56.249"></status>
</kw>
<msg timestamp="20201115 21:59:56.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.961" endtime="20201115 21:59:56.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.253" endtime="20201115 21:59:56.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.262" endtime="20201115 21:59:56.263"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.958" endtime="20201115 21:59:56.264"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.956" endtime="20201115 21:59:56.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.268" level="INFO">${RESULT} = [{'time': 0.024148847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.0242645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 21:59:56.265" endtime="20201115 21:59:56.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.282" level="INFO">${OVERHEAD} = {'diff': [8.486000000001992e-06, 8.486000000001992e-06, 8.457999999999383e-06, 8.513000000001658e-06, 8.485999999998523e-06, 8.487000000001466e-06, 8.417000000000147e-06, 8.500000000001562e-06, 8.5279...</msg>
<status status="PASS" starttime="20201115 21:59:56.269" endtime="20201115 21:59:56.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.286" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:56.285" endtime="20201115 21:59:56.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.289" level="INFO">VALUE: [8.486000000001992e-06, 8.486000000001992e-06, 8.457999999999383e-06, 8.513000000001658e-06, 8.485999999998523e-06, 8.487000000001466e-06, 8.417000000000147e-06, 8.500000000001562e-06, 8.527999999997232e-06, 8.486000000001992e-06, 8.430999999999716e-06, 8.499999999998092e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.417000000000147e-06, 8.458999999998856e-06, 8.471999999998953e-06, 8.528000000000702e-06, 8.459000000002326e-06, 8.471999999998953e-06, 8.444999999999286e-06, 8.514000000001132e-06, 8.471999999998953e-06, 8.555999999999842e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.500000000001562e-06, 8.555999999999842e-06, 8.513999999997662e-06, 8.582999999999508e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.485999999998523e-06, 8.526999999997759e-06, 8.528000000000702e-06, 8.471999999998953e-06, 8.457999999999383e-06, 8.514000000001132e-06, 8.389000000001007e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.487000000001466e-06, 8.487000000001466e-06, 8.500000000001562e-06, 8.430000000000243e-06, 8.457999999999383e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.287" endtime="20201115 21:59:56.289"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.282" endtime="20201115 21:59:56.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.292" endtime="20201115 21:59:56.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.295" endtime="20201115 21:59:56.314"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.293" endtime="20201115 21:59:56.315"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.290" endtime="20201115 21:59:56.315"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.919" endtime="20201115 21:59:56.316"></status>
</kw>
<msg timestamp="20201115 21:59:56.316" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.325" endtime="20201115 21:59:56.346"></status>
</kw>
<msg timestamp="20201115 21:59:56.346" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.323" endtime="20201115 21:59:56.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.349" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.347" endtime="20201115 21:59:56.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.350" endtime="20201115 21:59:56.351"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.320" endtime="20201115 21:59:56.352"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.318" endtime="20201115 21:59:56.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.359" endtime="20201115 21:59:56.645"></status>
</kw>
<msg timestamp="20201115 21:59:56.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02347725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023485764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:56.357" endtime="20201115 21:59:56.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02347725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023485764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:56.649" endtime="20201115 21:59:56.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.657" endtime="20201115 21:59:56.659"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.354" endtime="20201115 21:59:56.659"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.353" endtime="20201115 21:59:56.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.664" level="INFO">${RESULT} = [{'time': 0.023485764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.513999999997662e-06, 'source_diff': 8.513999999997662e-06}, {'time': 0.02359925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 21:59:56.661" endtime="20201115 21:59:56.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.677" level="INFO">${OVERHEAD} = {'diff': [8.513999999997662e-06, 8.527999999997232e-06, 8.471999999998953e-06, 8.485999999998523e-06, 8.486999999997996e-06, 8.417000000000147e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.5420...</msg>
<status status="PASS" starttime="20201115 21:59:56.665" endtime="20201115 21:59:56.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.682" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:56.681" endtime="20201115 21:59:56.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.684" level="INFO">VALUE: [8.513999999997662e-06, 8.527999999997232e-06, 8.471999999998953e-06, 8.485999999998523e-06, 8.486999999997996e-06, 8.417000000000147e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.542000000000272e-06, 8.499999999998092e-06, 8.485999999998523e-06, 8.514000000001132e-06, 8.471999999998953e-06, 8.500000000001562e-06, 8.471999999998953e-06, 8.499999999998092e-06, 8.471999999998953e-06, 8.514000000001132e-06, 8.513999999997662e-06, 8.485999999998523e-06, 8.487000000001466e-06, 8.485999999998523e-06, 8.457999999999383e-06, 8.485999999998523e-06, 8.514000000001132e-06, 8.472999999998426e-06, 8.471999999998953e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.472000000002422e-06, 8.486000000001992e-06, 8.472000000002422e-06, 8.486999999997996e-06, 8.499999999998092e-06, 8.513000000001658e-06, 8.471999999998953e-06, 8.472999999998426e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.458999999998856e-06, 8.486000000001992e-06, 8.528000000000702e-06, 8.444999999999286e-06, 8.500000000001562e-06, 8.473000000001896e-06, 8.485999999998523e-06, 8.513000000001658e-06, 8.485999999998523e-06, 8.514000000001132e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.683" endtime="20201115 21:59:56.684"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.678" endtime="20201115 21:59:56.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.687" endtime="20201115 21:59:56.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.691" endtime="20201115 21:59:56.710"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.689" endtime="20201115 21:59:56.711"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.686" endtime="20201115 21:59:56.711"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.316" endtime="20201115 21:59:56.711"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.735" endtime="20201115 21:59:56.712"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.735" endtime="20201115 21:59:56.712"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.714" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.723" endtime="20201115 21:59:56.743"></status>
</kw>
<msg timestamp="20201115 21:59:56.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.721" endtime="20201115 21:59:56.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.745" endtime="20201115 21:59:56.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.747" endtime="20201115 21:59:56.749"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.719" endtime="20201115 21:59:56.750"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.716" endtime="20201115 21:59:56.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.757" endtime="20201115 21:59:57.044"></status>
</kw>
<msg timestamp="20201115 21:59:57.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024684236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024692986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.756" endtime="20201115 21:59:57.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024684236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024692986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.048" endtime="20201115 21:59:57.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.056" endtime="20201115 21:59:57.058"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.753" endtime="20201115 21:59:57.058"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.751" endtime="20201115 21:59:57.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.063" level="INFO">${RESULT} = [{'time': 0.024692986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.024831639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:57.060" endtime="20201115 21:59:57.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.076" level="INFO">${OVERHEAD} = {'diff': [8.750000000001812e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.723000000002146e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.7229...</msg>
<status status="PASS" starttime="20201115 21:59:57.064" endtime="20201115 21:59:57.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.081" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:57.080" endtime="20201115 21:59:57.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.083" level="INFO">VALUE: [8.750000000001812e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.723000000002146e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.722999999998676e-06, 8.763999999997912e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.819999999999661e-06, 8.694999999999536e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.790999999997579e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.777000000001478e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.791000000001048e-06, 8.695000000003006e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.749999999994873e-06, 8.764000000001382e-06, 8.694999999996067e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.082" endtime="20201115 21:59:57.084"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.077" endtime="20201115 21:59:57.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.086" endtime="20201115 21:59:57.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.090" endtime="20201115 21:59:57.109"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.088" endtime="20201115 21:59:57.110"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.085" endtime="20201115 21:59:57.110"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.714" endtime="20201115 21:59:57.111"></status>
</kw>
<msg timestamp="20201115 21:59:57.111" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.120" endtime="20201115 21:59:57.140"></status>
</kw>
<msg timestamp="20201115 21:59:57.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.118" endtime="20201115 21:59:57.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.143" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.141" endtime="20201115 21:59:57.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.144" endtime="20201115 21:59:57.146"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.115" endtime="20201115 21:59:57.146"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.113" endtime="20201115 21:59:57.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.153" endtime="20201115 21:59:57.440"></status>
</kw>
<msg timestamp="20201115 21:59:57.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 21:59:57.151" endtime="20201115 21:59:57.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 21:59:57.444" endtime="20201115 21:59:57.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.452" endtime="20201115 21:59:57.454"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.149" endtime="20201115 21:59:57.454"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.147" endtime="20201115 21:59:57.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.459" level="INFO">${RESULT} = [{'time': 0.022330222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.022473583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:57.456" endtime="20201115 21:59:57.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.472" level="INFO">${OVERHEAD} = {'diff': [8.721999999999203e-06, 8.679999999997023e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.7360...</msg>
<status status="PASS" starttime="20201115 21:59:57.460" endtime="20201115 21:59:57.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.477" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:57.476" endtime="20201115 21:59:57.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.479" level="INFO">VALUE: [8.721999999999203e-06, 8.679999999997023e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.805000000000618e-06, 8.762999999998439e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.777999999997482e-06, 8.707999999999633e-06, 8.776999999998009e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.736999999998246e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.750000000001812e-06, 8.791999999997052e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.722999999998676e-06, 8.806000000000092e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.763999999997912e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.478" endtime="20201115 21:59:57.480"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.473" endtime="20201115 21:59:57.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.482" endtime="20201115 21:59:57.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.486" endtime="20201115 21:59:57.505"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.484" endtime="20201115 21:59:57.506"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.481" endtime="20201115 21:59:57.506"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.111" endtime="20201115 21:59:57.506"></status>
</kw>
<msg timestamp="20201115 21:59:57.506" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.516" endtime="20201115 21:59:57.538"></status>
</kw>
<msg timestamp="20201115 21:59:57.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.514" endtime="20201115 21:59:57.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.541" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.539" endtime="20201115 21:59:57.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.542" endtime="20201115 21:59:57.544"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.511" endtime="20201115 21:59:57.544"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.509" endtime="20201115 21:59:57.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.552" endtime="20201115 21:59:57.840"></status>
</kw>
<msg timestamp="20201115 21:59:57.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023594486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023603208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.550" endtime="20201115 21:59:57.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023594486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023603208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.844" endtime="20201115 21:59:57.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.852" endtime="20201115 21:59:57.853"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.547" endtime="20201115 21:59:57.854"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.545" endtime="20201115 21:59:57.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.858" level="INFO">${RESULT} = [{'time': 0.023603208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.023747861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:57.855" endtime="20201115 21:59:57.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.872" level="INFO">${OVERHEAD} = {'diff': [8.721999999999203e-06, 8.763999999997912e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.806000000000092e-06, 8.735999999998773e-06, 8.7219...</msg>
<status status="PASS" starttime="20201115 21:59:57.859" endtime="20201115 21:59:57.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.876" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:57.875" endtime="20201115 21:59:57.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.879" level="INFO">VALUE: [8.721999999999203e-06, 8.763999999997912e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.806000000000092e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.819999999999661e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.791999999997052e-06, 8.708999999999106e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.877" endtime="20201115 21:59:57.879"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.873" endtime="20201115 21:59:57.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.882" endtime="20201115 21:59:57.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.885" endtime="20201115 21:59:57.904"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.884" endtime="20201115 21:59:57.905"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.880" endtime="20201115 21:59:57.905"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.507" endtime="20201115 21:59:57.906"></status>
</kw>
<msg timestamp="20201115 21:59:57.906" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.915" endtime="20201115 21:59:57.934"></status>
</kw>
<msg timestamp="20201115 21:59:57.935" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.914" endtime="20201115 21:59:57.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.937" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.936" endtime="20201115 21:59:57.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.938" endtime="20201115 21:59:57.940"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.911" endtime="20201115 21:59:57.940"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.909" endtime="20201115 21:59:57.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.947" endtime="20201115 21:59:58.234"></status>
</kw>
<msg timestamp="20201115 21:59:58.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020971597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020980319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.946" endtime="20201115 21:59:58.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020971597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020980319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.238" endtime="20201115 21:59:58.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.246" endtime="20201115 21:59:58.248"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.943" endtime="20201115 21:59:58.248"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.941" endtime="20201115 21:59:58.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.253" level="INFO">${RESULT} = [{'time': 0.020980319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.021118694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:58.249" endtime="20201115 21:59:58.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.266" level="INFO">${OVERHEAD} = {'diff': [8.721999999999203e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.7219...</msg>
<status status="PASS" starttime="20201115 21:59:58.254" endtime="20201115 21:59:58.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.271" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:58.270" endtime="20201115 21:59:58.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.273" level="INFO">VALUE: [8.721999999999203e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.722999999998676e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.653000000000827e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.722000000002672e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.721999999999203e-06, 8.777000000001478e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.792000000000522e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.272" endtime="20201115 21:59:58.274"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.267" endtime="20201115 21:59:58.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.276" endtime="20201115 21:59:58.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.280" endtime="20201115 21:59:58.300"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.279" endtime="20201115 21:59:58.300"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.275" endtime="20201115 21:59:58.301"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.907" endtime="20201115 21:59:58.301"></status>
</kw>
<msg timestamp="20201115 21:59:58.301" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.310" endtime="20201115 21:59:58.336"></status>
</kw>
<msg timestamp="20201115 21:59:58.336" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.308" endtime="20201115 21:59:58.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.339" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.337" endtime="20201115 21:59:58.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.340" endtime="20201115 21:59:58.341"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.306" endtime="20201115 21:59:58.342"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.304" endtime="20201115 21:59:58.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.351" endtime="20201115 21:59:58.638"></status>
</kw>
<msg timestamp="20201115 21:59:58.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.349" endtime="20201115 21:59:58.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.642" endtime="20201115 21:59:58.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.650" endtime="20201115 21:59:58.652"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.345" endtime="20201115 21:59:58.652"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.343" endtime="20201115 21:59:58.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.657" level="INFO">${RESULT} = [{'time': 0.022651653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.022792181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:58.654" endtime="20201115 21:59:58.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.670" level="INFO">${OVERHEAD} = {'diff': [8.750000000001812e-06, 8.737000000001716e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.7770...</msg>
<status status="PASS" starttime="20201115 21:59:58.658" endtime="20201115 21:59:58.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.675" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:58.674" endtime="20201115 21:59:58.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.677" level="INFO">VALUE: [8.750000000001812e-06, 8.737000000001716e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.736999999998246e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.723000000002146e-06, 8.735999999998773e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.708999999999106e-06, 8.791999999997052e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.749999999998342e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.676" endtime="20201115 21:59:58.678"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.671" endtime="20201115 21:59:58.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.681" endtime="20201115 21:59:58.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.684" endtime="20201115 21:59:58.704"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.683" endtime="20201115 21:59:58.704"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.679" endtime="20201115 21:59:58.705"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.302" endtime="20201115 21:59:58.705"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.713" endtime="20201115 21:59:58.705"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.712" endtime="20201115 21:59:58.705"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.708" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.716" endtime="20201115 21:59:58.737"></status>
</kw>
<msg timestamp="20201115 21:59:58.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.715" endtime="20201115 21:59:58.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.740" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.739" endtime="20201115 21:59:58.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.741" endtime="20201115 21:59:58.743"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.712" endtime="20201115 21:59:58.744"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.710" endtime="20201115 21:59:58.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.750" endtime="20201115 21:59:59.037"></status>
</kw>
<msg timestamp="20201115 21:59:59.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025558264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025567292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.749" endtime="20201115 21:59:59.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025558264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025567292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.041" endtime="20201115 21:59:59.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.049" endtime="20201115 21:59:59.051"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.746" endtime="20201115 21:59:59.051"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.745" endtime="20201115 21:59:59.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.056" level="INFO">${RESULT} = [{'time': 0.025567292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.025740069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:59.052" endtime="20201115 21:59:59.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.069" level="INFO">${OVERHEAD} = {'diff': [9.027999999997732e-06, 9.027000000001728e-06, 8.999999999998592e-06, 9.027000000001728e-06, 8.985999999999023e-06, 9.042000000000772e-06, 8.999999999998592e-06, 8.986999999998496e-06, 8.9719...</msg>
<status status="PASS" starttime="20201115 21:59:59.057" endtime="20201115 21:59:59.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.074" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 21:59:59.073" endtime="20201115 21:59:59.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.077" level="INFO">VALUE: [9.027999999997732e-06, 9.027000000001728e-06, 8.999999999998592e-06, 9.027000000001728e-06, 8.985999999999023e-06, 9.042000000000772e-06, 8.999999999998592e-06, 8.986999999998496e-06, 8.971999999999453e-06, 8.999999999998592e-06, 8.971999999999453e-06, 8.985999999999023e-06, 9.042000000000772e-06, 8.999999999998592e-06, 8.957999999999883e-06, 8.986999999998496e-06, 8.958000000003352e-06, 8.958999999999356e-06, 8.986000000002492e-06, 8.986000000002492e-06, 8.944000000000313e-06, 8.958999999999356e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.987000000001966e-06, 8.999999999998592e-06, 8.972000000002922e-06, 8.958999999999356e-06, 8.931000000000217e-06, 8.931000000000217e-06, 8.931000000000217e-06, 9.028000000001202e-06, 8.917000000000647e-06, 9.000000000002062e-06, 8.972000000002922e-06, 9.000000000002062e-06, 8.972000000002922e-06, 9.028000000001202e-06, 8.986000000002492e-06, 8.986000000002492e-06, 8.972999999995457e-06, 8.985999999995553e-06, 9.000000000002062e-06, 8.985999999995553e-06, 8.958000000003352e-06, 8.973000000002396e-06, 9.042000000000772e-06, 8.986000000002492e-06, 8.971999999995983e-06, 8.973000000002396e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.076" endtime="20201115 21:59:59.078"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.071" endtime="20201115 21:59:59.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.081" endtime="20201115 21:59:59.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.084" endtime="20201115 21:59:59.103"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.082" endtime="20201115 21:59:59.104"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.079" endtime="20201115 21:59:59.104"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.708" endtime="20201115 21:59:59.105"></status>
</kw>
<msg timestamp="20201115 21:59:59.105" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.114" endtime="20201115 21:59:59.135"></status>
</kw>
<msg timestamp="20201115 21:59:59.136" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.112" endtime="20201115 21:59:59.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.137" endtime="20201115 21:59:59.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.139" endtime="20201115 21:59:59.141"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.110" endtime="20201115 21:59:59.141"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.107" endtime="20201115 21:59:59.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.148" endtime="20201115 21:59:59.436"></status>
</kw>
<msg timestamp="20201115 21:59:59.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022923958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.147" endtime="20201115 21:59:59.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022923958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022932986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.440" endtime="20201115 21:59:59.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.448" endtime="20201115 21:59:59.449"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.144" endtime="20201115 21:59:59.450"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.142" endtime="20201115 21:59:59.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.454" level="INFO">${RESULT} = [{'time': 0.022932986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.023100722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:59.451" endtime="20201115 21:59:59.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.468" level="INFO">${OVERHEAD} = {'diff': [9.027999999997732e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.971999999999453e-06, 9.013999999998162e-06, 8.999999999998592e-06, 8.944999999999786e-06, 9.0140...</msg>
<status status="PASS" starttime="20201115 21:59:59.455" endtime="20201115 21:59:59.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.473" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 21:59:59.472" endtime="20201115 21:59:59.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.476" level="INFO">VALUE: [9.027999999997732e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.971999999999453e-06, 9.013999999998162e-06, 8.999999999998592e-06, 8.944999999999786e-06, 9.014000000001632e-06, 8.973000000002396e-06, 9.014000000001632e-06, 8.972999999998926e-06, 8.971999999999453e-06, 9.000000000002062e-06, 9.026999999998259e-06, 9.000000000002062e-06, 8.931000000000217e-06, 8.999999999998592e-06, 8.986000000002492e-06, 9.028000000001202e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.999999999998592e-06, 9.014000000001632e-06, 8.931000000000217e-06, 8.999999999998592e-06, 8.999999999998592e-06, 9.000000000002062e-06, 8.985999999999023e-06, 9.013000000002158e-06, 8.999999999998592e-06, 8.971999999999453e-06, 8.999999999998592e-06, 9.000000000002062e-06, 8.985999999999023e-06, 8.972000000002922e-06, 8.986000000002492e-06, 8.986999999998496e-06, 8.985999999999023e-06, 8.931000000000217e-06, 9.028000000001202e-06, 8.986000000002492e-06, 8.930000000000743e-06, 9.014000000001632e-06, 8.999999999998592e-06, 8.985999999999023e-06, 9.014000000001632e-06, 8.999999999998592e-06, 8.972000000002922e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.474" endtime="20201115 21:59:59.476"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.469" endtime="20201115 21:59:59.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.479" endtime="20201115 21:59:59.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.482" endtime="20201115 21:59:59.501"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.481" endtime="20201115 21:59:59.502"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.477" endtime="20201115 21:59:59.502"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.105" endtime="20201115 21:59:59.503"></status>
</kw>
<msg timestamp="20201115 21:59:59.503" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.512" endtime="20201115 21:59:59.532"></status>
</kw>
<msg timestamp="20201115 21:59:59.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.510" endtime="20201115 21:59:59.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.533" endtime="20201115 21:59:59.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.536" endtime="20201115 21:59:59.537"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.508" endtime="20201115 21:59:59.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.505" endtime="20201115 21:59:59.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.545" endtime="20201115 21:59:59.831"></status>
</kw>
<msg timestamp="20201115 21:59:59.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.543" endtime="20201115 21:59:59.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.835" endtime="20201115 21:59:59.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.843" endtime="20201115 21:59:59.845"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.541" endtime="20201115 21:59:59.845"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.539" endtime="20201115 21:59:59.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.850" level="INFO">${RESULT} = [{'time': 0.021627542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.021795653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:59.847" endtime="20201115 21:59:59.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.945" level="INFO">${OVERHEAD} = {'diff': [8.999999999998592e-06, 9.000000000002062e-06, 8.999999999998592e-06, 8.973000000002396e-06, 8.973000000002396e-06, 9.028000000001202e-06, 8.902999999997607e-06, 9.042000000000772e-06, 9.0000...</msg>
<status status="PASS" starttime="20201115 21:59:59.932" endtime="20201115 21:59:59.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.949" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 21:59:59.948" endtime="20201115 21:59:59.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.952" level="INFO">VALUE: [8.999999999998592e-06, 9.000000000002062e-06, 8.999999999998592e-06, 8.973000000002396e-06, 8.973000000002396e-06, 9.028000000001202e-06, 8.902999999997607e-06, 9.042000000000772e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.999999999998592e-06, 8.999999999998592e-06, 8.985999999999023e-06, 8.999999999998592e-06, 8.985999999999023e-06, 8.987000000001966e-06, 8.999999999998592e-06, 9.000000000002062e-06, 8.985999999999023e-06, 8.986000000002492e-06, 8.999999999998592e-06, 8.944999999999786e-06, 8.986000000002492e-06, 9.028000000001202e-06, 9.014000000001632e-06, 8.999999999998592e-06, 8.930000000000743e-06, 8.972999999998926e-06, 8.999999999998592e-06, 9.056000000000342e-06, 8.986000000002492e-06, 9.000000000002062e-06, 8.944999999999786e-06, 8.972999999998926e-06, 9.013999999998162e-06, 8.957999999999883e-06, 9.014000000001632e-06, 8.973000000002396e-06, 8.985999999999023e-06, 8.986000000002492e-06, 9.000000000002062e-06, 8.971999999999453e-06, 8.986000000002492e-06, 9.000000000002062e-06, 9.014000000001632e-06, 8.985999999999023e-06, 9.014000000001632e-06, 8.999999999998592e-06, 9.055000000000868e-06, 9.000000000002062e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.950" endtime="20201115 21:59:59.952"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.946" endtime="20201115 21:59:59.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.955" endtime="20201115 21:59:59.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.958" endtime="20201115 21:59:59.978"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.957" endtime="20201115 21:59:59.978"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.953" endtime="20201115 21:59:59.979"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.503" endtime="20201115 21:59:59.979"></status>
</kw>
<msg timestamp="20201115 21:59:59.979" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.988" endtime="20201115 22:00:00.010"></status>
</kw>
<msg timestamp="20201115 22:00:00.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.986" endtime="20201115 22:00:00.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.012" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.011" endtime="20201115 22:00:00.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.013" endtime="20201115 22:00:00.015"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.984" endtime="20201115 22:00:00.016"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.982" endtime="20201115 22:00:00.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.022" endtime="20201115 22:00:00.309"></status>
</kw>
<msg timestamp="20201115 22:00:00.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.021" endtime="20201115 22:00:00.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.314" endtime="20201115 22:00:00.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.322" endtime="20201115 22:00:00.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.018" endtime="20201115 22:00:00.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.017" endtime="20201115 22:00:00.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.329" level="INFO">${RESULT} = [{'time': 0.022645333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.022814708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:00.325" endtime="20201115 22:00:00.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.342" level="INFO">${OVERHEAD} = {'diff': [8.971999999999453e-06, 8.971999999999453e-06, 8.986000000002492e-06, 8.999999999998592e-06, 9.013999999998162e-06, 9.013999999998162e-06, 8.999999999998592e-06, 8.999999999998592e-06, 9.0420...</msg>
<status status="PASS" starttime="20201115 22:00:00.330" endtime="20201115 22:00:00.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.346" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:00.345" endtime="20201115 22:00:00.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.349" level="INFO">VALUE: [8.971999999999453e-06, 8.971999999999453e-06, 8.986000000002492e-06, 8.999999999998592e-06, 9.013999999998162e-06, 9.013999999998162e-06, 8.999999999998592e-06, 8.999999999998592e-06, 9.042000000000772e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.888999999998037e-06, 8.985999999999023e-06, 8.958999999999356e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.028000000001202e-06, 8.972000000002922e-06, 8.986000000002492e-06, 8.971999999999453e-06, 8.903000000001077e-06, 9.041999999997302e-06, 8.986000000002492e-06, 8.916000000001173e-06, 8.999999999998592e-06, 8.999999999998592e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.972000000002922e-06, 8.986000000002492e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.985999999999023e-06, 8.986000000002492e-06, 8.986000000002492e-06, 8.971999999999453e-06, 8.999999999998592e-06, 9.014000000001632e-06, 8.985999999999023e-06, 8.957999999999883e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.957999999999883e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.348" endtime="20201115 22:00:00.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.343" endtime="20201115 22:00:00.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.352" endtime="20201115 22:00:00.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.355" endtime="20201115 22:00:00.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.354" endtime="20201115 22:00:00.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.351" endtime="20201115 22:00:00.376"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.980" endtime="20201115 22:00:00.376"></status>
</kw>
<msg timestamp="20201115 22:00:00.376" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.385" endtime="20201115 22:00:00.410"></status>
</kw>
<msg timestamp="20201115 22:00:00.411" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.384" endtime="20201115 22:00:00.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.413" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.412" endtime="20201115 22:00:00.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.414" endtime="20201115 22:00:00.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.381" endtime="20201115 22:00:00.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.379" endtime="20201115 22:00:00.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.423" endtime="20201115 22:00:00.724"></status>
</kw>
<msg timestamp="20201115 22:00:00.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.422" endtime="20201115 22:00:00.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.728" endtime="20201115 22:00:00.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.736" endtime="20201115 22:00:00.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.419" endtime="20201115 22:00:00.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.418" endtime="20201115 22:00:00.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.743" level="INFO">${RESULT} = [{'time': 0.022423708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.022592014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:00.740" endtime="20201115 22:00:00.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.756" level="INFO">${OVERHEAD} = {'diff': [8.985999999999023e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.959000000002826e-06, 8.985999999999023e-06, 8.986999999998496e-06, 9.013999999998162e-06, 8.985999999999023e-06, 8.9729...</msg>
<status status="PASS" starttime="20201115 22:00:00.744" endtime="20201115 22:00:00.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.761" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:00.760" endtime="20201115 22:00:00.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.763" level="INFO">VALUE: [8.985999999999023e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.959000000002826e-06, 8.985999999999023e-06, 8.986999999998496e-06, 9.013999999998162e-06, 8.985999999999023e-06, 8.972999999998926e-06, 9.055000000000868e-06, 8.944000000000313e-06, 8.986000000002492e-06, 8.999999999998592e-06, 9.042000000000772e-06, 8.999999999998592e-06, 8.999999999998592e-06, 8.902999999997607e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.985999999999023e-06, 9.014000000001632e-06, 8.973000000002396e-06, 8.986000000002492e-06, 9.028000000001202e-06, 9.014000000001632e-06, 8.999999999998592e-06, 9.027999999997732e-06, 8.999999999998592e-06, 8.986000000002492e-06, 8.931000000000217e-06, 8.971999999999453e-06, 8.972999999998926e-06, 8.972999999998926e-06, 8.985999999999023e-06, 8.986000000002492e-06, 8.971999999999453e-06, 8.930000000000743e-06, 9.041999999997302e-06, 8.957999999999883e-06, 9.000000000002062e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.971999999999453e-06, 9.013999999998162e-06, 8.971999999999453e-06, 8.972999999998926e-06, 8.999999999998592e-06, 9.028000000001202e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.762" endtime="20201115 22:00:00.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.757" endtime="20201115 22:00:00.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.766" endtime="20201115 22:00:00.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.770" endtime="20201115 22:00:00.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.768" endtime="20201115 22:00:00.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.765" endtime="20201115 22:00:00.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.377" endtime="20201115 22:00:00.791"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.707" endtime="20201115 22:00:00.791"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.706" endtime="20201115 22:00:00.791"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.793" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.802" endtime="20201115 22:00:00.823"></status>
</kw>
<msg timestamp="20201115 22:00:00.823" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.800" endtime="20201115 22:00:00.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.824" endtime="20201115 22:00:00.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.827" endtime="20201115 22:00:00.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.798" endtime="20201115 22:00:00.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.796" endtime="20201115 22:00:00.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.836" endtime="20201115 22:00:01.123"></status>
</kw>
<msg timestamp="20201115 22:00:01.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02491975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024929042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:00.834" endtime="20201115 22:00:01.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02491975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024929042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:01.127" endtime="20201115 22:00:01.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.135" endtime="20201115 22:00:01.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.832" endtime="20201115 22:00:01.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.830" endtime="20201115 22:00:01.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.142" level="INFO">${RESULT} = [{'time': 0.024929042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.291999999997552e-06, 'source_diff': 9.291999999997552e-06}, {'time': 0.025128153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.139" endtime="20201115 22:00:01.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.155" level="INFO">${OVERHEAD} = {'diff': [9.291999999997552e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.263000000002408e-06, 9.249999999998842e-06, 9.306000000000592e-06, 9.235999999999273e-06, 9.2359...</msg>
<status status="PASS" starttime="20201115 22:00:01.143" endtime="20201115 22:00:01.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.160" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:01.159" endtime="20201115 22:00:01.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.162" level="INFO">VALUE: [9.291999999997552e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.263000000002408e-06, 9.249999999998842e-06, 9.306000000000592e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.263000000002408e-06, 9.235999999999273e-06, 9.151999999998384e-06, 9.263999999998412e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.263999999998412e-06, 9.235999999999273e-06, 9.263999999998412e-06, 9.236000000002742e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.291999999997552e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.249999999995373e-06, 9.263000000002408e-06, 9.250000000002312e-06, 9.291000000001548e-06, 9.264000000001882e-06, 9.236000000002742e-06, 9.264000000001882e-06, 9.263999999994943e-06, 9.264000000001882e-06, 9.305000000001118e-06, 9.277000000001978e-06, 9.263999999994943e-06, 9.235999999995803e-06, 9.250000000002312e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.222000000003172e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.161" endtime="20201115 22:00:01.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.156" endtime="20201115 22:00:01.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.165" endtime="20201115 22:00:01.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.169" endtime="20201115 22:00:01.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.167" endtime="20201115 22:00:01.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.164" endtime="20201115 22:00:01.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.794" endtime="20201115 22:00:01.189"></status>
</kw>
<msg timestamp="20201115 22:00:01.190" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.199" endtime="20201115 22:00:01.220"></status>
</kw>
<msg timestamp="20201115 22:00:01.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.197" endtime="20201115 22:00:01.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.224" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.222" endtime="20201115 22:00:01.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.225" endtime="20201115 22:00:01.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.194" endtime="20201115 22:00:01.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.192" endtime="20201115 22:00:01.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.234" endtime="20201115 22:00:01.522"></status>
</kw>
<msg timestamp="20201115 22:00:01.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.232" endtime="20201115 22:00:01.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.526" endtime="20201115 22:00:01.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.534" endtime="20201115 22:00:01.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.230" endtime="20201115 22:00:01.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.228" endtime="20201115 22:00:01.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.541" level="INFO">${RESULT} = [{'time': 0.022926431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.023128167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.538" endtime="20201115 22:00:01.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.555" level="INFO">${OVERHEAD} = {'diff': [9.264000000001882e-06, 9.236000000002742e-06, 9.166000000001423e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.264000000001882e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.2909...</msg>
<status status="PASS" starttime="20201115 22:00:01.542" endtime="20201115 22:00:01.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.559" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:01.558" endtime="20201115 22:00:01.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.562" level="INFO">VALUE: [9.264000000001882e-06, 9.236000000002742e-06, 9.166000000001423e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.264000000001882e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.290999999998079e-06, 9.195000000000036e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.235999999999273e-06, 9.222000000003172e-06, 9.278000000001452e-06, 9.264000000001882e-06, 9.263999999998412e-06, 9.221999999999703e-06, 9.250000000002312e-06, 9.249999999998842e-06, 9.249999999998842e-06, 9.277999999997982e-06, 9.167000000000897e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.264000000001882e-06, 9.236999999998746e-06, 9.180000000000993e-06, 9.195000000000036e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.250000000002312e-06, 9.195000000003506e-06, 9.236000000002742e-06, 9.278000000001452e-06, 9.249999999995373e-06, 9.236000000002742e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.264000000001882e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.560" endtime="20201115 22:00:01.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.555" endtime="20201115 22:00:01.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.565" endtime="20201115 22:00:01.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.568" endtime="20201115 22:00:01.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.567" endtime="20201115 22:00:01.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.563" endtime="20201115 22:00:01.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.190" endtime="20201115 22:00:01.589"></status>
</kw>
<msg timestamp="20201115 22:00:01.589" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.599" endtime="20201115 22:00:01.622"></status>
</kw>
<msg timestamp="20201115 22:00:01.623" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.597" endtime="20201115 22:00:01.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.624" endtime="20201115 22:00:01.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.626" endtime="20201115 22:00:01.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.594" endtime="20201115 22:00:01.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.592" endtime="20201115 22:00:01.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.636" endtime="20201115 22:00:01.922"></status>
</kw>
<msg timestamp="20201115 22:00:01.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025317153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025326389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.634" endtime="20201115 22:00:01.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025317153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025326389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.926" endtime="20201115 22:00:01.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.934" endtime="20201115 22:00:01.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.632" endtime="20201115 22:00:01.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.630" endtime="20201115 22:00:01.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.941" level="INFO">${RESULT} = [{'time': 0.025326389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.025524264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.938" endtime="20201115 22:00:01.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.955" level="INFO">${OVERHEAD} = {'diff': [9.236000000002742e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.1669...</msg>
<status status="PASS" starttime="20201115 22:00:01.942" endtime="20201115 22:00:01.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.959" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:01.958" endtime="20201115 22:00:01.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.962" level="INFO">VALUE: [9.236000000002742e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.166999999997427e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.193999999997093e-06, 9.250000000002312e-06, 9.221999999999703e-06, 9.250000000002312e-06, 9.263999999998412e-06, 9.235999999999273e-06, 9.151999999998384e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.208999999999606e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.291999999997552e-06, 9.221999999999703e-06, 9.264000000001882e-06, 9.306000000000592e-06, 9.304999999994179e-06, 9.250000000002312e-06, 9.249999999995373e-06, 9.264000000001882e-06, 9.277000000001978e-06, 9.235999999995803e-06, 9.292000000001022e-06, 9.221999999996233e-06, 9.236000000002742e-06, 9.221999999996233e-06, 9.26299999999547e-06, 9.194999999996567e-06, 9.250000000002312e-06, 9.236000000002742e-06, 9.194000000004032e-06, 9.263999999994943e-06, 9.263999999994943e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.960" endtime="20201115 22:00:01.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.955" endtime="20201115 22:00:01.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.965" endtime="20201115 22:00:01.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.968" endtime="20201115 22:00:01.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.967" endtime="20201115 22:00:01.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.963" endtime="20201115 22:00:01.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.590" endtime="20201115 22:00:01.989"></status>
</kw>
<msg timestamp="20201115 22:00:01.989" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.999" endtime="20201115 22:00:02.018"></status>
</kw>
<msg timestamp="20201115 22:00:02.019" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.997" endtime="20201115 22:00:02.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.020" endtime="20201115 22:00:02.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.022" endtime="20201115 22:00:02.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.994" endtime="20201115 22:00:02.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.992" endtime="20201115 22:00:02.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.031" endtime="20201115 22:00:02.317"></status>
</kw>
<msg timestamp="20201115 22:00:02.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.030" endtime="20201115 22:00:02.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.322" endtime="20201115 22:00:02.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.330" endtime="20201115 22:00:02.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.027" endtime="20201115 22:00:02.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.025" endtime="20201115 22:00:02.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.336" level="INFO">${RESULT} = [{'time': 0.022306139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.022503194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:02.333" endtime="20201115 22:00:02.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.350" level="INFO">${OVERHEAD} = {'diff': [9.235999999999273e-06, 9.235999999999273e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.2500...</msg>
<status status="PASS" starttime="20201115 22:00:02.337" endtime="20201115 22:00:02.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.354" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:02.353" endtime="20201115 22:00:02.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.357" level="INFO">VALUE: [9.235999999999273e-06, 9.235999999999273e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.250000000002312e-06, 9.221999999999703e-06, 9.236999999998746e-06, 9.221999999999703e-06, 9.209000000003076e-06, 9.222999999999176e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.236999999998746e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.236999999998746e-06, 9.277999999997982e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.180000000000993e-06, 9.221999999999703e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.208000000000133e-06, 9.250000000002312e-06, 9.276999999998509e-06, 9.263000000002408e-06, 9.249999999998842e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.263999999998412e-06, 9.208999999999606e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.180000000000993e-06, 9.306000000000592e-06, 9.235999999999273e-06, 9.208000000003602e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.235999999995803e-06, 9.235999999995803e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.355" endtime="20201115 22:00:02.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.351" endtime="20201115 22:00:02.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.360" endtime="20201115 22:00:02.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.364" endtime="20201115 22:00:02.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.362" endtime="20201115 22:00:02.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.358" endtime="20201115 22:00:02.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.990" endtime="20201115 22:00:02.385"></status>
</kw>
<msg timestamp="20201115 22:00:02.385" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.394" endtime="20201115 22:00:02.416"></status>
</kw>
<msg timestamp="20201115 22:00:02.417" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.392" endtime="20201115 22:00:02.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.419" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.418" endtime="20201115 22:00:02.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.420" endtime="20201115 22:00:02.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.390" endtime="20201115 22:00:02.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.388" endtime="20201115 22:00:02.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.429" endtime="20201115 22:00:02.717"></status>
</kw>
<msg timestamp="20201115 22:00:02.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023503625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.428" endtime="20201115 22:00:02.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023503625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.721" endtime="20201115 22:00:02.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.730" endtime="20201115 22:00:02.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.425" endtime="20201115 22:00:02.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.423" endtime="20201115 22:00:02.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.736" level="INFO">${RESULT} = [{'time': 0.023503625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.023705389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:02.733" endtime="20201115 22:00:02.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.750" level="INFO">${OVERHEAD} = {'diff': [9.181000000000467e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.264000000001882e-06, 9.278000000001452e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.2769...</msg>
<status status="PASS" starttime="20201115 22:00:02.737" endtime="20201115 22:00:02.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.754" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:02.753" endtime="20201115 22:00:02.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.757" level="INFO">VALUE: [9.181000000000467e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.264000000001882e-06, 9.278000000001452e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.276999999998509e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.263999999998412e-06, 9.235999999999273e-06, 9.277999999997982e-06, 9.194000000000563e-06, 9.221999999999703e-06, 9.277000000001978e-06, 9.249999999998842e-06, 9.236000000002742e-06, 9.249999999998842e-06, 9.180999999996997e-06, 9.236000000002742e-06, 9.249999999998842e-06, 9.263999999998412e-06, 9.235999999999273e-06, 9.263999999998412e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.276999999998509e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.263999999998412e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.277999999997982e-06, 9.221999999999703e-06, 9.236000000002742e-06, 9.222000000003172e-06, 9.221999999996233e-06, 9.235999999995803e-06, 9.207999999996663e-06, 9.250000000002312e-06, 9.209000000003076e-06, 9.236000000002742e-06, 9.26299999999547e-06, 9.236000000002742e-06, 9.249999999995373e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.755" endtime="20201115 22:00:02.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.751" endtime="20201115 22:00:02.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.760" endtime="20201115 22:00:02.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.764" endtime="20201115 22:00:02.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.762" endtime="20201115 22:00:02.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.759" endtime="20201115 22:00:02.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.385" endtime="20201115 22:00:02.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.792" endtime="20201115 22:00:02.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.791" endtime="20201115 22:00:02.785"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.787" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.796" endtime="20201115 22:00:02.822"></status>
</kw>
<msg timestamp="20201115 22:00:02.823" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.794" endtime="20201115 22:00:02.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.824" endtime="20201115 22:00:02.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.826" endtime="20201115 22:00:02.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.792" endtime="20201115 22:00:02.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.790" endtime="20201115 22:00:02.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.835" endtime="20201115 22:00:03.120"></status>
</kw>
<msg timestamp="20201115 22:00:03.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025489792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.834" endtime="20201115 22:00:03.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025489792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.124" endtime="20201115 22:00:03.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.132" endtime="20201115 22:00:03.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.831" endtime="20201115 22:00:03.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.830" endtime="20201115 22:00:03.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.139" level="INFO">${RESULT} = [{'time': 0.025489792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.472999999999426e-06, 'source_diff': 9.472999999999426e-06}, {'time': 0.025719181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.136" endtime="20201115 22:00:03.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.153" level="INFO">${OVERHEAD} = {'diff': [9.472999999999426e-06, 9.486999999998996e-06, 9.472000000003422e-06, 9.445000000000286e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.458000000000383e-06, 9.4859...</msg>
<status status="PASS" starttime="20201115 22:00:03.140" endtime="20201115 22:00:03.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.157" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:03.156" endtime="20201115 22:00:03.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.160" level="INFO">VALUE: [9.472999999999426e-06, 9.486999999998996e-06, 9.472000000003422e-06, 9.445000000000286e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.458000000000383e-06, 9.485999999999523e-06, 9.485999999999523e-06, 9.527999999998232e-06, 9.500000000002562e-06, 9.513999999998662e-06, 9.486999999998996e-06, 9.485999999999523e-06, 9.458000000000383e-06, 9.486999999998996e-06, 9.527999999998232e-06, 9.471999999999953e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.500000000002562e-06, 9.486000000002992e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.486000000002992e-06, 9.499999999995623e-06, 9.500000000002562e-06, 9.513000000002658e-06, 9.514000000002132e-06, 9.471999999996483e-06, 9.471999999996483e-06, 9.486000000002992e-06, 9.471999999996483e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.513999999995193e-06, 9.486000000002992e-06, 9.471999999996483e-06, 9.499999999995623e-06, 9.487000000002466e-06, 9.513999999995193e-06, 9.514000000002132e-06, 9.486000000002992e-06, 9.458000000003852e-06, 9.485999999996053e-06, 9.500000000002562e-06, 9.513999999995193e-06, 9.486000000002992e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.159" endtime="20201115 22:00:03.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.154" endtime="20201115 22:00:03.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.164" endtime="20201115 22:00:03.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.167" endtime="20201115 22:00:03.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.165" endtime="20201115 22:00:03.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.162" endtime="20201115 22:00:03.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.788" endtime="20201115 22:00:03.188"></status>
</kw>
<msg timestamp="20201115 22:00:03.188" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.197" endtime="20201115 22:00:03.224"></status>
</kw>
<msg timestamp="20201115 22:00:03.225" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.195" endtime="20201115 22:00:03.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.227" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.226" endtime="20201115 22:00:03.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.228" endtime="20201115 22:00:03.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.193" endtime="20201115 22:00:03.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.190" endtime="20201115 22:00:03.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.237" endtime="20201115 22:00:03.523"></status>
</kw>
<msg timestamp="20201115 22:00:03.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024325917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024335389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.236" endtime="20201115 22:00:03.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024325917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024335389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.527" endtime="20201115 22:00:03.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.535" endtime="20201115 22:00:03.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.233" endtime="20201115 22:00:03.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.231" endtime="20201115 22:00:03.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.542" level="INFO">${RESULT} = [{'time': 0.024335389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.024563069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.539" endtime="20201115 22:00:03.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.556" level="INFO">${OVERHEAD} = {'diff': [9.471999999999953e-06, 9.485999999999523e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.471999999999953e-06, 9.430000000001243e-06, 9.499999999999093e-06, 9.458999999999856e-06, 9.4859...</msg>
<status status="PASS" starttime="20201115 22:00:03.543" endtime="20201115 22:00:03.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.561" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:03.560" endtime="20201115 22:00:03.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.563" level="INFO">VALUE: [9.471999999999953e-06, 9.485999999999523e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.471999999999953e-06, 9.430000000001243e-06, 9.499999999999093e-06, 9.458999999999856e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.471999999999953e-06, 9.458999999999856e-06, 9.485999999999523e-06, 9.387999999999064e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.458999999999856e-06, 9.458000000000383e-06, 9.499999999999093e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.471999999999953e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.458000000000383e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.485999999996053e-06, 9.445000000003756e-06, 9.485999999996053e-06, 9.458000000003852e-06, 9.486000000002992e-06, 9.485999999996053e-06, 9.472000000003422e-06, 9.513000000002658e-06, 9.487000000002466e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.458999999996387e-06, 9.485999999996053e-06, 9.51299999999572e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.472000000003422e-06, 9.499999999995623e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.562" endtime="20201115 22:00:03.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.557" endtime="20201115 22:00:03.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.566" endtime="20201115 22:00:03.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.570" endtime="20201115 22:00:03.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.568" endtime="20201115 22:00:03.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.565" endtime="20201115 22:00:03.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.188" endtime="20201115 22:00:03.591"></status>
</kw>
<msg timestamp="20201115 22:00:03.591" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.600" endtime="20201115 22:00:03.626"></status>
</kw>
<msg timestamp="20201115 22:00:03.626" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.598" endtime="20201115 22:00:03.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.627" endtime="20201115 22:00:03.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.630" endtime="20201115 22:00:03.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.595" endtime="20201115 22:00:03.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.593" endtime="20201115 22:00:03.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.639" endtime="20201115 22:00:03.925"></status>
</kw>
<msg timestamp="20201115 22:00:03.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023381431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023390944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.637" endtime="20201115 22:00:03.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023381431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023390944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.929" endtime="20201115 22:00:03.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.937" endtime="20201115 22:00:03.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.635" endtime="20201115 22:00:03.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.633" endtime="20201115 22:00:03.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.944" level="INFO">${RESULT} = [{'time': 0.023390944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.512999999999189e-06, 'source_diff': 9.512999999999189e-06}, {'time': 0.023620236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.940" endtime="20201115 22:00:03.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.958" level="INFO">${OVERHEAD} = {'diff': [9.512999999999189e-06, 9.499999999999093e-06, 9.514000000002132e-06, 9.471999999999953e-06, 9.499999999999093e-06, 9.471999999999953e-06, 9.443999999997343e-06, 9.458000000000383e-06, 9.4859...</msg>
<status status="PASS" starttime="20201115 22:00:03.945" endtime="20201115 22:00:03.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.962" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:03.961" endtime="20201115 22:00:03.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.965" level="INFO">VALUE: [9.512999999999189e-06, 9.499999999999093e-06, 9.514000000002132e-06, 9.471999999999953e-06, 9.499999999999093e-06, 9.471999999999953e-06, 9.443999999997343e-06, 9.458000000000383e-06, 9.485999999999523e-06, 9.471999999999953e-06, 9.513999999998662e-06, 9.486999999998996e-06, 9.500000000002562e-06, 9.499999999999093e-06, 9.486000000002992e-06, 9.458999999999856e-06, 9.499999999999093e-06, 9.485999999999523e-06, 9.471999999999953e-06, 9.471999999999953e-06, 9.485999999999523e-06, 9.431000000000717e-06, 9.499999999999093e-06, 9.471999999999953e-06, 9.471999999999953e-06, 9.527000000002228e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.485999999999523e-06, 9.471999999999953e-06, 9.458000000000383e-06, 9.416999999997677e-06, 9.473000000002896e-06, 9.486000000002992e-06, 9.528000000001702e-06, 9.513999999995193e-06, 9.499999999995623e-06, 9.457999999996913e-06, 9.500000000002562e-06, 9.471999999996483e-06, 9.443999999997343e-06, 9.472000000003422e-06, 9.458000000003852e-06, 9.445000000003756e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.513000000002658e-06, 9.514000000002132e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.963" endtime="20201115 22:00:03.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.959" endtime="20201115 22:00:03.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.968" endtime="20201115 22:00:03.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.972" endtime="20201115 22:00:03.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.970" endtime="20201115 22:00:03.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.966" endtime="20201115 22:00:03.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.591" endtime="20201115 22:00:03.992"></status>
</kw>
<msg timestamp="20201115 22:00:03.992" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.002" endtime="20201115 22:00:04.027"></status>
</kw>
<msg timestamp="20201115 22:00:04.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.000" endtime="20201115 22:00:04.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.030" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.029" endtime="20201115 22:00:04.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.031" endtime="20201115 22:00:04.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.997" endtime="20201115 22:00:04.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.995" endtime="20201115 22:00:04.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.040" endtime="20201115 22:00:04.328"></status>
</kw>
<msg timestamp="20201115 22:00:04.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023598083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.039" endtime="20201115 22:00:04.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023598083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.332" endtime="20201115 22:00:04.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.340" endtime="20201115 22:00:04.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.036" endtime="20201115 22:00:04.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.035" endtime="20201115 22:00:04.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.347" level="INFO">${RESULT} = [{'time': 0.023607597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.023837389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:04.344" endtime="20201115 22:00:04.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.361" level="INFO">${OVERHEAD} = {'diff': [9.514000000002132e-06, 9.499999999999093e-06, 9.485999999999523e-06, 9.417000000001147e-06, 9.500000000002562e-06, 9.541000000001798e-06, 9.513999999998662e-06, 9.458000000000383e-06, 9.5140...</msg>
<status status="PASS" starttime="20201115 22:00:04.348" endtime="20201115 22:00:04.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.365" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:04.364" endtime="20201115 22:00:04.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.368" level="INFO">VALUE: [9.514000000002132e-06, 9.499999999999093e-06, 9.485999999999523e-06, 9.417000000001147e-06, 9.500000000002562e-06, 9.541000000001798e-06, 9.513999999998662e-06, 9.458000000000383e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.500000000002562e-06, 9.458999999999856e-06, 9.485999999999523e-06, 9.485999999999523e-06, 9.514000000002132e-06, 9.471999999999953e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.512999999999189e-06, 9.499999999999093e-06, 9.444000000000813e-06, 9.499999999999093e-06, 9.486000000002992e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.513999999998662e-06, 9.486000000002992e-06, 9.485999999999523e-06, 9.486000000002992e-06, 9.514000000002132e-06, 9.471999999999953e-06, 9.527999999998232e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.499999999995623e-06, 9.416999999997677e-06, 9.473000000002896e-06, 9.500000000002562e-06, 9.541000000001798e-06, 9.514000000002132e-06, 9.458000000003852e-06, 9.499999999995623e-06, 9.500000000002562e-06, 9.499999999995623e-06, 9.513000000002658e-06, 9.458999999996387e-06, 9.485999999996053e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.366" endtime="20201115 22:00:04.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.361" endtime="20201115 22:00:04.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.371" endtime="20201115 22:00:04.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.374" endtime="20201115 22:00:04.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.373" endtime="20201115 22:00:04.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.369" endtime="20201115 22:00:04.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.993" endtime="20201115 22:00:04.395"></status>
</kw>
<msg timestamp="20201115 22:00:04.395" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.404" endtime="20201115 22:00:04.430"></status>
</kw>
<msg timestamp="20201115 22:00:04.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.402" endtime="20201115 22:00:04.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.433" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.432" endtime="20201115 22:00:04.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.434" endtime="20201115 22:00:04.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.400" endtime="20201115 22:00:04.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.398" endtime="20201115 22:00:04.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.443" endtime="20201115 22:00:04.730"></status>
</kw>
<msg timestamp="20201115 22:00:04.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023011931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023021417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.442" endtime="20201115 22:00:04.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023011931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023021417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.734" endtime="20201115 22:00:04.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.742" endtime="20201115 22:00:04.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.439" endtime="20201115 22:00:04.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.437" endtime="20201115 22:00:04.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.749" level="INFO">${RESULT} = [{'time': 0.023021417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.023251861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:04.746" endtime="20201115 22:00:04.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.763" level="INFO">${OVERHEAD} = {'diff': [9.485999999999523e-06, 9.485999999999523e-06, 9.429999999997773e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.429999999997773e-06, 9.485999999999523e-06, 9.471999999999953e-06, 9.4579...</msg>
<status status="PASS" starttime="20201115 22:00:04.750" endtime="20201115 22:00:04.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.767" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:04.766" endtime="20201115 22:00:04.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.770" level="INFO">VALUE: [9.485999999999523e-06, 9.485999999999523e-06, 9.429999999997773e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.429999999997773e-06, 9.485999999999523e-06, 9.471999999999953e-06, 9.457999999996913e-06, 9.485999999999523e-06, 9.528000000001702e-06, 9.471999999999953e-06, 9.471999999999953e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.486000000002992e-06, 9.471999999999953e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.471999999999953e-06, 9.471999999999953e-06, 9.458000000000383e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.471999999999953e-06, 9.514000000002132e-06, 9.471999999999953e-06, 9.542000000001272e-06, 9.513999999995193e-06, 9.458000000003852e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.459000000003326e-06, 9.499999999995623e-06, 9.500000000002562e-06, 9.431000000004186e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.541999999994333e-06, 9.499999999995623e-06, 9.499999999995623e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.769" endtime="20201115 22:00:04.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.764" endtime="20201115 22:00:04.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.773" endtime="20201115 22:00:04.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.776" endtime="20201115 22:00:04.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.775" endtime="20201115 22:00:04.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.771" endtime="20201115 22:00:04.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.395" endtime="20201115 22:00:04.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.786" endtime="20201115 22:00:04.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.785" endtime="20201115 22:00:04.798"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.800" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.809" endtime="20201115 22:00:04.837"></status>
</kw>
<msg timestamp="20201115 22:00:04.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.807" endtime="20201115 22:00:04.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.839" endtime="20201115 22:00:04.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.841" endtime="20201115 22:00:04.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.804" endtime="20201115 22:00:04.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.802" endtime="20201115 22:00:04.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.851" endtime="20201115 22:00:05.139"></status>
</kw>
<msg timestamp="20201115 22:00:05.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027538472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027548222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.849" endtime="20201115 22:00:05.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027538472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027548222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.143" endtime="20201115 22:00:05.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.151" endtime="20201115 22:00:05.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.847" endtime="20201115 22:00:05.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.845" endtime="20201115 22:00:05.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.158" level="INFO">${RESULT} = [{'time': 0.027548222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.0278105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:05.154" endtime="20201115 22:00:05.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.171" level="INFO">${OVERHEAD} = {'diff': [9.749999999999343e-06, 9.749999999999343e-06, 9.735999999999773e-06, 9.750000000002812e-06, 9.750000000002812e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.749999999999343e-06, 9.6950...</msg>
<status status="PASS" starttime="20201115 22:00:05.159" endtime="20201115 22:00:05.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.176" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:05.175" endtime="20201115 22:00:05.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.178" level="INFO">VALUE: [9.749999999999343e-06, 9.749999999999343e-06, 9.735999999999773e-06, 9.750000000002812e-06, 9.750000000002812e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.749999999999343e-06, 9.695000000000537e-06, 9.680999999997497e-06, 9.651999999998884e-06, 9.777999999998482e-06, 9.681000000000967e-06, 9.750000000002812e-06, 9.735999999999773e-06, 9.820000000000662e-06, 9.777999999995013e-06, 9.708999999996637e-06, 9.735999999996303e-06, 9.723000000003146e-06, 9.736000000003242e-06, 9.750000000002812e-06, 9.722000000003672e-06, 9.764000000002382e-06, 9.805000000001618e-06, 9.722000000003672e-06, 9.721999999996733e-06, 9.764000000002382e-06, 9.749999999995873e-06, 9.735999999996303e-06, 9.735999999996303e-06, 9.764000000002382e-06, 9.735999999996303e-06, 9.764000000002382e-06, 9.735999999996303e-06, 9.736000000003242e-06, 9.778000000001952e-06, 9.735999999996303e-06, 9.736000000003242e-06, 9.750000000002812e-06, 9.723000000003146e-06, 9.693999999997593e-06, 9.76299999999597e-06, 9.736000000003242e-06, 9.721999999996733e-06, 9.777999999995013e-06, 9.749999999995873e-06, 9.736000000003242e-06, 9.736000000003242e-06, 9.764000000002382e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.177" endtime="20201115 22:00:05.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.172" endtime="20201115 22:00:05.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.181" endtime="20201115 22:00:05.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.185" endtime="20201115 22:00:05.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.183" endtime="20201115 22:00:05.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.180" endtime="20201115 22:00:05.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.800" endtime="20201115 22:00:05.205"></status>
</kw>
<msg timestamp="20201115 22:00:05.206" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.215" endtime="20201115 22:00:05.239"></status>
</kw>
<msg timestamp="20201115 22:00:05.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.213" endtime="20201115 22:00:05.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.240" endtime="20201115 22:00:05.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.243" endtime="20201115 22:00:05.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.211" endtime="20201115 22:00:05.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.208" endtime="20201115 22:00:05.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.252" endtime="20201115 22:00:05.540"></status>
</kw>
<msg timestamp="20201115 22:00:05.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021284861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021294556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.251" endtime="20201115 22:00:05.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021284861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021294556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.544" endtime="20201115 22:00:05.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.552" endtime="20201115 22:00:05.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.248" endtime="20201115 22:00:05.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.246" endtime="20201115 22:00:05.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.559" level="INFO">${RESULT} = [{'time': 0.021294556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.021556681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.556" endtime="20201115 22:00:05.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.573" level="INFO">${OVERHEAD} = {'diff': [9.695000000000537e-06, 9.764000000002382e-06, 9.722999999999676e-06, 9.735999999999773e-06, 9.666999999997927e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.722000000000203e-06, 9.6939...</msg>
<status status="PASS" starttime="20201115 22:00:05.560" endtime="20201115 22:00:05.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.577" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:05.576" endtime="20201115 22:00:05.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.580" level="INFO">VALUE: [9.695000000000537e-06, 9.764000000002382e-06, 9.722999999999676e-06, 9.735999999999773e-06, 9.666999999997927e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.722000000000203e-06, 9.693999999997593e-06, 9.749999999999343e-06, 9.833000000000758e-06, 9.763999999998912e-06, 9.722000000000203e-06, 9.764000000002382e-06, 9.736999999999246e-06, 9.722000000000203e-06, 9.762999999999439e-06, 9.693999999997593e-06, 9.735999999999773e-06, 9.777999999998482e-06, 9.749999999999343e-06, 9.762999999999439e-06, 9.709000000000106e-06, 9.763999999998912e-06, 9.777999999998482e-06, 9.749999999999343e-06, 9.778000000001952e-06, 9.722999999999676e-06, 9.749999999999343e-06, 9.708000000000633e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.694000000001063e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.722999999999676e-06, 9.764000000002382e-06, 9.735999999996303e-06, 9.735999999996303e-06, 9.806000000001092e-06, 9.736000000003242e-06, 9.736999999995777e-06, 9.707999999997163e-06, 9.749999999995873e-06, 9.750000000002812e-06, 9.695000000004006e-06, 9.749999999995873e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.578" endtime="20201115 22:00:05.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.574" endtime="20201115 22:00:05.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.583" endtime="20201115 22:00:05.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.586" endtime="20201115 22:00:05.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.585" endtime="20201115 22:00:05.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.581" endtime="20201115 22:00:05.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.206" endtime="20201115 22:00:05.607"></status>
</kw>
<msg timestamp="20201115 22:00:05.607" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.617" endtime="20201115 22:00:05.641"></status>
</kw>
<msg timestamp="20201115 22:00:05.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.615" endtime="20201115 22:00:05.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.643" endtime="20201115 22:00:05.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.645" endtime="20201115 22:00:05.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.612" endtime="20201115 22:00:05.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.610" endtime="20201115 22:00:05.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.655" endtime="20201115 22:00:05.943"></status>
</kw>
<msg timestamp="20201115 22:00:05.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.653" endtime="20201115 22:00:05.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.947" endtime="20201115 22:00:05.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.955" endtime="20201115 22:00:05.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.650" endtime="20201115 22:00:05.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.649" endtime="20201115 22:00:05.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.962" level="INFO">${RESULT} = [{'time': 0.021564861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.021821972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.959" endtime="20201115 22:00:05.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.976" level="INFO">${OVERHEAD} = {'diff': [9.764000000002382e-06, 9.735999999999773e-06, 9.736000000003242e-06, 9.707999999997163e-06, 9.722999999999676e-06, 9.763999999998912e-06, 9.777999999998482e-06, 9.833000000000758e-06, 9.7780...</msg>
<status status="PASS" starttime="20201115 22:00:05.963" endtime="20201115 22:00:05.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.980" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:05.979" endtime="20201115 22:00:05.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.983" level="INFO">VALUE: [9.764000000002382e-06, 9.735999999999773e-06, 9.736000000003242e-06, 9.707999999997163e-06, 9.722999999999676e-06, 9.763999999998912e-06, 9.777999999998482e-06, 9.833000000000758e-06, 9.778000000001952e-06, 9.709000000000106e-06, 9.763999999998912e-06, 9.749999999999343e-06, 9.736000000003242e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.695000000000537e-06, 9.707999999997163e-06, 9.749999999999343e-06, 9.736999999999246e-06, 9.749999999999343e-06, 9.777999999998482e-06, 9.735999999999773e-06, 9.722000000000203e-06, 9.722000000000203e-06, 9.749999999999343e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.764000000002382e-06, 9.681000000000967e-06, 9.763999999998912e-06, 9.722999999999676e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.764000000002382e-06, 9.708000000000633e-06, 9.735999999999773e-06, 9.722000000000203e-06, 9.722000000000203e-06, 9.722000000003672e-06, 9.707999999997163e-06, 9.736000000003242e-06, 9.736000000003242e-06, 9.736000000003242e-06, 9.665999999998454e-06, 9.721999999996733e-06, 9.681000000004436e-06, 9.750000000002812e-06, 9.722000000003672e-06, 9.736000000003242e-06, 9.777999999995013e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.981" endtime="20201115 22:00:05.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.977" endtime="20201115 22:00:05.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.986" endtime="20201115 22:00:05.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.989" endtime="20201115 22:00:06.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.988" endtime="20201115 22:00:06.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.984" endtime="20201115 22:00:06.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.608" endtime="20201115 22:00:06.010"></status>
</kw>
<msg timestamp="20201115 22:00:06.010" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.020" endtime="20201115 22:00:06.048"></status>
</kw>
<msg timestamp="20201115 22:00:06.049" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.018" endtime="20201115 22:00:06.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.051" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.050" endtime="20201115 22:00:06.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.052" endtime="20201115 22:00:06.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.015" endtime="20201115 22:00:06.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.013" endtime="20201115 22:00:06.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.061" endtime="20201115 22:00:06.349"></status>
</kw>
<msg timestamp="20201115 22:00:06.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025452792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025462528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.060" endtime="20201115 22:00:06.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025452792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025462528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.353" endtime="20201115 22:00:06.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.361" endtime="20201115 22:00:06.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.057" endtime="20201115 22:00:06.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.055" endtime="20201115 22:00:06.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.368" level="INFO">${RESULT} = [{'time': 0.025462528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.025720806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:06.364" endtime="20201115 22:00:06.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.381" level="INFO">${OVERHEAD} = {'diff': [9.736000000003242e-06, 9.736999999999246e-06, 9.722999999999676e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.749999999999343e-06, 9.778000000001952e-06, 9.722999999999676e-06, 9.7499...</msg>
<status status="PASS" starttime="20201115 22:00:06.369" endtime="20201115 22:00:06.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.386" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:06.385" endtime="20201115 22:00:06.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.388" level="INFO">VALUE: [9.736000000003242e-06, 9.736999999999246e-06, 9.722999999999676e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.749999999999343e-06, 9.778000000001952e-06, 9.722999999999676e-06, 9.749999999999343e-06, 9.736999999999246e-06, 9.708000000000633e-06, 9.749999999999343e-06, 9.763999999998912e-06, 9.777000000002478e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.709000000000106e-06, 9.681000000000967e-06, 9.778000000001952e-06, 9.735999999999773e-06, 9.749999999999343e-06, 9.763999999998912e-06, 9.735999999999773e-06, 9.735999999996303e-06, 9.736999999995777e-06, 9.693999999997593e-06, 9.735999999996303e-06, 9.723000000003146e-06, 9.736000000003242e-06, 9.735999999996303e-06, 9.750000000002812e-06, 9.735999999996303e-06, 9.750000000002812e-06, 9.735999999996303e-06, 9.749999999995873e-06, 9.749999999995873e-06, 9.736000000003242e-06, 9.736000000003242e-06, 9.750000000002812e-06, 9.736000000003242e-06, 9.735999999996303e-06, 9.806000000001092e-06, 9.764000000002382e-06, 9.735999999996303e-06, 9.764000000002382e-06, 9.735999999996303e-06, 9.735999999996303e-06, 9.679999999998024e-06, 9.819000000001188e-06, 9.723000000003146e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.387" endtime="20201115 22:00:06.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.382" endtime="20201115 22:00:06.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.391" endtime="20201115 22:00:06.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.395" endtime="20201115 22:00:06.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.394" endtime="20201115 22:00:06.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.390" endtime="20201115 22:00:06.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.011" endtime="20201115 22:00:06.416"></status>
</kw>
<msg timestamp="20201115 22:00:06.416" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.425" endtime="20201115 22:00:06.449"></status>
</kw>
<msg timestamp="20201115 22:00:06.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.424" endtime="20201115 22:00:06.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.452" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.451" endtime="20201115 22:00:06.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.453" endtime="20201115 22:00:06.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.421" endtime="20201115 22:00:06.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.419" endtime="20201115 22:00:06.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.463" endtime="20201115 22:00:06.750"></status>
</kw>
<msg timestamp="20201115 22:00:06.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021524125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.461" endtime="20201115 22:00:06.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021524125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.754" endtime="20201115 22:00:06.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.762" endtime="20201115 22:00:06.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.458" endtime="20201115 22:00:06.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.457" endtime="20201115 22:00:06.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.769" level="INFO">${RESULT} = [{'time': 0.021524125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.02178175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:06.765" endtime="20201115 22:00:06.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.782" level="INFO">${OVERHEAD} = {'diff': [9.750000000002812e-06, 9.722000000000203e-06, 9.804999999998149e-06, 9.735999999999773e-06, 9.681000000000967e-06, 9.763999999998912e-06, 9.722000000000203e-06, 9.764000000002382e-06, 9.7369...</msg>
<status status="PASS" starttime="20201115 22:00:06.770" endtime="20201115 22:00:06.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.787" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:06.786" endtime="20201115 22:00:06.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.789" level="INFO">VALUE: [9.750000000002812e-06, 9.722000000000203e-06, 9.804999999998149e-06, 9.735999999999773e-06, 9.681000000000967e-06, 9.763999999998912e-06, 9.722000000000203e-06, 9.764000000002382e-06, 9.736999999999246e-06, 9.749999999999343e-06, 9.736000000003242e-06, 9.735999999999773e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.764000000002382e-06, 9.792000000001522e-06, 9.707999999997163e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.722999999999676e-06, 9.804999999998149e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.735999999999773e-06, 9.722999999999676e-06, 9.749999999999343e-06, 9.750000000002812e-06, 9.749999999999343e-06, 9.708000000000633e-06, 9.763999999998912e-06, 9.749999999999343e-06, 9.722999999999676e-06, 9.749999999999343e-06, 9.750000000002812e-06, 9.778000000001952e-06, 9.764000000002382e-06, 9.792000000001522e-06, 9.834000000000231e-06, 9.749999999995873e-06, 9.722999999996207e-06, 9.777999999995013e-06, 9.749999999995873e-06, 9.750000000002812e-06, 9.749999999995873e-06, 9.764000000002382e-06, 9.749999999995873e-06, 9.778000000001952e-06, 9.736000000003242e-06, 9.764000000002382e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.788" endtime="20201115 22:00:06.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.783" endtime="20201115 22:00:06.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.793" endtime="20201115 22:00:06.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.796" endtime="20201115 22:00:06.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.795" endtime="20201115 22:00:06.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.791" endtime="20201115 22:00:06.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.417" endtime="20201115 22:00:06.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.799" endtime="20201115 22:00:06.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.798" endtime="20201115 22:00:06.818"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.820" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.829" endtime="20201115 22:00:06.857"></status>
</kw>
<msg timestamp="20201115 22:00:06.858" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.827" endtime="20201115 22:00:06.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.859" endtime="20201115 22:00:06.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.861" endtime="20201115 22:00:06.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.825" endtime="20201115 22:00:06.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.822" endtime="20201115 22:00:06.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.871" endtime="20201115 22:00:07.158"></status>
</kw>
<msg timestamp="20201115 22:00:07.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027204153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027214153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.869" endtime="20201115 22:00:07.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027204153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027214153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.162" endtime="20201115 22:00:07.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.170" endtime="20201115 22:00:07.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.866" endtime="20201115 22:00:07.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.865" endtime="20201115 22:00:07.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.177" level="INFO">${RESULT} = [{'time': 0.027214153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.027502972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:07.173" endtime="20201115 22:00:07.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.190" level="INFO">${OVERHEAD} = {'diff': [1.0000000000003062e-05, 9.986000000000023e-06, 9.986999999999496e-06, 9.972999999999926e-06, 9.999999999999593e-06, 9.986000000000023e-06, 1.0027999999998732e-05, 9.957999999997413e-06, 1.00...</msg>
<status status="PASS" starttime="20201115 22:00:07.178" endtime="20201115 22:00:07.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.195" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:07.194" endtime="20201115 22:00:07.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.198" level="INFO">VALUE: [1.0000000000003062e-05, 9.986000000000023e-06, 9.986999999999496e-06, 9.972999999999926e-06, 9.999999999999593e-06, 9.986000000000023e-06, 1.0027999999998732e-05, 9.957999999997413e-06, 1.0013999999999162e-05, 9.999999999999593e-06, 1.0012999999999689e-05, 1.0014000000002632e-05, 9.959000000000356e-06, 1.0013999999999162e-05, 9.985999999996553e-06, 9.985999999996553e-06, 9.985999999996553e-06, 9.971999999996983e-06, 9.986999999996027e-06, 9.972000000003922e-06, 9.985999999996553e-06, 9.943999999997843e-06, 1.0027000000002728e-05, 1.0000000000003062e-05, 9.986000000003492e-06, 9.985999999996553e-06, 9.986000000003492e-06, 9.986999999996027e-06, 1.0000000000003062e-05, 9.971999999996983e-06, 1.0000000000003062e-05, 9.986000000003492e-06, 9.971999999996983e-06, 9.973000000003396e-06, 1.0000000000003062e-05, 1.0028000000002202e-05, 1.0013999999995693e-05, 9.943999999997843e-06, 9.929999999998274e-06, 9.986999999996027e-06, 9.999999999996123e-06, 9.986000000003492e-06, 9.985999999996553e-06, 9.985999999996553e-06, 9.985999999996553e-06, 1.0013999999995693e-05, 1.0014000000002632e-05, 1.0027000000002728e-05, 9.986999999996027e-06, 9.999999999996123e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.196" endtime="20201115 22:00:07.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.191" endtime="20201115 22:00:07.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.201" endtime="20201115 22:00:07.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.204" endtime="20201115 22:00:07.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.203" endtime="20201115 22:00:07.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.199" endtime="20201115 22:00:07.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.820" endtime="20201115 22:00:07.225"></status>
</kw>
<msg timestamp="20201115 22:00:07.225" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.234" endtime="20201115 22:00:07.259"></status>
</kw>
<msg timestamp="20201115 22:00:07.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.232" endtime="20201115 22:00:07.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.262" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.260" endtime="20201115 22:00:07.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.263" endtime="20201115 22:00:07.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.230" endtime="20201115 22:00:07.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.228" endtime="20201115 22:00:07.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.272" endtime="20201115 22:00:07.561"></status>
</kw>
<msg timestamp="20201115 22:00:07.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021340917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021350861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.270" endtime="20201115 22:00:07.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021340917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021350861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.566" endtime="20201115 22:00:07.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.574" endtime="20201115 22:00:07.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.268" endtime="20201115 22:00:07.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.266" endtime="20201115 22:00:07.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.586" level="INFO">${RESULT} = [{'time': 0.021350861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.943999999997843e-06, 'source_diff': 9.943999999997843e-06}, {'time': 0.021641097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:07.579" endtime="20201115 22:00:07.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.600" level="INFO">${OVERHEAD} = {'diff': [9.943999999997843e-06, 1.0041000000002298e-05, 9.986999999999496e-06, 1.0042000000001772e-05, 1.0069000000001438e-05, 9.957999999997413e-06, 9.986999999999496e-06, 1.0027999999998732e-05, 9....</msg>
<status status="PASS" starttime="20201115 22:00:07.587" endtime="20201115 22:00:07.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.605" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:07.604" endtime="20201115 22:00:07.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.607" level="INFO">VALUE: [9.943999999997843e-06, 1.0041000000002298e-05, 9.986999999999496e-06, 1.0042000000001772e-05, 1.0069000000001438e-05, 9.957999999997413e-06, 9.986999999999496e-06, 1.0027999999998732e-05, 9.958000000000883e-06, 9.972000000000453e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.958000000000883e-06, 9.972000000000453e-06, 9.972000000000453e-06, 9.931000000001217e-06, 1.0012999999999689e-05, 9.986000000000023e-06, 9.972999999999926e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.972000000000453e-06, 9.999999999999593e-06, 9.972000000000453e-06, 1.0013999999999162e-05, 1.0013999999999162e-05, 9.986000000000023e-06, 9.958000000000883e-06, 9.972000000000453e-06, 9.972000000000453e-06, 9.972000000000453e-06, 1.0028000000002202e-05, 9.957999999997413e-06, 9.945000000004256e-06, 9.987000000002966e-06, 9.959000000003826e-06, 9.972000000003922e-06, 1.0013999999995693e-05, 1.0000000000003062e-05, 9.987000000002966e-06, 9.972000000003922e-06, 9.971999999996983e-06, 1.0013999999995693e-05, 9.971999999996983e-06, 1.0000000000003062e-05, 1.0000000000003062e-05, 9.987000000002966e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.606" endtime="20201115 22:00:07.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.601" endtime="20201115 22:00:07.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.610" endtime="20201115 22:00:07.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.614" endtime="20201115 22:00:07.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.612" endtime="20201115 22:00:07.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.609" endtime="20201115 22:00:07.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.226" endtime="20201115 22:00:07.635"></status>
</kw>
<msg timestamp="20201115 22:00:07.635" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.644" endtime="20201115 22:00:07.670"></status>
</kw>
<msg timestamp="20201115 22:00:07.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.642" endtime="20201115 22:00:07.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.672" endtime="20201115 22:00:07.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.674" endtime="20201115 22:00:07.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.640" endtime="20201115 22:00:07.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.637" endtime="20201115 22:00:07.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.683" endtime="20201115 22:00:07.970"></status>
</kw>
<msg timestamp="20201115 22:00:07.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023724361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023734361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.682" endtime="20201115 22:00:07.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023724361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023734361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.974" endtime="20201115 22:00:07.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.982" endtime="20201115 22:00:07.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.679" endtime="20201115 22:00:07.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.678" endtime="20201115 22:00:07.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.989" level="INFO">${RESULT} = [{'time': 0.023734361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999999593e-06, 'source_diff': 9.999999999999593e-06}, {'time': 0.024026458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:07.985" endtime="20201115 22:00:07.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.003" level="INFO">${OVERHEAD} = {'diff': [9.999999999999593e-06, 1.0069000000001438e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 9.986000000000023e-06, 1.0000000000003062e-05, 9.986000000000023e-06, 9.999999999999593e-06, 9.9...</msg>
<status status="PASS" starttime="20201115 22:00:07.990" endtime="20201115 22:00:08.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.007" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:08.006" endtime="20201115 22:00:08.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.010" level="INFO">VALUE: [9.999999999999593e-06, 1.0069000000001438e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 9.986000000000023e-06, 1.0000000000003062e-05, 9.986000000000023e-06, 9.999999999999593e-06, 9.971999999996983e-06, 9.958000000000883e-06, 9.972000000000453e-06, 9.999999999999593e-06, 9.959000000000356e-06, 9.972000000000453e-06, 9.944000000001313e-06, 9.916999999998177e-06, 1.0000000000003062e-05, 9.972999999999926e-06, 1.0000000000003062e-05, 9.916999999998177e-06, 9.986000000000023e-06, 1.0000000000003062e-05, 9.972000000000453e-06, 9.972000000000453e-06, 9.999999999999593e-06, 9.972000000000453e-06, 9.985999999996553e-06, 9.957999999997413e-06, 9.959000000003826e-06, 9.999999999996123e-06, 9.999999999996123e-06, 9.999999999996123e-06, 9.985999999996553e-06, 9.971999999996983e-06, 1.0000000000003062e-05, 9.971999999996983e-06, 1.0042000000001772e-05, 9.985999999996553e-06, 9.972999999996457e-06, 9.985999999996553e-06, 1.001299999999622e-05, 1.0000000000003062e-05, 1.0000000000003062e-05, 9.929999999998274e-06, 9.999999999996123e-06, 9.929999999998274e-06, 9.985999999996553e-06, 9.986000000003492e-06, 9.985999999996553e-06, 1.0000000000003062e-05]</msg>
<status status="PASS" starttime="20201115 22:00:08.008" endtime="20201115 22:00:08.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.004" endtime="20201115 22:00:08.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.013" endtime="20201115 22:00:08.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.016" endtime="20201115 22:00:08.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.015" endtime="20201115 22:00:08.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.011" endtime="20201115 22:00:08.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.635" endtime="20201115 22:00:08.037"></status>
</kw>
<msg timestamp="20201115 22:00:08.037" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.046" endtime="20201115 22:00:08.073"></status>
</kw>
<msg timestamp="20201115 22:00:08.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.044" endtime="20201115 22:00:08.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.076" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.075" endtime="20201115 22:00:08.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.077" endtime="20201115 22:00:08.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.042" endtime="20201115 22:00:08.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.040" endtime="20201115 22:00:08.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.086" endtime="20201115 22:00:08.372"></status>
</kw>
<msg timestamp="20201115 22:00:08.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023150306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023160292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.085" endtime="20201115 22:00:08.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023150306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023160292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.377" endtime="20201115 22:00:08.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.385" endtime="20201115 22:00:08.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.082" endtime="20201115 22:00:08.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.080" endtime="20201115 22:00:08.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.392" level="INFO">${RESULT} = [{'time': 0.023160292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.023451403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:08.388" endtime="20201115 22:00:08.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.405" level="INFO">${OVERHEAD} = {'diff': [9.986000000000023e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 1.0012999999999689e-05, 1.001...</msg>
<status status="PASS" starttime="20201115 22:00:08.393" endtime="20201115 22:00:08.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.410" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:08.409" endtime="20201115 22:00:08.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.412" level="INFO">VALUE: [9.986000000000023e-06, 9.999999999999593e-06, 9.986000000000023e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.986000000000023e-06, 1.0012999999999689e-05, 1.0014000000002632e-05, 9.929999999998274e-06, 9.986000000000023e-06, 1.0014000000002632e-05, 1.0013999999999162e-05, 9.999999999999593e-06, 9.958999999996887e-06, 1.0041000000002298e-05, 9.944000000001313e-06, 1.0014000000002632e-05, 9.986000000000023e-06, 1.0027999999998732e-05, 1.0014000000002632e-05, 9.986000000000023e-06, 9.972000000000453e-06, 9.972000000000453e-06, 9.999999999999593e-06, 9.999999999999593e-06, 9.971999999996983e-06, 9.986000000000023e-06, 9.985999999996553e-06, 9.985999999996553e-06, 1.0000000000003062e-05, 9.999999999996123e-06, 1.0028000000002202e-05, 9.973000000003396e-06, 9.986000000003492e-06, 9.986000000003492e-06, 9.985999999996553e-06, 1.0013999999995693e-05, 9.986000000003492e-06, 1.0000000000003062e-05, 1.0000000000003062e-05, 9.971999999996983e-06, 9.999999999996123e-06, 1.0055000000001868e-05, 1.0000000000003062e-05, 9.985999999996553e-06, 9.999999999996123e-06, 9.985999999996553e-06, 1.0014000000002632e-05, 1.0028000000002202e-05]</msg>
<status status="PASS" starttime="20201115 22:00:08.411" endtime="20201115 22:00:08.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.406" endtime="20201115 22:00:08.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.416" endtime="20201115 22:00:08.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.419" endtime="20201115 22:00:08.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.418" endtime="20201115 22:00:08.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.414" endtime="20201115 22:00:08.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.038" endtime="20201115 22:00:08.440"></status>
</kw>
<msg timestamp="20201115 22:00:08.440" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.449" endtime="20201115 22:00:08.475"></status>
</kw>
<msg timestamp="20201115 22:00:08.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.447" endtime="20201115 22:00:08.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.478" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.476" endtime="20201115 22:00:08.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.479" endtime="20201115 22:00:08.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.445" endtime="20201115 22:00:08.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.443" endtime="20201115 22:00:08.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.488" endtime="20201115 22:00:08.775"></status>
</kw>
<msg timestamp="20201115 22:00:08.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.486" endtime="20201115 22:00:08.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.779" endtime="20201115 22:00:08.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.787" endtime="20201115 22:00:08.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.484" endtime="20201115 22:00:08.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.482" endtime="20201115 22:00:08.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.794" level="INFO">${RESULT} = [{'time': 0.022305403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.959000000000356e-06, 'source_diff': 9.959000000000356e-06}, {'time': 0.022598278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:08.791" endtime="20201115 22:00:08.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.808" level="INFO">${OVERHEAD} = {'diff': [9.959000000000356e-06, 9.972000000000453e-06, 9.999999999999593e-06, 9.986000000000023e-06, 1.0056000000001342e-05, 9.986000000000023e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.986...</msg>
<status status="PASS" starttime="20201115 22:00:08.795" endtime="20201115 22:00:08.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.812" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:08.811" endtime="20201115 22:00:08.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.815" level="INFO">VALUE: [9.959000000000356e-06, 9.972000000000453e-06, 9.999999999999593e-06, 9.986000000000023e-06, 1.0056000000001342e-05, 9.986000000000023e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.986000000000023e-06, 1.0013999999999162e-05, 9.999999999999593e-06, 9.999999999999593e-06, 9.972000000000453e-06, 9.958000000000883e-06, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0028000000002202e-05, 9.999999999999593e-06, 9.972000000000453e-06, 9.972000000000453e-06, 1.0012999999999689e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0014000000002632e-05, 1.0012999999999689e-05, 1.0013999999999162e-05, 9.986000000000023e-06, 9.971999999996983e-06, 9.943999999997843e-06, 9.986000000000023e-06, 9.972999999999926e-06, 9.986000000003492e-06, 9.957999999997413e-06, 1.0014000000002632e-05, 9.972000000003922e-06, 9.943999999997843e-06, 9.986000000003492e-06, 9.986999999996027e-06, 1.0000000000003062e-05, 1.0013999999995693e-05, 9.986000000003492e-06, 9.971999999996983e-06, 9.987000000002966e-06, 1.0041000000002298e-05, 1.0000000000003062e-05, 9.987000000002966e-06, 9.986000000003492e-06, 9.972000000003922e-06, 1.0000000000003062e-05, 9.985999999996553e-06]</msg>
<status status="PASS" starttime="20201115 22:00:08.813" endtime="20201115 22:00:08.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.809" endtime="20201115 22:00:08.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.818" endtime="20201115 22:00:08.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.822" endtime="20201115 22:00:08.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.820" endtime="20201115 22:00:08.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.816" endtime="20201115 22:00:08.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.441" endtime="20201115 22:00:08.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.819" endtime="20201115 22:00:08.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.818" endtime="20201115 22:00:08.843"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.845" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.854" endtime="20201115 22:00:08.886"></status>
</kw>
<msg timestamp="20201115 22:00:08.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.852" endtime="20201115 22:00:08.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.889" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.887" endtime="20201115 22:00:08.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.890" endtime="20201115 22:00:08.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.850" endtime="20201115 22:00:08.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.848" endtime="20201115 22:00:08.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.899" endtime="20201115 22:00:09.188"></status>
</kw>
<msg timestamp="20201115 22:00:09.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026533542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026543819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.898" endtime="20201115 22:00:09.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026533542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026543819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.192" endtime="20201115 22:00:09.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.200" endtime="20201115 22:00:09.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.895" endtime="20201115 22:00:09.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.893" endtime="20201115 22:00:09.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.207" level="INFO">${RESULT} = [{'time': 0.026543819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0276999999999509e-05, 'source_diff': 1.0276999999999509e-05}, {'time': 0.026867222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:09.203" endtime="20201115 22:00:09.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.220" level="INFO">${OVERHEAD} = {'diff': [1.0276999999999509e-05, 1.0179999999998524e-05, 1.0249999999999843e-05, 1.0223000000000176e-05, 1.0194000000001563e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0249999999999843e-05...</msg>
<status status="PASS" starttime="20201115 22:00:09.208" endtime="20201115 22:00:09.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.225" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:09.224" endtime="20201115 22:00:09.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.227" level="INFO">VALUE: [1.0276999999999509e-05, 1.0179999999998524e-05, 1.0249999999999843e-05, 1.0223000000000176e-05, 1.0194000000001563e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0249999999996373e-05, 1.0207999999997663e-05, 1.0263999999995943e-05, 1.0249999999996373e-05, 1.0236000000003742e-05, 1.0278000000002452e-05, 1.0249999999996373e-05, 1.0180999999997997e-05, 1.0236000000003742e-05, 1.0221999999997233e-05, 1.0250000000003312e-05, 1.0207999999997663e-05, 1.0250000000003312e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0249999999996373e-05, 1.0194000000005032e-05, 1.0304999999995179e-05, 1.0195000000004506e-05, 1.0250000000003312e-05, 1.0221999999997233e-05, 1.0236999999996277e-05, 1.0223000000003646e-05, 1.0237000000003216e-05, 1.0263999999995943e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0236000000003742e-05, 1.0277999999995513e-05, 1.0222000000004172e-05, 1.0263999999995943e-05, 1.0250000000003312e-05, 1.0221999999997233e-05, 1.0222000000004172e-05, 1.0221999999997233e-05]</msg>
<status status="PASS" starttime="20201115 22:00:09.226" endtime="20201115 22:00:09.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.221" endtime="20201115 22:00:09.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.231" endtime="20201115 22:00:09.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.234" endtime="20201115 22:00:09.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.232" endtime="20201115 22:00:09.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.229" endtime="20201115 22:00:09.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.846" endtime="20201115 22:00:09.255"></status>
</kw>
<msg timestamp="20201115 22:00:09.255" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.264" endtime="20201115 22:00:09.292"></status>
</kw>
<msg timestamp="20201115 22:00:09.293" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.262" endtime="20201115 22:00:09.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.294" endtime="20201115 22:00:09.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.297" endtime="20201115 22:00:09.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.260" endtime="20201115 22:00:09.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.257" endtime="20201115 22:00:09.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.306" endtime="20201115 22:00:09.593"></status>
</kw>
<msg timestamp="20201115 22:00:09.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021325167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.304" endtime="20201115 22:00:09.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021325167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.597" endtime="20201115 22:00:09.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.606" endtime="20201115 22:00:09.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.302" endtime="20201115 22:00:09.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.300" endtime="20201115 22:00:09.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.612" level="INFO">${RESULT} = [{'time': 0.021325167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.021648778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:09.609" endtime="20201115 22:00:09.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.626" level="INFO">${OVERHEAD} = {'diff': [1.0236000000000273e-05, 1.0320000000001162e-05, 1.0263999999999412e-05, 1.0249999999999843e-05, 1.0221999999997233e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0236000000000273e-05...</msg>
<status status="PASS" starttime="20201115 22:00:09.613" endtime="20201115 22:00:09.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.631" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:09.630" endtime="20201115 22:00:09.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.633" level="INFO">VALUE: [1.0236000000000273e-05, 1.0320000000001162e-05, 1.0263999999999412e-05, 1.0249999999999843e-05, 1.0221999999997233e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0249999999999843e-05, 1.0221999999997233e-05, 1.0223000000000176e-05, 1.0223000000000176e-05, 1.0236000000000273e-05, 1.0278000000002452e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0263999999999412e-05, 1.0249999999999843e-05, 1.0208000000001133e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 1.0221999999997233e-05, 1.0250000000003312e-05, 1.0249999999999843e-05, 1.0180999999997997e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.0250000000003312e-05, 1.0235999999996803e-05, 1.0223000000003646e-05, 1.0223000000003646e-05, 1.0237000000003216e-05, 1.0237000000003216e-05, 1.0207999999997663e-05, 1.0278000000002452e-05, 1.0180999999997997e-05, 1.0207999999997663e-05, 1.0250000000003312e-05, 1.0236000000003742e-05, 1.0221999999997233e-05, 1.0209000000004076e-05, 1.0236000000003742e-05, 1.0250000000003312e-05, 1.0208000000004602e-05]</msg>
<status status="PASS" starttime="20201115 22:00:09.632" endtime="20201115 22:00:09.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.627" endtime="20201115 22:00:09.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.636" endtime="20201115 22:00:09.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.640" endtime="20201115 22:00:09.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.638" endtime="20201115 22:00:09.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.634" endtime="20201115 22:00:09.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.255" endtime="20201115 22:00:09.660"></status>
</kw>
<msg timestamp="20201115 22:00:09.661" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.670" endtime="20201115 22:00:09.700"></status>
</kw>
<msg timestamp="20201115 22:00:09.701" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.668" endtime="20201115 22:00:09.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.703" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.702" endtime="20201115 22:00:09.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.704" endtime="20201115 22:00:09.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.665" endtime="20201115 22:00:09.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.663" endtime="20201115 22:00:09.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.713" endtime="20201115 22:00:10.000"></status>
</kw>
<msg timestamp="20201115 22:00:10.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022584389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.712" endtime="20201115 22:00:10.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022584389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.004" endtime="20201115 22:00:10.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.013" endtime="20201115 22:00:10.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.709" endtime="20201115 22:00:10.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.707" endtime="20201115 22:00:10.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.019" level="INFO">${RESULT} = [{'time': 0.022594597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.02291275, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:10.016" endtime="20201115 22:00:10.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.033" level="INFO">${OVERHEAD} = {'diff': [1.0208000000001133e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0235999999996803e-05, 1.0249999999999843e-05, 1.0250000000003312e-05, 1.0236000000000273e-05, 1.0249999999999843e-05...</msg>
<status status="PASS" starttime="20201115 22:00:10.020" endtime="20201115 22:00:10.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.038" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:10.037" endtime="20201115 22:00:10.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.040" level="INFO">VALUE: [1.0208000000001133e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 1.0235999999996803e-05, 1.0249999999999843e-05, 1.0250000000003312e-05, 1.0236000000000273e-05, 1.0249999999999843e-05, 1.0151999999999384e-05, 1.0263999999999412e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0264000000002882e-05, 1.0263999999999412e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0263999999999412e-05, 1.0236000000000273e-05, 1.0249999999999843e-05, 1.0306000000001592e-05, 1.0235999999996803e-05, 1.0193999999998093e-05, 1.0221999999997233e-05, 1.0222999999996707e-05, 1.0236000000003742e-05, 1.0236999999996277e-05, 1.0236000000003742e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0236000000003742e-05, 1.0249999999996373e-05, 1.0222000000004172e-05, 1.0221999999997233e-05, 1.0222000000004172e-05, 1.0249999999996373e-05, 1.0278000000002452e-05, 1.0250000000003312e-05, 1.0235999999996803e-05, 1.0208000000004602e-05, 1.0236000000003742e-05, 1.0235999999996803e-05]</msg>
<status status="PASS" starttime="20201115 22:00:10.039" endtime="20201115 22:00:10.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.034" endtime="20201115 22:00:10.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.043" endtime="20201115 22:00:10.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.047" endtime="20201115 22:00:10.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.045" endtime="20201115 22:00:10.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.042" endtime="20201115 22:00:10.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.661" endtime="20201115 22:00:10.067"></status>
</kw>
<msg timestamp="20201115 22:00:10.068" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.077" endtime="20201115 22:00:10.107"></status>
</kw>
<msg timestamp="20201115 22:00:10.107" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.075" endtime="20201115 22:00:10.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.110" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.108" endtime="20201115 22:00:10.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.111" endtime="20201115 22:00:10.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.073" endtime="20201115 22:00:10.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.071" endtime="20201115 22:00:10.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.120" endtime="20201115 22:00:10.408"></status>
</kw>
<msg timestamp="20201115 22:00:10.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02249175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:10.118" endtime="20201115 22:00:10.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02249175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:10.412" endtime="20201115 22:00:10.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.420" endtime="20201115 22:00:10.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.116" endtime="20201115 22:00:10.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.114" endtime="20201115 22:00:10.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.426" level="INFO">${RESULT} = [{'time': 0.02249175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.022813139, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:10.423" endtime="20201115 22:00:10.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.440" level="INFO">${OVERHEAD} = {'diff': [1.0236000000000273e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 1.0223000000000176e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0264000000002882e-05, 1.0208999999997137e-05...</msg>
<status status="PASS" starttime="20201115 22:00:10.427" endtime="20201115 22:00:10.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.445" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:10.444" endtime="20201115 22:00:10.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.447" level="INFO">VALUE: [1.0236000000000273e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 1.0223000000000176e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0264000000002882e-05, 1.0208999999997137e-05, 1.0209000000000606e-05, 1.0236999999999746e-05, 1.0236000000000273e-05, 1.0209000000000606e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0221999999997233e-05, 1.0166000000002423e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0194000000001563e-05, 1.0304999999998649e-05, 1.0208000000001133e-05, 1.0223000000000176e-05, 1.0249999999999843e-05, 1.0263999999999412e-05, 1.0305999999998122e-05, 1.0193999999998093e-05, 1.0235999999996803e-05, 1.0236000000003742e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0236000000003742e-05, 1.029099999999561e-05, 1.0236000000003742e-05, 1.0235999999996803e-05, 1.0222000000004172e-05, 1.0235999999996803e-05, 1.0235999999996803e-05, 1.0249999999996373e-05, 1.0222000000004172e-05, 1.0179999999998524e-05, 1.0223000000003646e-05, 1.0236000000003742e-05, 1.0250000000003312e-05, 1.0263999999995943e-05, 1.0236000000003742e-05, 1.0236000000003742e-05, 1.0249999999996373e-05, 1.0236000000003742e-05, 1.0264000000002882e-05]</msg>
<status status="PASS" starttime="20201115 22:00:10.446" endtime="20201115 22:00:10.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.441" endtime="20201115 22:00:10.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.450" endtime="20201115 22:00:10.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.522" endtime="20201115 22:00:10.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.520" endtime="20201115 22:00:10.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.449" endtime="20201115 22:00:10.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.069" endtime="20201115 22:00:10.543"></status>
</kw>
<msg timestamp="20201115 22:00:10.543" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.552" endtime="20201115 22:00:10.584"></status>
</kw>
<msg timestamp="20201115 22:00:10.585" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.550" endtime="20201115 22:00:10.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.587" endtime="20201115 22:00:10.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.593" endtime="20201115 22:00:10.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.548" endtime="20201115 22:00:10.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.545" endtime="20201115 22:00:10.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.612" endtime="20201115 22:00:10.906"></status>
</kw>
<msg timestamp="20201115 22:00:10.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024503389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.609" endtime="20201115 22:00:10.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024503389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024513639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.910" endtime="20201115 22:00:10.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.918" endtime="20201115 22:00:10.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.603" endtime="20201115 22:00:10.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.599" endtime="20201115 22:00:10.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.925" level="INFO">${RESULT} = [{'time': 0.024513639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0249999999999843e-05, 'source_diff': 1.0249999999999843e-05}, {'time': 0.024835708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:10.922" endtime="20201115 22:00:10.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.939" level="INFO">${OVERHEAD} = {'diff': [1.0249999999999843e-05, 1.0249999999999843e-05, 1.0166999999998427e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0250000000003312e-05, 1.0236000000000273e-05...</msg>
<status status="PASS" starttime="20201115 22:00:10.926" endtime="20201115 22:00:10.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.943" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:10.942" endtime="20201115 22:00:10.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.946" level="INFO">VALUE: [1.0249999999999843e-05, 1.0249999999999843e-05, 1.0166999999998427e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 1.0222000000000703e-05, 1.0250000000003312e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0249999999999843e-05, 1.0306000000001592e-05, 1.0222000000000703e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0249999999999843e-05, 1.0208000000001133e-05, 1.0277999999998982e-05, 1.0263999999999412e-05, 1.0249999999999843e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0235999999996803e-05, 1.0235999999996803e-05, 1.0223000000003646e-05, 1.0263999999995943e-05, 1.0221999999997233e-05, 1.0236000000003742e-05, 1.0222000000004172e-05, 1.0263000000003408e-05, 1.0193999999998093e-05, 1.0264000000002882e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.0249999999996373e-05, 1.0235999999996803e-05, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0263999999995943e-05, 1.0223000000003646e-05, 1.0222000000004172e-05, 1.0319000000001688e-05, 1.0235999999996803e-05, 1.0249999999996373e-05, 1.0237000000003216e-05, 1.0235999999996803e-05, 1.0236000000003742e-05, 1.0207999999997663e-05, 1.0263999999995943e-05]</msg>
<status status="PASS" starttime="20201115 22:00:10.944" endtime="20201115 22:00:10.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.940" endtime="20201115 22:00:10.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.949" endtime="20201115 22:00:10.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.953" endtime="20201115 22:00:10.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.951" endtime="20201115 22:00:10.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.948" endtime="20201115 22:00:10.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.543" endtime="20201115 22:00:10.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.844" endtime="20201115 22:00:10.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.843" endtime="20201115 22:00:10.974"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.976" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.985" endtime="20201115 22:00:11.017"></status>
</kw>
<msg timestamp="20201115 22:00:11.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.983" endtime="20201115 22:00:11.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.020" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.019" endtime="20201115 22:00:11.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.021" endtime="20201115 22:00:11.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.981" endtime="20201115 22:00:11.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.979" endtime="20201115 22:00:11.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.030" endtime="20201115 22:00:11.316"></status>
</kw>
<msg timestamp="20201115 22:00:11.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025977778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025988278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.029" endtime="20201115 22:00:11.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025977778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025988278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.321" endtime="20201115 22:00:11.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.328" endtime="20201115 22:00:11.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.026" endtime="20201115 22:00:11.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.024" endtime="20201115 22:00:11.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.335" level="INFO">${RESULT} = [{'time': 0.025988278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0500000000000093e-05, 'source_diff': 1.0500000000000093e-05}, {'time': 0.026339958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:11.332" endtime="20201115 22:00:11.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.349" level="INFO">${OVERHEAD} = {'diff': [1.0500000000000093e-05, 1.0486000000000523e-05, 1.0500000000000093e-05, 1.0485999999997053e-05, 1.0486000000000523e-05, 1.0486000000000523e-05, 1.0527999999999232e-05, 1.0473000000000426e-05...</msg>
<status status="PASS" starttime="20201115 22:00:11.336" endtime="20201115 22:00:11.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.353" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:11.352" endtime="20201115 22:00:11.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.356" level="INFO">VALUE: [1.0500000000000093e-05, 1.0486000000000523e-05, 1.0500000000000093e-05, 1.0485999999997053e-05, 1.0486000000000523e-05, 1.0486000000000523e-05, 1.0527999999999232e-05, 1.0473000000000426e-05, 1.0473000000000426e-05, 1.0486000000000523e-05, 1.0513999999999663e-05, 1.0459000000000857e-05, 1.0486000000000523e-05, 1.0513999999999663e-05, 1.0445000000001287e-05, 1.0500000000000093e-05, 1.0513999999996193e-05, 1.0499999999996623e-05, 1.0500000000003562e-05, 1.0471999999997483e-05, 1.0513999999996193e-05, 1.0444000000005282e-05, 1.0485999999997053e-05, 1.0431000000005186e-05, 1.0471999999997483e-05, 1.0485999999997053e-05, 1.0473000000003896e-05, 1.0472999999996957e-05, 1.0514000000003132e-05, 1.0486000000003992e-05, 1.0430999999998247e-05, 1.0499999999996623e-05, 1.0528000000002702e-05, 1.0500000000003562e-05, 1.0471999999997483e-05, 1.051299999999672e-05, 1.0444999999997817e-05, 1.0485999999997053e-05, 1.0500000000003562e-05, 1.0541999999995333e-05, 1.0472999999996957e-05, 1.0486000000003992e-05, 1.0457999999997913e-05, 1.0500000000003562e-05, 1.0472000000004422e-05, 1.0485999999997053e-05, 1.0499999999996623e-05, 1.0485999999997053e-05, 1.0499999999996623e-05, 1.0458000000004852e-05]</msg>
<status status="PASS" starttime="20201115 22:00:11.354" endtime="20201115 22:00:11.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.350" endtime="20201115 22:00:11.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.359" endtime="20201115 22:00:11.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.363" endtime="20201115 22:00:11.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.361" endtime="20201115 22:00:11.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.358" endtime="20201115 22:00:11.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.976" endtime="20201115 22:00:11.384"></status>
</kw>
<msg timestamp="20201115 22:00:11.384" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.393" endtime="20201115 22:00:11.423"></status>
</kw>
<msg timestamp="20201115 22:00:11.424" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.391" endtime="20201115 22:00:11.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.425" endtime="20201115 22:00:11.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.428" endtime="20201115 22:00:11.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.389" endtime="20201115 22:00:11.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.386" endtime="20201115 22:00:11.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.436" endtime="20201115 22:00:11.722"></status>
</kw>
<msg timestamp="20201115 22:00:11.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022707806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.435" endtime="20201115 22:00:11.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022707806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.727" endtime="20201115 22:00:11.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.735" endtime="20201115 22:00:11.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.432" endtime="20201115 22:00:11.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.431" endtime="20201115 22:00:11.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.741" level="INFO">${RESULT} = [{'time': 0.022718306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0500000000000093e-05, 'source_diff': 1.0500000000000093e-05}, {'time': 0.023072764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:11.738" endtime="20201115 22:00:11.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.755" level="INFO">${OVERHEAD} = {'diff': [1.0500000000000093e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0486000000000523e-05, 1.0554999999998899e-05, 1.0527999999999232e-05, 1.0555000000002368e-05, 1.0513999999999663e-05...</msg>
<status status="PASS" starttime="20201115 22:00:11.742" endtime="20201115 22:00:11.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.760" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:11.759" endtime="20201115 22:00:11.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.762" level="INFO">VALUE: [1.0500000000000093e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0486000000000523e-05, 1.0554999999998899e-05, 1.0527999999999232e-05, 1.0555000000002368e-05, 1.0513999999999663e-05, 1.0471999999997483e-05, 1.0486999999999996e-05, 1.0431000000001717e-05, 1.0556000000001842e-05, 1.0486000000000523e-05, 1.0500000000000093e-05, 1.0569999999997942e-05, 1.0458000000001383e-05, 1.0500000000000093e-05, 1.0513999999999663e-05, 1.0554999999998899e-05, 1.0499999999996623e-05, 1.0486999999999996e-05, 1.0472000000000953e-05, 1.0500000000000093e-05, 1.0513999999999663e-05, 1.0471999999997483e-05, 1.0555000000002368e-05, 1.0499999999996623e-05, 1.0472999999996957e-05, 1.0556000000001842e-05, 1.0485999999997053e-05, 1.0471999999997483e-05, 1.0499999999996623e-05, 1.0485999999997053e-05, 1.0514000000003132e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0485999999997053e-05, 1.0472999999996957e-05, 1.0499999999996623e-05, 1.0500000000003562e-05, 1.0500000000003562e-05, 1.0471999999997483e-05, 1.0486000000003992e-05, 1.0500000000003562e-05, 1.0472999999996957e-05, 1.0457999999997913e-05, 1.0500000000003562e-05, 1.0472999999996957e-05, 1.0500000000003562e-05, 1.0485999999997053e-05]</msg>
<status status="PASS" starttime="20201115 22:00:11.761" endtime="20201115 22:00:11.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.756" endtime="20201115 22:00:11.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.766" endtime="20201115 22:00:11.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.770" endtime="20201115 22:00:11.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.768" endtime="20201115 22:00:11.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.764" endtime="20201115 22:00:11.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.384" endtime="20201115 22:00:11.790"></status>
</kw>
<msg timestamp="20201115 22:00:11.791" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.800" endtime="20201115 22:00:11.830"></status>
</kw>
<msg timestamp="20201115 22:00:11.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.798" endtime="20201115 22:00:11.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.832" endtime="20201115 22:00:11.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.834" endtime="20201115 22:00:11.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.795" endtime="20201115 22:00:11.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.793" endtime="20201115 22:00:11.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.843" endtime="20201115 22:00:12.143"></status>
</kw>
<msg timestamp="20201115 22:00:12.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.841" endtime="20201115 22:00:12.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022856181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.152" endtime="20201115 22:00:12.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.170" endtime="20201115 22:00:12.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.839" endtime="20201115 22:00:12.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.837" endtime="20201115 22:00:12.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.180" level="INFO">${RESULT} = [{'time': 0.022856181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0486999999999996e-05, 'source_diff': 1.0486999999999996e-05}, {'time': 0.023209319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:12.176" endtime="20201115 22:00:12.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.194" level="INFO">${OVERHEAD} = {'diff': [1.0486999999999996e-05, 1.0486000000000523e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0514000000003132e-05, 1.0472000000000953e-05, 1.0486000000000523e-05, 1.0486000000000523e-05...</msg>
<status status="PASS" starttime="20201115 22:00:12.181" endtime="20201115 22:00:12.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.199" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:12.198" endtime="20201115 22:00:12.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.201" level="INFO">VALUE: [1.0486999999999996e-05, 1.0486000000000523e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0514000000003132e-05, 1.0472000000000953e-05, 1.0486000000000523e-05, 1.0486000000000523e-05, 1.0541999999998802e-05, 1.0513999999999663e-05, 1.0458000000001383e-05, 1.0486000000000523e-05, 1.0458000000001383e-05, 1.0500000000000093e-05, 1.0486000000000523e-05, 1.0473000000000426e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0486999999999996e-05, 1.0472000000000953e-05, 1.0485999999997053e-05, 1.0444000000001813e-05, 1.0486000000000523e-05, 1.0471999999997483e-05, 1.0473000000003896e-05, 1.0472000000004422e-05, 1.0486000000003992e-05, 1.0485999999997053e-05, 1.0444000000005282e-05, 1.0486999999996527e-05, 1.0513999999996193e-05, 1.0499999999996623e-05, 1.054099999999586e-05, 1.0486000000003992e-05, 1.0486000000003992e-05, 1.0500000000003562e-05, 1.0500000000003562e-05, 1.0443999999998343e-05, 1.0459000000004326e-05, 1.0499999999996623e-05, 1.0485999999997053e-05, 1.0485999999997053e-05, 1.0500000000003562e-05, 1.0555000000002368e-05, 1.0471999999997483e-05, 1.0499999999996623e-05, 1.0472000000004422e-05, 1.0570000000001412e-05, 1.0541999999995333e-05, 1.0459000000004326e-05]</msg>
<status status="PASS" starttime="20201115 22:00:12.200" endtime="20201115 22:00:12.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.195" endtime="20201115 22:00:12.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.204" endtime="20201115 22:00:12.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.208" endtime="20201115 22:00:12.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.206" endtime="20201115 22:00:12.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.203" endtime="20201115 22:00:12.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.791" endtime="20201115 22:00:12.229"></status>
</kw>
<msg timestamp="20201115 22:00:12.229" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.238" endtime="20201115 22:00:12.268"></status>
</kw>
<msg timestamp="20201115 22:00:12.268" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.236" endtime="20201115 22:00:12.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.269" endtime="20201115 22:00:12.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.272" endtime="20201115 22:00:12.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.234" endtime="20201115 22:00:12.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.231" endtime="20201115 22:00:12.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.281" endtime="20201115 22:00:12.569"></status>
</kw>
<msg timestamp="20201115 22:00:12.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02161625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:12.279" endtime="20201115 22:00:12.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02161625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:12.573" endtime="20201115 22:00:12.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.581" endtime="20201115 22:00:12.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.277" endtime="20201115 22:00:12.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.275" endtime="20201115 22:00:12.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.588" level="INFO">${RESULT} = [{'time': 0.021626736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.021976722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:12.585" endtime="20201115 22:00:12.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.602" level="INFO">${OVERHEAD} = {'diff': [1.0486000000000523e-05, 1.0472000000000953e-05, 1.0500000000000093e-05, 1.0429999999998774e-05, 1.0473000000000426e-05, 1.0514000000003132e-05, 1.0486000000000523e-05, 1.0500000000000093e-05...</msg>
<status status="PASS" starttime="20201115 22:00:12.589" endtime="20201115 22:00:12.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.606" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:12.605" endtime="20201115 22:00:12.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.609" level="INFO">VALUE: [1.0486000000000523e-05, 1.0472000000000953e-05, 1.0500000000000093e-05, 1.0429999999998774e-05, 1.0473000000000426e-05, 1.0514000000003132e-05, 1.0486000000000523e-05, 1.0500000000000093e-05, 1.0458000000001383e-05, 1.0486999999999996e-05, 1.0486000000000523e-05, 1.0486000000000523e-05, 1.0528000000002702e-05, 1.0457999999997913e-05, 1.0472000000000953e-05, 1.0472000000000953e-05, 1.0443999999998343e-05, 1.0486000000000523e-05, 1.0500000000000093e-05, 1.0457999999997913e-05, 1.0540999999999329e-05, 1.0500000000000093e-05, 1.0472000000000953e-05, 1.0513999999999663e-05, 1.0458000000001383e-05, 1.0430999999998247e-05, 1.0486999999999996e-05, 1.0472000000000953e-05, 1.0499999999996623e-05, 1.0499999999996623e-05, 1.0485999999997053e-05, 1.0500000000003562e-05, 1.0457999999997913e-05, 1.0472999999996957e-05, 1.0486000000003992e-05, 1.0486000000003992e-05, 1.0527999999995763e-05, 1.0458999999997387e-05, 1.0570000000001412e-05, 1.0500000000003562e-05, 1.0472999999996957e-05, 1.0499999999996623e-05, 1.0485999999997053e-05, 1.0499999999996623e-05, 1.0513999999996193e-05, 1.0542000000002272e-05, 1.0458000000004852e-05, 1.051299999999672e-05, 1.0457999999997913e-05, 1.0513999999996193e-05]</msg>
<status status="PASS" starttime="20201115 22:00:12.607" endtime="20201115 22:00:12.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.602" endtime="20201115 22:00:12.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.612" endtime="20201115 22:00:12.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.615" endtime="20201115 22:00:12.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.614" endtime="20201115 22:00:12.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.610" endtime="20201115 22:00:12.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.229" endtime="20201115 22:00:12.636"></status>
</kw>
<msg timestamp="20201115 22:00:12.636" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.645" endtime="20201115 22:00:12.674"></status>
</kw>
<msg timestamp="20201115 22:00:12.675" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.643" endtime="20201115 22:00:12.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.677" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.676" endtime="20201115 22:00:12.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.678" endtime="20201115 22:00:12.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.641" endtime="20201115 22:00:12.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.639" endtime="20201115 22:00:12.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.687" endtime="20201115 22:00:12.975"></status>
</kw>
<msg timestamp="20201115 22:00:12.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021408528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021419014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.686" endtime="20201115 22:00:12.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021408528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021419014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.979" endtime="20201115 22:00:12.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.987" endtime="20201115 22:00:12.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.683" endtime="20201115 22:00:12.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.681" endtime="20201115 22:00:12.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.994" level="INFO">${RESULT} = [{'time': 0.021419014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.021768347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:12.991" endtime="20201115 22:00:12.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.008" level="INFO">${OVERHEAD} = {'diff': [1.0486000000000523e-05, 1.0569000000001938e-05, 1.0500000000000093e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0513999999999663e-05, 1.0459000000000857e-05...</msg>
<status status="PASS" starttime="20201115 22:00:12.995" endtime="20201115 22:00:13.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.012" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:13.011" endtime="20201115 22:00:13.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.015" level="INFO">VALUE: [1.0486000000000523e-05, 1.0569000000001938e-05, 1.0500000000000093e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0513999999999663e-05, 1.0459000000000857e-05, 1.0485999999997053e-05, 1.0513999999999663e-05, 1.0500000000000093e-05, 1.0486000000000523e-05, 1.0459000000000857e-05, 1.0513999999999663e-05, 1.0486000000000523e-05, 1.0486000000000523e-05, 1.0459000000000857e-05, 1.0513999999999663e-05, 1.0499999999996623e-05, 1.0485999999997053e-05, 1.0500000000000093e-05, 1.0513000000000189e-05, 1.0540999999999329e-05, 1.0486000000000523e-05, 1.0472999999996957e-05, 1.0444999999997817e-05, 1.0459000000000857e-05, 1.0472000000000953e-05, 1.0471999999997483e-05, 1.0500000000003562e-05, 1.0471999999997483e-05, 1.0528000000002702e-05, 1.0458999999997387e-05, 1.0443999999998343e-05, 1.0513999999996193e-05, 1.0415999999999204e-05, 1.0486000000003992e-05, 1.0568999999994999e-05, 1.0444999999997817e-05, 1.0556000000001842e-05, 1.0458000000004852e-05, 1.0499999999996623e-05, 1.0472000000004422e-05, 1.0500000000003562e-05, 1.0485999999997053e-05, 1.0457999999997913e-05, 1.0500000000003562e-05, 1.0458999999997387e-05, 1.0500000000003562e-05, 1.0485999999997053e-05]</msg>
<status status="PASS" starttime="20201115 22:00:13.013" endtime="20201115 22:00:13.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.009" endtime="20201115 22:00:13.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.018" endtime="20201115 22:00:13.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.021" endtime="20201115 22:00:13.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.020" endtime="20201115 22:00:13.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.016" endtime="20201115 22:00:13.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.637" endtime="20201115 22:00:13.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.975" endtime="20201115 22:00:13.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.974" endtime="20201115 22:00:13.042"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.045" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.053" endtime="20201115 22:00:13.087"></status>
</kw>
<msg timestamp="20201115 22:00:13.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.052" endtime="20201115 22:00:13.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.089" endtime="20201115 22:00:13.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.091" endtime="20201115 22:00:13.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.049" endtime="20201115 22:00:13.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.047" endtime="20201115 22:00:13.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.101" endtime="20201115 22:00:13.388"></status>
</kw>
<msg timestamp="20201115 22:00:13.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027175625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027186417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.099" endtime="20201115 22:00:13.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027175625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027186417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.392" endtime="20201115 22:00:13.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.400" endtime="20201115 22:00:13.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.096" endtime="20201115 22:00:13.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.095" endtime="20201115 22:00:13.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.407" level="INFO">${RESULT} = [{'time': 0.027186417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0792000000002522e-05, 'source_diff': 1.0792000000002522e-05}, {'time': 0.027565917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:13.403" endtime="20201115 22:00:13.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.420" level="INFO">${OVERHEAD} = {'diff': [1.0792000000002522e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0721999999997733e-05, 1.0750000000000343e-05, 1.0735999999997303e-05, 1.0707999999998163e-05...</msg>
<status status="PASS" starttime="20201115 22:00:13.408" endtime="20201115 22:00:13.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.425" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:13.424" endtime="20201115 22:00:13.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.427" level="INFO">VALUE: [1.0792000000002522e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0721999999997733e-05, 1.0750000000000343e-05, 1.0735999999997303e-05, 1.0707999999998163e-05, 1.0820000000001662e-05, 1.0707999999998163e-05, 1.0791999999999052e-05, 1.0819000000002188e-05, 1.0722999999997207e-05, 1.0708999999997637e-05, 1.0721999999997733e-05, 1.0721999999997733e-05, 1.0694999999998067e-05, 1.0736000000004242e-05, 1.0638999999999788e-05, 1.0708000000005102e-05, 1.0792000000002522e-05, 1.0735999999997303e-05, 1.0721999999997733e-05, 1.0750000000003812e-05, 1.0721999999997733e-05, 1.0749999999996873e-05, 1.0707999999998163e-05, 1.0722999999997207e-05, 1.0707999999998163e-05, 1.0666999999998927e-05, 1.0763999999996443e-05, 1.0707999999998163e-05, 1.0721999999997733e-05, 1.0735999999997303e-05, 1.0694000000005532e-05, 1.0721999999997733e-05, 1.0722999999997207e-05, 1.0778000000002952e-05, 1.0750000000003812e-05, 1.0819000000002188e-05, 1.0722000000004672e-05, 1.0750000000003812e-05, 1.0750000000003812e-05, 1.0750000000003812e-05, 1.0695000000005006e-05, 1.0749999999996873e-05, 1.0721999999997733e-05, 1.0721999999997733e-05, 1.0707999999998163e-05, 1.0709000000004576e-05]</msg>
<status status="PASS" starttime="20201115 22:00:13.426" endtime="20201115 22:00:13.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.421" endtime="20201115 22:00:13.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.431" endtime="20201115 22:00:13.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.434" endtime="20201115 22:00:13.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.432" endtime="20201115 22:00:13.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.429" endtime="20201115 22:00:13.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.045" endtime="20201115 22:00:13.455"></status>
</kw>
<msg timestamp="20201115 22:00:13.455" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.464" endtime="20201115 22:00:13.493"></status>
</kw>
<msg timestamp="20201115 22:00:13.494" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.462" endtime="20201115 22:00:13.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.497" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.495" endtime="20201115 22:00:13.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.498" endtime="20201115 22:00:13.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.460" endtime="20201115 22:00:13.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.458" endtime="20201115 22:00:13.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.507" endtime="20201115 22:00:13.793"></status>
</kw>
<msg timestamp="20201115 22:00:13.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021424917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021435681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.505" endtime="20201115 22:00:13.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021424917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021435681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.798" endtime="20201115 22:00:13.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.806" endtime="20201115 22:00:13.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.503" endtime="20201115 22:00:13.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.501" endtime="20201115 22:00:13.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.813" level="INFO">${RESULT} = [{'time': 0.021435681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0763999999999913e-05, 'source_diff': 1.0763999999999913e-05}, {'time': 0.021815431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:13.810" endtime="20201115 22:00:13.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.827" level="INFO">${OVERHEAD} = {'diff': [1.0763999999999913e-05, 1.0709000000001107e-05, 1.0707999999998163e-05, 1.0763999999999913e-05, 1.0735999999997303e-05, 1.0736000000000773e-05, 1.0722000000001203e-05, 1.0736000000000773e-05...</msg>
<status status="PASS" starttime="20201115 22:00:13.814" endtime="20201115 22:00:13.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.832" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:13.831" endtime="20201115 22:00:13.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.834" level="INFO">VALUE: [1.0763999999999913e-05, 1.0709000000001107e-05, 1.0707999999998163e-05, 1.0763999999999913e-05, 1.0735999999997303e-05, 1.0736000000000773e-05, 1.0722000000001203e-05, 1.0736000000000773e-05, 1.0777000000000009e-05, 1.0763999999999913e-05, 1.0805999999998622e-05, 1.0792000000002522e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0763000000000439e-05, 1.0737000000000246e-05, 1.0750000000000343e-05, 1.0679999999999024e-05, 1.0722000000001203e-05, 1.0735999999997303e-05, 1.0666999999998927e-05, 1.0736000000000773e-05, 1.0777999999999482e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0721999999997733e-05, 1.0749999999996873e-05, 1.0764000000003382e-05, 1.0764000000003382e-05, 1.0791000000003048e-05, 1.0721999999997733e-05, 1.0722000000004672e-05, 1.0693999999998594e-05, 1.0721999999997733e-05, 1.0764000000003382e-05, 1.0736000000004242e-05, 1.0707999999998163e-05, 1.0736000000004242e-05, 1.0665999999999454e-05, 1.0721999999997733e-05, 1.0764000000003382e-05, 1.0679999999999024e-05, 1.0750000000003812e-05, 1.0736000000004242e-05, 1.0736000000004242e-05, 1.0722000000004672e-05, 1.0723000000004146e-05, 1.0722999999997207e-05, 1.0708999999997637e-05]</msg>
<status status="PASS" starttime="20201115 22:00:13.833" endtime="20201115 22:00:13.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.828" endtime="20201115 22:00:13.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.837" endtime="20201115 22:00:13.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.841" endtime="20201115 22:00:13.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.839" endtime="20201115 22:00:13.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.835" endtime="20201115 22:00:13.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.455" endtime="20201115 22:00:13.861"></status>
</kw>
<msg timestamp="20201115 22:00:13.862" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.871" endtime="20201115 22:00:13.900"></status>
</kw>
<msg timestamp="20201115 22:00:13.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.869" endtime="20201115 22:00:13.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.901" endtime="20201115 22:00:13.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.904" endtime="20201115 22:00:13.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.867" endtime="20201115 22:00:13.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.864" endtime="20201115 22:00:13.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.913" endtime="20201115 22:00:14.202"></status>
</kw>
<msg timestamp="20201115 22:00:14.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.912" endtime="20201115 22:00:14.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.207" endtime="20201115 22:00:14.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.215" endtime="20201115 22:00:14.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.909" endtime="20201115 22:00:14.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.907" endtime="20201115 22:00:14.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.221" level="INFO">${RESULT} = [{'time': 0.021695236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0750000000000343e-05, 'source_diff': 1.0750000000000343e-05}, {'time': 0.022074542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:14.218" endtime="20201115 22:00:14.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.235" level="INFO">${OVERHEAD} = {'diff': [1.0750000000000343e-05, 1.0694999999998067e-05, 1.0723000000000676e-05, 1.0736000000000773e-05, 1.0694999999998067e-05, 1.0750000000000343e-05, 1.0721999999997733e-05, 1.0722000000001203e-05...</msg>
<status status="PASS" starttime="20201115 22:00:14.222" endtime="20201115 22:00:14.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.240" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:14.238" endtime="20201115 22:00:14.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.242" level="INFO">VALUE: [1.0750000000000343e-05, 1.0694999999998067e-05, 1.0723000000000676e-05, 1.0736000000000773e-05, 1.0694999999998067e-05, 1.0750000000000343e-05, 1.0721999999997733e-05, 1.0722000000001203e-05, 1.0750000000000343e-05, 1.0722000000001203e-05, 1.0681000000001967e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0749999999996873e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0721999999997733e-05, 1.0722000000001203e-05, 1.0708000000001633e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0652999999999357e-05, 1.0806000000002092e-05, 1.0763999999996443e-05, 1.0749999999996873e-05, 1.0749999999996873e-05, 1.0750000000003812e-05, 1.0764000000003382e-05, 1.0736000000004242e-05, 1.0721999999997733e-05, 1.0749999999996873e-05, 1.0749999999996873e-05, 1.0763999999996443e-05, 1.0763999999996443e-05, 1.0736000000004242e-05, 1.0735999999997303e-05, 1.0722000000004672e-05, 1.0679999999999024e-05, 1.0778000000002952e-05, 1.0764000000003382e-05, 1.0749999999996873e-05, 1.0735999999997303e-05, 1.0749999999996873e-05, 1.0750000000003812e-05, 1.0749999999996873e-05, 1.0736000000004242e-05, 1.0694999999998067e-05]</msg>
<status status="PASS" starttime="20201115 22:00:14.241" endtime="20201115 22:00:14.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.236" endtime="20201115 22:00:14.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.245" endtime="20201115 22:00:14.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.249" endtime="20201115 22:00:14.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.247" endtime="20201115 22:00:14.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.244" endtime="20201115 22:00:14.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.862" endtime="20201115 22:00:14.270"></status>
</kw>
<msg timestamp="20201115 22:00:14.270" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.279" endtime="20201115 22:00:14.313"></status>
</kw>
<msg timestamp="20201115 22:00:14.313" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.277" endtime="20201115 22:00:14.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.314" endtime="20201115 22:00:14.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.317" endtime="20201115 22:00:14.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.275" endtime="20201115 22:00:14.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.273" endtime="20201115 22:00:14.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.326" endtime="20201115 22:00:14.612"></status>
</kw>
<msg timestamp="20201115 22:00:14.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025138806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025149528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.324" endtime="20201115 22:00:14.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025138806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025149528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.616" endtime="20201115 22:00:14.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.625" endtime="20201115 22:00:14.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.322" endtime="20201115 22:00:14.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.320" endtime="20201115 22:00:14.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.631" level="INFO">${RESULT} = [{'time': 0.025149528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0722000000001203e-05, 'source_diff': 1.0722000000001203e-05}, {'time': 0.025529444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:14.628" endtime="20201115 22:00:14.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.645" level="INFO">${OVERHEAD} = {'diff': [1.0722000000001203e-05, 1.076299999999697e-05, 1.0723000000000676e-05, 1.0763000000000439e-05, 1.0681000000001967e-05, 1.0749999999996873e-05, 1.0763999999999913e-05, 1.0736000000000773e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:14.632" endtime="20201115 22:00:14.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.649" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:14.648" endtime="20201115 22:00:14.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.652" level="INFO">VALUE: [1.0722000000001203e-05, 1.076299999999697e-05, 1.0723000000000676e-05, 1.0763000000000439e-05, 1.0681000000001967e-05, 1.0749999999996873e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0722000000001203e-05, 1.0735999999997303e-05, 1.0695000000001537e-05, 1.0708000000001633e-05, 1.0763999999999913e-05, 1.0721999999997733e-05, 1.0693999999998594e-05, 1.076299999999697e-05, 1.0750000000003812e-05, 1.0735999999997303e-05, 1.0750000000003812e-05, 1.0708000000005102e-05, 1.0737000000003716e-05, 1.0749999999996873e-05, 1.0735999999997303e-05, 1.0763999999996443e-05, 1.0693999999998594e-05, 1.0735999999997303e-05, 1.0750000000003812e-05, 1.0736000000004242e-05, 1.0693999999998594e-05, 1.0721999999997733e-05, 1.0735999999997303e-05, 1.0722000000004672e-05, 1.0736999999996777e-05, 1.0707999999998163e-05, 1.0709000000004576e-05, 1.0764000000003382e-05, 1.0736000000004242e-05, 1.0735999999997303e-05, 1.0737000000003716e-05, 1.0735999999997303e-05, 1.0736000000004242e-05, 1.0778000000002952e-05, 1.0736999999996777e-05, 1.0721999999997733e-05, 1.0750000000003812e-05, 1.0763999999996443e-05, 1.0763999999996443e-05, 1.0777999999996013e-05, 1.0695000000005006e-05]</msg>
<status status="PASS" starttime="20201115 22:00:14.650" endtime="20201115 22:00:14.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.646" endtime="20201115 22:00:14.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.655" endtime="20201115 22:00:14.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.659" endtime="20201115 22:00:14.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.657" endtime="20201115 22:00:14.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.654" endtime="20201115 22:00:14.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.271" endtime="20201115 22:00:14.680"></status>
</kw>
<msg timestamp="20201115 22:00:14.680" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.689" endtime="20201115 22:00:14.719"></status>
</kw>
<msg timestamp="20201115 22:00:14.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.687" endtime="20201115 22:00:14.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.721" endtime="20201115 22:00:14.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.723" endtime="20201115 22:00:14.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.684" endtime="20201115 22:00:14.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.682" endtime="20201115 22:00:14.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.732" endtime="20201115 22:00:15.025"></status>
</kw>
<msg timestamp="20201115 22:00:15.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.731" endtime="20201115 22:00:15.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.034" endtime="20201115 22:00:15.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.052" endtime="20201115 22:00:15.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.728" endtime="20201115 22:00:15.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.726" endtime="20201115 22:00:15.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.066" level="INFO">${RESULT} = [{'time': 0.022374389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0763999999999913e-05, 'source_diff': 1.0763999999999913e-05}, {'time': 0.022756708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:15.059" endtime="20201115 22:00:15.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.097" level="INFO">${OVERHEAD} = {'diff': [1.0763999999999913e-05, 1.0679999999999024e-05, 1.0722000000001203e-05, 1.0708000000001633e-05, 1.0695000000001537e-05, 1.0722000000001203e-05, 1.0750000000000343e-05, 1.0750000000000343e-05...</msg>
<status status="PASS" starttime="20201115 22:00:15.069" endtime="20201115 22:00:15.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.103" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:15.102" endtime="20201115 22:00:15.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.105" level="INFO">VALUE: [1.0763999999999913e-05, 1.0679999999999024e-05, 1.0722000000001203e-05, 1.0708000000001633e-05, 1.0695000000001537e-05, 1.0722000000001203e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0764000000003382e-05, 1.0694000000002063e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0723000000000676e-05, 1.0749999999996873e-05, 1.0709000000001107e-05, 1.0707999999998163e-05, 1.0638999999999788e-05, 1.0735999999997303e-05, 1.0736000000000773e-05, 1.0695000000001537e-05, 1.0722999999997207e-05, 1.0721999999997733e-05, 1.0708999999997637e-05, 1.0736000000004242e-05, 1.0708000000005102e-05, 1.0736000000004242e-05, 1.0722999999997207e-05, 1.0721999999997733e-05, 1.0778000000002952e-05, 1.0764000000003382e-05, 1.0722999999997207e-05, 1.0722999999997207e-05, 1.0778000000002952e-05, 1.0764000000003382e-05, 1.0737000000003716e-05, 1.0736000000004242e-05, 1.0736999999996777e-05, 1.0736000000004242e-05, 1.0722000000004672e-05, 1.0736000000004242e-05, 1.0721999999997733e-05, 1.0749999999996873e-05, 1.0847000000001328e-05, 1.0707999999998163e-05, 1.0707999999998163e-05, 1.0708999999997637e-05]</msg>
<status status="PASS" starttime="20201115 22:00:15.104" endtime="20201115 22:00:15.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.099" endtime="20201115 22:00:15.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.109" endtime="20201115 22:00:15.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.112" endtime="20201115 22:00:15.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.111" endtime="20201115 22:00:15.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.107" endtime="20201115 22:00:15.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.680" endtime="20201115 22:00:15.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.044" endtime="20201115 22:00:15.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.043" endtime="20201115 22:00:15.134"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.136" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.145" endtime="20201115 22:00:15.182"></status>
</kw>
<msg timestamp="20201115 22:00:15.182" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.143" endtime="20201115 22:00:15.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.185" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.184" endtime="20201115 22:00:15.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.186" endtime="20201115 22:00:15.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.141" endtime="20201115 22:00:15.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.138" endtime="20201115 22:00:15.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.195" endtime="20201115 22:00:15.482"></status>
</kw>
<msg timestamp="20201115 22:00:15.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025966847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025977875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.193" endtime="20201115 22:00:15.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025966847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025977875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.486" endtime="20201115 22:00:15.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.494" endtime="20201115 22:00:15.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.191" endtime="20201115 22:00:15.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.189" endtime="20201115 22:00:15.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.501" level="INFO">${RESULT} = [{'time': 0.025977875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.026389056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:15.498" endtime="20201115 22:00:15.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.515" level="INFO">${OVERHEAD} = {'diff': [1.1027999999999732e-05, 1.0987000000000496e-05, 1.0972000000001453e-05, 1.0958000000001883e-05, 1.0985999999997553e-05, 1.0986000000001023e-05, 1.1014000000000163e-05, 1.0959000000001357e-05...</msg>
<status status="PASS" starttime="20201115 22:00:15.502" endtime="20201115 22:00:15.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.519" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:15.518" endtime="20201115 22:00:15.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.526" level="INFO">VALUE: [1.1027999999999732e-05, 1.0987000000000496e-05, 1.0972000000001453e-05, 1.0958000000001883e-05, 1.0985999999997553e-05, 1.0986000000001023e-05, 1.1014000000000163e-05, 1.0959000000001357e-05, 1.0943999999998844e-05, 1.0985999999997553e-05, 1.1000000000000593e-05, 1.0943999999998844e-05, 1.1000000000000593e-05, 1.0999999999997123e-05, 1.1069000000002438e-05, 1.0957999999998413e-05, 1.0929999999999274e-05, 1.0971999999997983e-05, 1.102699999999679e-05, 1.0930999999998747e-05, 1.0999999999997123e-05, 1.0957999999998413e-05, 1.0902000000000134e-05, 1.1000000000004062e-05, 1.0973000000004396e-05, 1.0971999999997983e-05, 1.0957999999998413e-05, 1.0973000000004396e-05, 1.0985999999997553e-05, 1.1013999999996693e-05, 1.1013999999996693e-05, 1.1014000000003632e-05, 1.0972000000004922e-05, 1.0999999999997123e-05, 1.0972000000004922e-05, 1.0972000000004922e-05, 1.0999999999997123e-05, 1.0957999999998413e-05, 1.1013999999996693e-05, 1.0972000000004922e-05, 1.0999999999997123e-05, 1.0985999999997553e-05, 1.0958999999997887e-05, 1.1028000000003202e-05, 1.1014000000003632e-05, 1.0999999999997123e-05, 1.0999999999997123e-05, 1.0958000000005352e-05, 1.0971999999997983e-05, 1.0999999999997123e-05]</msg>
<status status="PASS" starttime="20201115 22:00:15.520" endtime="20201115 22:00:15.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.516" endtime="20201115 22:00:15.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.530" endtime="20201115 22:00:15.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.533" endtime="20201115 22:00:15.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.531" endtime="20201115 22:00:15.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.528" endtime="20201115 22:00:15.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.136" endtime="20201115 22:00:15.554"></status>
</kw>
<msg timestamp="20201115 22:00:15.554" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.563" endtime="20201115 22:00:15.598"></status>
</kw>
<msg timestamp="20201115 22:00:15.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.561" endtime="20201115 22:00:15.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.599" endtime="20201115 22:00:15.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.602" endtime="20201115 22:00:15.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.559" endtime="20201115 22:00:15.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.557" endtime="20201115 22:00:15.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.611" endtime="20201115 22:00:15.914"></status>
</kw>
<msg timestamp="20201115 22:00:15.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.609" endtime="20201115 22:00:15.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.918" endtime="20201115 22:00:15.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.926" endtime="20201115 22:00:15.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.607" endtime="20201115 22:00:15.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.605" endtime="20201115 22:00:15.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.933" level="INFO">${RESULT} = [{'time': 0.022538569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0972000000001453e-05, 'source_diff': 1.0972000000001453e-05}, {'time': 0.022954861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:15.929" endtime="20201115 22:00:15.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.946" level="INFO">${OVERHEAD} = {'diff': [1.0972000000001453e-05, 1.1041999999999302e-05, 1.0986000000001023e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.0986000000001023e-05, 1.0944999999998317e-05, 1.0973000000000926e-05...</msg>
<status status="PASS" starttime="20201115 22:00:15.934" endtime="20201115 22:00:15.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.951" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:15.950" endtime="20201115 22:00:15.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.954" level="INFO">VALUE: [1.0972000000001453e-05, 1.1041999999999302e-05, 1.0986000000001023e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.0986000000001023e-05, 1.0944999999998317e-05, 1.0973000000000926e-05, 1.0972999999997457e-05, 1.0972000000001453e-05, 1.0944000000002313e-05, 1.0987000000000496e-05, 1.0999999999997123e-05, 1.0959000000001357e-05, 1.0987000000000496e-05, 1.1000000000000593e-05, 1.0985999999997553e-05, 1.0915999999999704e-05, 1.0972000000001453e-05, 1.0957999999998413e-05, 1.0929999999999274e-05, 1.0987000000000496e-05, 1.0958999999997887e-05, 1.0944999999998317e-05, 1.0944999999998317e-05, 1.1014000000003632e-05, 1.0986000000004492e-05, 1.0986000000004492e-05, 1.0957999999998413e-05, 1.0985999999997553e-05, 1.0959000000004826e-05, 1.1014000000003632e-05, 1.0972000000004922e-05, 1.1041999999995833e-05, 1.0986999999997027e-05, 1.0971999999997983e-05, 1.0916999999999177e-05, 1.0985999999997553e-05, 1.0957999999998413e-05, 1.0986000000004492e-05, 1.1014000000003632e-05, 1.0902999999999607e-05, 1.0986000000004492e-05, 1.0985999999997553e-05, 1.0958000000005352e-05, 1.1000000000004062e-05, 1.0945000000005256e-05, 1.0999999999997123e-05, 1.0987000000003966e-05, 1.1013000000004158e-05]</msg>
<status status="PASS" starttime="20201115 22:00:15.952" endtime="20201115 22:00:15.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.948" endtime="20201115 22:00:15.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.957" endtime="20201115 22:00:15.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.960" endtime="20201115 22:00:15.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.959" endtime="20201115 22:00:15.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.955" endtime="20201115 22:00:15.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.554" endtime="20201115 22:00:15.981"></status>
</kw>
<msg timestamp="20201115 22:00:15.981" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.990" endtime="20201115 22:00:16.025"></status>
</kw>
<msg timestamp="20201115 22:00:16.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.989" endtime="20201115 22:00:16.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.026" endtime="20201115 22:00:16.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.029" endtime="20201115 22:00:16.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.986" endtime="20201115 22:00:16.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.984" endtime="20201115 22:00:16.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.038" endtime="20201115 22:00:16.324"></status>
</kw>
<msg timestamp="20201115 22:00:16.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.036" endtime="20201115 22:00:16.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.329" endtime="20201115 22:00:16.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.336" endtime="20201115 22:00:16.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.034" endtime="20201115 22:00:16.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.032" endtime="20201115 22:00:16.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.344" level="INFO">${RESULT} = [{'time': 0.022001569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0985999999997553e-05, 'source_diff': 1.0985999999997553e-05}, {'time': 0.022417444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:16.340" endtime="20201115 22:00:16.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.357" level="INFO">${OVERHEAD} = {'diff': [1.0985999999997553e-05, 1.0958000000001883e-05, 1.1000000000000593e-05, 1.0957999999998413e-05, 1.1014000000000163e-05, 1.0987000000000496e-05, 1.1014000000000163e-05, 1.0957999999998413e-05...</msg>
<status status="PASS" starttime="20201115 22:00:16.345" endtime="20201115 22:00:16.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.362" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:16.361" endtime="20201115 22:00:16.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.364" level="INFO">VALUE: [1.0985999999997553e-05, 1.0958000000001883e-05, 1.1000000000000593e-05, 1.0957999999998413e-05, 1.1014000000000163e-05, 1.0987000000000496e-05, 1.1014000000000163e-05, 1.0957999999998413e-05, 1.0987000000000496e-05, 1.0958000000001883e-05, 1.1014000000000163e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.1000000000000593e-05, 1.0972999999997457e-05, 1.0929999999999274e-05, 1.0986000000001023e-05, 1.0972000000001453e-05, 1.0987000000000496e-05, 1.1014000000000163e-05, 1.1083000000002008e-05, 1.0986000000001023e-05, 1.1000000000000593e-05, 1.0987000000003966e-05, 1.0985999999997553e-05, 1.0985999999997553e-05, 1.1013000000004158e-05, 1.0957999999998413e-05, 1.0957999999998413e-05, 1.0972999999997457e-05, 1.0985999999997553e-05, 1.0985999999997553e-05, 1.0973000000004396e-05, 1.0902999999999607e-05, 1.0986000000004492e-05, 1.1027999999996263e-05, 1.0957999999998413e-05, 1.0972000000004922e-05, 1.0987000000003966e-05, 1.1069000000002438e-05, 1.1014000000003632e-05, 1.1000000000004062e-05, 1.0971999999997983e-05, 1.0971999999997983e-05, 1.0999999999997123e-05, 1.1000000000004062e-05, 1.1000000000004062e-05, 1.0959000000004826e-05, 1.1000000000004062e-05, 1.0943999999998844e-05]</msg>
<status status="PASS" starttime="20201115 22:00:16.363" endtime="20201115 22:00:16.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.358" endtime="20201115 22:00:16.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.367" endtime="20201115 22:00:16.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.371" endtime="20201115 22:00:16.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.369" endtime="20201115 22:00:16.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.366" endtime="20201115 22:00:16.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.982" endtime="20201115 22:00:16.392"></status>
</kw>
<msg timestamp="20201115 22:00:16.392" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.401" endtime="20201115 22:00:16.436"></status>
</kw>
<msg timestamp="20201115 22:00:16.437" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.399" endtime="20201115 22:00:16.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.438" endtime="20201115 22:00:16.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.440" endtime="20201115 22:00:16.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.397" endtime="20201115 22:00:16.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.394" endtime="20201115 22:00:16.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.449" endtime="20201115 22:00:16.736"></status>
</kw>
<msg timestamp="20201115 22:00:16.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023609264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.448" endtime="20201115 22:00:16.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023609264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.740" endtime="20201115 22:00:16.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.749" endtime="20201115 22:00:16.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.445" endtime="20201115 22:00:16.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.443" endtime="20201115 22:00:16.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.756" level="INFO">${RESULT} = [{'time': 0.023620222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0957999999998413e-05, 'source_diff': 1.0957999999998413e-05}, {'time': 0.024034903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:16.752" endtime="20201115 22:00:16.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.769" level="INFO">${OVERHEAD} = {'diff': [1.0957999999998413e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.1014000000000163e-05, 1.0972000000001453e-05, 1.1000000000000593e-05, 1.1027000000000259e-05, 1.0986000000001023e-05...</msg>
<status status="PASS" starttime="20201115 22:00:16.757" endtime="20201115 22:00:16.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.774" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:16.773" endtime="20201115 22:00:16.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.776" level="INFO">VALUE: [1.0957999999998413e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.1014000000000163e-05, 1.0972000000001453e-05, 1.1000000000000593e-05, 1.1027000000000259e-05, 1.0986000000001023e-05, 1.0987000000000496e-05, 1.0985999999997553e-05, 1.0986000000001023e-05, 1.0943999999998844e-05, 1.0986000000001023e-05, 1.0971999999997983e-05, 1.0986000000001023e-05, 1.0971999999997983e-05, 1.0972000000001453e-05, 1.1000000000000593e-05, 1.1000000000000593e-05, 1.0971999999997983e-05, 1.1000000000004062e-05, 1.0971999999997983e-05, 1.0999999999997123e-05, 1.1028000000003202e-05, 1.0957999999998413e-05, 1.1000000000004062e-05, 1.0972000000004922e-05, 1.1027999999996263e-05, 1.0986000000004492e-05, 1.0973000000004396e-05, 1.101299999999722e-05, 1.0985999999997553e-05, 1.0986000000004492e-05, 1.0999999999997123e-05, 1.0999999999997123e-05, 1.0985999999997553e-05, 1.1042000000002772e-05, 1.1027000000003728e-05, 1.0986000000004492e-05, 1.1014000000003632e-05, 1.0971999999997983e-05, 1.1013999999996693e-05, 1.1000000000004062e-05, 1.1014000000003632e-05, 1.0986000000004492e-05, 1.0929999999999274e-05, 1.0985999999997553e-05, 1.0971999999997983e-05, 1.0985999999997553e-05, 1.1000000000004062e-05]</msg>
<status status="PASS" starttime="20201115 22:00:16.775" endtime="20201115 22:00:16.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.770" endtime="20201115 22:00:16.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.779" endtime="20201115 22:00:16.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.783" endtime="20201115 22:00:16.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.781" endtime="20201115 22:00:16.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.778" endtime="20201115 22:00:16.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.392" endtime="20201115 22:00:16.803"></status>
</kw>
<msg timestamp="20201115 22:00:16.804" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.813" endtime="20201115 22:00:16.849"></status>
</kw>
<msg timestamp="20201115 22:00:16.850" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.811" endtime="20201115 22:00:16.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.852" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.851" endtime="20201115 22:00:16.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.853" endtime="20201115 22:00:16.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.808" endtime="20201115 22:00:16.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.806" endtime="20201115 22:00:16.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.862" endtime="20201115 22:00:17.149"></status>
</kw>
<msg timestamp="20201115 22:00:17.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023632514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023643486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.861" endtime="20201115 22:00:17.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023632514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023643486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.154" endtime="20201115 22:00:17.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.162" endtime="20201115 22:00:17.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.858" endtime="20201115 22:00:17.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.856" endtime="20201115 22:00:17.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.169" level="INFO">${RESULT} = [{'time': 0.023643486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0971999999997983e-05, 'source_diff': 1.0971999999997983e-05}, {'time': 0.024056764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:17.165" endtime="20201115 22:00:17.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.182" level="INFO">${OVERHEAD} = {'diff': [1.0971999999997983e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.0985999999997553e-05, 1.1041999999999302e-05, 1.1000000000000593e-05, 1.1000000000000593e-05, 1.1000000000000593e-05...</msg>
<status status="PASS" starttime="20201115 22:00:17.170" endtime="20201115 22:00:17.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.187" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:17.186" endtime="20201115 22:00:17.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.189" level="INFO">VALUE: [1.0971999999997983e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.0985999999997553e-05, 1.1041999999999302e-05, 1.1000000000000593e-05, 1.1000000000000593e-05, 1.1000000000000593e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.0973000000000926e-05, 1.1000000000000593e-05, 1.0986000000001023e-05, 1.0986000000001023e-05, 1.1014000000000163e-05, 1.0958000000001883e-05, 1.1014000000000163e-05, 1.0986000000001023e-05, 1.0943999999998844e-05, 1.0972000000004922e-05, 1.1000000000004062e-05, 1.0958999999997887e-05, 1.0971999999997983e-05, 1.0972000000004922e-05, 1.0972999999997457e-05, 1.0999999999997123e-05, 1.102699999999679e-05, 1.101299999999722e-05, 1.1055999999995403e-05, 1.0944999999998317e-05, 1.0972000000004922e-05, 1.0972000000004922e-05, 1.0972000000004922e-05, 1.0985999999997553e-05, 1.0971999999997983e-05, 1.0958999999997887e-05, 1.0972000000004922e-05, 1.0999999999997123e-05, 1.1027000000003728e-05, 1.0971999999997983e-05, 1.1000000000004062e-05, 1.0985999999997553e-05, 1.0985999999997553e-05, 1.0985999999997553e-05, 1.0944999999998317e-05, 1.0986000000004492e-05, 1.0999999999997123e-05, 1.0943999999998844e-05, 1.0985999999997553e-05, 1.0986999999997027e-05]</msg>
<status status="PASS" starttime="20201115 22:00:17.188" endtime="20201115 22:00:17.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.183" endtime="20201115 22:00:17.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.192" endtime="20201115 22:00:17.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.196" endtime="20201115 22:00:17.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.194" endtime="20201115 22:00:17.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.191" endtime="20201115 22:00:17.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.804" endtime="20201115 22:00:17.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.135" endtime="20201115 22:00:17.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.134" endtime="20201115 22:00:17.217"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.219" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.228" endtime="20201115 22:00:17.271"></status>
</kw>
<msg timestamp="20201115 22:00:17.272" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.226" endtime="20201115 22:00:17.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.274" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.273" endtime="20201115 22:00:17.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.275" endtime="20201115 22:00:17.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.224" endtime="20201115 22:00:17.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.222" endtime="20201115 22:00:17.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.285" endtime="20201115 22:00:17.572"></status>
</kw>
<msg timestamp="20201115 22:00:17.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027642792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027654069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.283" endtime="20201115 22:00:17.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027642792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027654069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.576" endtime="20201115 22:00:17.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.584" endtime="20201115 22:00:17.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.281" endtime="20201115 22:00:17.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.279" endtime="20201115 22:00:17.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.591" level="INFO">${RESULT} = [{'time': 0.027654069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1277000000000509e-05, 'source_diff': 1.1277000000000509e-05}, {'time': 0.028097625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:17.588" endtime="20201115 22:00:17.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.605" level="INFO">${OVERHEAD} = {'diff': [1.1277000000000509e-05, 1.1222000000001703e-05, 1.1208999999998137e-05, 1.1207999999998663e-05, 1.1250000000000843e-05, 1.1209000000001607e-05, 1.1208999999998137e-05, 1.1208999999998137e-05...</msg>
<status status="PASS" starttime="20201115 22:00:17.592" endtime="20201115 22:00:17.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.609" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:17.608" endtime="20201115 22:00:17.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.612" level="INFO">VALUE: [1.1277000000000509e-05, 1.1222000000001703e-05, 1.1208999999998137e-05, 1.1207999999998663e-05, 1.1250000000000843e-05, 1.1209000000001607e-05, 1.1208999999998137e-05, 1.1208999999998137e-05, 1.1236000000001273e-05, 1.1250000000004312e-05, 1.1194000000006032e-05, 1.1235999999997803e-05, 1.1193999999999094e-05, 1.1250000000004312e-05, 1.1222000000005172e-05, 1.1235999999997803e-05, 1.1207999999998663e-05, 1.1277999999996513e-05, 1.1221999999998233e-05, 1.1249999999997373e-05, 1.1236999999997277e-05, 1.1207999999998663e-05, 1.1249999999997373e-05, 1.1250000000004312e-05, 1.1194000000006032e-05, 1.1306000000002592e-05, 1.1250000000004312e-05, 1.1249999999997373e-05, 1.1235999999997803e-05, 1.1235999999997803e-05, 1.1221999999998233e-05, 1.1250000000004312e-05, 1.1166999999999427e-05, 1.1264000000003882e-05, 1.1237000000004216e-05, 1.1249999999997373e-05, 1.1264000000003882e-05, 1.1207999999998663e-05, 1.1236000000004742e-05, 1.1236000000004742e-05, 1.1250000000004312e-05, 1.1235999999997803e-05, 1.1221999999998233e-05, 1.1263999999996943e-05, 1.1235999999997803e-05, 1.1250000000004312e-05, 1.1278000000003452e-05, 1.1221999999998233e-05, 1.1263999999996943e-05, 1.1249999999997373e-05]</msg>
<status status="PASS" starttime="20201115 22:00:17.610" endtime="20201115 22:00:17.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.605" endtime="20201115 22:00:17.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.615" endtime="20201115 22:00:17.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.618" endtime="20201115 22:00:17.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.617" endtime="20201115 22:00:17.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.613" endtime="20201115 22:00:17.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.220" endtime="20201115 22:00:17.639"></status>
</kw>
<msg timestamp="20201115 22:00:17.639" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.648" endtime="20201115 22:00:17.683"></status>
</kw>
<msg timestamp="20201115 22:00:17.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.646" endtime="20201115 22:00:17.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.686" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.685" endtime="20201115 22:00:17.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.687" endtime="20201115 22:00:17.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.644" endtime="20201115 22:00:17.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.642" endtime="20201115 22:00:17.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.696" endtime="20201115 22:00:17.983"></status>
</kw>
<msg timestamp="20201115 22:00:17.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.695" endtime="20201115 22:00:17.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.987" endtime="20201115 22:00:17.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.995" endtime="20201115 22:00:17.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.692" endtime="20201115 22:00:17.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.691" endtime="20201115 22:00:17.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.002" level="INFO">${RESULT} = [{'time': 0.022219861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.022666639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:17.999" endtime="20201115 22:00:18.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.016" level="INFO">${OVERHEAD} = {'diff': [1.1250000000000843e-05, 1.1249999999997373e-05, 1.1165999999999954e-05, 1.1223000000001176e-05, 1.1208999999998137e-05, 1.1207999999998663e-05, 1.1208999999998137e-05, 1.1207999999998663e-05...</msg>
<status status="PASS" starttime="20201115 22:00:18.003" endtime="20201115 22:00:18.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.020" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:18.019" endtime="20201115 22:00:18.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.023" level="INFO">VALUE: [1.1250000000000843e-05, 1.1249999999997373e-05, 1.1165999999999954e-05, 1.1223000000001176e-05, 1.1208999999998137e-05, 1.1207999999998663e-05, 1.1208999999998137e-05, 1.1207999999998663e-05, 1.1250000000000843e-05, 1.1263999999996943e-05, 1.1221999999998233e-05, 1.1250000000000843e-05, 1.1221999999998233e-05, 1.1235999999997803e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1236000000001273e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1181000000002467e-05, 1.1250000000004312e-05, 1.1235999999997803e-05, 1.1249999999997373e-05, 1.1221999999998233e-05, 1.1250000000004312e-05, 1.1235999999997803e-05, 1.1209000000005076e-05, 1.127699999999704e-05, 1.1208999999998137e-05, 1.1250000000004312e-05, 1.1236000000004742e-05, 1.1249999999997373e-05, 1.1235999999997803e-05, 1.1249999999997373e-05, 1.1237000000004216e-05, 1.1235999999997803e-05, 1.1221999999998233e-05, 1.1236000000004742e-05, 1.1263999999996943e-05, 1.1264000000003882e-05, 1.1235999999997803e-05, 1.1250000000004312e-05, 1.1249999999997373e-05, 1.1209000000005076e-05, 1.1208999999998137e-05, 1.1249999999997373e-05, 1.1221999999998233e-05, 1.1235999999997803e-05, 1.1221999999998233e-05]</msg>
<status status="PASS" starttime="20201115 22:00:18.021" endtime="20201115 22:00:18.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.016" endtime="20201115 22:00:18.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.026" endtime="20201115 22:00:18.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.029" endtime="20201115 22:00:18.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.028" endtime="20201115 22:00:18.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.024" endtime="20201115 22:00:18.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.640" endtime="20201115 22:00:18.050"></status>
</kw>
<msg timestamp="20201115 22:00:18.050" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.060" endtime="20201115 22:00:18.096"></status>
</kw>
<msg timestamp="20201115 22:00:18.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.058" endtime="20201115 22:00:18.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.099" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.097" endtime="20201115 22:00:18.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.100" endtime="20201115 22:00:18.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.055" endtime="20201115 22:00:18.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.053" endtime="20201115 22:00:18.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.109" endtime="20201115 22:00:18.395"></status>
</kw>
<msg timestamp="20201115 22:00:18.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023039417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023050653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.107" endtime="20201115 22:00:18.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023039417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023050653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.399" endtime="20201115 22:00:18.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.408" endtime="20201115 22:00:18.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.105" endtime="20201115 22:00:18.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.103" endtime="20201115 22:00:18.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.414" level="INFO">${RESULT} = [{'time': 0.023050653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1236000000001273e-05, 'source_diff': 1.1236000000001273e-05}, {'time': 0.023494167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:18.411" endtime="20201115 22:00:18.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.428" level="INFO">${OVERHEAD} = {'diff': [1.1236000000001273e-05, 1.1208999999998137e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1249999999997373e-05, 1.1235999999997803e-05, 1.1208000000002133e-05, 1.1250000000000843e-05...</msg>
<status status="PASS" starttime="20201115 22:00:18.415" endtime="20201115 22:00:18.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.433" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:18.432" endtime="20201115 22:00:18.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.435" level="INFO">VALUE: [1.1236000000001273e-05, 1.1208999999998137e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1249999999997373e-05, 1.1235999999997803e-05, 1.1208000000002133e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1235999999997803e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1235999999997803e-05, 1.1165999999999954e-05, 1.1264000000000413e-05, 1.1208000000002133e-05, 1.1222000000001703e-05, 1.1236000000001273e-05, 1.1207999999998663e-05, 1.1195000000005506e-05, 1.1221999999998233e-05, 1.1235999999997803e-05, 1.1222999999997707e-05, 1.1221999999998233e-05, 1.1236000000004742e-05, 1.1235999999997803e-05, 1.1236000000004742e-05, 1.1250000000004312e-05, 1.1221999999998233e-05, 1.1249999999997373e-05, 1.1263999999996943e-05, 1.1221999999998233e-05, 1.1236000000004742e-05, 1.1235999999997803e-05, 1.1250000000004312e-05, 1.1222000000005172e-05, 1.1221999999998233e-05, 1.1193999999999094e-05, 1.1236000000004742e-05, 1.1250000000004312e-05, 1.1249999999997373e-05, 1.1222999999997707e-05, 1.1125000000000718e-05, 1.1222000000005172e-05, 1.1235999999997803e-05, 1.1249999999997373e-05, 1.1235999999997803e-05, 1.1263999999996943e-05, 1.1222999999997707e-05, 1.1278000000003452e-05]</msg>
<status status="PASS" starttime="20201115 22:00:18.434" endtime="20201115 22:00:18.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.429" endtime="20201115 22:00:18.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.438" endtime="20201115 22:00:18.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.442" endtime="20201115 22:00:18.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.440" endtime="20201115 22:00:18.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.437" endtime="20201115 22:00:18.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.051" endtime="20201115 22:00:18.463"></status>
</kw>
<msg timestamp="20201115 22:00:18.463" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.472" endtime="20201115 22:00:18.507"></status>
</kw>
<msg timestamp="20201115 22:00:18.508" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.471" endtime="20201115 22:00:18.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.510" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.509" endtime="20201115 22:00:18.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.511" endtime="20201115 22:00:18.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.468" endtime="20201115 22:00:18.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.466" endtime="20201115 22:00:18.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.520" endtime="20201115 22:00:18.823"></status>
</kw>
<msg timestamp="20201115 22:00:18.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.519" endtime="20201115 22:00:18.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.833" endtime="20201115 22:00:18.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.844" endtime="20201115 22:00:18.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.516" endtime="20201115 22:00:18.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.515" endtime="20201115 22:00:18.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.851" level="INFO">${RESULT} = [{'time': 0.021999361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.022447403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:18.848" endtime="20201115 22:00:18.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.865" level="INFO">${OVERHEAD} = {'diff': [1.1277999999999982e-05, 1.1222000000001703e-05, 1.1250000000000843e-05, 1.1194999999998567e-05, 1.1306000000002592e-05, 1.1207999999998663e-05, 1.1264000000000413e-05, 1.1209000000001607e-05...</msg>
<status status="PASS" starttime="20201115 22:00:18.852" endtime="20201115 22:00:18.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.869" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:18.868" endtime="20201115 22:00:18.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.872" level="INFO">VALUE: [1.1277999999999982e-05, 1.1222000000001703e-05, 1.1250000000000843e-05, 1.1194999999998567e-05, 1.1306000000002592e-05, 1.1207999999998663e-05, 1.1264000000000413e-05, 1.1209000000001607e-05, 1.1194999999998567e-05, 1.1221999999998233e-05, 1.1193999999999094e-05, 1.1166999999999427e-05, 1.1249999999997373e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1291000000000079e-05, 1.1250000000000843e-05, 1.1208999999998137e-05, 1.1235999999997803e-05, 1.1207999999998663e-05, 1.1250000000000843e-05, 1.1221999999998233e-05, 1.1222000000005172e-05, 1.1306000000002592e-05, 1.1208000000005602e-05, 1.1263999999996943e-05, 1.1194000000006032e-05, 1.1193999999999094e-05, 1.1207999999998663e-05, 1.1194999999998567e-05, 1.1207999999998663e-05, 1.1263999999996943e-05, 1.1250000000004312e-05, 1.1222999999997707e-05, 1.1235999999997803e-05, 1.1250000000004312e-05, 1.1236000000004742e-05, 1.1263999999996943e-05, 1.1236000000004742e-05, 1.1193999999999094e-05, 1.1264000000003882e-05, 1.1249999999997373e-05, 1.1249999999997373e-05, 1.1249999999997373e-05, 1.1277999999996513e-05, 1.1263999999996943e-05, 1.1194999999998567e-05, 1.1263999999996943e-05, 1.1207999999998663e-05, 1.1250000000004312e-05]</msg>
<status status="PASS" starttime="20201115 22:00:18.870" endtime="20201115 22:00:18.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.866" endtime="20201115 22:00:18.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.875" endtime="20201115 22:00:18.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.879" endtime="20201115 22:00:18.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.877" endtime="20201115 22:00:18.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.874" endtime="20201115 22:00:18.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.464" endtime="20201115 22:00:18.900"></status>
</kw>
<msg timestamp="20201115 22:00:18.900" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.910" endtime="20201115 22:00:18.944"></status>
</kw>
<msg timestamp="20201115 22:00:18.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.908" endtime="20201115 22:00:18.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.946" endtime="20201115 22:00:18.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.948" endtime="20201115 22:00:18.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.905" endtime="20201115 22:00:18.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.903" endtime="20201115 22:00:18.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.957" endtime="20201115 22:00:19.245"></status>
</kw>
<msg timestamp="20201115 22:00:19.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022535222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.956" endtime="20201115 22:00:19.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022535222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.249" endtime="20201115 22:00:19.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.257" endtime="20201115 22:00:19.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.953" endtime="20201115 22:00:19.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.951" endtime="20201115 22:00:19.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.264" level="INFO">${RESULT} = [{'time': 0.022535222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.022978472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:19.260" endtime="20201115 22:00:19.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.277" level="INFO">${OVERHEAD} = {'diff': [1.1250000000000843e-05, 1.1264000000000413e-05, 1.1193999999999094e-05, 1.1306000000002592e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1236000000001273e-05...</msg>
<status status="PASS" starttime="20201115 22:00:19.265" endtime="20201115 22:00:19.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.282" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:19.281" endtime="20201115 22:00:19.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.284" level="INFO">VALUE: [1.1250000000000843e-05, 1.1264000000000413e-05, 1.1193999999999094e-05, 1.1306000000002592e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1222000000001703e-05, 1.1235999999997803e-05, 1.1221999999998233e-05, 1.1207999999998663e-05, 1.1209000000001607e-05, 1.1207999999998663e-05, 1.1236000000001273e-05, 1.1250000000000843e-05, 1.1222000000001703e-05, 1.1222999999997707e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.1223000000004646e-05, 1.1208000000005602e-05, 1.1235999999997803e-05, 1.1235999999997803e-05, 1.1235999999997803e-05, 1.1207999999998663e-05, 1.1236000000004742e-05, 1.1207999999998663e-05, 1.1250000000004312e-05, 1.1249999999997373e-05, 1.1249999999997373e-05, 1.1236000000004742e-05, 1.1235999999997803e-05, 1.1221999999998233e-05, 1.1249999999997373e-05, 1.1235999999997803e-05, 1.1209000000005076e-05, 1.1264000000003882e-05, 1.1207999999998663e-05, 1.1221999999998233e-05, 1.1235999999997803e-05, 1.1264000000003882e-05, 1.1208999999998137e-05, 1.1235999999997803e-05, 1.1249999999997373e-05, 1.1264000000003882e-05, 1.1237000000004216e-05, 1.1236999999997277e-05, 1.1208999999998137e-05, 1.1250000000004312e-05]</msg>
<status status="PASS" starttime="20201115 22:00:19.283" endtime="20201115 22:00:19.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.278" endtime="20201115 22:00:19.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.288" endtime="20201115 22:00:19.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.291" endtime="20201115 22:00:19.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.290" endtime="20201115 22:00:19.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.286" endtime="20201115 22:00:19.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.901" endtime="20201115 22:00:19.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.218" endtime="20201115 22:00:19.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.217" endtime="20201115 22:00:19.313"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.315" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.324" endtime="20201115 22:00:19.367"></status>
</kw>
<msg timestamp="20201115 22:00:19.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.322" endtime="20201115 22:00:19.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.368" endtime="20201115 22:00:19.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.371" endtime="20201115 22:00:19.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.319" endtime="20201115 22:00:19.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.317" endtime="20201115 22:00:19.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.380" endtime="20201115 22:00:19.667"></status>
</kw>
<msg timestamp="20201115 22:00:19.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027045514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027057028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.378" endtime="20201115 22:00:19.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027045514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027057028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.671" endtime="20201115 22:00:19.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.679" endtime="20201115 22:00:19.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.376" endtime="20201115 22:00:19.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.374" endtime="20201115 22:00:19.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.686" level="INFO">${RESULT} = [{'time': 0.027057028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.027531958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:19.683" endtime="20201115 22:00:19.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.700" level="INFO">${OVERHEAD} = {'diff': [1.1514000000000663e-05, 1.1457999999998913e-05, 1.1528000000000233e-05, 1.1486000000001523e-05, 1.1485999999998053e-05, 1.1430999999999247e-05, 1.1472000000001953e-05, 1.1486000000001523e-05...</msg>
<status status="PASS" starttime="20201115 22:00:19.687" endtime="20201115 22:00:19.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.704" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:19.703" endtime="20201115 22:00:19.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.707" level="INFO">VALUE: [1.1514000000000663e-05, 1.1457999999998913e-05, 1.1528000000000233e-05, 1.1486000000001523e-05, 1.1485999999998053e-05, 1.1430999999999247e-05, 1.1472000000001953e-05, 1.1486000000001523e-05, 1.1500000000001093e-05, 1.1471999999998483e-05, 1.1500000000004562e-05, 1.1499999999997623e-05, 1.1471999999998483e-05, 1.1486000000004992e-05, 1.1485999999998053e-05, 1.1500000000004562e-05, 1.152699999999729e-05, 1.1485999999998053e-05, 1.1499999999997623e-05, 1.1499999999997623e-05, 1.1444999999998817e-05, 1.1445000000005756e-05, 1.1500000000004562e-05, 1.1500000000004562e-05, 1.1443999999999344e-05, 1.1430999999999247e-05, 1.1416000000000204e-05, 1.1527999999996763e-05, 1.1403000000000107e-05, 1.1457999999998913e-05, 1.1457999999998913e-05, 1.1471999999998483e-05, 1.1499999999997623e-05, 1.1485999999998053e-05, 1.1499999999997623e-05, 1.1499999999997623e-05, 1.1416999999999677e-05, 1.1459000000005326e-05, 1.1513999999997193e-05, 1.1458999999998387e-05, 1.1458000000005852e-05, 1.1471999999998483e-05, 1.1458999999998387e-05, 1.1471999999998483e-05, 1.1472000000005422e-05, 1.1499999999997623e-05, 1.1485999999998053e-05, 1.1458999999998387e-05, 1.1485999999998053e-05, 1.1500000000004562e-05]</msg>
<status status="PASS" starttime="20201115 22:00:19.705" endtime="20201115 22:00:19.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.700" endtime="20201115 22:00:19.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.710" endtime="20201115 22:00:19.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.714" endtime="20201115 22:00:19.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.712" endtime="20201115 22:00:19.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.709" endtime="20201115 22:00:19.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.315" endtime="20201115 22:00:19.734"></status>
</kw>
<msg timestamp="20201115 22:00:19.735" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.744" endtime="20201115 22:00:19.778"></status>
</kw>
<msg timestamp="20201115 22:00:19.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.742" endtime="20201115 22:00:19.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.781" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.780" endtime="20201115 22:00:19.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.782" endtime="20201115 22:00:19.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.739" endtime="20201115 22:00:19.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.737" endtime="20201115 22:00:19.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.791" endtime="20201115 22:00:20.077"></status>
</kw>
<msg timestamp="20201115 22:00:20.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021706722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.790" endtime="20201115 22:00:20.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021706722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.082" endtime="20201115 22:00:20.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.090" endtime="20201115 22:00:20.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.787" endtime="20201115 22:00:20.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.786" endtime="20201115 22:00:20.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.096" level="INFO">${RESULT} = [{'time': 0.021706722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.022183194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:20.093" endtime="20201115 22:00:20.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.110" level="INFO">${OVERHEAD} = {'diff': [1.1486000000001523e-05, 1.1443999999999344e-05, 1.1458999999998387e-05, 1.1486000000001523e-05, 1.1541000000000329e-05, 1.1457999999998913e-05, 1.1416999999999677e-05, 1.1514000000000663e-05...</msg>
<status status="PASS" starttime="20201115 22:00:20.097" endtime="20201115 22:00:20.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.115" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:20.114" endtime="20201115 22:00:20.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.118" level="INFO">VALUE: [1.1486000000001523e-05, 1.1443999999999344e-05, 1.1458999999998387e-05, 1.1486000000001523e-05, 1.1541000000000329e-05, 1.1457999999998913e-05, 1.1416999999999677e-05, 1.1514000000000663e-05, 1.1471999999998483e-05, 1.1485999999998053e-05, 1.1471999999998483e-05, 1.1471999999998483e-05, 1.1471999999998483e-05, 1.1485999999998053e-05, 1.1471999999998483e-05, 1.1457999999998913e-05, 1.1555999999999372e-05, 1.1500000000001093e-05, 1.1430999999999247e-05, 1.1473000000001427e-05, 1.1514000000000663e-05, 1.1485999999998053e-05, 1.1499999999997623e-05, 1.1443999999999344e-05, 1.1457999999998913e-05, 1.1485999999998053e-05, 1.1499999999997623e-05, 1.1471999999998483e-05, 1.1485999999998053e-05, 1.1444999999998817e-05, 1.1486000000004992e-05, 1.1457999999998913e-05, 1.1444999999998817e-05, 1.1444999999998817e-05, 1.1485999999998053e-05, 1.1459000000005326e-05, 1.1485999999998053e-05, 1.1500000000004562e-05, 1.1499999999997623e-05, 1.1486000000004992e-05, 1.1471999999998483e-05, 1.1500000000004562e-05, 1.1499999999997623e-05, 1.1527999999996763e-05, 1.1500000000004562e-05, 1.1471999999998483e-05, 1.1485999999998053e-05, 1.1444999999998817e-05, 1.1500000000004562e-05, 1.1472999999997957e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.116" endtime="20201115 22:00:20.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.111" endtime="20201115 22:00:20.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.121" endtime="20201115 22:00:20.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.124" endtime="20201115 22:00:20.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.123" endtime="20201115 22:00:20.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.119" endtime="20201115 22:00:20.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.735" endtime="20201115 22:00:20.145"></status>
</kw>
<msg timestamp="20201115 22:00:20.145" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.154" endtime="20201115 22:00:20.190"></status>
</kw>
<msg timestamp="20201115 22:00:20.190" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.152" endtime="20201115 22:00:20.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.193" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.191" endtime="20201115 22:00:20.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.194" endtime="20201115 22:00:20.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.150" endtime="20201115 22:00:20.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.148" endtime="20201115 22:00:20.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.203" endtime="20201115 22:00:20.489"></status>
</kw>
<msg timestamp="20201115 22:00:20.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023298167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023309653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.201" endtime="20201115 22:00:20.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023298167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023309653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.493" endtime="20201115 22:00:20.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.501" endtime="20201115 22:00:20.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.199" endtime="20201115 22:00:20.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.197" endtime="20201115 22:00:20.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.508" level="INFO">${RESULT} = [{'time': 0.023309653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.023787347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:20.505" endtime="20201115 22:00:20.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.522" level="INFO">${OVERHEAD} = {'diff': [1.1485999999998053e-05, 1.1472000000001953e-05, 1.1457999999998913e-05, 1.1403000000000107e-05, 1.1514000000000663e-05, 1.1486000000001523e-05, 1.1443999999999344e-05, 1.1500000000001093e-05...</msg>
<status status="PASS" starttime="20201115 22:00:20.509" endtime="20201115 22:00:20.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.527" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:20.525" endtime="20201115 22:00:20.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.529" level="INFO">VALUE: [1.1485999999998053e-05, 1.1472000000001953e-05, 1.1457999999998913e-05, 1.1403000000000107e-05, 1.1514000000000663e-05, 1.1486000000001523e-05, 1.1443999999999344e-05, 1.1500000000001093e-05, 1.1500000000001093e-05, 1.1486000000001523e-05, 1.1500000000001093e-05, 1.1458000000002383e-05, 1.1429999999999774e-05, 1.1472000000001953e-05, 1.1486000000001523e-05, 1.1486000000001523e-05, 1.1485999999998053e-05, 1.1486000000004992e-05, 1.1513999999997193e-05, 1.1513000000004658e-05, 1.1444000000006282e-05, 1.151299999999772e-05, 1.1499999999997623e-05, 1.1486999999997527e-05, 1.1499999999997623e-05, 1.1472999999997957e-05, 1.1513999999997193e-05, 1.1500000000004562e-05, 1.1473000000004896e-05, 1.1528000000003702e-05, 1.1499999999997623e-05, 1.1472999999997957e-05, 1.1471999999998483e-05, 1.1527999999996763e-05, 1.1513999999997193e-05, 1.1499999999997623e-05, 1.1457999999998913e-05, 1.1472999999997957e-05, 1.1486000000004992e-05, 1.151299999999772e-05, 1.1486000000004992e-05, 1.1500000000004562e-05, 1.1472000000005422e-05, 1.1473000000004896e-05, 1.1486000000004992e-05, 1.1485999999998053e-05, 1.1486000000004992e-05, 1.1457999999998913e-05, 1.1486000000004992e-05, 1.1486999999997527e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.528" endtime="20201115 22:00:20.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.523" endtime="20201115 22:00:20.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.532" endtime="20201115 22:00:20.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.536" endtime="20201115 22:00:20.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.534" endtime="20201115 22:00:20.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.531" endtime="20201115 22:00:20.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.146" endtime="20201115 22:00:20.556"></status>
</kw>
<msg timestamp="20201115 22:00:20.557" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.566" endtime="20201115 22:00:20.603"></status>
</kw>
<msg timestamp="20201115 22:00:20.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.564" endtime="20201115 22:00:20.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.604" endtime="20201115 22:00:20.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.607" endtime="20201115 22:00:20.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.561" endtime="20201115 22:00:20.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.559" endtime="20201115 22:00:20.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.616" endtime="20201115 22:00:20.903"></status>
</kw>
<msg timestamp="20201115 22:00:20.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023734, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023745472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:20.614" endtime="20201115 22:00:20.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023734, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023745472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:20.908" endtime="20201115 22:00:20.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.920" endtime="20201115 22:00:20.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.612" endtime="20201115 22:00:20.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.610" endtime="20201115 22:00:20.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.928" level="INFO">${RESULT} = [{'time': 0.023745472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.024220639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:20.924" endtime="20201115 22:00:20.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.942" level="INFO">${OVERHEAD} = {'diff': [1.1471999999998483e-05, 1.1499999999997623e-05, 1.1458999999998387e-05, 1.1500000000001093e-05, 1.1444999999998817e-05, 1.1499999999997623e-05, 1.1513999999997193e-05, 1.1514000000000663e-05...</msg>
<status status="PASS" starttime="20201115 22:00:20.929" endtime="20201115 22:00:20.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.946" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:20.945" endtime="20201115 22:00:20.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.949" level="INFO">VALUE: [1.1471999999998483e-05, 1.1499999999997623e-05, 1.1458999999998387e-05, 1.1500000000001093e-05, 1.1444999999998817e-05, 1.1499999999997623e-05, 1.1513999999997193e-05, 1.1514000000000663e-05, 1.1485999999998053e-05, 1.1486000000001523e-05, 1.1499999999997623e-05, 1.1500000000001093e-05, 1.1528000000000233e-05, 1.1471999999998483e-05, 1.1471999999998483e-05, 1.1458000000002383e-05, 1.1472999999997957e-05, 1.1514000000004132e-05, 1.1485999999998053e-05, 1.1457999999998913e-05, 1.1486000000004992e-05, 1.1429999999999774e-05, 1.1430999999999247e-05, 1.1486000000004992e-05, 1.1457999999998913e-05, 1.1487000000004466e-05, 1.1457999999998913e-05, 1.1499999999997623e-05, 1.1444999999998817e-05, 1.1443999999999344e-05, 1.1514000000004132e-05, 1.1486000000004992e-05, 1.1471999999998483e-05, 1.1513999999997193e-05, 1.1472999999997957e-05, 1.1473000000004896e-05, 1.1486000000004992e-05, 1.1499999999997623e-05, 1.1527999999996763e-05, 1.1499999999997623e-05, 1.1471999999998483e-05, 1.1500000000004562e-05, 1.1527000000004228e-05, 1.1485999999998053e-05, 1.1500000000004562e-05, 1.1486000000004992e-05, 1.1485999999998053e-05, 1.1514000000004132e-05, 1.1473000000004896e-05, 1.1499999999997623e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.947" endtime="20201115 22:00:20.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.943" endtime="20201115 22:00:20.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.952" endtime="20201115 22:00:20.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.955" endtime="20201115 22:00:20.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.954" endtime="20201115 22:00:20.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.950" endtime="20201115 22:00:20.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.557" endtime="20201115 22:00:20.976"></status>
</kw>
<msg timestamp="20201115 22:00:20.976" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.985" endtime="20201115 22:00:21.019"></status>
</kw>
<msg timestamp="20201115 22:00:21.020" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.984" endtime="20201115 22:00:21.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.021" endtime="20201115 22:00:21.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.023" endtime="20201115 22:00:21.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.981" endtime="20201115 22:00:21.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.979" endtime="20201115 22:00:21.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.032" endtime="20201115 22:00:21.319"></status>
</kw>
<msg timestamp="20201115 22:00:21.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020966389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.031" endtime="20201115 22:00:21.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020966389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.323" endtime="20201115 22:00:21.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.331" endtime="20201115 22:00:21.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.028" endtime="20201115 22:00:21.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.026" endtime="20201115 22:00:21.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.338" level="INFO">${RESULT} = [{'time': 0.020966389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.021444264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:21.335" endtime="20201115 22:00:21.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.352" level="INFO">${OVERHEAD} = {'diff': [1.1457999999998913e-05, 1.1472000000001953e-05, 1.1528000000000233e-05, 1.1485999999998053e-05, 1.1528000000000233e-05, 1.1471999999998483e-05, 1.1445000000002287e-05, 1.1499999999997623e-05...</msg>
<status status="PASS" starttime="20201115 22:00:21.339" endtime="20201115 22:00:21.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.356" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:21.355" endtime="20201115 22:00:21.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.359" level="INFO">VALUE: [1.1457999999998913e-05, 1.1472000000001953e-05, 1.1528000000000233e-05, 1.1485999999998053e-05, 1.1528000000000233e-05, 1.1471999999998483e-05, 1.1445000000002287e-05, 1.1499999999997623e-05, 1.1486000000001523e-05, 1.1499999999997623e-05, 1.1457999999998913e-05, 1.1499999999997623e-05, 1.1500000000001093e-05, 1.1457999999998913e-05, 1.1471999999998483e-05, 1.1500000000001093e-05, 1.1471999999998483e-05, 1.1528000000000233e-05, 1.1500000000001093e-05, 1.1486000000001523e-05, 1.1486000000001523e-05, 1.1485999999998053e-05, 1.1514000000004132e-05, 1.1485999999998053e-05, 1.1430999999999247e-05, 1.1485999999998053e-05, 1.1443999999999344e-05, 1.1485999999998053e-05, 1.1499999999997623e-05, 1.1443999999999344e-05, 1.1485999999998053e-05, 1.1500000000004562e-05, 1.1471999999998483e-05, 1.1485999999998053e-05, 1.1416999999999677e-05, 1.1458999999998387e-05, 1.1513999999997193e-05, 1.1500000000004562e-05, 1.1499999999997623e-05, 1.1541999999996333e-05, 1.1471999999998483e-05, 1.1499999999997623e-05, 1.1513999999997193e-05, 1.1443999999999344e-05, 1.1499999999997623e-05, 1.1457999999998913e-05, 1.1444999999998817e-05, 1.1403000000000107e-05, 1.1457999999998913e-05, 1.1513999999997193e-05]</msg>
<status status="PASS" starttime="20201115 22:00:21.358" endtime="20201115 22:00:21.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.353" endtime="20201115 22:00:21.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.362" endtime="20201115 22:00:21.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.366" endtime="20201115 22:00:21.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.364" endtime="20201115 22:00:21.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.361" endtime="20201115 22:00:21.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.977" endtime="20201115 22:00:21.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.314" endtime="20201115 22:00:21.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.313" endtime="20201115 22:00:21.387"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.389" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.398" endtime="20201115 22:00:21.437"></status>
</kw>
<msg timestamp="20201115 22:00:21.437" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.396" endtime="20201115 22:00:21.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.440" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.438" endtime="20201115 22:00:21.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.441" endtime="20201115 22:00:21.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.394" endtime="20201115 22:00:21.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.391" endtime="20201115 22:00:21.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.450" endtime="20201115 22:00:21.752"></status>
</kw>
<msg timestamp="20201115 22:00:21.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.449" endtime="20201115 22:00:21.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.761" endtime="20201115 22:00:21.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.772" endtime="20201115 22:00:21.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.446" endtime="20201115 22:00:21.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.444" endtime="20201115 22:00:21.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.779" level="INFO">${RESULT} = [{'time': 0.022776625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1806000000003092e-05, 'source_diff': 1.1806000000003092e-05}, {'time': 0.023284806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:21.776" endtime="20201115 22:00:21.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.793" level="INFO">${OVERHEAD} = {'diff': [1.1806000000003092e-05, 1.1737000000001246e-05, 1.1723000000001677e-05, 1.1750000000001343e-05, 1.1693999999999594e-05, 1.1736000000001773e-05, 1.1763000000001439e-05, 1.1736000000001773e-05...</msg>
<status status="PASS" starttime="20201115 22:00:21.780" endtime="20201115 22:00:21.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.797" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:21.796" endtime="20201115 22:00:21.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.800" level="INFO">VALUE: [1.1806000000003092e-05, 1.1737000000001246e-05, 1.1723000000001677e-05, 1.1750000000001343e-05, 1.1693999999999594e-05, 1.1736000000001773e-05, 1.1763000000001439e-05, 1.1736000000001773e-05, 1.1806000000003092e-05, 1.1750000000001343e-05, 1.1792000000000052e-05, 1.1708999999998637e-05, 1.1680000000000024e-05, 1.1805999999999622e-05, 1.1749999999997873e-05, 1.1735999999998303e-05, 1.1736000000001773e-05, 1.1750000000004812e-05, 1.1736000000005242e-05, 1.177699999999754e-05, 1.1709000000005576e-05, 1.1736999999997777e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.1735999999998303e-05, 1.1736000000005242e-05, 1.1763999999997443e-05, 1.1750000000004812e-05, 1.1735999999998303e-05, 1.1666999999999927e-05, 1.1708999999998637e-05, 1.176299999999797e-05, 1.1721999999998733e-05, 1.1763999999997443e-05, 1.1721999999998733e-05, 1.1709000000005576e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1777999999997013e-05, 1.1735999999998303e-05, 1.1694999999999067e-05, 1.1764000000004382e-05, 1.1749999999997873e-05, 1.176299999999797e-05, 1.1721999999998733e-05, 1.1749999999997873e-05, 1.1764000000004382e-05, 1.1736000000005242e-05]</msg>
<status status="PASS" starttime="20201115 22:00:21.798" endtime="20201115 22:00:21.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.794" endtime="20201115 22:00:21.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.803" endtime="20201115 22:00:21.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.806" endtime="20201115 22:00:21.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.805" endtime="20201115 22:00:21.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.801" endtime="20201115 22:00:21.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.389" endtime="20201115 22:00:21.827"></status>
</kw>
<msg timestamp="20201115 22:00:21.827" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.836" endtime="20201115 22:00:21.873"></status>
</kw>
<msg timestamp="20201115 22:00:21.874" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.834" endtime="20201115 22:00:21.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.877" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.875" endtime="20201115 22:00:21.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.878" endtime="20201115 22:00:21.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.832" endtime="20201115 22:00:21.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.830" endtime="20201115 22:00:21.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.887" endtime="20201115 22:00:22.174"></status>
</kw>
<msg timestamp="20201115 22:00:22.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024191014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.885" endtime="20201115 22:00:22.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024191014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.178" endtime="20201115 22:00:22.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.186" endtime="20201115 22:00:22.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.883" endtime="20201115 22:00:22.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.881" endtime="20201115 22:00:22.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.193" level="INFO">${RESULT} = [{'time': 0.024191014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1778000000000483e-05, 'source_diff': 1.1778000000000483e-05}, {'time': 0.024701, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:22.190" endtime="20201115 22:00:22.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.207" level="INFO">${OVERHEAD} = {'diff': [1.1778000000000483e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1749999999997873e-05, 1.1709000000002107e-05, 1.1708999999998637e-05, 1.1777999999997013e-05, 1.1735999999998303e-05...</msg>
<status status="PASS" starttime="20201115 22:00:22.194" endtime="20201115 22:00:22.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.211" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:22.210" endtime="20201115 22:00:22.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.214" level="INFO">VALUE: [1.1778000000000483e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1749999999997873e-05, 1.1709000000002107e-05, 1.1708999999998637e-05, 1.1777999999997013e-05, 1.1735999999998303e-05, 1.1709000000002107e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1736000000001773e-05, 1.1735999999998303e-05, 1.1763999999997443e-05, 1.1778000000003952e-05, 1.1722000000005672e-05, 1.1749999999997873e-05, 1.1680999999999497e-05, 1.1735999999998303e-05, 1.1750000000004812e-05, 1.1764000000004382e-05, 1.1749999999997873e-05, 1.1763999999997443e-05, 1.1722000000005672e-05, 1.1749999999997873e-05, 1.1750000000004812e-05, 1.1736999999997777e-05, 1.1820000000002662e-05, 1.1722000000005672e-05, 1.1680999999999497e-05, 1.1736000000005242e-05, 1.1750000000004812e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1763999999997443e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1722999999998207e-05, 1.1666000000000454e-05, 1.1764000000004382e-05, 1.1735999999998303e-05, 1.1736000000005242e-05, 1.1735999999998303e-05, 1.179099999999711e-05, 1.1735999999998303e-05, 1.1736000000005242e-05, 1.1749999999997873e-05, 1.1735999999998303e-05, 1.1708999999998637e-05, 1.1750000000004812e-05]</msg>
<status status="PASS" starttime="20201115 22:00:22.212" endtime="20201115 22:00:22.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.208" endtime="20201115 22:00:22.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.217" endtime="20201115 22:00:22.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.220" endtime="20201115 22:00:22.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.219" endtime="20201115 22:00:22.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.215" endtime="20201115 22:00:22.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.828" endtime="20201115 22:00:22.241"></status>
</kw>
<msg timestamp="20201115 22:00:22.241" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.251" endtime="20201115 22:00:22.285"></status>
</kw>
<msg timestamp="20201115 22:00:22.286" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.249" endtime="20201115 22:00:22.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.287" endtime="20201115 22:00:22.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.289" endtime="20201115 22:00:22.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.246" endtime="20201115 22:00:22.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.244" endtime="20201115 22:00:22.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.298" endtime="20201115 22:00:22.585"></status>
</kw>
<msg timestamp="20201115 22:00:22.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022143319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.297" endtime="20201115 22:00:22.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022143319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.590" endtime="20201115 22:00:22.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.598" endtime="20201115 22:00:22.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.294" endtime="20201115 22:00:22.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.292" endtime="20201115 22:00:22.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.604" level="INFO">${RESULT} = [{'time': 0.022155042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1722999999998207e-05, 'source_diff': 1.1722999999998207e-05}, {'time': 0.022663792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:22.601" endtime="20201115 22:00:22.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.618" level="INFO">${OVERHEAD} = {'diff': [1.1722999999998207e-05, 1.1708999999998637e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1750000000001343e-05...</msg>
<status status="PASS" starttime="20201115 22:00:22.605" endtime="20201115 22:00:22.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.622" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:22.621" endtime="20201115 22:00:22.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.625" level="INFO">VALUE: [1.1722999999998207e-05, 1.1708999999998637e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1750000000001343e-05, 1.1736000000001773e-05, 1.1735999999998303e-05, 1.1764000000000913e-05, 1.1750000000001343e-05, 1.1750000000001343e-05, 1.1736000000001773e-05, 1.1709000000002107e-05, 1.1695000000002537e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1763999999997443e-05, 1.1708999999998637e-05, 1.1749999999997873e-05, 1.1750000000004812e-05, 1.1735999999998303e-05, 1.1736000000005242e-05, 1.1750000000004812e-05, 1.1735999999998303e-05, 1.176299999999797e-05, 1.1735999999998303e-05, 1.1735999999998303e-05, 1.1749999999997873e-05, 1.1708000000006102e-05, 1.1721999999998733e-05, 1.1777999999997013e-05, 1.1735999999998303e-05, 1.1764000000004382e-05, 1.1693999999999594e-05, 1.1750000000004812e-05, 1.1735999999998303e-05, 1.1749999999997873e-05, 1.1750000000004812e-05, 1.1722000000005672e-05, 1.1736000000005242e-05, 1.1736999999997777e-05, 1.1805999999996153e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1749999999997873e-05, 1.1750000000004812e-05]</msg>
<status status="PASS" starttime="20201115 22:00:22.623" endtime="20201115 22:00:22.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.619" endtime="20201115 22:00:22.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.628" endtime="20201115 22:00:22.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.632" endtime="20201115 22:00:22.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.630" endtime="20201115 22:00:22.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.626" endtime="20201115 22:00:22.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.242" endtime="20201115 22:00:22.653"></status>
</kw>
<msg timestamp="20201115 22:00:22.653" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.662" endtime="20201115 22:00:22.698"></status>
</kw>
<msg timestamp="20201115 22:00:22.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.660" endtime="20201115 22:00:22.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.701" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.699" endtime="20201115 22:00:22.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.702" endtime="20201115 22:00:22.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.658" endtime="20201115 22:00:22.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.655" endtime="20201115 22:00:22.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.711" endtime="20201115 22:00:22.997"></status>
</kw>
<msg timestamp="20201115 22:00:23.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.710" endtime="20201115 22:00:23.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.001" endtime="20201115 22:00:23.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.009" endtime="20201115 22:00:23.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.707" endtime="20201115 22:00:23.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.705" endtime="20201115 22:00:23.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.016" level="INFO">${RESULT} = [{'time': 0.022441681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1737000000001246e-05, 'source_diff': 1.1737000000001246e-05}, {'time': 0.022953, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:23.012" endtime="20201115 22:00:23.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.029" level="INFO">${OVERHEAD} = {'diff': [1.1737000000001246e-05, 1.1778000000000483e-05, 1.1750000000001343e-05, 1.1792000000000052e-05, 1.1750000000001343e-05, 1.1750000000001343e-05, 1.1736000000001773e-05, 1.1735999999998303e-05...</msg>
<status status="PASS" starttime="20201115 22:00:23.016" endtime="20201115 22:00:23.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.034" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:23.033" endtime="20201115 22:00:23.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.036" level="INFO">VALUE: [1.1737000000001246e-05, 1.1778000000000483e-05, 1.1750000000001343e-05, 1.1792000000000052e-05, 1.1750000000001343e-05, 1.1750000000001343e-05, 1.1736000000001773e-05, 1.1735999999998303e-05, 1.1736999999997777e-05, 1.1750000000001343e-05, 1.1750000000001343e-05, 1.1749999999997873e-05, 1.1736000000001773e-05, 1.1764000000000913e-05, 1.1707999999999164e-05, 1.1750000000001343e-05, 1.1693999999999594e-05, 1.1750000000001343e-05, 1.1749999999997873e-05, 1.1735999999998303e-05, 1.1806000000003092e-05, 1.1735999999998303e-05, 1.1736000000005242e-05, 1.1763999999997443e-05, 1.1693999999999594e-05, 1.1763999999997443e-05, 1.1750000000004812e-05, 1.1708999999998637e-05, 1.1736000000005242e-05, 1.1653000000000358e-05, 1.1750000000004812e-05, 1.1750000000004812e-05, 1.1764000000004382e-05, 1.1735999999998303e-05, 1.1750000000004812e-05, 1.1735999999998303e-05, 1.1694999999999067e-05, 1.1735999999998303e-05, 1.1764000000004382e-05, 1.1707999999999164e-05, 1.1736000000005242e-05, 1.1763999999997443e-05, 1.1736999999997777e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1736000000005242e-05, 1.1722000000005672e-05, 1.1777999999997013e-05, 1.1750000000004812e-05, 1.1763999999997443e-05]</msg>
<status status="PASS" starttime="20201115 22:00:23.035" endtime="20201115 22:00:23.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.030" endtime="20201115 22:00:23.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.040" endtime="20201115 22:00:23.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.043" endtime="20201115 22:00:23.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.042" endtime="20201115 22:00:23.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.038" endtime="20201115 22:00:23.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.653" endtime="20201115 22:00:23.064"></status>
</kw>
<msg timestamp="20201115 22:00:23.064" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.073" endtime="20201115 22:00:23.110"></status>
</kw>
<msg timestamp="20201115 22:00:23.110" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.071" endtime="20201115 22:00:23.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.112" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.111" endtime="20201115 22:00:23.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.114" endtime="20201115 22:00:23.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.069" endtime="20201115 22:00:23.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.067" endtime="20201115 22:00:23.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.123" endtime="20201115 22:00:23.410"></status>
</kw>
<msg timestamp="20201115 22:00:23.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023221889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023233625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.121" endtime="20201115 22:00:23.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023221889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023233625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.414" endtime="20201115 22:00:23.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.422" endtime="20201115 22:00:23.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.119" endtime="20201115 22:00:23.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.117" endtime="20201115 22:00:23.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.429" level="INFO">${RESULT} = [{'time': 0.023233625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1736000000001773e-05, 'source_diff': 1.1736000000001773e-05}, {'time': 0.023744361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:23.425" endtime="20201115 22:00:23.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.442" level="INFO">${OVERHEAD} = {'diff': [1.1736000000001773e-05, 1.1749999999997873e-05, 1.1750000000001343e-05, 1.1764000000000913e-05, 1.1750000000001343e-05, 1.1750000000001343e-05, 1.1735999999998303e-05, 1.1708999999998637e-05...</msg>
<status status="PASS" starttime="20201115 22:00:23.430" endtime="20201115 22:00:23.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.447" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:23.446" endtime="20201115 22:00:23.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.449" level="INFO">VALUE: [1.1736000000001773e-05, 1.1749999999997873e-05, 1.1750000000001343e-05, 1.1764000000000913e-05, 1.1750000000001343e-05, 1.1750000000001343e-05, 1.1735999999998303e-05, 1.1708999999998637e-05, 1.1792000000000052e-05, 1.1723000000001677e-05, 1.1680999999999497e-05, 1.1736000000001773e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1736000000001773e-05, 1.1750000000001343e-05, 1.1721999999998733e-05, 1.1749999999997873e-05, 1.1749999999997873e-05, 1.1764000000004382e-05, 1.1735999999998303e-05, 1.1749999999997873e-05, 1.1819999999995723e-05, 1.1749999999997873e-05, 1.1709000000005576e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1764000000004382e-05, 1.1722999999998207e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1763999999997443e-05, 1.1736000000005242e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1735999999998303e-05, 1.179099999999711e-05, 1.1735999999998303e-05, 1.1735999999998303e-05, 1.1777000000004478e-05, 1.1680999999999497e-05, 1.1778000000003952e-05, 1.1806000000003092e-05, 1.1735999999998303e-05, 1.1708000000006102e-05, 1.1722999999998207e-05, 1.1736999999997777e-05]</msg>
<status status="PASS" starttime="20201115 22:00:23.448" endtime="20201115 22:00:23.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.443" endtime="20201115 22:00:23.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.453" endtime="20201115 22:00:23.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.456" endtime="20201115 22:00:23.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.455" endtime="20201115 22:00:23.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.451" endtime="20201115 22:00:23.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.065" endtime="20201115 22:00:23.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.388" endtime="20201115 22:00:23.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.387" endtime="20201115 22:00:23.477"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.480" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.489" endtime="20201115 22:00:23.536"></status>
</kw>
<msg timestamp="20201115 22:00:23.536" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.487" endtime="20201115 22:00:23.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.539" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.538" endtime="20201115 22:00:23.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.540" endtime="20201115 22:00:23.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.484" endtime="20201115 22:00:23.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.482" endtime="20201115 22:00:23.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.549" endtime="20201115 22:00:23.836"></status>
</kw>
<msg timestamp="20201115 22:00:23.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027078625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027090556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.548" endtime="20201115 22:00:23.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027078625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027090556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.840" endtime="20201115 22:00:23.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.848" endtime="20201115 22:00:23.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.545" endtime="20201115 22:00:23.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.543" endtime="20201115 22:00:23.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.855" level="INFO">${RESULT} = [{'time': 0.027090556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1930999999999747e-05, 'source_diff': 1.1930999999999747e-05}, {'time': 0.027632167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:23.852" endtime="20201115 22:00:23.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.869" level="INFO">${OVERHEAD} = {'diff': [1.1930999999999747e-05, 1.1972999999998457e-05, 1.2000000000001593e-05, 1.1985999999998553e-05, 1.1972000000002453e-05, 1.2014000000001163e-05, 1.2000000000001593e-05, 1.2000000000001593e-05...</msg>
<status status="PASS" starttime="20201115 22:00:23.856" endtime="20201115 22:00:23.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.873" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:23.872" endtime="20201115 22:00:23.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.876" level="INFO">VALUE: [1.1930999999999747e-05, 1.1972999999998457e-05, 1.2000000000001593e-05, 1.1985999999998553e-05, 1.1972000000002453e-05, 1.2014000000001163e-05, 1.2000000000001593e-05, 1.2000000000001593e-05, 1.1971999999998983e-05, 1.1999999999998123e-05, 1.202699999999779e-05, 1.1930999999999747e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.2000000000005062e-05, 1.1971999999998983e-05, 1.1944999999999317e-05, 1.1944999999999317e-05, 1.1985999999998553e-05, 1.2013999999997693e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.1986999999998027e-05, 1.1985999999998553e-05, 1.1943999999999844e-05, 1.1999999999998123e-05, 1.1985999999998553e-05, 1.1971999999998983e-05, 1.1985999999998553e-05, 1.2070000000002912e-05, 1.1985999999998553e-05, 1.1957999999999414e-05, 1.1999999999998123e-05, 1.1971999999998983e-05, 1.1971999999998983e-05, 1.1971999999998983e-05, 1.1999999999998123e-05, 1.1985999999998553e-05, 1.1972999999998457e-05, 1.1971999999998983e-05, 1.2028000000004202e-05, 1.1971999999998983e-05, 1.1957999999999414e-05, 1.1971999999998983e-05, 1.2013999999997693e-05, 1.1943999999999844e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.1959000000005826e-05, 1.1985999999998553e-05]</msg>
<status status="PASS" starttime="20201115 22:00:23.874" endtime="20201115 22:00:23.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.870" endtime="20201115 22:00:23.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.879" endtime="20201115 22:00:23.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.883" endtime="20201115 22:00:23.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.881" endtime="20201115 22:00:23.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.878" endtime="20201115 22:00:23.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.480" endtime="20201115 22:00:23.904"></status>
</kw>
<msg timestamp="20201115 22:00:23.904" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.913" endtime="20201115 22:00:23.953"></status>
</kw>
<msg timestamp="20201115 22:00:23.953" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.911" endtime="20201115 22:00:23.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.956" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.954" endtime="20201115 22:00:23.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.957" endtime="20201115 22:00:23.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.909" endtime="20201115 22:00:23.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.906" endtime="20201115 22:00:23.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.966" endtime="20201115 22:00:24.255"></status>
</kw>
<msg timestamp="20201115 22:00:24.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.964" endtime="20201115 22:00:24.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.259" endtime="20201115 22:00:24.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.267" endtime="20201115 22:00:24.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.962" endtime="20201115 22:00:24.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.960" endtime="20201115 22:00:24.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.274" level="INFO">${RESULT} = [{'time': 0.022567542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1999999999998123e-05, 'source_diff': 1.1999999999998123e-05}, {'time': 0.023106431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:24.270" endtime="20201115 22:00:24.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.287" level="INFO">${OVERHEAD} = {'diff': [1.1999999999998123e-05, 1.1973000000001927e-05, 1.1875000000001468e-05, 1.1971999999998983e-05, 1.1944999999999317e-05, 1.2042000000000302e-05, 1.1916000000000704e-05, 1.1971999999998983e-05...</msg>
<status status="PASS" starttime="20201115 22:00:24.275" endtime="20201115 22:00:24.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.292" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:24.291" endtime="20201115 22:00:24.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.295" level="INFO">VALUE: [1.1999999999998123e-05, 1.1973000000001927e-05, 1.1875000000001468e-05, 1.1971999999998983e-05, 1.1944999999999317e-05, 1.2042000000000302e-05, 1.1916000000000704e-05, 1.1971999999998983e-05, 1.1985999999998553e-05, 1.1987000000001496e-05, 1.1875000000001468e-05, 1.2014000000001163e-05, 1.1986000000002023e-05, 1.1943999999999844e-05, 1.1972000000002453e-05, 1.202699999999779e-05, 1.1972999999998457e-05, 1.1999999999998123e-05, 1.1985999999998553e-05, 1.1986000000005492e-05, 1.1985999999998553e-05, 1.1958999999998887e-05, 1.1943999999999844e-05, 1.1999999999998123e-05, 1.1985999999998553e-05, 1.2000000000005062e-05, 1.1985999999998553e-05, 1.1957999999999414e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.1917000000000177e-05, 1.1999999999998123e-05, 1.1985999999998553e-05, 1.1999999999998123e-05, 1.1944999999999317e-05, 1.1917000000000177e-05, 1.1972000000005922e-05, 1.1903000000000608e-05, 1.1985999999998553e-05, 1.2013999999997693e-05, 1.1985999999998553e-05, 1.1971999999998983e-05, 1.1957999999999414e-05, 1.1957999999999414e-05, 1.1986999999998027e-05, 1.2028000000004202e-05, 1.1999999999998123e-05, 1.2013999999997693e-05, 1.1971999999998983e-05, 1.1930999999999747e-05]</msg>
<status status="PASS" starttime="20201115 22:00:24.293" endtime="20201115 22:00:24.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.289" endtime="20201115 22:00:24.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.298" endtime="20201115 22:00:24.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.301" endtime="20201115 22:00:24.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.300" endtime="20201115 22:00:24.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.296" endtime="20201115 22:00:24.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.904" endtime="20201115 22:00:24.322"></status>
</kw>
<msg timestamp="20201115 22:00:24.322" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.331" endtime="20201115 22:00:24.371"></status>
</kw>
<msg timestamp="20201115 22:00:24.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.330" endtime="20201115 22:00:24.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.374" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.372" endtime="20201115 22:00:24.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.375" endtime="20201115 22:00:24.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.327" endtime="20201115 22:00:24.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.325" endtime="20201115 22:00:24.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.384" endtime="20201115 22:00:24.687"></status>
</kw>
<msg timestamp="20201115 22:00:24.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020965111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.382" endtime="20201115 22:00:24.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020965111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.696" endtime="20201115 22:00:24.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.706" endtime="20201115 22:00:24.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.380" endtime="20201115 22:00:24.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.378" endtime="20201115 22:00:24.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.713" level="INFO">${RESULT} = [{'time': 0.020977111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1999999999998123e-05, 'source_diff': 1.1999999999998123e-05}, {'time': 0.021515167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:24.709" endtime="20201115 22:00:24.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.727" level="INFO">${OVERHEAD} = {'diff': [1.1999999999998123e-05, 1.1986000000002023e-05, 1.1957999999999414e-05, 1.1985999999998553e-05, 1.201299999999822e-05, 1.2014000000001163e-05, 1.1986000000002023e-05, 1.1986000000002023e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:24.714" endtime="20201115 22:00:24.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.731" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:24.730" endtime="20201115 22:00:24.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.734" level="INFO">VALUE: [1.1999999999998123e-05, 1.1986000000002023e-05, 1.1957999999999414e-05, 1.1985999999998553e-05, 1.201299999999822e-05, 1.2014000000001163e-05, 1.1986000000002023e-05, 1.1986000000002023e-05, 1.1958999999998887e-05, 1.2042000000000302e-05, 1.1985999999998553e-05, 1.1958999999998887e-05, 1.1971999999998983e-05, 1.1957999999999414e-05, 1.1999999999998123e-05, 1.1944999999999317e-05, 1.1958999999998887e-05, 1.1986000000002023e-05, 1.1986000000002023e-05, 1.2013999999997693e-05, 1.1985999999998553e-05, 1.1971999999998983e-05, 1.1985999999998553e-05, 1.1985999999998553e-05, 1.1985999999998553e-05, 1.1985999999998553e-05, 1.1944000000006783e-05, 1.1985999999998553e-05, 1.1986999999998027e-05, 1.2000000000005062e-05, 1.1986000000005492e-05, 1.1971999999998983e-05, 1.1943999999999844e-05, 1.1973000000005396e-05, 1.1971999999998983e-05, 1.1985999999998553e-05, 1.1971999999998983e-05, 1.2000000000005062e-05, 1.2014000000004632e-05, 1.2042000000003772e-05, 1.1985999999998553e-05, 1.202699999999779e-05, 1.1973000000005396e-05, 1.1999999999998123e-05, 1.2013999999997693e-05, 1.1985999999998553e-05, 1.2055000000003868e-05, 1.1985999999998553e-05, 1.1999999999998123e-05, 1.1985999999998553e-05]</msg>
<status status="PASS" starttime="20201115 22:00:24.732" endtime="20201115 22:00:24.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.728" endtime="20201115 22:00:24.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.737" endtime="20201115 22:00:24.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.740" endtime="20201115 22:00:24.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.739" endtime="20201115 22:00:24.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.735" endtime="20201115 22:00:24.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.323" endtime="20201115 22:00:24.761"></status>
</kw>
<msg timestamp="20201115 22:00:24.761" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.770" endtime="20201115 22:00:24.812"></status>
</kw>
<msg timestamp="20201115 22:00:24.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.769" endtime="20201115 22:00:24.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.814" endtime="20201115 22:00:24.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.816" endtime="20201115 22:00:24.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.766" endtime="20201115 22:00:24.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.764" endtime="20201115 22:00:24.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.825" endtime="20201115 22:00:25.112"></status>
</kw>
<msg timestamp="20201115 22:00:25.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024073236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024085222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.824" endtime="20201115 22:00:25.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024073236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024085222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.116" endtime="20201115 22:00:25.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.124" endtime="20201115 22:00:25.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.821" endtime="20201115 22:00:25.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.820" endtime="20201115 22:00:25.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.131" level="INFO">${RESULT} = [{'time': 0.024085222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.024625111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.128" endtime="20201115 22:00:25.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.145" level="INFO">${OVERHEAD} = {'diff': [1.1985999999998553e-05, 1.2000000000001593e-05, 1.2068999999999969e-05, 1.2000000000001593e-05, 1.2000000000001593e-05, 1.2014000000001163e-05, 1.1985999999998553e-05, 1.1917000000000177e-05...</msg>
<status status="PASS" starttime="20201115 22:00:25.132" endtime="20201115 22:00:25.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.149" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:25.148" endtime="20201115 22:00:25.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.152" level="INFO">VALUE: [1.1985999999998553e-05, 1.2000000000001593e-05, 1.2068999999999969e-05, 1.2000000000001593e-05, 1.2000000000001593e-05, 1.2014000000001163e-05, 1.1985999999998553e-05, 1.1917000000000177e-05, 1.1986000000002023e-05, 1.1944999999999317e-05, 1.1999999999998123e-05, 1.2000000000001593e-05, 1.1985999999998553e-05, 1.1986000000002023e-05, 1.1943999999999844e-05, 1.1999999999998123e-05, 1.2013999999997693e-05, 1.2000000000005062e-05, 1.2013999999997693e-05, 1.1986000000005492e-05, 1.1971999999998983e-05, 1.2013999999997693e-05, 1.1985999999998553e-05, 1.1943999999999844e-05, 1.1930999999999747e-05, 1.1985999999998553e-05, 1.1916000000000704e-05, 1.2013999999997693e-05, 1.1930999999999747e-05, 1.1957999999999414e-05, 1.1958999999998887e-05, 1.1930000000000274e-05, 1.1944999999999317e-05, 1.2000000000005062e-05, 1.1985999999998553e-05, 1.1957999999999414e-05, 1.1972999999998457e-05, 1.2028000000004202e-05, 1.1945000000006256e-05, 1.1985999999998553e-05, 1.2069000000003438e-05, 1.1971999999998983e-05, 1.1985999999998553e-05, 1.1943999999999844e-05, 1.1971999999998983e-05, 1.1972999999998457e-05, 1.2055999999996403e-05, 1.2055000000003868e-05, 1.2013000000005158e-05, 1.1985999999998553e-05]</msg>
<status status="PASS" starttime="20201115 22:00:25.150" endtime="20201115 22:00:25.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.146" endtime="20201115 22:00:25.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.155" endtime="20201115 22:00:25.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.159" endtime="20201115 22:00:25.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.157" endtime="20201115 22:00:25.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.153" endtime="20201115 22:00:25.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.762" endtime="20201115 22:00:25.179"></status>
</kw>
<msg timestamp="20201115 22:00:25.180" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.188" endtime="20201115 22:00:25.229"></status>
</kw>
<msg timestamp="20201115 22:00:25.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.187" endtime="20201115 22:00:25.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.231" endtime="20201115 22:00:25.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.233" endtime="20201115 22:00:25.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.184" endtime="20201115 22:00:25.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.182" endtime="20201115 22:00:25.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.242" endtime="20201115 22:00:25.528"></status>
</kw>
<msg timestamp="20201115 22:00:25.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022882361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.241" endtime="20201115 22:00:25.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022882361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.533" endtime="20201115 22:00:25.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.541" endtime="20201115 22:00:25.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.238" endtime="20201115 22:00:25.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.236" endtime="20201115 22:00:25.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.548" level="INFO">${RESULT} = [{'time': 0.022894347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.023434917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.544" endtime="20201115 22:00:25.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.561" level="INFO">${OVERHEAD} = {'diff': [1.1985999999998553e-05, 1.1999999999998123e-05, 1.1958999999998887e-05, 1.2014000000001163e-05, 1.1999999999998123e-05, 1.1986000000002023e-05, 1.2013999999997693e-05, 1.2027999999997263e-05...</msg>
<status status="PASS" starttime="20201115 22:00:25.549" endtime="20201115 22:00:25.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.566" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:25.565" endtime="20201115 22:00:25.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.569" level="INFO">VALUE: [1.1985999999998553e-05, 1.1999999999998123e-05, 1.1958999999998887e-05, 1.2014000000001163e-05, 1.1999999999998123e-05, 1.1986000000002023e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.1917000000000177e-05, 1.1944999999999317e-05, 1.2000000000001593e-05, 1.2041000000000829e-05, 1.2000000000001593e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.2068999999999969e-05, 1.2000000000005062e-05, 1.1985999999998553e-05, 1.1985999999998553e-05, 1.1985999999998553e-05, 1.1971999999998983e-05, 1.2013999999997693e-05, 1.2056000000003342e-05, 1.1971999999998983e-05, 1.1986000000005492e-05, 1.1973000000005396e-05, 1.1958999999998887e-05, 1.1944999999999317e-05, 1.1930999999999747e-05, 1.2013999999997693e-05, 1.1943999999999844e-05, 1.1917000000000177e-05, 1.1944999999999317e-05, 1.1972999999998457e-05, 1.1986999999998027e-05, 1.1930999999999747e-05, 1.2000000000005062e-05, 1.2013999999997693e-05, 1.1986999999998027e-05, 1.1887999999994625e-05, 1.2027999999997263e-05, 1.1972000000005922e-05, 1.1957999999999414e-05, 1.1944999999999317e-05, 1.1999999999998123e-05, 1.1987000000004966e-05, 1.201299999999822e-05, 1.1972999999998457e-05, 1.1916000000000704e-05, 1.1957999999999414e-05]</msg>
<status status="PASS" starttime="20201115 22:00:25.567" endtime="20201115 22:00:25.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.562" endtime="20201115 22:00:25.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.572" endtime="20201115 22:00:25.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.575" endtime="20201115 22:00:25.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.574" endtime="20201115 22:00:25.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.570" endtime="20201115 22:00:25.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.180" endtime="20201115 22:00:25.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.479" endtime="20201115 22:00:25.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.478" endtime="20201115 22:00:25.596"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.599" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.608" endtime="20201115 22:00:25.652"></status>
</kw>
<msg timestamp="20201115 22:00:25.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.606" endtime="20201115 22:00:25.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.653" endtime="20201115 22:00:25.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.656" endtime="20201115 22:00:25.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.603" endtime="20201115 22:00:25.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.601" endtime="20201115 22:00:25.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.665" endtime="20201115 22:00:25.953"></status>
</kw>
<msg timestamp="20201115 22:00:25.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.664" endtime="20201115 22:00:25.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.957" endtime="20201115 22:00:25.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.965" endtime="20201115 22:00:25.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.661" endtime="20201115 22:00:25.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.659" endtime="20201115 22:00:25.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.972" level="INFO">${RESULT} = [{'time': 0.023245444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.023818056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.969" endtime="20201115 22:00:25.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.986" level="INFO">${OVERHEAD} = {'diff': [1.2207999999999664e-05, 1.2264000000001413e-05, 1.2180999999999997e-05, 1.2264000000001413e-05, 1.2194000000000094e-05, 1.2249999999998373e-05, 1.2221999999999233e-05, 1.2235999999998803e-05...</msg>
<status status="PASS" starttime="20201115 22:00:25.973" endtime="20201115 22:00:25.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.990" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:25.989" endtime="20201115 22:00:25.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.993" level="INFO">VALUE: [1.2207999999999664e-05, 1.2264000000001413e-05, 1.2180999999999997e-05, 1.2264000000001413e-05, 1.2194000000000094e-05, 1.2249999999998373e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2250000000001843e-05, 1.2263999999997943e-05, 1.2235999999998803e-05, 1.2207999999999664e-05, 1.2264000000001413e-05, 1.2264000000004882e-05, 1.2250000000005312e-05, 1.2263999999997943e-05, 1.2277999999997513e-05, 1.2249999999998373e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2235999999998803e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2263999999997943e-05, 1.2222000000006172e-05, 1.2180000000000524e-05, 1.2221999999999233e-05, 1.2249999999998373e-05, 1.2235999999998803e-05, 1.2222999999998707e-05, 1.2250000000005312e-05, 1.2235999999998803e-05, 1.2277999999997513e-05, 1.2235999999998803e-05, 1.2222000000006172e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2236000000005742e-05, 1.2235999999998803e-05, 1.2208000000006602e-05, 1.226299999999847e-05, 1.2235999999998803e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2278000000004452e-05, 1.2235999999998803e-05, 1.2278000000004452e-05]</msg>
<status status="PASS" starttime="20201115 22:00:25.991" endtime="20201115 22:00:25.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.986" endtime="20201115 22:00:25.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.996" endtime="20201115 22:00:25.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.999" endtime="20201115 22:00:26.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.998" endtime="20201115 22:00:26.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.994" endtime="20201115 22:00:26.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.599" endtime="20201115 22:00:26.020"></status>
</kw>
<msg timestamp="20201115 22:00:26.021" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.030" endtime="20201115 22:00:26.069"></status>
</kw>
<msg timestamp="20201115 22:00:26.069" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.028" endtime="20201115 22:00:26.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.072" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.071" endtime="20201115 22:00:26.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.073" endtime="20201115 22:00:26.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.026" endtime="20201115 22:00:26.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.023" endtime="20201115 22:00:26.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.082" endtime="20201115 22:00:26.368"></status>
</kw>
<msg timestamp="20201115 22:00:26.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020890986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.081" endtime="20201115 22:00:26.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020890986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.372" endtime="20201115 22:00:26.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.380" endtime="20201115 22:00:26.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.078" endtime="20201115 22:00:26.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.076" endtime="20201115 22:00:26.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.387" level="INFO">${RESULT} = [{'time': 0.020903222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2235999999998803e-05, 'source_diff': 1.2235999999998803e-05}, {'time': 0.021477083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:26.384" endtime="20201115 22:00:26.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.401" level="INFO">${OVERHEAD} = {'diff': [1.2235999999998803e-05, 1.2250000000001843e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2236000000002273e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.2235999999998803e-05...</msg>
<status status="PASS" starttime="20201115 22:00:26.388" endtime="20201115 22:00:26.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.405" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:26.404" endtime="20201115 22:00:26.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.408" level="INFO">VALUE: [1.2235999999998803e-05, 1.2250000000001843e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2236000000002273e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2263999999997943e-05, 1.2305000000000649e-05, 1.2236000000002273e-05, 1.2249999999998373e-05, 1.2264000000001413e-05, 1.2166000000000954e-05, 1.2263000000001939e-05, 1.2236999999998277e-05, 1.2236000000002273e-05, 1.2305000000000649e-05, 1.2236000000002273e-05, 1.2278000000004452e-05, 1.2249999999998373e-05, 1.2236999999998277e-05, 1.2277999999997513e-05, 1.2139000000001288e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2264000000004882e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2209000000006076e-05, 1.2235999999998803e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2222999999998707e-05, 1.230499999999718e-05, 1.2222000000006172e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2249999999998373e-05, 1.2194000000000094e-05, 1.2235999999998803e-05, 1.2249999999998373e-05, 1.2263999999997943e-05, 1.2235999999998803e-05, 1.2278000000004452e-05, 1.2249999999998373e-05, 1.2221999999999233e-05]</msg>
<status status="PASS" starttime="20201115 22:00:26.406" endtime="20201115 22:00:26.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.402" endtime="20201115 22:00:26.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.411" endtime="20201115 22:00:26.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.414" endtime="20201115 22:00:26.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.413" endtime="20201115 22:00:26.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.409" endtime="20201115 22:00:26.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.021" endtime="20201115 22:00:26.435"></status>
</kw>
<msg timestamp="20201115 22:00:26.435" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.445" endtime="20201115 22:00:26.485"></status>
</kw>
<msg timestamp="20201115 22:00:26.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.443" endtime="20201115 22:00:26.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.488" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.487" endtime="20201115 22:00:26.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.489" endtime="20201115 22:00:26.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.441" endtime="20201115 22:00:26.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.438" endtime="20201115 22:00:26.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.498" endtime="20201115 22:00:26.785"></status>
</kw>
<msg timestamp="20201115 22:00:26.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022915847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022928028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.497" endtime="20201115 22:00:26.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022915847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022928028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.789" endtime="20201115 22:00:26.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.797" endtime="20201115 22:00:26.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.494" endtime="20201115 22:00:26.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.492" endtime="20201115 22:00:26.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.804" level="INFO">${RESULT} = [{'time': 0.022928028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.023503486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:26.801" endtime="20201115 22:00:26.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.818" level="INFO">${OVERHEAD} = {'diff': [1.2180999999999997e-05, 1.2250000000001843e-05, 1.2235999999998803e-05, 1.2207999999999664e-05, 1.2278000000000983e-05, 1.2236000000002273e-05, 1.2207999999999664e-05, 1.226299999999847e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:26.805" endtime="20201115 22:00:26.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.822" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:26.821" endtime="20201115 22:00:26.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.825" level="INFO">VALUE: [1.2180999999999997e-05, 1.2250000000001843e-05, 1.2235999999998803e-05, 1.2207999999999664e-05, 1.2278000000000983e-05, 1.2236000000002273e-05, 1.2207999999999664e-05, 1.226299999999847e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2250000000001843e-05, 1.2207999999999664e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2292000000000552e-05, 1.2263999999997943e-05, 1.2264000000004882e-05, 1.2263999999997943e-05, 1.2236000000005742e-05, 1.2221999999999233e-05, 1.2249999999998373e-05, 1.2264000000004882e-05, 1.2208999999999137e-05, 1.2235999999998803e-05, 1.2194999999999567e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2208999999999137e-05, 1.2208000000006602e-05, 1.2208999999999137e-05, 1.2194999999999567e-05, 1.2235999999998803e-05, 1.2278000000004452e-05, 1.2194000000000094e-05, 1.2235999999998803e-05, 1.2292000000004022e-05, 1.2180000000000524e-05, 1.2263999999997943e-05, 1.2222999999998707e-05, 1.2208999999999137e-05, 1.2236000000005742e-05, 1.2222999999998707e-05, 1.2222999999998707e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2250000000005312e-05, 1.2249999999998373e-05, 1.2180999999999997e-05]</msg>
<status status="PASS" starttime="20201115 22:00:26.823" endtime="20201115 22:00:26.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.819" endtime="20201115 22:00:26.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.828" endtime="20201115 22:00:26.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.832" endtime="20201115 22:00:26.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.830" endtime="20201115 22:00:26.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.826" endtime="20201115 22:00:26.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.436" endtime="20201115 22:00:26.852"></status>
</kw>
<msg timestamp="20201115 22:00:26.853" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.862" endtime="20201115 22:00:26.903"></status>
</kw>
<msg timestamp="20201115 22:00:26.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.860" endtime="20201115 22:00:26.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.906" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.904" endtime="20201115 22:00:26.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.907" endtime="20201115 22:00:26.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.857" endtime="20201115 22:00:26.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.855" endtime="20201115 22:00:26.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.916" endtime="20201115 22:00:27.203"></status>
</kw>
<msg timestamp="20201115 22:00:27.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.914" endtime="20201115 22:00:27.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.208" endtime="20201115 22:00:27.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.216" endtime="20201115 22:00:27.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.912" endtime="20201115 22:00:27.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.910" endtime="20201115 22:00:27.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.223" level="INFO">${RESULT} = [{'time': 0.022670111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.023242653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:27.219" endtime="20201115 22:00:27.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.236" level="INFO">${OVERHEAD} = {'diff': [1.2249999999998373e-05, 1.2221999999999233e-05, 1.2222000000002703e-05, 1.2222999999998707e-05, 1.2235999999998803e-05, 1.2237000000001746e-05, 1.2278000000000983e-05, 1.2235999999998803e-05...</msg>
<status status="PASS" starttime="20201115 22:00:27.224" endtime="20201115 22:00:27.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.241" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:27.240" endtime="20201115 22:00:27.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.243" level="INFO">VALUE: [1.2249999999998373e-05, 1.2221999999999233e-05, 1.2222000000002703e-05, 1.2222999999998707e-05, 1.2235999999998803e-05, 1.2237000000001746e-05, 1.2278000000000983e-05, 1.2235999999998803e-05, 1.2236000000002273e-05, 1.2222999999998707e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.2151999999994445e-05, 1.2263999999997943e-05, 1.2263999999997943e-05, 1.2263999999997943e-05, 1.2249999999998373e-05, 1.2264000000004882e-05, 1.2249999999998373e-05, 1.2236000000005742e-05, 1.2263999999997943e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.2263999999997943e-05, 1.2235999999998803e-05, 1.2250000000005312e-05, 1.2236999999998277e-05, 1.2249999999998373e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2208999999999137e-05, 1.2236000000005742e-05, 1.2235999999998803e-05, 1.2221999999999233e-05, 1.2263999999997943e-05, 1.2291999999997083e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2249999999998373e-05, 1.2250000000005312e-05, 1.2250000000005312e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.230499999999718e-05, 1.2249999999998373e-05, 1.2249999999998373e-05]</msg>
<status status="PASS" starttime="20201115 22:00:27.242" endtime="20201115 22:00:27.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.237" endtime="20201115 22:00:27.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.247" endtime="20201115 22:00:27.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.250" endtime="20201115 22:00:27.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.249" endtime="20201115 22:00:27.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.245" endtime="20201115 22:00:27.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.853" endtime="20201115 22:00:27.271"></status>
</kw>
<msg timestamp="20201115 22:00:27.271" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.280" endtime="20201115 22:00:27.319"></status>
</kw>
<msg timestamp="20201115 22:00:27.320" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.279" endtime="20201115 22:00:27.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.321" endtime="20201115 22:00:27.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.324" endtime="20201115 22:00:27.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.276" endtime="20201115 22:00:27.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.274" endtime="20201115 22:00:27.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.333" endtime="20201115 22:00:27.636"></status>
</kw>
<msg timestamp="20201115 22:00:27.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02101025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0210225, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:27.332" endtime="20201115 22:00:27.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02101025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0210225, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:27.641" endtime="20201115 22:00:27.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.649" endtime="20201115 22:00:27.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.329" endtime="20201115 22:00:27.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.327" endtime="20201115 22:00:27.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.655" level="INFO">${RESULT} = [{'time': 0.0210225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.021597069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:27.652" endtime="20201115 22:00:27.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.712" level="INFO">${OVERHEAD} = {'diff': [1.2249999999998373e-05, 1.226299999999847e-05, 1.2305000000000649e-05, 1.2235999999998803e-05, 1.2125000000001718e-05, 1.2208000000003133e-05, 1.2207999999999664e-05, 1.2235999999998803e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:27.656" endtime="20201115 22:00:27.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.717" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:27.716" endtime="20201115 22:00:27.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.719" level="INFO">VALUE: [1.2249999999998373e-05, 1.226299999999847e-05, 1.2305000000000649e-05, 1.2235999999998803e-05, 1.2125000000001718e-05, 1.2208000000003133e-05, 1.2207999999999664e-05, 1.2235999999998803e-05, 1.2249999999998373e-05, 1.2278000000000983e-05, 1.2263000000001939e-05, 1.2221999999999233e-05, 1.2306000000000122e-05, 1.2263999999997943e-05, 1.2264000000001413e-05, 1.2277999999997513e-05, 1.2208000000003133e-05, 1.2250000000001843e-05, 1.2278000000004452e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2291999999997083e-05, 1.2277999999997513e-05, 1.2263999999997943e-05, 1.2263999999997943e-05, 1.2250000000005312e-05, 1.2263999999997943e-05, 1.2249999999998373e-05, 1.2235999999998803e-05, 1.2305999999996653e-05, 1.2194999999999567e-05, 1.2249999999998373e-05, 1.229099999999761e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2263999999997943e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2235999999998803e-05, 1.2194000000000094e-05, 1.2249999999998373e-05, 1.2194000000000094e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2249999999998373e-05, 1.2263999999997943e-05, 1.2221999999999233e-05, 1.2249999999998373e-05, 1.2221999999999233e-05]</msg>
<status status="PASS" starttime="20201115 22:00:27.718" endtime="20201115 22:00:27.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.713" endtime="20201115 22:00:27.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.723" endtime="20201115 22:00:27.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.727" endtime="20201115 22:00:27.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.725" endtime="20201115 22:00:27.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.721" endtime="20201115 22:00:27.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.272" endtime="20201115 22:00:27.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.598" endtime="20201115 22:00:27.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.597" endtime="20201115 22:00:27.748"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.750" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.760" endtime="20201115 22:00:27.807"></status>
</kw>
<msg timestamp="20201115 22:00:27.807" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.758" endtime="20201115 22:00:27.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.808" endtime="20201115 22:00:27.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.811" endtime="20201115 22:00:27.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.755" endtime="20201115 22:00:27.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.752" endtime="20201115 22:00:27.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.820" endtime="20201115 22:00:28.106"></status>
</kw>
<msg timestamp="20201115 22:00:28.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027191806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027204306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.818" endtime="20201115 22:00:28.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027191806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027204306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.110" endtime="20201115 22:00:28.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.119" endtime="20201115 22:00:28.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.815" endtime="20201115 22:00:28.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.814" endtime="20201115 22:00:28.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.125" level="INFO">${RESULT} = [{'time': 0.027204306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000002093e-05, 'source_diff': 1.2500000000002093e-05}, {'time': 0.027806806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.122" endtime="20201115 22:00:28.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.139" level="INFO">${OVERHEAD} = {'diff': [1.2500000000002093e-05, 1.2472999999998957e-05, 1.2486999999998527e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2513999999998193e-05, 1.2527000000001759e-05, 1.2499999999998623e-05...</msg>
<status status="PASS" starttime="20201115 22:00:28.126" endtime="20201115 22:00:28.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.144" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:28.143" endtime="20201115 22:00:28.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.147" level="INFO">VALUE: [1.2500000000002093e-05, 1.2472999999998957e-05, 1.2486999999998527e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2513999999998193e-05, 1.2527000000001759e-05, 1.2499999999998623e-05, 1.2444000000000344e-05, 1.2499999999998623e-05, 1.2528000000004702e-05, 1.2500000000005562e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2472999999998957e-05, 1.2499999999998623e-05, 1.2513999999998193e-05, 1.2514000000005132e-05, 1.2486999999998527e-05, 1.2499999999998623e-05, 1.2472000000006422e-05, 1.2471999999999483e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2487000000005466e-05, 1.2499999999998623e-05, 1.2472999999998957e-05, 1.2444000000000344e-05, 1.2499999999998623e-05, 1.2431000000000247e-05, 1.2500000000005562e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2486999999998527e-05, 1.2471999999999483e-05, 1.2472000000006422e-05, 1.2485999999999053e-05, 1.2471999999999483e-05, 1.2528000000004702e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2541000000004798e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2457999999999914e-05, 1.2499999999998623e-05, 1.2472999999998957e-05, 1.2485999999999053e-05, 1.2485999999999053e-05]</msg>
<status status="PASS" starttime="20201115 22:00:28.145" endtime="20201115 22:00:28.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.140" endtime="20201115 22:00:28.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.150" endtime="20201115 22:00:28.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.153" endtime="20201115 22:00:28.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.152" endtime="20201115 22:00:28.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.148" endtime="20201115 22:00:28.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.750" endtime="20201115 22:00:28.174"></status>
</kw>
<msg timestamp="20201115 22:00:28.174" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.184" endtime="20201115 22:00:28.224"></status>
</kw>
<msg timestamp="20201115 22:00:28.224" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.182" endtime="20201115 22:00:28.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.227" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.225" endtime="20201115 22:00:28.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.228" endtime="20201115 22:00:28.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.179" endtime="20201115 22:00:28.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.177" endtime="20201115 22:00:28.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.237" endtime="20201115 22:00:28.522"></status>
</kw>
<msg timestamp="20201115 22:00:28.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02254425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:28.235" endtime="20201115 22:00:28.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02254425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:28.526" endtime="20201115 22:00:28.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.534" endtime="20201115 22:00:28.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.233" endtime="20201115 22:00:28.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.231" endtime="20201115 22:00:28.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.541" level="INFO">${RESULT} = [{'time': 0.022556708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2458000000003383e-05, 'source_diff': 1.2458000000003383e-05}, {'time': 0.023164292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.538" endtime="20201115 22:00:28.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.555" level="INFO">${OVERHEAD} = {'diff': [1.2458000000003383e-05, 1.2388999999998068e-05, 1.2513000000002189e-05, 1.2472999999998957e-05, 1.2429999999997304e-05, 1.252699999999829e-05, 1.2444999999999817e-05, 1.2499999999998623e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:28.542" endtime="20201115 22:00:28.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.560" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:28.559" endtime="20201115 22:00:28.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.562" level="INFO">VALUE: [1.2458000000003383e-05, 1.2388999999998068e-05, 1.2513000000002189e-05, 1.2472999999998957e-05, 1.2429999999997304e-05, 1.252699999999829e-05, 1.2444999999999817e-05, 1.2499999999998623e-05, 1.2402000000001634e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.254099999999786e-05, 1.2486000000002523e-05, 1.2457999999999914e-05, 1.2513999999998193e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2500000000005562e-05, 1.2458999999999387e-05, 1.2457999999999914e-05, 1.2485999999999053e-05, 1.2431000000000247e-05, 1.2444000000000344e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2541999999997333e-05, 1.2485999999999053e-05, 1.2500000000005562e-05, 1.2486999999998527e-05, 1.2457999999999914e-05, 1.2485999999999053e-05, 1.2473000000005896e-05, 1.2486000000005992e-05, 1.2457999999999914e-05, 1.2500000000005562e-05, 1.2457999999999914e-05, 1.2485999999999053e-05, 1.2444999999999817e-05, 1.2457999999999914e-05, 1.2471999999999483e-05, 1.2457999999999914e-05, 1.2527999999997763e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2541999999997333e-05, 1.2485999999999053e-05, 1.2472999999998957e-05, 1.2458999999999387e-05, 1.2472999999998957e-05]</msg>
<status status="PASS" starttime="20201115 22:00:28.561" endtime="20201115 22:00:28.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.556" endtime="20201115 22:00:28.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.566" endtime="20201115 22:00:28.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.569" endtime="20201115 22:00:28.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.568" endtime="20201115 22:00:28.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.564" endtime="20201115 22:00:28.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.175" endtime="20201115 22:00:28.590"></status>
</kw>
<msg timestamp="20201115 22:00:28.590" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.599" endtime="20201115 22:00:28.640"></status>
</kw>
<msg timestamp="20201115 22:00:28.641" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.597" endtime="20201115 22:00:28.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.643" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.642" endtime="20201115 22:00:28.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.644" endtime="20201115 22:00:28.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.595" endtime="20201115 22:00:28.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.593" endtime="20201115 22:00:28.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.653" endtime="20201115 22:00:28.935"></status>
</kw>
<msg timestamp="20201115 22:00:28.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023690194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023702639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.652" endtime="20201115 22:00:28.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023690194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023702639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.939" endtime="20201115 22:00:28.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.947" endtime="20201115 22:00:28.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.649" endtime="20201115 22:00:28.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.647" endtime="20201115 22:00:28.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.954" level="INFO">${RESULT} = [{'time': 0.023702639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2444999999999817e-05, 'source_diff': 1.2444999999999817e-05}, {'time': 0.024311042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.950" endtime="20201115 22:00:28.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.968" level="INFO">${OVERHEAD} = {'diff': [1.2444999999999817e-05, 1.2431000000000247e-05, 1.2431000000000247e-05, 1.2527000000001759e-05, 1.2486000000002523e-05, 1.2444000000000344e-05, 1.2457999999999914e-05, 1.2499999999998623e-05...</msg>
<status status="PASS" starttime="20201115 22:00:28.955" endtime="20201115 22:00:28.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.973" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:28.972" endtime="20201115 22:00:28.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.975" level="INFO">VALUE: [1.2444999999999817e-05, 1.2431000000000247e-05, 1.2431000000000247e-05, 1.2527000000001759e-05, 1.2486000000002523e-05, 1.2444000000000344e-05, 1.2457999999999914e-05, 1.2499999999998623e-05, 1.2514000000001663e-05, 1.2472999999998957e-05, 1.2485999999999053e-05, 1.2486000000002523e-05, 1.2542000000000803e-05, 1.2471999999999483e-05, 1.2388999999994599e-05, 1.2513999999998193e-05, 1.2457999999999914e-05, 1.2513999999998193e-05, 1.252699999999829e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2472999999998957e-05, 1.2528000000004702e-05, 1.2500000000005562e-05, 1.2430000000000774e-05, 1.2486000000005992e-05, 1.2486000000005992e-05, 1.2527999999997763e-05, 1.2486999999998527e-05, 1.2485999999999053e-05, 1.2514000000005132e-05, 1.2514000000005132e-05, 1.2513999999998193e-05, 1.2459000000006326e-05, 1.2485999999999053e-05, 1.2514000000005132e-05, 1.2485999999999053e-05, 1.2471999999999483e-05, 1.2444000000000344e-05, 1.2486000000005992e-05, 1.2485999999999053e-05, 1.2500000000005562e-05, 1.2431000000000247e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2472999999998957e-05, 1.2431000000000247e-05, 1.2486999999998527e-05, 1.251299999999872e-05, 1.2499999999998623e-05]</msg>
<status status="PASS" starttime="20201115 22:00:28.974" endtime="20201115 22:00:28.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.969" endtime="20201115 22:00:28.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.978" endtime="20201115 22:00:28.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.982" endtime="20201115 22:00:29.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.980" endtime="20201115 22:00:29.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.977" endtime="20201115 22:00:29.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.591" endtime="20201115 22:00:29.003"></status>
</kw>
<msg timestamp="20201115 22:00:29.003" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.012" endtime="20201115 22:00:29.053"></status>
</kw>
<msg timestamp="20201115 22:00:29.054" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.010" endtime="20201115 22:00:29.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.055" endtime="20201115 22:00:29.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.058" endtime="20201115 22:00:29.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.008" endtime="20201115 22:00:29.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.005" endtime="20201115 22:00:29.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.067" endtime="20201115 22:00:29.354"></status>
</kw>
<msg timestamp="20201115 22:00:29.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022939792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022952306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.065" endtime="20201115 22:00:29.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022939792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022952306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.358" endtime="20201115 22:00:29.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.367" endtime="20201115 22:00:29.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.063" endtime="20201115 22:00:29.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.061" endtime="20201115 22:00:29.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.373" level="INFO">${RESULT} = [{'time': 0.022952306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.023560069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:29.370" endtime="20201115 22:00:29.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.388" level="INFO">${OVERHEAD} = {'diff': [1.2513999999998193e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2472000000002953e-05, 1.2485999999999053e-05, 1.2457999999999914e-05, 1.2457999999999914e-05, 1.2444000000000344e-05...</msg>
<status status="PASS" starttime="20201115 22:00:29.374" endtime="20201115 22:00:29.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.393" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:29.392" endtime="20201115 22:00:29.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.395" level="INFO">VALUE: [1.2513999999998193e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2472000000002953e-05, 1.2485999999999053e-05, 1.2457999999999914e-05, 1.2457999999999914e-05, 1.2444000000000344e-05, 1.2471999999999483e-05, 1.2528000000001233e-05, 1.2541000000001329e-05, 1.2471999999999483e-05, 1.2472999999998957e-05, 1.2500000000002093e-05, 1.2471999999999483e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2472000000006422e-05, 1.2444000000000344e-05, 1.2541999999997333e-05, 1.2499999999998623e-05, 1.2457999999999914e-05, 1.2486000000005992e-05, 1.2471999999999483e-05, 1.2429999999993835e-05, 1.2486999999998527e-05, 1.2429999999993835e-05, 1.2471999999999483e-05, 1.2513999999998193e-05, 1.2542000000004272e-05, 1.2514000000005132e-05, 1.2471999999999483e-05, 1.2458999999999387e-05, 1.2500000000005562e-05, 1.2499999999998623e-05, 1.255499999999743e-05, 1.2556000000003842e-05, 1.2514000000005132e-05, 1.2471999999999483e-05, 1.2472999999998957e-05, 1.2485999999999053e-05, 1.255499999999743e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2471999999999483e-05, 1.2486999999998527e-05, 1.2457999999999914e-05, 1.2471999999999483e-05, 1.2458999999999387e-05, 1.2471999999999483e-05]</msg>
<status status="PASS" starttime="20201115 22:00:29.394" endtime="20201115 22:00:29.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.389" endtime="20201115 22:00:29.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.398" endtime="20201115 22:00:29.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.402" endtime="20201115 22:00:29.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.400" endtime="20201115 22:00:29.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.396" endtime="20201115 22:00:29.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.003" endtime="20201115 22:00:29.422"></status>
</kw>
<msg timestamp="20201115 22:00:29.422" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.431" endtime="20201115 22:00:29.474"></status>
</kw>
<msg timestamp="20201115 22:00:29.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.430" endtime="20201115 22:00:29.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.477" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.476" endtime="20201115 22:00:29.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.479" endtime="20201115 22:00:29.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.427" endtime="20201115 22:00:29.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.425" endtime="20201115 22:00:29.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.488" endtime="20201115 22:00:29.782"></status>
</kw>
<msg timestamp="20201115 22:00:29.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025144153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025156625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.487" endtime="20201115 22:00:29.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025144153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025156625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.792" endtime="20201115 22:00:29.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.810" endtime="20201115 22:00:29.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.484" endtime="20201115 22:00:29.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.483" endtime="20201115 22:00:29.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.824" level="INFO">${RESULT} = [{'time': 0.025156625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.025765653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:29.817" endtime="20201115 22:00:29.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.852" level="INFO">${OVERHEAD} = {'diff': [1.2471999999999483e-05, 1.2444999999999817e-05, 1.2485999999999053e-05, 1.2528000000001233e-05, 1.2500000000002093e-05, 1.2528000000001233e-05, 1.2471999999999483e-05, 1.2486000000002523e-05...</msg>
<status status="PASS" starttime="20201115 22:00:29.826" endtime="20201115 22:00:29.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.857" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:29.856" endtime="20201115 22:00:29.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.859" level="INFO">VALUE: [1.2471999999999483e-05, 1.2444999999999817e-05, 1.2485999999999053e-05, 1.2528000000001233e-05, 1.2500000000002093e-05, 1.2528000000001233e-05, 1.2471999999999483e-05, 1.2486000000002523e-05, 1.2457999999999914e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2457999999999914e-05, 1.2514000000005132e-05, 1.2471999999999483e-05, 1.2457999999999914e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2472999999998957e-05, 1.2486000000005992e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2472000000006422e-05, 1.2431000000000247e-05, 1.2485999999999053e-05, 1.2486000000005992e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2514000000005132e-05, 1.2485999999999053e-05, 1.2457999999999914e-05, 1.2486999999998527e-05, 1.2500000000005562e-05, 1.2485999999999053e-05, 1.2471999999999483e-05, 1.2500000000005562e-05, 1.2499999999998623e-05, 1.2457999999999914e-05, 1.2485999999999053e-05, 1.2486999999998527e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2528000000004702e-05, 1.2514000000005132e-05, 1.2500000000005562e-05, 1.2499999999998623e-05, 1.2513999999998193e-05, 1.2485999999999053e-05, 1.2416999999993739e-05, 1.2499999999998623e-05]</msg>
<status status="PASS" starttime="20201115 22:00:29.858" endtime="20201115 22:00:29.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.853" endtime="20201115 22:00:29.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.862" endtime="20201115 22:00:29.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.866" endtime="20201115 22:00:29.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.864" endtime="20201115 22:00:29.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.861" endtime="20201115 22:00:29.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.423" endtime="20201115 22:00:29.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.749" endtime="20201115 22:00:29.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.748" endtime="20201115 22:00:29.887"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.889" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.898" endtime="20201115 22:00:29.947"></status>
</kw>
<msg timestamp="20201115 22:00:29.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.896" endtime="20201115 22:00:29.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.950" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.948" endtime="20201115 22:00:29.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.951" endtime="20201115 22:00:29.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.894" endtime="20201115 22:00:29.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.892" endtime="20201115 22:00:29.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.960" endtime="20201115 22:00:30.246"></status>
</kw>
<msg timestamp="20201115 22:00:30.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023286194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023298931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.959" endtime="20201115 22:00:30.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023286194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023298931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.250" endtime="20201115 22:00:30.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.258" endtime="20201115 22:00:30.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.956" endtime="20201115 22:00:30.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.955" endtime="20201115 22:00:30.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.265" level="INFO">${RESULT} = [{'time': 0.023298931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2736999999998777e-05, 'source_diff': 1.2736999999998777e-05}, {'time': 0.023938472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:30.262" endtime="20201115 22:00:30.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.279" level="INFO">${OVERHEAD} = {'diff': [1.2736999999998777e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2750000000002343e-05, 1.2722999999999207e-05, 1.2736000000002773e-05, 1.2735999999999303e-05...</msg>
<status status="PASS" starttime="20201115 22:00:30.266" endtime="20201115 22:00:30.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.283" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:30.282" endtime="20201115 22:00:30.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.286" level="INFO">VALUE: [1.2736999999998777e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2750000000002343e-05, 1.2722999999999207e-05, 1.2736000000002773e-05, 1.2735999999999303e-05, 1.2707999999996694e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2638999999998318e-05, 1.2735999999999303e-05, 1.2708000000000164e-05, 1.2750000000005812e-05, 1.2749999999998873e-05, 1.2722000000006672e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2694000000000594e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2736000000006242e-05, 1.2735999999999303e-05, 1.2652000000001884e-05, 1.2736999999998777e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2695000000000067e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2777999999998013e-05, 1.2750000000005812e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2723000000006146e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2763999999998443e-05]</msg>
<status status="PASS" starttime="20201115 22:00:30.284" endtime="20201115 22:00:30.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.280" endtime="20201115 22:00:30.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.289" endtime="20201115 22:00:30.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.292" endtime="20201115 22:00:30.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.291" endtime="20201115 22:00:30.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.287" endtime="20201115 22:00:30.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.890" endtime="20201115 22:00:30.313"></status>
</kw>
<msg timestamp="20201115 22:00:30.313" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.322" endtime="20201115 22:00:30.369"></status>
</kw>
<msg timestamp="20201115 22:00:30.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.321" endtime="20201115 22:00:30.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.371" endtime="20201115 22:00:30.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.373" endtime="20201115 22:00:30.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.318" endtime="20201115 22:00:30.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.316" endtime="20201115 22:00:30.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.383" endtime="20201115 22:00:30.682"></status>
</kw>
<msg timestamp="20201115 22:00:30.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023592597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.382" endtime="20201115 22:00:30.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023592597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.686" endtime="20201115 22:00:30.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.694" endtime="20201115 22:00:30.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.379" endtime="20201115 22:00:30.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.377" endtime="20201115 22:00:30.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.701" level="INFO">${RESULT} = [{'time': 0.023592597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.024231625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:30.698" endtime="20201115 22:00:30.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.715" level="INFO">${OVERHEAD} = {'diff': [1.2708000000000164e-05, 1.2721999999999734e-05, 1.2791000000001579e-05, 1.2694000000000594e-05, 1.2736000000002773e-05, 1.2749999999998873e-05, 1.2736999999998777e-05, 1.2749999999998873e-05...</msg>
<status status="PASS" starttime="20201115 22:00:30.702" endtime="20201115 22:00:30.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.720" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:30.718" endtime="20201115 22:00:30.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.722" level="INFO">VALUE: [1.2708000000000164e-05, 1.2721999999999734e-05, 1.2791000000001579e-05, 1.2694000000000594e-05, 1.2736000000002773e-05, 1.2749999999998873e-05, 1.2736999999998777e-05, 1.2749999999998873e-05, 1.2791999999997583e-05, 1.2708000000000164e-05, 1.2750000000002343e-05, 1.2750000000002343e-05, 1.2777999999998013e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2778000000004952e-05, 1.2791999999997583e-05, 1.2749999999998873e-05, 1.2736999999998777e-05, 1.2749999999998873e-05, 1.2723000000006146e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2722999999999207e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2694000000000594e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2694000000000594e-05, 1.2721999999999734e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2722999999999207e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2736999999998777e-05, 1.2721999999999734e-05, 1.2749999999998873e-05]</msg>
<status status="PASS" starttime="20201115 22:00:30.721" endtime="20201115 22:00:30.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.716" endtime="20201115 22:00:30.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.725" endtime="20201115 22:00:30.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.729" endtime="20201115 22:00:30.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.727" endtime="20201115 22:00:30.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.724" endtime="20201115 22:00:30.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.314" endtime="20201115 22:00:30.749"></status>
</kw>
<msg timestamp="20201115 22:00:30.750" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.759" endtime="20201115 22:00:30.805"></status>
</kw>
<msg timestamp="20201115 22:00:30.806" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.757" endtime="20201115 22:00:30.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.807" endtime="20201115 22:00:30.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.810" endtime="20201115 22:00:30.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.755" endtime="20201115 22:00:30.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.752" endtime="20201115 22:00:30.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.820" endtime="20201115 22:00:31.106"></status>
</kw>
<msg timestamp="20201115 22:00:31.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024360556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.818" endtime="20201115 22:00:31.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024360556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.110" endtime="20201115 22:00:31.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.118" endtime="20201115 22:00:31.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.815" endtime="20201115 22:00:31.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.814" endtime="20201115 22:00:31.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.125" level="INFO">${RESULT} = [{'time': 0.024360556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2722999999999207e-05, 'source_diff': 1.2722999999999207e-05}, {'time': 0.024998472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:31.122" endtime="20201115 22:00:31.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.140" level="INFO">${OVERHEAD} = {'diff': [1.2722999999999207e-05, 1.2708000000000164e-05, 1.2722999999999207e-05, 1.2763999999998443e-05, 1.2736000000002773e-05, 1.2749999999998873e-05, 1.2708000000000164e-05, 1.2750000000002343e-05...</msg>
<status status="PASS" starttime="20201115 22:00:31.126" endtime="20201115 22:00:31.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.144" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:31.143" endtime="20201115 22:00:31.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.147" level="INFO">VALUE: [1.2722999999999207e-05, 1.2708000000000164e-05, 1.2722999999999207e-05, 1.2763999999998443e-05, 1.2736000000002773e-05, 1.2749999999998873e-05, 1.2708000000000164e-05, 1.2750000000002343e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2694000000000594e-05, 1.2736999999998777e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2639000000001788e-05, 1.2721999999999734e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2722000000006672e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2680000000001024e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.277699999999854e-05, 1.2749999999998873e-05, 1.2791999999997583e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2791000000005048e-05, 1.2695000000000067e-05, 1.2708000000000164e-05, 1.2707999999993225e-05, 1.2735999999999303e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2736000000006242e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2763999999998443e-05]</msg>
<status status="PASS" starttime="20201115 22:00:31.145" endtime="20201115 22:00:31.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.141" endtime="20201115 22:00:31.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.150" endtime="20201115 22:00:31.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.158" endtime="20201115 22:00:31.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.152" endtime="20201115 22:00:31.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.148" endtime="20201115 22:00:31.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.750" endtime="20201115 22:00:31.179"></status>
</kw>
<msg timestamp="20201115 22:00:31.179" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.188" endtime="20201115 22:00:31.233"></status>
</kw>
<msg timestamp="20201115 22:00:31.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.186" endtime="20201115 22:00:31.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.235" endtime="20201115 22:00:31.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.237" endtime="20201115 22:00:31.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.184" endtime="20201115 22:00:31.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.182" endtime="20201115 22:00:31.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.247" endtime="20201115 22:00:31.533"></status>
</kw>
<msg timestamp="20201115 22:00:31.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:31.246" endtime="20201115 22:00:31.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:31.537" endtime="20201115 22:00:31.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.545" endtime="20201115 22:00:31.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.243" endtime="20201115 22:00:31.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.242" endtime="20201115 22:00:31.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.552" level="INFO">${RESULT} = [{'time': 0.02192925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2681000000000497e-05, 'source_diff': 1.2681000000000497e-05}, {'time': 0.022566083, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:31.548" endtime="20201115 22:00:31.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.565" level="INFO">${OVERHEAD} = {'diff': [1.2681000000000497e-05, 1.2721999999999734e-05, 1.2695000000000067e-05, 1.2667000000000928e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2666999999997458e-05...</msg>
<status status="PASS" starttime="20201115 22:00:31.553" endtime="20201115 22:00:31.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.570" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:31.569" endtime="20201115 22:00:31.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.572" level="INFO">VALUE: [1.2681000000000497e-05, 1.2721999999999734e-05, 1.2695000000000067e-05, 1.2667000000000928e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2666999999997458e-05, 1.2778000000001483e-05, 1.2778000000001483e-05, 1.2735999999999303e-05, 1.2708000000000164e-05, 1.2667000000000928e-05, 1.2777999999998013e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2708000000000164e-05, 1.276299999999897e-05, 1.2749999999998873e-05, 1.2695000000000067e-05, 1.2791999999997583e-05, 1.2723000000006146e-05, 1.2777999999998013e-05, 1.2749999999998873e-05, 1.2708000000000164e-05, 1.2708999999999637e-05, 1.2749999999998873e-05, 1.2694000000000594e-05, 1.2736000000006242e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2694000000000594e-05, 1.2833000000003758e-05, 1.2735999999999303e-05, 1.2667000000000928e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2708000000000164e-05, 1.2764000000005382e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2791999999997583e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2723000000006146e-05, 1.2736999999998777e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2735999999999303e-05]</msg>
<status status="PASS" starttime="20201115 22:00:31.571" endtime="20201115 22:00:31.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.566" endtime="20201115 22:00:31.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.576" endtime="20201115 22:00:31.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.580" endtime="20201115 22:00:31.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.578" endtime="20201115 22:00:31.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.574" endtime="20201115 22:00:31.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.180" endtime="20201115 22:00:31.600"></status>
</kw>
<msg timestamp="20201115 22:00:31.600" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.609" endtime="20201115 22:00:31.655"></status>
</kw>
<msg timestamp="20201115 22:00:31.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.608" endtime="20201115 22:00:31.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.658" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.657" endtime="20201115 22:00:31.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.659" endtime="20201115 22:00:31.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.605" endtime="20201115 22:00:31.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.603" endtime="20201115 22:00:31.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.669" endtime="20201115 22:00:31.955"></status>
</kw>
<msg timestamp="20201115 22:00:31.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.668" endtime="20201115 22:00:31.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.960" endtime="20201115 22:00:31.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.968" endtime="20201115 22:00:31.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.665" endtime="20201115 22:00:31.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.663" endtime="20201115 22:00:31.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.974" level="INFO">${RESULT} = [{'time': 0.022559236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2763999999998443e-05, 'source_diff': 1.2763999999998443e-05}, {'time': 0.023196167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:31.971" endtime="20201115 22:00:31.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.988" level="INFO">${OVERHEAD} = {'diff': [1.2763999999998443e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2750000000002343e-05, 1.2763999999998443e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2680999999997028e-05...</msg>
<status status="PASS" starttime="20201115 22:00:31.975" endtime="20201115 22:00:31.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.993" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:31.992" endtime="20201115 22:00:31.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.995" level="INFO">VALUE: [1.2763999999998443e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2750000000002343e-05, 1.2763999999998443e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2680999999997028e-05, 1.2735999999999303e-05, 1.2708999999999637e-05, 1.2721999999999734e-05, 1.2652000000001884e-05, 1.2737000000002247e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2737000000005716e-05, 1.2764000000005382e-05, 1.2721999999999734e-05, 1.2666000000001454e-05, 1.2721999999999734e-05, 1.2737000000005716e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2652999999994419e-05, 1.2805999999997153e-05, 1.2735999999999303e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2708000000000164e-05, 1.2681000000000497e-05, 1.2735999999999303e-05, 1.2806000000004092e-05, 1.2749999999998873e-05, 1.2721999999999734e-05, 1.2736999999998777e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2639000000001788e-05, 1.2735999999999303e-05, 1.2763999999998443e-05, 1.2736999999998777e-05, 1.2708999999999637e-05, 1.2695000000000067e-05, 1.2735999999999303e-05, 1.2694000000000594e-05, 1.2735999999999303e-05, 1.2653000000001358e-05]</msg>
<status status="PASS" starttime="20201115 22:00:31.994" endtime="20201115 22:00:31.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.989" endtime="20201115 22:00:31.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.999" endtime="20201115 22:00:32.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.002" endtime="20201115 22:00:32.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.001" endtime="20201115 22:00:32.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.997" endtime="20201115 22:00:32.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.601" endtime="20201115 22:00:32.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.888" endtime="20201115 22:00:32.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.887" endtime="20201115 22:00:32.024"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.026" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.035" endtime="20201115 22:00:32.086"></status>
</kw>
<msg timestamp="20201115 22:00:32.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.033" endtime="20201115 22:00:32.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.089" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.088" endtime="20201115 22:00:32.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.091" endtime="20201115 22:00:32.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.031" endtime="20201115 22:00:32.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.028" endtime="20201115 22:00:32.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.101" endtime="20201115 22:00:32.387"></status>
</kw>
<msg timestamp="20201115 22:00:32.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026649139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026662125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.099" endtime="20201115 22:00:32.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026649139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026662125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.391" endtime="20201115 22:00:32.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.399" endtime="20201115 22:00:32.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.096" endtime="20201115 22:00:32.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.094" endtime="20201115 22:00:32.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.406" level="INFO">${RESULT} = [{'time': 0.026662125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2985999999999553e-05, 'source_diff': 1.2985999999999553e-05}, {'time': 0.027333292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:32.402" endtime="20201115 22:00:32.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.420" level="INFO">${OVERHEAD} = {'diff': [1.2985999999999553e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.2957999999996944e-05, 1.2945000000000317e-05, 1.3014000000002163e-05, 1.2999999999999123e-05...</msg>
<status status="PASS" starttime="20201115 22:00:32.407" endtime="20201115 22:00:32.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.424" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:32.423" endtime="20201115 22:00:32.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.427" level="INFO">VALUE: [1.2985999999999553e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.2957999999996944e-05, 1.2945000000000317e-05, 1.3014000000002163e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.305499999999793e-05, 1.3055999999997403e-05, 1.2999999999999123e-05, 1.301299999999922e-05, 1.2972999999999457e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2931000000000747e-05, 1.2945000000000317e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2931000000000747e-05, 1.2971999999999984e-05, 1.3027999999998263e-05, 1.2985999999999553e-05, 1.2972999999999457e-05, 1.3000000000006062e-05, 1.3000000000006062e-05, 1.2971999999999984e-05, 1.3000000000006062e-05, 1.3027999999998263e-05, 1.3027999999998263e-05, 1.2999999999999123e-05, 1.2958000000000414e-05, 1.3028000000005202e-05, 1.305499999999793e-05, 1.3013999999998693e-05, 1.3013999999998693e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2945000000000317e-05, 1.2986000000006492e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2958999999999887e-05, 1.2999999999999123e-05, 1.3028000000005202e-05]</msg>
<status status="PASS" starttime="20201115 22:00:32.425" endtime="20201115 22:00:32.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.421" endtime="20201115 22:00:32.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.430" endtime="20201115 22:00:32.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.434" endtime="20201115 22:00:32.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.432" endtime="20201115 22:00:32.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.429" endtime="20201115 22:00:32.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.026" endtime="20201115 22:00:32.455"></status>
</kw>
<msg timestamp="20201115 22:00:32.455" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.464" endtime="20201115 22:00:32.510"></status>
</kw>
<msg timestamp="20201115 22:00:32.510" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.462" endtime="20201115 22:00:32.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.511" endtime="20201115 22:00:32.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.514" endtime="20201115 22:00:32.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.460" endtime="20201115 22:00:32.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.457" endtime="20201115 22:00:32.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.524" endtime="20201115 22:00:32.817"></status>
</kw>
<msg timestamp="20201115 22:00:32.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.522" endtime="20201115 22:00:32.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.826" endtime="20201115 22:00:32.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.844" endtime="20201115 22:00:32.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.519" endtime="20201115 22:00:32.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.518" endtime="20201115 22:00:32.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.859" level="INFO">${RESULT} = [{'time': 0.022329819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2944000000000844e-05, 'source_diff': 1.2944000000000844e-05}, {'time': 0.023002681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:32.851" endtime="20201115 22:00:32.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.885" level="INFO">${OVERHEAD} = {'diff': [1.2944000000000844e-05, 1.2972999999999457e-05, 1.2999999999999123e-05, 1.3014000000002163e-05, 1.3000000000002593e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2930000000001274e-05...</msg>
<status status="PASS" starttime="20201115 22:00:32.861" endtime="20201115 22:00:32.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.890" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:32.889" endtime="20201115 22:00:32.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.892" level="INFO">VALUE: [1.2944000000000844e-05, 1.2972999999999457e-05, 1.2999999999999123e-05, 1.3014000000002163e-05, 1.3000000000002593e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2930000000001274e-05, 1.3055999999997403e-05, 1.2972999999999457e-05, 1.3014000000002163e-05, 1.2944000000000844e-05, 1.3014000000002163e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.2986999999999027e-05, 1.2985999999999553e-05, 1.2972999999999457e-05, 1.2916000000001704e-05, 1.3027999999998263e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.3000000000006062e-05, 1.3041999999997833e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2903000000001608e-05, 1.3000000000006062e-05, 1.3041999999997833e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2945000000000317e-05, 1.3028000000005202e-05, 1.3013999999998693e-05, 1.2945000000000317e-05, 1.302699999999879e-05, 1.2999999999999123e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.3027999999998263e-05, 1.302699999999879e-05, 1.2930999999993809e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.2985999999999553e-05]</msg>
<status status="PASS" starttime="20201115 22:00:32.891" endtime="20201115 22:00:32.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.886" endtime="20201115 22:00:32.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.895" endtime="20201115 22:00:32.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.899" endtime="20201115 22:00:32.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.897" endtime="20201115 22:00:32.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.894" endtime="20201115 22:00:32.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.455" endtime="20201115 22:00:32.920"></status>
</kw>
<msg timestamp="20201115 22:00:32.920" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.929" endtime="20201115 22:00:32.976"></status>
</kw>
<msg timestamp="20201115 22:00:32.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.927" endtime="20201115 22:00:32.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.978" endtime="20201115 22:00:32.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.980" endtime="20201115 22:00:32.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.924" endtime="20201115 22:00:32.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.922" endtime="20201115 22:00:32.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.990" endtime="20201115 22:00:33.276"></status>
</kw>
<msg timestamp="20201115 22:00:33.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024652764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.989" endtime="20201115 22:00:33.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024652764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.281" endtime="20201115 22:00:33.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.289" endtime="20201115 22:00:33.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.986" endtime="20201115 22:00:33.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.984" endtime="20201115 22:00:33.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.296" level="INFO">${RESULT} = [{'time': 0.024652764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.025326569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:33.292" endtime="20201115 22:00:33.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.310" level="INFO">${OVERHEAD} = {'diff': [1.2917000000001178e-05, 1.3069000000000969e-05, 1.2931000000000747e-05, 1.2999999999999123e-05, 1.3000000000002593e-05, 1.3042000000001303e-05, 1.301299999999922e-05, 1.2985999999999553e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:33.297" endtime="20201115 22:00:33.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.314" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:33.313" endtime="20201115 22:00:33.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.317" level="INFO">VALUE: [1.2917000000001178e-05, 1.3069000000000969e-05, 1.2931000000000747e-05, 1.2999999999999123e-05, 1.3000000000002593e-05, 1.3042000000001303e-05, 1.301299999999922e-05, 1.2985999999999553e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.2958999999999887e-05, 1.2945000000000317e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.2944999999993378e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2958000000000414e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.2971999999999984e-05, 1.3014000000005632e-05, 1.2999999999999123e-05, 1.3027999999998263e-05, 1.2972999999999457e-05, 1.2944000000000844e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.3028000000005202e-05, 1.2972999999999457e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2985999999999553e-05, 1.2972999999999457e-05, 1.2958999999999887e-05, 1.2944000000000844e-05, 1.2972999999999457e-05, 1.2999999999999123e-05, 1.2945000000000317e-05, 1.2971999999999984e-05, 1.2999999999999123e-05, 1.2917000000001178e-05, 1.2972999999999457e-05, 1.2985999999999553e-05, 1.2999999999999123e-05, 1.301299999999922e-05]</msg>
<status status="PASS" starttime="20201115 22:00:33.315" endtime="20201115 22:00:33.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.311" endtime="20201115 22:00:33.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.320" endtime="20201115 22:00:33.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.323" endtime="20201115 22:00:33.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.322" endtime="20201115 22:00:33.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.318" endtime="20201115 22:00:33.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.920" endtime="20201115 22:00:33.344"></status>
</kw>
<msg timestamp="20201115 22:00:33.344" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.353" endtime="20201115 22:00:33.399"></status>
</kw>
<msg timestamp="20201115 22:00:33.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.352" endtime="20201115 22:00:33.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.402" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.400" endtime="20201115 22:00:33.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.403" endtime="20201115 22:00:33.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.349" endtime="20201115 22:00:33.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.347" endtime="20201115 22:00:33.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.413" endtime="20201115 22:00:33.712"></status>
</kw>
<msg timestamp="20201115 22:00:33.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.411" endtime="20201115 22:00:33.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.716" endtime="20201115 22:00:33.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.725" endtime="20201115 22:00:33.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.409" endtime="20201115 22:00:33.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.407" endtime="20201115 22:00:33.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.732" level="INFO">${RESULT} = [{'time': 0.022223139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2958000000000414e-05, 'source_diff': 1.2958000000000414e-05}, {'time': 0.022892389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:33.728" endtime="20201115 22:00:33.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.745" level="INFO">${OVERHEAD} = {'diff': [1.2958000000000414e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.304099999999836e-05, 1.2985999999999553e-05, 1.2943999999997374e-05, 1.2902999999998138e-05, 1.3013999999998693e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:33.733" endtime="20201115 22:00:33.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.750" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:33.749" endtime="20201115 22:00:33.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.752" level="INFO">VALUE: [1.2958000000000414e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.304099999999836e-05, 1.2985999999999553e-05, 1.2943999999997374e-05, 1.2902999999998138e-05, 1.3013999999998693e-05, 1.2999999999999123e-05, 1.3000000000002593e-05, 1.3014000000002163e-05, 1.2999999999999123e-05, 1.3000000000002593e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.2958000000000414e-05, 1.3027999999998263e-05, 1.2944999999993378e-05, 1.2958000000000414e-05, 1.3027999999998263e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2958999999999887e-05, 1.2999999999999123e-05, 1.2986000000006492e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2944000000000844e-05, 1.2958000000000414e-05, 1.2985999999999553e-05, 1.2958000000000414e-05, 1.3041000000005298e-05, 1.3000000000006062e-05, 1.2971999999999984e-05, 1.2999999999999123e-05, 1.30689999999975e-05, 1.3041999999997833e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.3000000000006062e-05, 1.2972999999999457e-05, 1.2916000000001704e-05, 1.3028000000005202e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2999999999999123e-05, 1.3013999999998693e-05, 1.2985999999999553e-05]</msg>
<status status="PASS" starttime="20201115 22:00:33.751" endtime="20201115 22:00:33.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.746" endtime="20201115 22:00:33.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.755" endtime="20201115 22:00:33.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.759" endtime="20201115 22:00:33.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.757" endtime="20201115 22:00:33.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.754" endtime="20201115 22:00:33.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.345" endtime="20201115 22:00:33.780"></status>
</kw>
<msg timestamp="20201115 22:00:33.780" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.789" endtime="20201115 22:00:33.835"></status>
</kw>
<msg timestamp="20201115 22:00:33.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.787" endtime="20201115 22:00:33.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.837" endtime="20201115 22:00:33.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.839" endtime="20201115 22:00:33.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.785" endtime="20201115 22:00:33.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.783" endtime="20201115 22:00:33.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.849" endtime="20201115 22:00:34.135"></status>
</kw>
<msg timestamp="20201115 22:00:34.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023515472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0235285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:33.848" endtime="20201115 22:00:34.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023515472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0235285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:34.140" endtime="20201115 22:00:34.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.148" endtime="20201115 22:00:34.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.845" endtime="20201115 22:00:34.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.843" endtime="20201115 22:00:34.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.155" level="INFO">${RESULT} = [{'time': 0.0235285, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3028000000001733e-05, 'source_diff': 1.3028000000001733e-05}, {'time': 0.02420075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:34.151" endtime="20201115 22:00:34.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.169" level="INFO">${OVERHEAD} = {'diff': [1.3028000000001733e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.2986000000003023e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.3013999999998693e-05, 1.2999999999999123e-05...</msg>
<status status="PASS" starttime="20201115 22:00:34.156" endtime="20201115 22:00:34.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.173" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:34.172" endtime="20201115 22:00:34.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.176" level="INFO">VALUE: [1.3028000000001733e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.2986000000003023e-05, 1.2999999999999123e-05, 1.2999999999999123e-05, 1.3013999999998693e-05, 1.2999999999999123e-05, 1.2972999999999457e-05, 1.3013999999998693e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.2945000000000317e-05, 1.2930000000001274e-05, 1.2888999999995099e-05, 1.2971999999999984e-05, 1.2945000000000317e-05, 1.3014000000005632e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2916000000001704e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.3013999999998693e-05, 1.2999999999999123e-05, 1.3000000000006062e-05, 1.2930000000001274e-05, 1.2972999999999457e-05, 1.2971999999999984e-05, 1.2917000000001178e-05, 1.3041999999997833e-05, 1.2999999999999123e-05, 1.2944999999993378e-05, 1.3055999999997403e-05, 1.3027999999998263e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.2999999999999123e-05, 1.2971999999999984e-05, 1.3042000000004772e-05, 1.2971999999999984e-05, 1.2929999999994335e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2958000000000414e-05]</msg>
<status status="PASS" starttime="20201115 22:00:34.174" endtime="20201115 22:00:34.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.170" endtime="20201115 22:00:34.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.179" endtime="20201115 22:00:34.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.182" endtime="20201115 22:00:34.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.181" endtime="20201115 22:00:34.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.177" endtime="20201115 22:00:34.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.781" endtime="20201115 22:00:34.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.025" endtime="20201115 22:00:34.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.024" endtime="20201115 22:00:34.203"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.206" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.215" endtime="20201115 22:00:34.267"></status>
</kw>
<msg timestamp="20201115 22:00:34.268" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.213" endtime="20201115 22:00:34.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.270" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.269" endtime="20201115 22:00:34.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.271" endtime="20201115 22:00:34.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.210" endtime="20201115 22:00:34.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.208" endtime="20201115 22:00:34.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.281" endtime="20201115 22:00:34.567"></status>
</kw>
<msg timestamp="20201115 22:00:34.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027283708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027296958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.279" endtime="20201115 22:00:34.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027283708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027296958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.571" endtime="20201115 22:00:34.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.579" endtime="20201115 22:00:34.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.277" endtime="20201115 22:00:34.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.275" endtime="20201115 22:00:34.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.586" level="INFO">${RESULT} = [{'time': 0.027296958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3249999999999373e-05, 'source_diff': 1.3249999999999373e-05}, {'time': 0.028000194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:34.582" endtime="20201115 22:00:34.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.600" level="INFO">${OVERHEAD} = {'diff': [1.3249999999999373e-05, 1.3222000000000234e-05, 1.3278000000001983e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3166999999997958e-05, 1.3222000000000234e-05, 1.3263999999998943e-05...</msg>
<status status="PASS" starttime="20201115 22:00:34.587" endtime="20201115 22:00:34.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.605" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:34.604" endtime="20201115 22:00:34.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.607" level="INFO">VALUE: [1.3249999999999373e-05, 1.3222000000000234e-05, 1.3278000000001983e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3166999999997958e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3250000000006312e-05, 1.3222999999999707e-05, 1.3235999999999803e-05, 1.3306000000004592e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3209000000000137e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3195000000000567e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.3236999999999277e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3208000000000664e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3193999999994155e-05, 1.3222000000000234e-05, 1.329099999999861e-05, 1.3138999999995349e-05, 1.3181000000000997e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3181000000000997e-05, 1.3278000000005452e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3249999999999373e-05]</msg>
<status status="PASS" starttime="20201115 22:00:34.606" endtime="20201115 22:00:34.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.601" endtime="20201115 22:00:34.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.610" endtime="20201115 22:00:34.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.614" endtime="20201115 22:00:34.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.612" endtime="20201115 22:00:34.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.609" endtime="20201115 22:00:34.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.206" endtime="20201115 22:00:34.635"></status>
</kw>
<msg timestamp="20201115 22:00:34.635" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.644" endtime="20201115 22:00:34.690"></status>
</kw>
<msg timestamp="20201115 22:00:34.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.642" endtime="20201115 22:00:34.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.692" endtime="20201115 22:00:34.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.694" endtime="20201115 22:00:34.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.640" endtime="20201115 22:00:34.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.637" endtime="20201115 22:00:34.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.704" endtime="20201115 22:00:34.989"></status>
</kw>
<msg timestamp="20201115 22:00:34.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02278675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:34.703" endtime="20201115 22:00:34.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02278675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:34.994" endtime="20201115 22:00:35.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.002" endtime="20201115 22:00:35.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.700" endtime="20201115 22:00:35.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.698" endtime="20201115 22:00:35.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.009" level="INFO">${RESULT} = [{'time': 0.02278675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3278000000001983e-05, 'source_diff': 1.3278000000001983e-05}, {'time': 0.023493042, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:35.005" endtime="20201115 22:00:35.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.022" level="INFO">${OVERHEAD} = {'diff': [1.3278000000001983e-05, 1.3194999999997098e-05, 1.3209000000000137e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3277999999998513e-05, 1.3235999999999803e-05...</msg>
<status status="PASS" starttime="20201115 22:00:35.010" endtime="20201115 22:00:35.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.027" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:35.026" endtime="20201115 22:00:35.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.029" level="INFO">VALUE: [1.3278000000001983e-05, 1.3194999999997098e-05, 1.3209000000000137e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3277999999998513e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3209000000000137e-05, 1.3222000000000234e-05, 1.3221999999996764e-05, 1.3194000000001094e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.3278000000005452e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.3194000000001094e-05, 1.3250000000006312e-05, 1.3222999999999707e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3319999999997223e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3194000000001094e-05, 1.3222000000000234e-05, 1.3195000000000567e-05, 1.3209000000000137e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.3194000000001094e-05]</msg>
<status status="PASS" starttime="20201115 22:00:35.028" endtime="20201115 22:00:35.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.023" endtime="20201115 22:00:35.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.032" endtime="20201115 22:00:35.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.036" endtime="20201115 22:00:35.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.034" endtime="20201115 22:00:35.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.031" endtime="20201115 22:00:35.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.635" endtime="20201115 22:00:35.057"></status>
</kw>
<msg timestamp="20201115 22:00:35.057" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.066" endtime="20201115 22:00:35.113"></status>
</kw>
<msg timestamp="20201115 22:00:35.114" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.065" endtime="20201115 22:00:35.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.116" endtime="20201115 22:00:35.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.121" endtime="20201115 22:00:35.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.062" endtime="20201115 22:00:35.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.059" endtime="20201115 22:00:35.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.143" endtime="20201115 22:00:35.436"></status>
</kw>
<msg timestamp="20201115 22:00:35.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:35.139" endtime="20201115 22:00:35.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:35.440" endtime="20201115 22:00:35.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.448" endtime="20201115 22:00:35.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.133" endtime="20201115 22:00:35.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.130" endtime="20201115 22:00:35.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.455" level="INFO">${RESULT} = [{'time': 0.022744222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3222000000000234e-05, 'source_diff': 1.3222000000000234e-05}, {'time': 0.023453139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:35.451" endtime="20201115 22:00:35.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.468" level="INFO">${OVERHEAD} = {'diff': [1.3222000000000234e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3209000000000137e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3264000000002413e-05...</msg>
<status status="PASS" starttime="20201115 22:00:35.456" endtime="20201115 22:00:35.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.473" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:35.472" endtime="20201115 22:00:35.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.475" level="INFO">VALUE: [1.3222000000000234e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3209000000000137e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3264000000002413e-05, 1.3235999999999803e-05, 1.3250000000002843e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.3195000000000567e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3278000000005452e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.3208000000000664e-05, 1.3179999999994585e-05, 1.3249999999999373e-05, 1.3195000000000567e-05, 1.3222999999999707e-05, 1.3222000000000234e-05, 1.3181000000000997e-05, 1.3305999999997653e-05, 1.327699999999904e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3250000000006312e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.3235999999999803e-05, 1.3194000000001094e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3221999999993295e-05, 1.3249999999999373e-05, 1.3209000000000137e-05]</msg>
<status status="PASS" starttime="20201115 22:00:35.474" endtime="20201115 22:00:35.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.469" endtime="20201115 22:00:35.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.479" endtime="20201115 22:00:35.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.482" endtime="20201115 22:00:35.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.480" endtime="20201115 22:00:35.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.477" endtime="20201115 22:00:35.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.057" endtime="20201115 22:00:35.503"></status>
</kw>
<msg timestamp="20201115 22:00:35.503" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.512" endtime="20201115 22:00:35.559"></status>
</kw>
<msg timestamp="20201115 22:00:35.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.511" endtime="20201115 22:00:35.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.562" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.560" endtime="20201115 22:00:35.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.563" endtime="20201115 22:00:35.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.508" endtime="20201115 22:00:35.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.506" endtime="20201115 22:00:35.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.573" endtime="20201115 22:00:35.859"></status>
</kw>
<msg timestamp="20201115 22:00:35.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023293181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023306417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.571" endtime="20201115 22:00:35.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023293181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023306417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.863" endtime="20201115 22:00:35.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.871" endtime="20201115 22:00:35.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.569" endtime="20201115 22:00:35.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.567" endtime="20201115 22:00:35.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.878" level="INFO">${RESULT} = [{'time': 0.023306417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3235999999999803e-05, 'source_diff': 1.3235999999999803e-05}, {'time': 0.024012417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:35.874" endtime="20201115 22:00:35.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.892" level="INFO">${OVERHEAD} = {'diff': [1.3235999999999803e-05, 1.3222999999999707e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3181000000000997e-05, 1.3263999999998943e-05, 1.3193999999997624e-05, 1.3222000000000234e-05...</msg>
<status status="PASS" starttime="20201115 22:00:35.879" endtime="20201115 22:00:35.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.896" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:35.895" endtime="20201115 22:00:35.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.899" level="INFO">VALUE: [1.3235999999999803e-05, 1.3222999999999707e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3181000000000997e-05, 1.3263999999998943e-05, 1.3193999999997624e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3195000000000567e-05, 1.3249999999999373e-05, 1.3222999999999707e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3194000000001094e-05, 1.3249999999999373e-05, 1.3152000000002384e-05, 1.3277999999998513e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3208000000000664e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3153000000001858e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3264000000005882e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3291999999998083e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3305999999997653e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3263999999998943e-05]</msg>
<status status="PASS" starttime="20201115 22:00:35.897" endtime="20201115 22:00:35.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.892" endtime="20201115 22:00:35.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.902" endtime="20201115 22:00:35.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.906" endtime="20201115 22:00:35.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.904" endtime="20201115 22:00:35.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.901" endtime="20201115 22:00:35.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.504" endtime="20201115 22:00:35.926"></status>
</kw>
<msg timestamp="20201115 22:00:35.927" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.935" endtime="20201115 22:00:35.980"></status>
</kw>
<msg timestamp="20201115 22:00:35.981" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.934" endtime="20201115 22:00:35.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.983" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.982" endtime="20201115 22:00:35.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.984" endtime="20201115 22:00:35.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.931" endtime="20201115 22:00:35.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.929" endtime="20201115 22:00:35.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.994" endtime="20201115 22:00:36.280"></status>
</kw>
<msg timestamp="20201115 22:00:36.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.993" endtime="20201115 22:00:36.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.284" endtime="20201115 22:00:36.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.292" endtime="20201115 22:00:36.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.990" endtime="20201115 22:00:36.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.989" endtime="20201115 22:00:36.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.299" level="INFO">${RESULT} = [{'time': 0.022133944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3235999999999803e-05, 'source_diff': 1.3235999999999803e-05}, {'time': 0.022836792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:36.296" endtime="20201115 22:00:36.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.314" level="INFO">${OVERHEAD} = {'diff': [1.3235999999999803e-05, 1.3250000000002843e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3209000000000137e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.3208000000000664e-05...</msg>
<status status="PASS" starttime="20201115 22:00:36.300" endtime="20201115 22:00:36.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.318" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:36.317" endtime="20201115 22:00:36.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.321" level="INFO">VALUE: [1.3235999999999803e-05, 1.3250000000002843e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3209000000000137e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.327699999999904e-05, 1.3223000000003177e-05, 1.3153000000001858e-05, 1.3180000000001524e-05, 1.3208000000000664e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3277000000005978e-05, 1.3194000000001094e-05, 1.3249999999999373e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3221999999993295e-05, 1.3181000000000997e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3277999999998513e-05, 1.3153000000001858e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3166000000001954e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3209000000000137e-05, 1.3305000000005118e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3195000000000567e-05, 1.3222999999999707e-05, 1.3249999999999373e-05, 1.3194000000001094e-05, 1.3306000000004592e-05, 1.3249999999999373e-05]</msg>
<status status="PASS" starttime="20201115 22:00:36.319" endtime="20201115 22:00:36.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.315" endtime="20201115 22:00:36.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.330" endtime="20201115 22:00:36.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.334" endtime="20201115 22:00:36.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.332" endtime="20201115 22:00:36.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.328" endtime="20201115 22:00:36.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.927" endtime="20201115 22:00:36.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.205" endtime="20201115 22:00:36.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.204" endtime="20201115 22:00:36.355"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.357" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.366" endtime="20201115 22:00:36.418"></status>
</kw>
<msg timestamp="20201115 22:00:36.419" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.364" endtime="20201115 22:00:36.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.420" endtime="20201115 22:00:36.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.422" endtime="20201115 22:00:36.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.362" endtime="20201115 22:00:36.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.360" endtime="20201115 22:00:36.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.431" endtime="20201115 22:00:36.733"></status>
</kw>
<msg timestamp="20201115 22:00:36.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026308056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026321556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.430" endtime="20201115 22:00:36.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026308056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026321556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.737" endtime="20201115 22:00:36.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.745" endtime="20201115 22:00:36.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.427" endtime="20201115 22:00:36.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.426" endtime="20201115 22:00:36.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.752" level="INFO">${RESULT} = [{'time': 0.026321556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.027062861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:36.748" endtime="20201115 22:00:36.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.766" level="INFO">${OVERHEAD} = {'diff': [1.3499999999999623e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3499999999999623e-05...</msg>
<status status="PASS" starttime="20201115 22:00:36.753" endtime="20201115 22:00:36.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.770" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:36.769" endtime="20201115 22:00:36.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.773" level="INFO">VALUE: [1.3499999999999623e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3556000000004842e-05, 1.3499999999999623e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.3471999999993545e-05, 1.3486000000000054e-05, 1.3457999999993975e-05, 1.3486999999999527e-05, 1.3445000000000817e-05, 1.3513999999999193e-05, 1.3444000000001344e-05, 1.3499999999999623e-05, 1.3555999999997903e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3445000000000817e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.355499999999843e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3375000000002968e-05, 1.3500000000006562e-05, 1.3444000000001344e-05, 1.3513999999999193e-05, 1.3499999999999623e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3417000000001678e-05, 1.3459000000000387e-05, 1.3499999999999623e-05, 1.3541999999998333e-05, 1.3486999999999527e-05, 1.3514000000006132e-05, 1.3486000000000054e-05, 1.3471999999993545e-05, 1.3458000000000914e-05, 1.354099999999886e-05, 1.3485999999993115e-05]</msg>
<status status="PASS" starttime="20201115 22:00:36.771" endtime="20201115 22:00:36.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.766" endtime="20201115 22:00:36.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.776" endtime="20201115 22:00:36.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.780" endtime="20201115 22:00:36.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.778" endtime="20201115 22:00:36.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.775" endtime="20201115 22:00:36.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.357" endtime="20201115 22:00:36.801"></status>
</kw>
<msg timestamp="20201115 22:00:36.801" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.810" endtime="20201115 22:00:36.860"></status>
</kw>
<msg timestamp="20201115 22:00:36.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.808" endtime="20201115 22:00:36.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.863" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.861" endtime="20201115 22:00:36.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.864" endtime="20201115 22:00:36.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.805" endtime="20201115 22:00:36.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.803" endtime="20201115 22:00:36.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.874" endtime="20201115 22:00:37.160"></status>
</kw>
<msg timestamp="20201115 22:00:37.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.872" endtime="20201115 22:00:37.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.164" endtime="20201115 22:00:37.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.172" endtime="20201115 22:00:37.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.870" endtime="20201115 22:00:37.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.868" endtime="20201115 22:00:37.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.179" level="INFO">${RESULT} = [{'time': 0.022146236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.022885111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:37.175" endtime="20201115 22:00:37.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.193" level="INFO">${OVERHEAD} = {'diff': [1.3541999999998333e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3445000000000817e-05, 1.3486000000000054e-05, 1.3458000000000914e-05...</msg>
<status status="PASS" starttime="20201115 22:00:37.180" endtime="20201115 22:00:37.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.198" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:37.197" endtime="20201115 22:00:37.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.201" level="INFO">VALUE: [1.3541999999998333e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3445000000000817e-05, 1.3486000000000054e-05, 1.3458000000000914e-05, 1.352699999999929e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3542000000001803e-05, 1.3499999999999623e-05, 1.351299999999972e-05, 1.3472999999999957e-05, 1.3499999999999623e-05, 1.3514000000006132e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3555000000005368e-05, 1.3417000000001678e-05, 1.3486999999999527e-05, 1.3472999999999957e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.3513999999999193e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3486000000000054e-05, 1.3500000000006562e-05, 1.3472000000000484e-05, 1.3486999999999527e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3445000000000817e-05, 1.3472000000000484e-05, 1.3431000000001247e-05, 1.3499999999999623e-05, 1.3416999999994739e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3472000000000484e-05, 1.3486999999999527e-05, 1.3430000000001774e-05, 1.3583999999997043e-05]</msg>
<status status="PASS" starttime="20201115 22:00:37.199" endtime="20201115 22:00:37.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.194" endtime="20201115 22:00:37.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.204" endtime="20201115 22:00:37.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.207" endtime="20201115 22:00:37.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.206" endtime="20201115 22:00:37.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.202" endtime="20201115 22:00:37.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.801" endtime="20201115 22:00:37.228"></status>
</kw>
<msg timestamp="20201115 22:00:37.228" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.237" endtime="20201115 22:00:37.286"></status>
</kw>
<msg timestamp="20201115 22:00:37.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.236" endtime="20201115 22:00:37.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.288" endtime="20201115 22:00:37.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.291" endtime="20201115 22:00:37.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.233" endtime="20201115 22:00:37.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.231" endtime="20201115 22:00:37.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.301" endtime="20201115 22:00:37.586"></status>
</kw>
<msg timestamp="20201115 22:00:37.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.299" endtime="20201115 22:00:37.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.591" endtime="20201115 22:00:37.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.599" endtime="20201115 22:00:37.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.296" endtime="20201115 22:00:37.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.295" endtime="20201115 22:00:37.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.606" level="INFO">${RESULT} = [{'time': 0.021573833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3472000000000484e-05, 'source_diff': 1.3472000000000484e-05}, {'time': 0.022312889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:37.602" endtime="20201115 22:00:37.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.620" level="INFO">${OVERHEAD} = {'diff': [1.3472000000000484e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3528000000002233e-05, 1.3499999999999623e-05, 1.3458000000000914e-05...</msg>
<status status="PASS" starttime="20201115 22:00:37.607" endtime="20201115 22:00:37.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.624" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:37.623" endtime="20201115 22:00:37.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.627" level="INFO">VALUE: [1.3472000000000484e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3528000000002233e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3471999999997014e-05, 1.3472000000000484e-05, 1.3541999999998333e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3472999999999957e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3513999999999193e-05, 1.3445000000000817e-05, 1.3527999999998763e-05, 1.3457999999993975e-05, 1.3499999999999623e-05, 1.3527999999998763e-05, 1.3486000000000054e-05, 1.3486999999999527e-05, 1.3375000000002968e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3459000000000387e-05, 1.3458000000000914e-05, 1.3457999999993975e-05, 1.3499999999999623e-05, 1.3472000000000484e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.352699999999929e-05, 1.3513999999999193e-05, 1.3472999999999957e-05, 1.3513999999999193e-05, 1.3528000000005702e-05]</msg>
<status status="PASS" starttime="20201115 22:00:37.626" endtime="20201115 22:00:37.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.621" endtime="20201115 22:00:37.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.630" endtime="20201115 22:00:37.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.634" endtime="20201115 22:00:37.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.632" endtime="20201115 22:00:37.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.628" endtime="20201115 22:00:37.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.229" endtime="20201115 22:00:37.654"></status>
</kw>
<msg timestamp="20201115 22:00:37.655" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.663" endtime="20201115 22:00:37.714"></status>
</kw>
<msg timestamp="20201115 22:00:37.715" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.662" endtime="20201115 22:00:37.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.717" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.716" endtime="20201115 22:00:37.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.718" endtime="20201115 22:00:37.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.659" endtime="20201115 22:00:37.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.657" endtime="20201115 22:00:37.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.728" endtime="20201115 22:00:38.015"></status>
</kw>
<msg timestamp="20201115 22:00:38.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.727" endtime="20201115 22:00:38.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.020" endtime="20201115 22:00:38.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.028" endtime="20201115 22:00:38.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.724" endtime="20201115 22:00:38.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.722" endtime="20201115 22:00:38.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.035" level="INFO">${RESULT} = [{'time': 0.022499139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.023241, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:38.031" endtime="20201115 22:00:38.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.049" level="INFO">${OVERHEAD} = {'diff': [1.3499999999999623e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3472000000000484e-05, 1.3458999999996918e-05...</msg>
<status status="PASS" starttime="20201115 22:00:38.036" endtime="20201115 22:00:38.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.054" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:38.053" endtime="20201115 22:00:38.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.056" level="INFO">VALUE: [1.3499999999999623e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3472000000000484e-05, 1.3458999999996918e-05, 1.3513999999999193e-05, 1.3471999999997014e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3527999999998763e-05, 1.3541999999998333e-05, 1.3444000000001344e-05, 1.3472000000000484e-05, 1.3499999999999623e-05, 1.3459000000000387e-05, 1.3444000000001344e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.3445000000000817e-05, 1.3417000000001678e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3541999999998333e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3444000000001344e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3445000000000817e-05, 1.3472999999999957e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3458000000000914e-05, 1.3527999999998763e-05, 1.3472000000000484e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3458000000000914e-05, 1.3472000000000484e-05]</msg>
<status status="PASS" starttime="20201115 22:00:38.055" endtime="20201115 22:00:38.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.050" endtime="20201115 22:00:38.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.060" endtime="20201115 22:00:38.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.063" endtime="20201115 22:00:38.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.062" endtime="20201115 22:00:38.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.058" endtime="20201115 22:00:38.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.655" endtime="20201115 22:00:38.084"></status>
</kw>
<msg timestamp="20201115 22:00:38.084" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.093" endtime="20201115 22:00:38.147"></status>
</kw>
<msg timestamp="20201115 22:00:38.148" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.091" endtime="20201115 22:00:38.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.154" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.151" endtime="20201115 22:00:38.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.156" endtime="20201115 22:00:38.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.089" endtime="20201115 22:00:38.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.087" endtime="20201115 22:00:38.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.177" endtime="20201115 22:00:38.469"></status>
</kw>
<msg timestamp="20201115 22:00:38.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025007431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025020917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.173" endtime="20201115 22:00:38.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025007431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025020917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.474" endtime="20201115 22:00:38.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.482" endtime="20201115 22:00:38.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.168" endtime="20201115 22:00:38.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.164" endtime="20201115 22:00:38.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.489" level="INFO">${RESULT} = [{'time': 0.025020917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.025757403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:38.486" endtime="20201115 22:00:38.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.503" level="INFO">${OVERHEAD} = {'diff': [1.3486000000000054e-05, 1.3528000000002233e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3401999999999165e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3499999999999623e-05...</msg>
<status status="PASS" starttime="20201115 22:00:38.490" endtime="20201115 22:00:38.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.508" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:38.507" endtime="20201115 22:00:38.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.510" level="INFO">VALUE: [1.3486000000000054e-05, 1.3528000000002233e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3401999999999165e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3472999999999957e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3514000000006132e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3472000000000484e-05, 1.3444000000001344e-05, 1.3513999999999193e-05, 1.3417000000001678e-05, 1.3472999999999957e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3431000000001247e-05, 1.3485999999993115e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3556000000004842e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3569000000004938e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3445000000000817e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3472999999999957e-05]</msg>
<status status="PASS" starttime="20201115 22:00:38.509" endtime="20201115 22:00:38.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.504" endtime="20201115 22:00:38.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.513" endtime="20201115 22:00:38.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.517" endtime="20201115 22:00:38.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.515" endtime="20201115 22:00:38.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.512" endtime="20201115 22:00:38.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.085" endtime="20201115 22:00:38.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.356" endtime="20201115 22:00:38.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.355" endtime="20201115 22:00:38.538"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.540" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.549" endtime="20201115 22:00:38.598"></status>
</kw>
<msg timestamp="20201115 22:00:38.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.547" endtime="20201115 22:00:38.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.599" endtime="20201115 22:00:38.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.602" endtime="20201115 22:00:38.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.545" endtime="20201115 22:00:38.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.543" endtime="20201115 22:00:38.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.612" endtime="20201115 22:00:38.897"></status>
</kw>
<msg timestamp="20201115 22:00:38.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023574236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:38.610" endtime="20201115 22:00:38.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023574236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:38.902" endtime="20201115 22:00:38.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.910" endtime="20201115 22:00:38.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.607" endtime="20201115 22:00:38.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.606" endtime="20201115 22:00:38.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.916" level="INFO">${RESULT} = [{'time': 0.023574236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3735999999996834e-05, 'source_diff': 1.3735999999996834e-05}, {'time': 0.024349111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:38.913" endtime="20201115 22:00:38.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.930" level="INFO">${OVERHEAD} = {'diff': [1.3735999999996834e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.3764000000002913e-05, 1.3709000000000637e-05, 1.3735999999996834e-05, 1.3695000000001067e-05, 1.3736000000000304e-05...</msg>
<status status="PASS" starttime="20201115 22:00:38.918" endtime="20201115 22:00:38.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.935" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:38.934" endtime="20201115 22:00:38.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.937" level="INFO">VALUE: [1.3735999999996834e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.3764000000002913e-05, 1.3709000000000637e-05, 1.3735999999996834e-05, 1.3695000000001067e-05, 1.3736000000000304e-05, 1.3709000000000637e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.3764000000006382e-05, 1.3722000000000734e-05, 1.3709000000000637e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3693999999994655e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3694000000001594e-05, 1.3723000000000207e-05, 1.3722000000000734e-05, 1.3749999999999873e-05, 1.376299999999997e-05, 1.3667000000001928e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.3721999999993795e-05, 1.3723000000000207e-05, 1.3763999999999443e-05, 1.3791000000006048e-05, 1.3777999999999013e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3736999999999777e-05, 1.3639000000002788e-05, 1.3680000000002024e-05, 1.3763999999999443e-05, 1.3722000000000734e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3722000000000734e-05]</msg>
<status status="PASS" starttime="20201115 22:00:38.936" endtime="20201115 22:00:38.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.931" endtime="20201115 22:00:38.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.940" endtime="20201115 22:00:38.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.944" endtime="20201115 22:00:38.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.942" endtime="20201115 22:00:38.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.939" endtime="20201115 22:00:38.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.541" endtime="20201115 22:00:38.965"></status>
</kw>
<msg timestamp="20201115 22:00:38.965" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.974" endtime="20201115 22:00:39.026"></status>
</kw>
<msg timestamp="20201115 22:00:39.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.972" endtime="20201115 22:00:39.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.028" endtime="20201115 22:00:39.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.030" endtime="20201115 22:00:39.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.970" endtime="20201115 22:00:39.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.967" endtime="20201115 22:00:39.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.040" endtime="20201115 22:00:39.327"></status>
</kw>
<msg timestamp="20201115 22:00:39.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0234245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02343825, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:39.039" endtime="20201115 22:00:39.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0234245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02343825, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:39.331" endtime="20201115 22:00:39.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.339" endtime="20201115 22:00:39.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.036" endtime="20201115 22:00:39.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.034" endtime="20201115 22:00:39.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.346" level="INFO">${RESULT} = [{'time': 0.02343825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.024210111, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:39.342" endtime="20201115 22:00:39.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.360" level="INFO">${OVERHEAD} = {'diff': [1.3749999999999873e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3806000000001623e-05, 1.3723000000000207e-05, 1.3722000000000734e-05, 1.3666000000002454e-05...</msg>
<status status="PASS" starttime="20201115 22:00:39.347" endtime="20201115 22:00:39.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.364" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:39.363" endtime="20201115 22:00:39.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.367" level="INFO">VALUE: [1.3749999999999873e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3806000000001623e-05, 1.3723000000000207e-05, 1.3722000000000734e-05, 1.3666000000002454e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.3723000000000207e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.3721999999993795e-05, 1.3666000000002454e-05, 1.3749999999999873e-05, 1.3693999999994655e-05, 1.3736000000000304e-05, 1.3709000000000637e-05, 1.3723000000000207e-05, 1.3805999999998153e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3723000000000207e-05, 1.3749999999999873e-05, 1.3694000000001594e-05, 1.3708000000001164e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3723000000000207e-05, 1.3709000000000637e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3708000000001164e-05, 1.3736000000000304e-05, 1.3695000000001067e-05, 1.3777999999999013e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3708000000001164e-05, 1.3722000000000734e-05, 1.3723000000000207e-05, 1.3764000000006382e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.376299999999997e-05, 1.3709000000000637e-05]</msg>
<status status="PASS" starttime="20201115 22:00:39.365" endtime="20201115 22:00:39.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.361" endtime="20201115 22:00:39.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.370" endtime="20201115 22:00:39.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.373" endtime="20201115 22:00:39.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.372" endtime="20201115 22:00:39.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.368" endtime="20201115 22:00:39.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.965" endtime="20201115 22:00:39.394"></status>
</kw>
<msg timestamp="20201115 22:00:39.394" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.404" endtime="20201115 22:00:39.452"></status>
</kw>
<msg timestamp="20201115 22:00:39.453" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.402" endtime="20201115 22:00:39.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.454" endtime="20201115 22:00:39.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.456" endtime="20201115 22:00:39.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.399" endtime="20201115 22:00:39.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.397" endtime="20201115 22:00:39.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.466" endtime="20201115 22:00:39.767"></status>
</kw>
<msg timestamp="20201115 22:00:39.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021104292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021118014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.465" endtime="20201115 22:00:39.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021104292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021118014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.771" endtime="20201115 22:00:39.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.779" endtime="20201115 22:00:39.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.462" endtime="20201115 22:00:39.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.460" endtime="20201115 22:00:39.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.786" level="INFO">${RESULT} = [{'time': 0.021118014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3722000000000734e-05, 'source_diff': 1.3722000000000734e-05}, {'time': 0.021888639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:39.783" endtime="20201115 22:00:39.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.801" level="INFO">${OVERHEAD} = {'diff': [1.3722000000000734e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3708000000001164e-05, 1.3721999999997264e-05, 1.3694000000001594e-05, 1.3624999999999748e-05, 1.3749999999999873e-05...</msg>
<status status="PASS" starttime="20201115 22:00:39.787" endtime="20201115 22:00:39.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.805" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:39.804" endtime="20201115 22:00:39.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.808" level="INFO">VALUE: [1.3722000000000734e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3708000000001164e-05, 1.3721999999997264e-05, 1.3694000000001594e-05, 1.3624999999999748e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.376299999999997e-05, 1.3695000000001067e-05, 1.3721999999997264e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3709000000000637e-05, 1.3721999999993795e-05, 1.3736000000000304e-05, 1.3681000000001498e-05, 1.3736999999999777e-05, 1.3763999999999443e-05, 1.3695000000001067e-05, 1.377699999999954e-05, 1.376299999999997e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.3708000000001164e-05, 1.3721999999993795e-05, 1.3764000000006382e-05, 1.3653000000002358e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3778000000005952e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.3694000000001594e-05, 1.3708000000001164e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3693999999994655e-05, 1.3707999999994225e-05, 1.3736000000000304e-05, 1.3666000000002454e-05, 1.3763999999999443e-05, 1.376299999999997e-05, 1.3722000000000734e-05, 1.3749999999999873e-05]</msg>
<status status="PASS" starttime="20201115 22:00:39.806" endtime="20201115 22:00:39.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.802" endtime="20201115 22:00:39.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.811" endtime="20201115 22:00:39.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.815" endtime="20201115 22:00:39.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.813" endtime="20201115 22:00:39.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.809" endtime="20201115 22:00:39.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.395" endtime="20201115 22:00:39.836"></status>
</kw>
<msg timestamp="20201115 22:00:39.836" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.845" endtime="20201115 22:00:39.895"></status>
</kw>
<msg timestamp="20201115 22:00:39.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.843" endtime="20201115 22:00:39.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.896" endtime="20201115 22:00:39.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.899" endtime="20201115 22:00:39.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.841" endtime="20201115 22:00:39.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.839" endtime="20201115 22:00:39.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.909" endtime="20201115 22:00:40.194"></status>
</kw>
<msg timestamp="20201115 22:00:40.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021470569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021484347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.907" endtime="20201115 22:00:40.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021470569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021484347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.198" endtime="20201115 22:00:40.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.206" endtime="20201115 22:00:40.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.905" endtime="20201115 22:00:40.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.903" endtime="20201115 22:00:40.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.213" level="INFO">${RESULT} = [{'time': 0.021484347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3778000000002483e-05, 'source_diff': 1.3778000000002483e-05}, {'time': 0.022255417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:40.210" endtime="20201115 22:00:40.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.227" level="INFO">${OVERHEAD} = {'diff': [1.3778000000002483e-05, 1.3736000000000304e-05, 1.3681000000001498e-05, 1.3736000000000304e-05, 1.3819000000001719e-05, 1.3680999999998028e-05, 1.3693999999998124e-05, 1.3749999999999873e-05...</msg>
<status status="PASS" starttime="20201115 22:00:40.214" endtime="20201115 22:00:40.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.231" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:40.230" endtime="20201115 22:00:40.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.234" level="INFO">VALUE: [1.3778000000002483e-05, 1.3736000000000304e-05, 1.3681000000001498e-05, 1.3736000000000304e-05, 1.3819000000001719e-05, 1.3680999999998028e-05, 1.3693999999998124e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3695000000001067e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.3708000000001164e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.377699999999954e-05, 1.3681000000001498e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.3707999999994225e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3709000000000637e-05, 1.3777999999999013e-05, 1.3736000000000304e-05, 1.377699999999954e-05, 1.3736000000000304e-05, 1.3723000000000207e-05, 1.3819999999997723e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.3749999999999873e-05, 1.3708999999993698e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.376299999999997e-05, 1.3806000000005092e-05]</msg>
<status status="PASS" starttime="20201115 22:00:40.232" endtime="20201115 22:00:40.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.228" endtime="20201115 22:00:40.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.237" endtime="20201115 22:00:40.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.241" endtime="20201115 22:00:40.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.239" endtime="20201115 22:00:40.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.236" endtime="20201115 22:00:40.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.836" endtime="20201115 22:00:40.262"></status>
</kw>
<msg timestamp="20201115 22:00:40.262" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.271" endtime="20201115 22:00:40.321"></status>
</kw>
<msg timestamp="20201115 22:00:40.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.270" endtime="20201115 22:00:40.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.324" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.323" endtime="20201115 22:00:40.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.325" endtime="20201115 22:00:40.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.267" endtime="20201115 22:00:40.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.265" endtime="20201115 22:00:40.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.335" endtime="20201115 22:00:40.621"></status>
</kw>
<msg timestamp="20201115 22:00:40.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022638583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.334" endtime="20201115 22:00:40.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022638583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.625" endtime="20201115 22:00:40.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.633" endtime="20201115 22:00:40.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.331" endtime="20201115 22:00:40.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.329" endtime="20201115 22:00:40.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.640" level="INFO">${RESULT} = [{'time': 0.022652333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.023428736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:40.637" endtime="20201115 22:00:40.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.654" level="INFO">${OVERHEAD} = {'diff': [1.3749999999999873e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3708000000001164e-05, 1.3763999999999443e-05, 1.3695000000001067e-05, 1.3721999999997264e-05, 1.3722000000000734e-05...</msg>
<status status="PASS" starttime="20201115 22:00:40.641" endtime="20201115 22:00:40.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.659" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:40.658" endtime="20201115 22:00:40.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.661" level="INFO">VALUE: [1.3749999999999873e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3708000000001164e-05, 1.3763999999999443e-05, 1.3695000000001067e-05, 1.3721999999997264e-05, 1.3722000000000734e-05, 1.3722999999996738e-05, 1.3708000000001164e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.3708000000001164e-05, 1.3736000000000304e-05, 1.3778000000005952e-05, 1.3736000000000304e-05, 1.3707999999994225e-05, 1.3694000000001594e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.3722000000000734e-05, 1.3736999999999777e-05, 1.3736000000000304e-05, 1.3723000000000207e-05, 1.377699999999954e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3722000000000734e-05, 1.3708000000001164e-05, 1.3722000000000734e-05, 1.3749999999999873e-05, 1.3819999999997723e-05, 1.3721999999993795e-05, 1.3709000000000637e-05, 1.3736999999999777e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3735999999993365e-05, 1.3723000000000207e-05, 1.3723000000000207e-05, 1.3708000000001164e-05, 1.3708000000001164e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3638999999995849e-05, 1.3736000000000304e-05, 1.3722000000000734e-05]</msg>
<status status="PASS" starttime="20201115 22:00:40.660" endtime="20201115 22:00:40.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.655" endtime="20201115 22:00:40.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.665" endtime="20201115 22:00:40.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.668" endtime="20201115 22:00:40.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.667" endtime="20201115 22:00:40.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.663" endtime="20201115 22:00:40.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.263" endtime="20201115 22:00:40.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.539" endtime="20201115 22:00:40.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.538" endtime="20201115 22:00:40.689"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.692" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.701" endtime="20201115 22:00:40.754"></status>
</kw>
<msg timestamp="20201115 22:00:40.755" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.699" endtime="20201115 22:00:40.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.756" endtime="20201115 22:00:40.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.758" endtime="20201115 22:00:40.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.696" endtime="20201115 22:00:40.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.694" endtime="20201115 22:00:40.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.767" endtime="20201115 22:00:41.052"></status>
</kw>
<msg timestamp="20201115 22:00:41.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027378958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027392917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.766" endtime="20201115 22:00:41.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027378958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027392917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.056" endtime="20201115 22:00:41.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.064" endtime="20201115 22:00:41.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.763" endtime="20201115 22:00:41.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.762" endtime="20201115 22:00:41.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.071" level="INFO">${RESULT} = [{'time': 0.027392917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3959000000000887e-05, 'source_diff': 1.3959000000000887e-05}, {'time': 0.028203097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:41.068" endtime="20201115 22:00:41.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.085" level="INFO">${OVERHEAD} = {'diff': [1.3959000000000887e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.3985999999997084e-05, 1.3972000000000984e-05, 1.3958000000001414e-05, 1.3986000000000554e-05...</msg>
<status status="PASS" starttime="20201115 22:00:41.072" endtime="20201115 22:00:41.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.089" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:41.088" endtime="20201115 22:00:41.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.092" level="INFO">VALUE: [1.3959000000000887e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.3985999999997084e-05, 1.3972000000000984e-05, 1.3958000000001414e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3944000000001844e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3971999999994045e-05, 1.3916000000002704e-05, 1.3973000000000457e-05, 1.3931000000001748e-05, 1.3971999999994045e-05, 1.3917000000002178e-05, 1.404099999999936e-05, 1.3986000000000554e-05, 1.3957999999994475e-05, 1.4027999999999263e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3929999999995335e-05, 1.4027999999999263e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.3931000000001748e-05, 1.3972000000000984e-05, 1.3957999999994475e-05, 1.3931000000001748e-05, 1.405499999999893e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3959000000000887e-05, 1.3889000000003038e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.3985999999993615e-05, 1.3957999999994475e-05, 1.4000000000000123e-05, 1.3957999999994475e-05, 1.4000000000000123e-05, 1.3945000000001317e-05]</msg>
<status status="PASS" starttime="20201115 22:00:41.091" endtime="20201115 22:00:41.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.086" endtime="20201115 22:00:41.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.096" endtime="20201115 22:00:41.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.099" endtime="20201115 22:00:41.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.098" endtime="20201115 22:00:41.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.094" endtime="20201115 22:00:41.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.692" endtime="20201115 22:00:41.120"></status>
</kw>
<msg timestamp="20201115 22:00:41.120" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.129" endtime="20201115 22:00:41.182"></status>
</kw>
<msg timestamp="20201115 22:00:41.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.127" endtime="20201115 22:00:41.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.186" endtime="20201115 22:00:41.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.191" endtime="20201115 22:00:41.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.125" endtime="20201115 22:00:41.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.123" endtime="20201115 22:00:41.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.212" endtime="20201115 22:00:41.504"></status>
</kw>
<msg timestamp="20201115 22:00:41.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023408611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023422583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.209" endtime="20201115 22:00:41.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023408611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023422583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.508" endtime="20201115 22:00:41.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.516" endtime="20201115 22:00:41.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.203" endtime="20201115 22:00:41.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.199" endtime="20201115 22:00:41.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.523" level="INFO">${RESULT} = [{'time': 0.023422583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.024231681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:41.520" endtime="20201115 22:00:41.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.538" level="INFO">${OVERHEAD} = {'diff': [1.3972000000000984e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3973000000000457e-05, 1.3943999999998374e-05, 1.3917000000002178e-05...</msg>
<status status="PASS" starttime="20201115 22:00:41.524" endtime="20201115 22:00:41.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.547" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:41.546" endtime="20201115 22:00:41.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.550" level="INFO">VALUE: [1.3972000000000984e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3973000000000457e-05, 1.3943999999998374e-05, 1.3917000000002178e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.3902999999995669e-05, 1.4000000000000123e-05, 1.3943999999994905e-05, 1.4000000000000123e-05, 1.3957999999994475e-05, 1.3945000000001317e-05, 1.3987000000000027e-05, 1.4013999999999693e-05, 1.3957999999994475e-05, 1.3958000000001414e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3959000000000887e-05, 1.3973000000000457e-05, 1.4000000000000123e-05, 1.40689999999985e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.3944000000001844e-05, 1.4000000000000123e-05, 1.3959000000000887e-05, 1.3971999999994045e-05, 1.3987000000000027e-05, 1.4027999999999263e-05, 1.3945000000001317e-05, 1.3917000000002178e-05, 1.3959000000000887e-05, 1.3986000000000554e-05, 1.409699999999764e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.402699999999979e-05, 1.3931000000001748e-05, 1.3971999999994045e-05, 1.4000000000000123e-05, 1.3985999999993615e-05]</msg>
<status status="PASS" starttime="20201115 22:00:41.549" endtime="20201115 22:00:41.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.544" endtime="20201115 22:00:41.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.553" endtime="20201115 22:00:41.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.557" endtime="20201115 22:00:41.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.555" endtime="20201115 22:00:41.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.552" endtime="20201115 22:00:41.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.121" endtime="20201115 22:00:41.577"></status>
</kw>
<msg timestamp="20201115 22:00:41.578" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.587" endtime="20201115 22:00:41.637"></status>
</kw>
<msg timestamp="20201115 22:00:41.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.585" endtime="20201115 22:00:41.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.639" endtime="20201115 22:00:41.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.641" endtime="20201115 22:00:41.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.582" endtime="20201115 22:00:41.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.580" endtime="20201115 22:00:41.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.652" endtime="20201115 22:00:41.938"></status>
</kw>
<msg timestamp="20201115 22:00:41.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023117431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023131375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.650" endtime="20201115 22:00:41.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023117431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023131375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.942" endtime="20201115 22:00:41.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.950" endtime="20201115 22:00:41.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.647" endtime="20201115 22:00:41.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.646" endtime="20201115 22:00:41.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.957" level="INFO">${RESULT} = [{'time': 0.023131375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3943999999998374e-05, 'source_diff': 1.3943999999998374e-05}, {'time': 0.023939083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:41.953" endtime="20201115 22:00:41.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.971" level="INFO">${OVERHEAD} = {'diff': [1.3943999999998374e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3959000000000887e-05, 1.3930000000002274e-05, 1.3986000000000554e-05...</msg>
<status status="PASS" starttime="20201115 22:00:41.958" endtime="20201115 22:00:41.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.975" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:41.974" endtime="20201115 22:00:41.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.978" level="INFO">VALUE: [1.3943999999998374e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3959000000000887e-05, 1.3930000000002274e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.4042000000005772e-05, 1.4000000000000123e-05, 1.3985999999993615e-05, 1.3986000000000554e-05, 1.3973000000000457e-05, 1.3958000000001414e-05, 1.3957999999994475e-05, 1.3957999999994475e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3958000000001414e-05, 1.4041999999998833e-05, 1.3957999999994475e-05, 1.3973000000000457e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.3958000000001414e-05, 1.3931000000001748e-05, 1.3889000000003038e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.3945000000001317e-05, 1.4000000000000123e-05, 1.3959000000000887e-05, 1.4013999999999693e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.3959000000000887e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.3959000000000887e-05, 1.4013999999999693e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3945000000001317e-05]</msg>
<status status="PASS" starttime="20201115 22:00:41.976" endtime="20201115 22:00:41.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.972" endtime="20201115 22:00:41.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.981" endtime="20201115 22:00:41.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.984" endtime="20201115 22:00:42.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.983" endtime="20201115 22:00:42.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.979" endtime="20201115 22:00:42.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.578" endtime="20201115 22:00:42.005"></status>
</kw>
<msg timestamp="20201115 22:00:42.005" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.014" endtime="20201115 22:00:42.065"></status>
</kw>
<msg timestamp="20201115 22:00:42.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.013" endtime="20201115 22:00:42.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.068" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.067" endtime="20201115 22:00:42.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.069" endtime="20201115 22:00:42.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.010" endtime="20201115 22:00:42.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.008" endtime="20201115 22:00:42.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.079" endtime="20201115 22:00:42.365"></status>
</kw>
<msg timestamp="20201115 22:00:42.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.078" endtime="20201115 22:00:42.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.370" endtime="20201115 22:00:42.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.378" endtime="20201115 22:00:42.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.075" endtime="20201115 22:00:42.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.074" endtime="20201115 22:00:42.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.385" level="INFO">${RESULT} = [{'time': 0.022507319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.402699999999979e-05, 'source_diff': 1.402699999999979e-05}, {'time': 0.023312653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.382" endtime="20201115 22:00:42.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.399" level="INFO">${OVERHEAD} = {'diff': [1.402699999999979e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.3987000000000027e-05, 1.3986000000000554e-05, 1.3986000000000554e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:42.386" endtime="20201115 22:00:42.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.403" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:42.402" endtime="20201115 22:00:42.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.406" level="INFO">VALUE: [1.402699999999979e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.3987000000000027e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3971999999997514e-05, 1.3972000000000984e-05, 1.3929999999995335e-05, 1.4000000000000123e-05, 1.3958999999993948e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.4013999999999693e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3959000000000887e-05, 1.3916999999995239e-05, 1.3958000000001414e-05, 1.3930000000002274e-05, 1.4000000000000123e-05, 1.3971999999994045e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3959000000000887e-05, 1.4028000000006202e-05, 1.4000000000000123e-05, 1.3916000000002704e-05, 1.3944999999994379e-05, 1.3944000000001844e-05, 1.3930000000002274e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.3958000000001414e-05, 1.3959000000000887e-05, 1.3944000000001844e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.3972000000000984e-05, 1.3973000000000457e-05, 1.3972999999993518e-05, 1.3987000000000027e-05, 1.3986000000000554e-05]</msg>
<status status="PASS" starttime="20201115 22:00:42.404" endtime="20201115 22:00:42.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.400" endtime="20201115 22:00:42.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.409" endtime="20201115 22:00:42.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.412" endtime="20201115 22:00:42.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.411" endtime="20201115 22:00:42.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.407" endtime="20201115 22:00:42.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.006" endtime="20201115 22:00:42.433"></status>
</kw>
<msg timestamp="20201115 22:00:42.433" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.442" endtime="20201115 22:00:42.492"></status>
</kw>
<msg timestamp="20201115 22:00:42.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.441" endtime="20201115 22:00:42.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.493" endtime="20201115 22:00:42.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.496" endtime="20201115 22:00:42.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.438" endtime="20201115 22:00:42.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.436" endtime="20201115 22:00:42.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.507" endtime="20201115 22:00:42.810"></status>
</kw>
<msg timestamp="20201115 22:00:42.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.505" endtime="20201115 22:00:42.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.814" endtime="20201115 22:00:42.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.822" endtime="20201115 22:00:42.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.502" endtime="20201115 22:00:42.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.500" endtime="20201115 22:00:42.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.829" level="INFO">${RESULT} = [{'time': 0.021673819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.022482486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:42.826" endtime="20201115 22:00:42.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.843" level="INFO">${OVERHEAD} = {'diff': [1.3958000000001414e-05, 1.3929999999998804e-05, 1.4000000000000123e-05, 1.3916999999998708e-05, 1.3944999999997848e-05, 1.3959000000000887e-05, 1.3943999999998374e-05, 1.3972000000000984e-05...</msg>
<status status="PASS" starttime="20201115 22:00:42.830" endtime="20201115 22:00:42.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.847" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:42.846" endtime="20201115 22:00:42.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.850" level="INFO">VALUE: [1.3958000000001414e-05, 1.3929999999998804e-05, 1.4000000000000123e-05, 1.3916999999998708e-05, 1.3944999999997848e-05, 1.3959000000000887e-05, 1.3943999999998374e-05, 1.3972000000000984e-05, 1.3958000000001414e-05, 1.3985999999997084e-05, 1.3959000000000887e-05, 1.4000000000000123e-05, 1.4013999999999693e-05, 1.3986000000000554e-05, 1.3985999999993615e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3916999999995239e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3959000000000887e-05, 1.3986000000000554e-05, 1.3972000000000984e-05, 1.3944000000001844e-05, 1.3987000000000027e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.3971999999994045e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3973000000000457e-05, 1.3985999999993615e-05, 1.3971999999994045e-05, 1.3959000000000887e-05, 1.3945000000001317e-05, 1.3973000000000457e-05, 1.3958000000001414e-05, 1.402699999999979e-05, 1.3986000000000554e-05, 1.3945000000001317e-05, 1.3986000000000554e-05, 1.3959000000000887e-05]</msg>
<status status="PASS" starttime="20201115 22:00:42.849" endtime="20201115 22:00:42.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.844" endtime="20201115 22:00:42.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.853" endtime="20201115 22:00:42.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.857" endtime="20201115 22:00:42.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.855" endtime="20201115 22:00:42.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.851" endtime="20201115 22:00:42.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.434" endtime="20201115 22:00:42.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.691" endtime="20201115 22:00:42.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.690" endtime="20201115 22:00:42.878"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.880" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.889" endtime="20201115 22:00:42.944"></status>
</kw>
<msg timestamp="20201115 22:00:42.944" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.887" endtime="20201115 22:00:42.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.945" endtime="20201115 22:00:42.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.948" endtime="20201115 22:00:42.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.885" endtime="20201115 22:00:42.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.883" endtime="20201115 22:00:42.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.957" endtime="20201115 22:00:43.244"></status>
</kw>
<msg timestamp="20201115 22:00:43.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024465778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024479958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.956" endtime="20201115 22:00:43.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024465778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024479958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.248" endtime="20201115 22:00:43.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.256" endtime="20201115 22:00:43.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.953" endtime="20201115 22:00:43.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.951" endtime="20201115 22:00:43.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.263" level="INFO">${RESULT} = [{'time': 0.024479958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4179999999999054e-05, 'source_diff': 1.4179999999999054e-05}, {'time': 0.025322847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:43.260" endtime="20201115 22:00:43.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.278" level="INFO">${OVERHEAD} = {'diff': [1.4179999999999054e-05, 1.4207999999998194e-05, 1.4208999999997668e-05, 1.4263999999999943e-05, 1.4209000000001137e-05, 1.4207999999998194e-05, 1.4193999999998624e-05, 1.4235999999997334e-05...</msg>
<status status="PASS" starttime="20201115 22:00:43.264" endtime="20201115 22:00:43.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.282" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:43.281" endtime="20201115 22:00:43.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.285" level="INFO">VALUE: [1.4179999999999054e-05, 1.4207999999998194e-05, 1.4208999999997668e-05, 1.4263999999999943e-05, 1.4209000000001137e-05, 1.4207999999998194e-05, 1.4193999999998624e-05, 1.4235999999997334e-05, 1.4180999999998528e-05, 1.4236000000000804e-05, 1.4236000000000804e-05, 1.4250000000000373e-05, 1.4235999999993865e-05, 1.4222000000001234e-05, 1.4250000000000373e-05, 1.4208000000001664e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4236000000000804e-05, 1.4207999999994725e-05, 1.4277999999999513e-05, 1.4222000000001234e-05, 1.4250000000000373e-05, 1.4208000000001664e-05, 1.4152999999995919e-05, 1.4236000000000804e-05, 1.4277999999999513e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4221999999994295e-05, 1.4223000000000707e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4237000000000277e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4235999999993865e-05, 1.4277999999999513e-05, 1.4180000000002524e-05, 1.4250000000000373e-05, 1.426300000000047e-05, 1.4236000000000804e-05, 1.4208000000001664e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.4208000000001664e-05, 1.4222999999993768e-05, 1.4249999999993435e-05, 1.4208000000001664e-05, 1.429099999999961e-05]</msg>
<status status="PASS" starttime="20201115 22:00:43.283" endtime="20201115 22:00:43.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.279" endtime="20201115 22:00:43.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.288" endtime="20201115 22:00:43.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.292" endtime="20201115 22:00:43.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.290" endtime="20201115 22:00:43.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.286" endtime="20201115 22:00:43.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.880" endtime="20201115 22:00:43.312"></status>
</kw>
<msg timestamp="20201115 22:00:43.313" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.322" endtime="20201115 22:00:43.377"></status>
</kw>
<msg timestamp="20201115 22:00:43.377" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.320" endtime="20201115 22:00:43.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.380" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.378" endtime="20201115 22:00:43.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.381" endtime="20201115 22:00:43.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.318" endtime="20201115 22:00:43.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.316" endtime="20201115 22:00:43.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.391" endtime="20201115 22:00:43.692"></status>
</kw>
<msg timestamp="20201115 22:00:43.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021565278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.390" endtime="20201115 22:00:43.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021565278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.696" endtime="20201115 22:00:43.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.704" endtime="20201115 22:00:43.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.387" endtime="20201115 22:00:43.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.385" endtime="20201115 22:00:43.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.711" level="INFO">${RESULT} = [{'time': 0.021565278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4236000000000804e-05, 'source_diff': 1.4236000000000804e-05}, {'time': 0.022406542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:43.708" endtime="20201115 22:00:43.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.725" level="INFO">${OVERHEAD} = {'diff': [1.4236000000000804e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4194000000002094e-05, 1.4250000000000373e-05, 1.4194000000002094e-05...</msg>
<status status="PASS" starttime="20201115 22:00:43.712" endtime="20201115 22:00:43.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.729" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:43.728" endtime="20201115 22:00:43.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.732" level="INFO">VALUE: [1.4236000000000804e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4194000000002094e-05, 1.4250000000000373e-05, 1.4194000000002094e-05, 1.4221999999997764e-05, 1.4250000000000373e-05, 1.4222000000001234e-05, 1.4193999999998624e-05, 1.4180000000002524e-05, 1.4236000000000804e-05, 1.426300000000047e-05, 1.4250000000000373e-05, 1.426300000000047e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4223000000000707e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4277999999999513e-05, 1.4222000000001234e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4236000000000804e-05, 1.4194000000002094e-05, 1.4223000000000707e-05, 1.4208000000001664e-05, 1.4209000000001137e-05, 1.4221999999994295e-05, 1.4277999999999513e-05, 1.4181000000001998e-05, 1.4222000000001234e-05, 1.4236000000000804e-05, 1.4208000000001664e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4195000000001567e-05, 1.4235999999993865e-05, 1.4222000000001234e-05, 1.4250000000000373e-05, 1.4222000000001234e-05, 1.4223000000000707e-05, 1.4209000000001137e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4249999999993435e-05]</msg>
<status status="PASS" starttime="20201115 22:00:43.730" endtime="20201115 22:00:43.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.726" endtime="20201115 22:00:43.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.735" endtime="20201115 22:00:43.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.738" endtime="20201115 22:00:43.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.737" endtime="20201115 22:00:43.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.733" endtime="20201115 22:00:43.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.313" endtime="20201115 22:00:43.759"></status>
</kw>
<msg timestamp="20201115 22:00:43.759" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.769" endtime="20201115 22:00:43.823"></status>
</kw>
<msg timestamp="20201115 22:00:43.824" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.767" endtime="20201115 22:00:43.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.825" endtime="20201115 22:00:43.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.827" endtime="20201115 22:00:43.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.765" endtime="20201115 22:00:43.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.762" endtime="20201115 22:00:43.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.837" endtime="20201115 22:00:44.124"></status>
</kw>
<msg timestamp="20201115 22:00:44.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.836" endtime="20201115 22:00:44.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.128" endtime="20201115 22:00:44.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.136" endtime="20201115 22:00:44.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.833" endtime="20201115 22:00:44.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.831" endtime="20201115 22:00:44.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.143" level="INFO">${RESULT} = [{'time': 0.021783903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4250000000000373e-05, 'source_diff': 1.4250000000000373e-05}, {'time': 0.022622708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:44.139" endtime="20201115 22:00:44.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.156" level="INFO">${OVERHEAD} = {'diff': [1.4250000000000373e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4209000000001137e-05, 1.4208000000001664e-05, 1.4250000000000373e-05, 1.4209000000001137e-05, 1.4207999999998194e-05...</msg>
<status status="PASS" starttime="20201115 22:00:44.144" endtime="20201115 22:00:44.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.161" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:44.160" endtime="20201115 22:00:44.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.163" level="INFO">VALUE: [1.4250000000000373e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4209000000001137e-05, 1.4208000000001664e-05, 1.4250000000000373e-05, 1.4209000000001137e-05, 1.4207999999998194e-05, 1.4250000000000373e-05, 1.4235999999997334e-05, 1.4194999999998098e-05, 1.4236000000000804e-05, 1.4208000000001664e-05, 1.4250000000000373e-05, 1.4208999999994198e-05, 1.4223000000000707e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4167000000002428e-05, 1.4277999999999513e-05, 1.4194999999994629e-05, 1.4180999999995059e-05, 1.4236000000000804e-05, 1.4250000000000373e-05, 1.4222000000001234e-05, 1.4207999999994725e-05, 1.4138999999996349e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.4291999999999083e-05, 1.4305999999998653e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.4194000000002094e-05, 1.4250000000000373e-05, 1.4194000000002094e-05, 1.4195000000001567e-05, 1.4236000000000804e-05, 1.4236000000000804e-05, 1.4223000000000707e-05, 1.4263999999999943e-05, 1.4208000000001664e-05, 1.4222000000001234e-05, 1.4165999999996015e-05, 1.4277999999999513e-05, 1.4236000000000804e-05, 1.4236999999993338e-05, 1.4221999999994295e-05, 1.4222000000008173e-05]</msg>
<status status="PASS" starttime="20201115 22:00:44.162" endtime="20201115 22:00:44.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.157" endtime="20201115 22:00:44.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.167" endtime="20201115 22:00:44.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.171" endtime="20201115 22:00:44.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.169" endtime="20201115 22:00:44.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.165" endtime="20201115 22:00:44.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.760" endtime="20201115 22:00:44.191"></status>
</kw>
<msg timestamp="20201115 22:00:44.192" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.200" endtime="20201115 22:00:44.255"></status>
</kw>
<msg timestamp="20201115 22:00:44.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.199" endtime="20201115 22:00:44.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.258" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.256" endtime="20201115 22:00:44.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.259" endtime="20201115 22:00:44.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.196" endtime="20201115 22:00:44.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.194" endtime="20201115 22:00:44.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.269" endtime="20201115 22:00:44.570"></status>
</kw>
<msg timestamp="20201115 22:00:44.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.267" endtime="20201115 22:00:44.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.574" endtime="20201115 22:00:44.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.582" endtime="20201115 22:00:44.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.265" endtime="20201115 22:00:44.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.263" endtime="20201115 22:00:44.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.589" level="INFO">${RESULT} = [{'time': 0.021748736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4208000000001664e-05, 'source_diff': 1.4208000000001664e-05}, {'time': 0.022588847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:44.585" endtime="20201115 22:00:44.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.603" level="INFO">${OVERHEAD} = {'diff': [1.4208000000001664e-05, 1.4207999999998194e-05, 1.4236000000000804e-05, 1.4221999999997764e-05, 1.4236000000000804e-05, 1.4249999999996904e-05, 1.4223000000000707e-05, 1.4236000000000804e-05...</msg>
<status status="PASS" starttime="20201115 22:00:44.590" endtime="20201115 22:00:44.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.607" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:44.606" endtime="20201115 22:00:44.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.610" level="INFO">VALUE: [1.4208000000001664e-05, 1.4207999999998194e-05, 1.4236000000000804e-05, 1.4221999999997764e-05, 1.4236000000000804e-05, 1.4249999999996904e-05, 1.4223000000000707e-05, 1.4236000000000804e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4181000000001998e-05, 1.4221999999997764e-05, 1.4221999999994295e-05, 1.4209000000001137e-05, 1.4237000000000277e-05, 1.4221999999994295e-05, 1.4237000000000277e-05, 1.4166000000002954e-05, 1.4236000000000804e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.4236000000000804e-05, 1.4195000000001567e-05, 1.4277999999999513e-05, 1.4207999999994725e-05, 1.4195000000001567e-05, 1.4208000000001664e-05, 1.4222000000001234e-05, 1.4193999999995155e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4222000000001234e-05, 1.4250000000000373e-05, 1.427700000000004e-05, 1.4250000000000373e-05, 1.4209000000001137e-05, 1.4207999999994725e-05, 1.4277999999999513e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.426300000000047e-05, 1.4250000000000373e-05, 1.4208000000001664e-05, 1.4221999999994295e-05, 1.4263999999999943e-05, 1.4195000000001567e-05, 1.4236000000000804e-05, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201115 22:00:44.608" endtime="20201115 22:00:44.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.603" endtime="20201115 22:00:44.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.613" endtime="20201115 22:00:44.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.617" endtime="20201115 22:00:44.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.615" endtime="20201115 22:00:44.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.612" endtime="20201115 22:00:44.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.192" endtime="20201115 22:00:44.638"></status>
</kw>
<msg timestamp="20201115 22:00:44.638" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.646" endtime="20201115 22:00:44.703"></status>
</kw>
<msg timestamp="20201115 22:00:44.703" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.645" endtime="20201115 22:00:44.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.704" endtime="20201115 22:00:44.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.707" endtime="20201115 22:00:44.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.642" endtime="20201115 22:00:44.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.640" endtime="20201115 22:00:44.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.717" endtime="20201115 22:00:45.003"></status>
</kw>
<msg timestamp="20201115 22:00:45.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022651972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.715" endtime="20201115 22:00:45.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022651972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.008" endtime="20201115 22:00:45.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.016" endtime="20201115 22:00:45.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.713" endtime="20201115 22:00:45.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.711" endtime="20201115 22:00:45.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.023" level="INFO">${RESULT} = [{'time': 0.022666194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4222000000001234e-05, 'source_diff': 1.4222000000001234e-05}, {'time': 0.023505625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:45.019" endtime="20201115 22:00:45.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.037" level="INFO">${OVERHEAD} = {'diff': [1.4222000000001234e-05, 1.4235999999997334e-05, 1.4207999999998194e-05, 1.4209000000001137e-05, 1.4180999999998528e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.4250000000000373e-05...</msg>
<status status="PASS" starttime="20201115 22:00:45.024" endtime="20201115 22:00:45.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.042" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:45.041" endtime="20201115 22:00:45.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.044" level="INFO">VALUE: [1.4222000000001234e-05, 1.4235999999997334e-05, 1.4207999999998194e-05, 1.4209000000001137e-05, 1.4180999999998528e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.4250000000000373e-05, 1.4222000000001234e-05, 1.4250000000000373e-05, 1.4235999999997334e-05, 1.4207999999994725e-05, 1.4236000000000804e-05, 1.4208000000001664e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4291999999999083e-05, 1.4208000000001664e-05, 1.4250000000000373e-05, 1.4194000000002094e-05, 1.4194000000002094e-05, 1.4222000000001234e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4194999999994629e-05, 1.4237000000000277e-05, 1.4207999999994725e-05, 1.4291999999999083e-05, 1.4222999999993768e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4207999999994725e-05, 1.4222000000001234e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4221999999994295e-05, 1.4208000000001664e-05, 1.4223000000000707e-05, 1.4236000000000804e-05, 1.4221999999994295e-05, 1.4250000000000373e-05, 1.4209000000001137e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4194999999994629e-05, 1.4208000000001664e-05, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201115 22:00:45.043" endtime="20201115 22:00:45.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.038" endtime="20201115 22:00:45.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.048" endtime="20201115 22:00:45.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.051" endtime="20201115 22:00:45.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.050" endtime="20201115 22:00:45.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.046" endtime="20201115 22:00:45.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.638" endtime="20201115 22:00:45.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.879" endtime="20201115 22:00:45.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.878" endtime="20201115 22:00:45.073"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.767" endtime="20201115 22:00:45.073"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.077" endtime="20201115 22:00:45.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.076" endtime="20201115 22:00:45.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.074" endtime="20201115 22:00:45.098"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:52.687" endtime="20201115 22:00:45.098" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.106" endtime="20201115 22:00:45.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.104" endtime="20201115 22:00:45.126"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.140" endtime="20201115 22:00:45.160"></status>
</kw>
<msg timestamp="20201115 22:00:45.160" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.138" endtime="20201115 22:00:45.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.163" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.162" endtime="20201115 22:00:45.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.166" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:45.164" endtime="20201115 22:00:45.166"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:45.135" endtime="20201115 22:00:45.167"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:45.133" endtime="20201115 22:00:45.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.131" endtime="20201115 22:00:45.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:45.172" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:45.171" endtime="20201115 22:00:45.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.169" endtime="20201115 22:00:45.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.130" endtime="20201115 22:00:45.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.129" endtime="20201115 22:00:45.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.173" endtime="20201115 22:00:45.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.128" endtime="20201115 22:00:45.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.126" endtime="20201115 22:00:45.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.103" endtime="20201115 22:00:45.176"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.179" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.189" endtime="20201115 22:00:45.205"></status>
</kw>
<msg timestamp="20201115 22:00:45.205" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.187" endtime="20201115 22:00:45.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.206" endtime="20201115 22:00:45.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.209" endtime="20201115 22:00:45.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.185" endtime="20201115 22:00:45.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.182" endtime="20201115 22:00:45.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.219" endtime="20201115 22:00:45.505"></status>
</kw>
<msg timestamp="20201115 22:00:45.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07642025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076438264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:45.217" endtime="20201115 22:00:45.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07642025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076438264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:45.509" endtime="20201115 22:00:45.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.517" endtime="20201115 22:00:45.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.214" endtime="20201115 22:00:45.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.212" endtime="20201115 22:00:45.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.524" level="INFO">${RESULT} = [{'time': 0.076438264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8014000000010633e-05, 'source_diff': 1.8014000000010633e-05}, {'time': 0.076525583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:45.521" endtime="20201115 22:00:45.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.538" level="INFO">${OVERHEAD} = {'diff': [1.8014000000010633e-05, 1.8054999999989052e-05, 1.806899999999556e-05, 1.8042000000009772e-05, 1.7999999999990246e-05, 1.8041999999995895e-05, 1.8028000000003264e-05, 1.7971999999991106e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:45.525" endtime="20201115 22:00:45.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.543" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:45.541" endtime="20201115 22:00:45.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.545" level="INFO">VALUE: [1.8014000000010633e-05, 1.8054999999989052e-05, 1.806899999999556e-05, 1.8042000000009772e-05, 1.7999999999990246e-05, 1.8041999999995895e-05, 1.8028000000003264e-05, 1.7971999999991106e-05, 1.7957999999998475e-05, 1.809700000000858e-05, 1.8042000000009772e-05, 1.8028000000003264e-05, 1.8000000000004124e-05, 1.8000000000004124e-05, 1.8028000000003264e-05, 1.8013999999996755e-05, 1.8056000000002403e-05, 1.8013999999996755e-05, 1.8041999999995895e-05, 1.801299999999728e-05, 1.8041999999995895e-05, 1.8056000000002403e-05, 1.8013999999996755e-05, 1.8000000000004124e-05, 1.8000000000004124e-05, 1.804099999999642e-05, 1.8013999999996755e-05, 1.8041999999995895e-05, 1.8028000000003264e-05, 1.8041999999995895e-05, 1.804099999999642e-05, 1.8027999999989386e-05, 1.8027999999989386e-05, 1.7972000000004984e-05, 1.8028000000003264e-05, 1.802700000000379e-05, 1.8028000000003264e-05, 1.8000000000004124e-05, 1.8042000000009772e-05, 1.8041999999995895e-05, 1.7985999999997615e-05, 1.806900000000944e-05, 1.8042000000009772e-05, 1.8042000000009772e-05, 1.8070000000008912e-05, 1.8042000000009772e-05, 1.8013999999996755e-05, 1.8013999999996755e-05, 1.8000000000004124e-05, 1.8027999999989386e-05]</msg>
<status status="PASS" starttime="20201115 22:00:45.544" endtime="20201115 22:00:45.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.539" endtime="20201115 22:00:45.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.548" endtime="20201115 22:00:45.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.552" endtime="20201115 22:00:45.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.550" endtime="20201115 22:00:45.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.546" endtime="20201115 22:00:45.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.180" endtime="20201115 22:00:45.573"></status>
</kw>
<msg timestamp="20201115 22:00:45.573" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.582" endtime="20201115 22:00:45.596"></status>
</kw>
<msg timestamp="20201115 22:00:45.597" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.580" endtime="20201115 22:00:45.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.599" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.598" endtime="20201115 22:00:45.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.600" endtime="20201115 22:00:45.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.578" endtime="20201115 22:00:45.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.576" endtime="20201115 22:00:45.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.609" endtime="20201115 22:00:45.895"></status>
</kw>
<msg timestamp="20201115 22:00:45.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.608" endtime="20201115 22:00:45.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.899" endtime="20201115 22:00:45.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.907" endtime="20201115 22:00:45.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.605" endtime="20201115 22:00:45.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.603" endtime="20201115 22:00:45.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.914" level="INFO">${RESULT} = [{'time': 0.021835875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8000000000000654e-05, 'source_diff': 1.8000000000000654e-05}, {'time': 0.021919014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:45.911" endtime="20201115 22:00:45.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.928" level="INFO">${OVERHEAD} = {'diff': [1.8000000000000654e-05, 1.8041999999999364e-05, 1.7986000000001084e-05, 1.8041999999999364e-05, 1.8027999999999794e-05, 1.8000000000000654e-05, 1.8055999999998934e-05, 1.804099999999989e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:45.915" endtime="20201115 22:00:45.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.932" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:45.931" endtime="20201115 22:00:45.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.935" level="INFO">VALUE: [1.8000000000000654e-05, 1.8041999999999364e-05, 1.7986000000001084e-05, 1.8041999999999364e-05, 1.8027999999999794e-05, 1.8000000000000654e-05, 1.8055999999998934e-05, 1.804099999999989e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.7986000000001084e-05, 1.7999999999997185e-05, 1.804099999999989e-05, 1.8014000000000224e-05, 1.7986000000001084e-05, 1.801300000000075e-05, 1.806899999999903e-05, 1.7999999999997185e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.8027999999999794e-05, 1.8027999999999794e-05, 1.8014000000000224e-05, 1.8056000000002403e-05, 1.7986000000001084e-05, 1.8014000000000224e-05, 1.797299999999752e-05, 1.8041999999999364e-05, 1.7986000000001084e-05, 1.8041999999999364e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.791699999999924e-05, 1.804099999999989e-05, 1.7972000000001515e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.8027999999999794e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.795899999999795e-05, 1.8041999999999364e-05, 1.802700000000032e-05, 1.8027999999999794e-05, 1.8027999999999794e-05]</msg>
<status status="PASS" starttime="20201115 22:00:45.933" endtime="20201115 22:00:45.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.929" endtime="20201115 22:00:45.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.938" endtime="20201115 22:00:45.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.942" endtime="20201115 22:00:45.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.940" endtime="20201115 22:00:45.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.937" endtime="20201115 22:00:45.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.574" endtime="20201115 22:00:45.963"></status>
</kw>
<msg timestamp="20201115 22:00:45.963" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.972" endtime="20201115 22:00:45.989"></status>
</kw>
<msg timestamp="20201115 22:00:45.989" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.970" endtime="20201115 22:00:45.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.990" endtime="20201115 22:00:45.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.993" endtime="20201115 22:00:45.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.967" endtime="20201115 22:00:45.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.965" endtime="20201115 22:00:45.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.002" endtime="20201115 22:00:46.288"></status>
</kw>
<msg timestamp="20201115 22:00:46.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023877333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.000" endtime="20201115 22:00:46.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023877333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.292" endtime="20201115 22:00:46.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.300" endtime="20201115 22:00:46.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.998" endtime="20201115 22:00:46.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.996" endtime="20201115 22:00:46.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.307" level="INFO">${RESULT} = [{'time': 0.023895319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7986000000001084e-05, 'source_diff': 1.7986000000001084e-05}, {'time': 0.023976792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:46.303" endtime="20201115 22:00:46.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.321" level="INFO">${OVERHEAD} = {'diff': [1.7986000000001084e-05, 1.8041999999999364e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.80690000000025e-05, 1.8041999999999364e-05, 1.7971999999998045e-05, 1.8027999999999794e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:46.308" endtime="20201115 22:00:46.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.325" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:46.324" endtime="20201115 22:00:46.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.328" level="INFO">VALUE: [1.7986000000001084e-05, 1.8041999999999364e-05, 1.8014000000000224e-05, 1.7999999999997185e-05, 1.80690000000025e-05, 1.8041999999999364e-05, 1.7971999999998045e-05, 1.8027999999999794e-05, 1.8014000000000224e-05, 1.7958000000001945e-05, 1.804099999999989e-05, 1.8014000000000224e-05, 1.802700000000032e-05, 1.8014000000000224e-05, 1.801300000000075e-05, 1.8027999999999794e-05, 1.8041999999999364e-05, 1.7971999999998045e-05, 1.804099999999989e-05, 1.7957999999998475e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.7985999999997615e-05, 1.804100000000336e-05, 1.7986000000001084e-05, 1.7986000000001084e-05, 1.8027999999999794e-05, 1.802700000000032e-05, 1.8041999999999364e-05, 1.8041999999999364e-05, 1.8027999999999794e-05, 1.8000000000000654e-05, 1.804099999999989e-05, 1.8027999999999794e-05, 1.7986000000001084e-05, 1.8027999999999794e-05, 1.8041999999999364e-05, 1.8014000000000224e-05, 1.8041999999999364e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.7972000000001515e-05, 1.8027999999999794e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.8027999999999794e-05, 1.8041999999999364e-05, 1.801300000000075e-05, 1.8000000000000654e-05]</msg>
<status status="PASS" starttime="20201115 22:00:46.326" endtime="20201115 22:00:46.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.321" endtime="20201115 22:00:46.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.331" endtime="20201115 22:00:46.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.335" endtime="20201115 22:00:46.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.333" endtime="20201115 22:00:46.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.330" endtime="20201115 22:00:46.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.963" endtime="20201115 22:00:46.355"></status>
</kw>
<msg timestamp="20201115 22:00:46.356" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.365" endtime="20201115 22:00:46.381"></status>
</kw>
<msg timestamp="20201115 22:00:46.381" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.363" endtime="20201115 22:00:46.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.382" endtime="20201115 22:00:46.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.385" endtime="20201115 22:00:46.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.360" endtime="20201115 22:00:46.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.358" endtime="20201115 22:00:46.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.394" endtime="20201115 22:00:46.681"></status>
</kw>
<msg timestamp="20201115 22:00:46.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022956972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022974944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.392" endtime="20201115 22:00:46.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022956972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022974944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.686" endtime="20201115 22:00:46.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.694" endtime="20201115 22:00:46.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.390" endtime="20201115 22:00:46.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.388" endtime="20201115 22:00:46.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.701" level="INFO">${RESULT} = [{'time': 0.022974944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7972000000001515e-05, 'source_diff': 1.7972000000001515e-05}, {'time': 0.023061931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:46.698" endtime="20201115 22:00:46.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.714" level="INFO">${OVERHEAD} = {'diff': [1.7972000000001515e-05, 1.8056000000002403e-05, 1.802700000000032e-05, 1.7986000000001084e-05, 1.7972000000001515e-05, 1.8014000000000224e-05, 1.793099999999881e-05, 1.7985999999997615e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:46.702" endtime="20201115 22:00:46.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.719" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:46.718" endtime="20201115 22:00:46.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.721" level="INFO">VALUE: [1.7972000000001515e-05, 1.8056000000002403e-05, 1.802700000000032e-05, 1.7986000000001084e-05, 1.7972000000001515e-05, 1.8014000000000224e-05, 1.793099999999881e-05, 1.7985999999997615e-05, 1.804099999999989e-05, 1.7985999999997615e-05, 1.8000000000000654e-05, 1.8027999999999794e-05, 1.7972000000001515e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.7971999999998045e-05, 1.7957999999998475e-05, 1.802700000000032e-05, 1.8027999999999794e-05, 1.7986000000001084e-05, 1.8000000000000654e-05, 1.7929999999999335e-05, 1.8014000000000224e-05, 1.7929999999999335e-05, 1.8000000000000654e-05, 1.8027999999999794e-05, 1.802700000000032e-05, 1.801300000000075e-05, 1.8027999999999794e-05, 1.7915999999999765e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.8000000000000654e-05, 1.7972000000001515e-05, 1.8056000000002403e-05, 1.8000000000000654e-05, 1.8027999999999794e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.794499999999838e-05, 1.8027999999999794e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.8027999999999794e-05, 1.805499999999946e-05, 1.805499999999946e-05, 1.8055999999998934e-05, 1.8014000000000224e-05, 1.7971999999998045e-05, 1.8014000000000224e-05]</msg>
<status status="PASS" starttime="20201115 22:00:46.720" endtime="20201115 22:00:46.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.715" endtime="20201115 22:00:46.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.730" endtime="20201115 22:00:46.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.733" endtime="20201115 22:00:46.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.732" endtime="20201115 22:00:46.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.728" endtime="20201115 22:00:46.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.356" endtime="20201115 22:00:46.754"></status>
</kw>
<msg timestamp="20201115 22:00:46.754" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.763" endtime="20201115 22:00:46.778"></status>
</kw>
<msg timestamp="20201115 22:00:46.778" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.762" endtime="20201115 22:00:46.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.781" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.780" endtime="20201115 22:00:46.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.782" endtime="20201115 22:00:46.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.759" endtime="20201115 22:00:46.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.757" endtime="20201115 22:00:46.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.791" endtime="20201115 22:00:47.078"></status>
</kw>
<msg timestamp="20201115 22:00:47.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021176861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021194889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.789" endtime="20201115 22:00:47.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021176861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021194889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.082" endtime="20201115 22:00:47.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.090" endtime="20201115 22:00:47.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.787" endtime="20201115 22:00:47.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.785" endtime="20201115 22:00:47.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.097" level="INFO">${RESULT} = [{'time': 0.021194889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8027999999999794e-05, 'source_diff': 1.8027999999999794e-05}, {'time': 0.021282153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:47.094" endtime="20201115 22:00:47.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.111" level="INFO">${OVERHEAD} = {'diff': [1.8027999999999794e-05, 1.7972000000001515e-05, 1.804099999999989e-05, 1.797299999999752e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.7971999999998045e-05, 1.7972000000001515e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:47.098" endtime="20201115 22:00:47.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.115" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.114" endtime="20201115 22:00:47.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.118" level="INFO">VALUE: [1.8027999999999794e-05, 1.7972000000001515e-05, 1.804099999999989e-05, 1.797299999999752e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.7971999999998045e-05, 1.7972000000001515e-05, 1.7971999999998045e-05, 1.7985999999997615e-05, 1.8000000000000654e-05, 1.7971999999998045e-05, 1.8000000000000654e-05, 1.7971999999998045e-05, 1.804099999999989e-05, 1.8042000000002834e-05, 1.8014000000000224e-05, 1.7986000000001084e-05, 1.7985999999997615e-05, 1.812500000000078e-05, 1.802700000000032e-05, 1.8055999999998934e-05, 1.8042000000002834e-05, 1.8027999999999794e-05, 1.8014000000000224e-05, 1.804100000000336e-05, 1.7943999999998905e-05, 1.7971999999998045e-05, 1.8027999999999794e-05, 1.8027999999999794e-05, 1.809700000000164e-05, 1.8027999999999794e-05, 1.7985999999997615e-05, 1.7986000000001084e-05, 1.8027999999999794e-05, 1.8041999999999364e-05, 1.8014000000000224e-05, 1.8013999999996755e-05, 1.7972000000001515e-05, 1.809700000000164e-05, 1.8014000000000224e-05, 1.8000000000000654e-05, 1.802700000000032e-05, 1.7929999999999335e-05, 1.8027999999999794e-05, 1.8000000000000654e-05, 1.8041999999999364e-05, 1.7985999999997615e-05, 1.8041999999999364e-05, 1.8014000000000224e-05]</msg>
<status status="PASS" starttime="20201115 22:00:47.116" endtime="20201115 22:00:47.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.112" endtime="20201115 22:00:47.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.121" endtime="20201115 22:00:47.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.125" endtime="20201115 22:00:47.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.123" endtime="20201115 22:00:47.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.120" endtime="20201115 22:00:47.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.755" endtime="20201115 22:00:47.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.178" endtime="20201115 22:00:47.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.177" endtime="20201115 22:00:47.146"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.148" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.157" endtime="20201115 22:00:47.179"></status>
</kw>
<msg timestamp="20201115 22:00:47.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.155" endtime="20201115 22:00:47.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.182" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.181" endtime="20201115 22:00:47.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.183" endtime="20201115 22:00:47.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.153" endtime="20201115 22:00:47.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.151" endtime="20201115 22:00:47.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.192" endtime="20201115 22:00:47.480"></status>
</kw>
<msg timestamp="20201115 22:00:47.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026470139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026491764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.191" endtime="20201115 22:00:47.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026470139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026491764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.484" endtime="20201115 22:00:47.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.493" endtime="20201115 22:00:47.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.188" endtime="20201115 22:00:47.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.186" endtime="20201115 22:00:47.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.499" level="INFO">${RESULT} = [{'time': 0.026491764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.026607847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:47.496" endtime="20201115 22:00:47.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.513" level="INFO">${OVERHEAD} = {'diff': [2.162500000000081e-05, 2.161100000000124e-05, 2.161100000000124e-05, 2.161099999999777e-05, 2.159700000000167e-05, 2.1541999999999395e-05, 2.1666000000000046e-05, 2.165299999999995e-05, 2.16...</msg>
<status status="PASS" starttime="20201115 22:00:47.500" endtime="20201115 22:00:47.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.517" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.516" endtime="20201115 22:00:47.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.520" level="INFO">VALUE: [2.162500000000081e-05, 2.161100000000124e-05, 2.161100000000124e-05, 2.161099999999777e-05, 2.159700000000167e-05, 2.1541999999999395e-05, 2.1666000000000046e-05, 2.165299999999995e-05, 2.166699999999952e-05, 2.168099999999909e-05, 2.1679999999999616e-05, 2.163900000000038e-05, 2.1598000000001144e-05, 2.163900000000038e-05, 2.168099999999909e-05, 2.161100000000124e-05, 2.165299999999995e-05, 2.162500000000081e-05, 2.165299999999995e-05, 2.1693999999999186e-05, 2.1693999999999186e-05, 2.162500000000081e-05, 2.1679999999999616e-05, 2.1666000000000046e-05, 2.163900000000038e-05, 2.161100000000124e-05, 2.163900000000038e-05, 2.1707999999998756e-05, 2.161100000000124e-05, 2.166699999999952e-05, 2.163900000000038e-05, 2.1666000000000046e-05, 2.166699999999952e-05, 2.162499999999734e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.1679999999999616e-05, 2.163900000000038e-05, 2.165299999999995e-05, 2.166699999999952e-05, 2.162500000000081e-05, 2.1679999999999616e-05, 2.165299999999995e-05, 2.161100000000471e-05, 2.163900000000385e-05, 2.168100000000256e-05, 2.165299999999648e-05, 2.163899999999691e-05, 2.1679999999996147e-05, 2.161099999999777e-05]</msg>
<status status="PASS" starttime="20201115 22:00:47.519" endtime="20201115 22:00:47.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.514" endtime="20201115 22:00:47.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.524" endtime="20201115 22:00:47.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.527" endtime="20201115 22:00:47.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.525" endtime="20201115 22:00:47.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.522" endtime="20201115 22:00:47.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.149" endtime="20201115 22:00:47.548"></status>
</kw>
<msg timestamp="20201115 22:00:47.548" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.557" endtime="20201115 22:00:47.576"></status>
</kw>
<msg timestamp="20201115 22:00:47.576" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.556" endtime="20201115 22:00:47.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.577" endtime="20201115 22:00:47.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.580" endtime="20201115 22:00:47.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.553" endtime="20201115 22:00:47.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.551" endtime="20201115 22:00:47.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.589" endtime="20201115 22:00:47.876"></status>
</kw>
<msg timestamp="20201115 22:00:47.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021112875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021134528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.587" endtime="20201115 22:00:47.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021112875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021134528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.880" endtime="20201115 22:00:47.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.888" endtime="20201115 22:00:47.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.585" endtime="20201115 22:00:47.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.583" endtime="20201115 22:00:47.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.895" level="INFO">${RESULT} = [{'time': 0.021134528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.165299999999995e-05, 'source_diff': 2.165299999999995e-05}, {'time': 0.021246431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:47.892" endtime="20201115 22:00:47.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.909" level="INFO">${OVERHEAD} = {'diff': [2.165299999999995e-05, 2.169499999999866e-05, 2.1612000000000714e-05, 2.170899999999823e-05, 2.162500000000081e-05, 2.1666000000000046e-05, 2.1638000000000907e-05, 2.165299999999995e-05, 2.1...</msg>
<status status="PASS" starttime="20201115 22:00:47.896" endtime="20201115 22:00:47.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.914" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.913" endtime="20201115 22:00:47.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.916" level="INFO">VALUE: [2.165299999999995e-05, 2.169499999999866e-05, 2.1612000000000714e-05, 2.170899999999823e-05, 2.162500000000081e-05, 2.1666000000000046e-05, 2.1638000000000907e-05, 2.165299999999995e-05, 2.166700000000299e-05, 2.162500000000081e-05, 2.166699999999952e-05, 2.162500000000081e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.1652000000000476e-05, 2.168099999999909e-05, 2.156900000000253e-05, 2.163900000000038e-05, 2.161100000000124e-05, 2.166699999999952e-05, 2.1679999999999616e-05, 2.166699999999952e-05, 2.168099999999909e-05, 2.166699999999952e-05, 2.163900000000038e-05, 2.163900000000038e-05, 2.163900000000038e-05, 2.1679999999999616e-05, 2.1666000000000046e-05, 2.1652000000000476e-05, 2.163900000000038e-05, 2.166699999999952e-05, 2.166699999999952e-05, 2.1665999999996577e-05, 2.1679999999999616e-05, 2.163900000000038e-05, 2.163900000000038e-05, 2.168099999999909e-05, 2.161100000000124e-05, 2.168099999999909e-05, 2.169500000000213e-05, 2.1666000000000046e-05, 2.168099999999909e-05, 2.166699999999952e-05, 2.163899999999691e-05, 2.1666000000000046e-05, 2.161100000000124e-05, 2.168099999999909e-05, 2.168099999999909e-05]</msg>
<status status="PASS" starttime="20201115 22:00:47.915" endtime="20201115 22:00:47.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.910" endtime="20201115 22:00:47.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.919" endtime="20201115 22:00:47.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.923" endtime="20201115 22:00:47.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.921" endtime="20201115 22:00:47.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.918" endtime="20201115 22:00:47.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.549" endtime="20201115 22:00:47.944"></status>
</kw>
<msg timestamp="20201115 22:00:47.944" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.953" endtime="20201115 22:00:47.972"></status>
</kw>
<msg timestamp="20201115 22:00:47.973" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.951" endtime="20201115 22:00:47.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.974" endtime="20201115 22:00:47.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.976" endtime="20201115 22:00:47.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.948" endtime="20201115 22:00:47.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.946" endtime="20201115 22:00:47.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.985" endtime="20201115 22:00:48.274"></status>
</kw>
<msg timestamp="20201115 22:00:48.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022344403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.984" endtime="20201115 22:00:48.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022344403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.278" endtime="20201115 22:00:48.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.286" endtime="20201115 22:00:48.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.981" endtime="20201115 22:00:48.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.980" endtime="20201115 22:00:48.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.293" level="INFO">${RESULT} = [{'time': 0.022366097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1694000000002656e-05, 'source_diff': 2.1694000000002656e-05}, {'time': 0.02247625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:48.289" endtime="20201115 22:00:48.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.307" level="INFO">${OVERHEAD} = {'diff': [2.1694000000002656e-05, 2.168099999999909e-05, 2.166699999999952e-05, 2.162499999999734e-05, 2.161099999999777e-05, 2.1694000000002656e-05, 2.1638000000000907e-05, 2.161100000000124e-05, 2.1...</msg>
<status status="PASS" starttime="20201115 22:00:48.294" endtime="20201115 22:00:48.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.311" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.310" endtime="20201115 22:00:48.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.314" level="INFO">VALUE: [2.1694000000002656e-05, 2.168099999999909e-05, 2.166699999999952e-05, 2.162499999999734e-05, 2.161099999999777e-05, 2.1694000000002656e-05, 2.1638000000000907e-05, 2.161100000000124e-05, 2.1749999999997466e-05, 2.166700000000299e-05, 2.165299999999995e-05, 2.166699999999952e-05, 2.163899999999691e-05, 2.161099999999777e-05, 2.1708000000002226e-05, 2.168100000000256e-05, 2.165299999999995e-05, 2.161100000000124e-05, 2.1652000000000476e-05, 2.161099999999777e-05, 2.161100000000124e-05, 2.163900000000038e-05, 2.1693999999999186e-05, 2.163900000000038e-05, 2.162499999999734e-05, 2.161099999999777e-05, 2.168099999999909e-05, 2.161099999999777e-05, 2.165299999999995e-05, 2.163900000000038e-05, 2.163900000000038e-05, 2.165299999999995e-05, 2.1707999999998756e-05, 2.1693999999999186e-05, 2.166699999999952e-05, 2.1652000000000476e-05, 2.168100000000256e-05, 2.161100000000124e-05, 2.166699999999952e-05, 2.162500000000081e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.163900000000038e-05, 2.162500000000081e-05, 2.165299999999995e-05, 2.166699999999952e-05, 2.162499999999734e-05, 2.162500000000081e-05, 2.165299999999995e-05, 2.163900000000038e-05]</msg>
<status status="PASS" starttime="20201115 22:00:48.312" endtime="20201115 22:00:48.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.308" endtime="20201115 22:00:48.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.317" endtime="20201115 22:00:48.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.320" endtime="20201115 22:00:48.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.319" endtime="20201115 22:00:48.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.315" endtime="20201115 22:00:48.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.944" endtime="20201115 22:00:48.341"></status>
</kw>
<msg timestamp="20201115 22:00:48.341" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.350" endtime="20201115 22:00:48.369"></status>
</kw>
<msg timestamp="20201115 22:00:48.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.349" endtime="20201115 22:00:48.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.370" endtime="20201115 22:00:48.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.373" endtime="20201115 22:00:48.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.346" endtime="20201115 22:00:48.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.344" endtime="20201115 22:00:48.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.382" endtime="20201115 22:00:48.669"></status>
</kw>
<msg timestamp="20201115 22:00:48.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.380" endtime="20201115 22:00:48.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.673" endtime="20201115 22:00:48.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.682" endtime="20201115 22:00:48.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.378" endtime="20201115 22:00:48.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.376" endtime="20201115 22:00:48.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.689" level="INFO">${RESULT} = [{'time': 0.021685403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.166699999999952e-05, 'source_diff': 2.166699999999952e-05}, {'time': 0.021797708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:48.685" endtime="20201115 22:00:48.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.702" level="INFO">${OVERHEAD} = {'diff': [2.166699999999952e-05, 2.163900000000038e-05, 2.1651999999997007e-05, 2.15830000000021e-05, 2.170899999999823e-05, 2.1584000000001574e-05, 2.162500000000081e-05, 2.166699999999952e-05, 2.165...</msg>
<status status="PASS" starttime="20201115 22:00:48.690" endtime="20201115 22:00:48.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.707" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.706" endtime="20201115 22:00:48.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.709" level="INFO">VALUE: [2.166699999999952e-05, 2.163900000000038e-05, 2.1651999999997007e-05, 2.15830000000021e-05, 2.170899999999823e-05, 2.1584000000001574e-05, 2.162500000000081e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.1666000000000046e-05, 2.168099999999909e-05, 2.1666000000000046e-05, 2.166699999999952e-05, 2.1652000000000476e-05, 2.161100000000124e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.168099999999909e-05, 2.162500000000081e-05, 2.163899999999691e-05, 2.165299999999995e-05, 2.1597999999997675e-05, 2.162499999999734e-05, 2.163900000000038e-05, 2.1693999999999186e-05, 2.1652000000000476e-05, 2.170899999999823e-05, 2.168099999999909e-05, 2.163900000000038e-05, 2.156899999999906e-05, 2.169499999999866e-05, 2.165299999999995e-05, 2.163900000000038e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.1722000000001795e-05, 2.166699999999952e-05, 2.159700000000167e-05, 2.1722000000001795e-05, 2.166700000000299e-05, 2.1666000000000046e-05, 2.166699999999952e-05, 2.15969999999982e-05, 2.163900000000038e-05, 2.1652000000000476e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.1693999999999186e-05]</msg>
<status status="PASS" starttime="20201115 22:00:48.708" endtime="20201115 22:00:48.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.703" endtime="20201115 22:00:48.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.712" endtime="20201115 22:00:48.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.716" endtime="20201115 22:00:48.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.714" endtime="20201115 22:00:48.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.711" endtime="20201115 22:00:48.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.342" endtime="20201115 22:00:48.736"></status>
</kw>
<msg timestamp="20201115 22:00:48.737" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.746" endtime="20201115 22:00:48.766"></status>
</kw>
<msg timestamp="20201115 22:00:48.766" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.744" endtime="20201115 22:00:48.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.767" endtime="20201115 22:00:48.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.770" endtime="20201115 22:00:48.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.741" endtime="20201115 22:00:48.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.739" endtime="20201115 22:00:48.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.779" endtime="20201115 22:00:49.066"></status>
</kw>
<msg timestamp="20201115 22:00:49.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023152042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.777" endtime="20201115 22:00:49.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023152042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.071" endtime="20201115 22:00:49.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.079" endtime="20201115 22:00:49.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.774" endtime="20201115 22:00:49.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.773" endtime="20201115 22:00:49.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.086" level="INFO">${RESULT} = [{'time': 0.023152042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.163900000000038e-05, 'source_diff': 2.163900000000038e-05}, {'time': 0.023267597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.083" endtime="20201115 22:00:49.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.100" level="INFO">${OVERHEAD} = {'diff': [2.163900000000038e-05, 2.1679999999999616e-05, 2.1707999999998756e-05, 2.165299999999995e-05, 2.159700000000167e-05, 2.163899999999691e-05, 2.165299999999995e-05, 2.166699999999952e-05, 2.16...</msg>
<status status="PASS" starttime="20201115 22:00:49.087" endtime="20201115 22:00:49.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.104" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.103" endtime="20201115 22:00:49.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.107" level="INFO">VALUE: [2.163900000000038e-05, 2.1679999999999616e-05, 2.1707999999998756e-05, 2.165299999999995e-05, 2.159700000000167e-05, 2.163899999999691e-05, 2.165299999999995e-05, 2.166699999999952e-05, 2.1652000000000476e-05, 2.161100000000124e-05, 2.1598000000001144e-05, 2.163900000000038e-05, 2.154099999999992e-05, 2.162499999999734e-05, 2.161099999999777e-05, 2.162500000000081e-05, 2.163900000000038e-05, 2.168099999999909e-05, 2.1584000000001574e-05, 2.165299999999995e-05, 2.1694000000002656e-05, 2.165299999999995e-05, 2.1680000000003086e-05, 2.161100000000124e-05, 2.165299999999995e-05, 2.161099999999777e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.1693999999999186e-05, 2.1693999999999186e-05, 2.166699999999952e-05, 2.166699999999952e-05, 2.166699999999952e-05, 2.170899999999823e-05, 2.1679999999999616e-05, 2.163900000000038e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.165299999999995e-05, 2.1666000000000046e-05, 2.163900000000038e-05, 2.166699999999952e-05, 2.1652000000000476e-05, 2.163900000000038e-05, 2.161099999999777e-05, 2.163900000000038e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.159700000000167e-05]</msg>
<status status="PASS" starttime="20201115 22:00:49.105" endtime="20201115 22:00:49.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.101" endtime="20201115 22:00:49.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.110" endtime="20201115 22:00:49.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.113" endtime="20201115 22:00:49.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.112" endtime="20201115 22:00:49.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.108" endtime="20201115 22:00:49.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.737" endtime="20201115 22:00:49.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.147" endtime="20201115 22:00:49.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.146" endtime="20201115 22:00:49.134"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.137" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.145" endtime="20201115 22:00:49.169"></status>
</kw>
<msg timestamp="20201115 22:00:49.169" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.144" endtime="20201115 22:00:49.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.170" endtime="20201115 22:00:49.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.173" endtime="20201115 22:00:49.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.141" endtime="20201115 22:00:49.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.139" endtime="20201115 22:00:49.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.183" endtime="20201115 22:00:49.470"></status>
</kw>
<msg timestamp="20201115 22:00:49.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027633417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027655278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.181" endtime="20201115 22:00:49.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027633417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027655278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.474" endtime="20201115 22:00:49.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.482" endtime="20201115 22:00:49.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.178" endtime="20201115 22:00:49.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.177" endtime="20201115 22:00:49.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.489" level="INFO">${RESULT} = [{'time': 0.027655278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.186099999999802e-05, 'source_diff': 2.186099999999802e-05}, {'time': 0.027798875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.485" endtime="20201115 22:00:49.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.502" level="INFO">${OVERHEAD} = {'diff': [2.186099999999802e-05, 2.187500000000106e-05, 2.1834000000001824e-05, 2.188900000000063e-05, 2.1834000000001824e-05, 2.19030000000002e-05, 2.186100000000149e-05, 2.188900000000063e-05, 2.181...</msg>
<status status="PASS" starttime="20201115 22:00:49.490" endtime="20201115 22:00:49.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.507" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.506" endtime="20201115 22:00:49.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.509" level="INFO">VALUE: [2.186099999999802e-05, 2.187500000000106e-05, 2.1834000000001824e-05, 2.188900000000063e-05, 2.1834000000001824e-05, 2.19030000000002e-05, 2.186100000000149e-05, 2.188900000000063e-05, 2.181899999999931e-05, 2.1819999999998785e-05, 2.1791999999999645e-05, 2.186099999999802e-05, 2.1888000000001157e-05, 2.181899999999931e-05, 2.187500000000106e-05, 2.193099999999934e-05, 2.188900000000063e-05, 2.183299999999888e-05, 2.188900000000063e-05, 2.186100000000149e-05, 2.188900000000063e-05, 2.183299999999888e-05, 2.180499999999974e-05, 2.184699999999845e-05, 2.188900000000063e-05, 2.187499999999759e-05, 2.187500000000453e-05, 2.184700000000539e-05, 2.184700000000539e-05, 2.190299999999673e-05, 2.186099999999802e-05, 2.183299999999888e-05, 2.181899999999931e-05, 2.181899999999931e-05, 2.187499999999759e-05, 2.184699999999845e-05, 2.190299999999673e-05, 2.193100000000281e-05, 2.187499999999759e-05, 2.1848000000004864e-05, 2.186100000000496e-05, 2.181899999999931e-05, 2.1848000000004864e-05, 2.180499999999974e-05, 2.184699999999845e-05, 2.18890000000041e-05, 2.1833999999998355e-05, 2.193100000000281e-05, 2.181899999999931e-05, 2.1847999999997925e-05]</msg>
<status status="PASS" starttime="20201115 22:00:49.508" endtime="20201115 22:00:49.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.503" endtime="20201115 22:00:49.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.513" endtime="20201115 22:00:49.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.516" endtime="20201115 22:00:49.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.514" endtime="20201115 22:00:49.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.511" endtime="20201115 22:00:49.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.137" endtime="20201115 22:00:49.537"></status>
</kw>
<msg timestamp="20201115 22:00:49.537" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.546" endtime="20201115 22:00:49.565"></status>
</kw>
<msg timestamp="20201115 22:00:49.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.544" endtime="20201115 22:00:49.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.567" endtime="20201115 22:00:49.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.570" endtime="20201115 22:00:49.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.542" endtime="20201115 22:00:49.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.540" endtime="20201115 22:00:49.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.579" endtime="20201115 22:00:49.865"></status>
</kw>
<msg timestamp="20201115 22:00:49.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.578" endtime="20201115 22:00:49.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.870" endtime="20201115 22:00:49.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.878" endtime="20201115 22:00:49.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.575" endtime="20201115 22:00:49.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.573" endtime="20201115 22:00:49.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.884" level="INFO">${RESULT} = [{'time': 0.021789181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1848000000001394e-05, 'source_diff': 2.1848000000001394e-05}, {'time': 0.021934875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:49.881" endtime="20201115 22:00:49.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.898" level="INFO">${OVERHEAD} = {'diff': [2.1848000000001394e-05, 2.186099999999802e-05, 2.1805999999999215e-05, 2.184700000000192e-05, 2.181899999999931e-05, 2.186100000000149e-05, 2.186100000000149e-05, 2.186099999999802e-05, 2.18...</msg>
<status status="PASS" starttime="20201115 22:00:49.885" endtime="20201115 22:00:49.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.903" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.901" endtime="20201115 22:00:49.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.905" level="INFO">VALUE: [2.1848000000001394e-05, 2.186099999999802e-05, 2.1805999999999215e-05, 2.184700000000192e-05, 2.181899999999931e-05, 2.186100000000149e-05, 2.186100000000149e-05, 2.186099999999802e-05, 2.1861999999997495e-05, 2.19030000000002e-05, 2.180499999999974e-05, 2.184700000000192e-05, 2.186100000000149e-05, 2.1820000000002254e-05, 2.183300000000235e-05, 2.188900000000063e-05, 2.188900000000063e-05, 2.184699999999845e-05, 2.187499999999759e-05, 2.19030000000002e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.187500000000106e-05, 2.184699999999845e-05, 2.19030000000002e-05, 2.19030000000002e-05, 2.180499999999974e-05, 2.181899999999931e-05, 2.186100000000149e-05, 2.186100000000149e-05, 2.191699999999977e-05, 2.184700000000192e-05, 2.184700000000192e-05, 2.181899999999931e-05, 2.187499999999759e-05, 2.184699999999845e-05, 2.1888000000001157e-05, 2.188900000000063e-05, 2.1848000000001394e-05, 2.181900000000278e-05, 2.186099999999802e-05, 2.187499999999759e-05, 2.1806000000002684e-05, 2.19030000000002e-05, 2.1847999999997925e-05, 2.186099999999802e-05, 2.187499999999759e-05, 2.186100000000149e-05, 2.186100000000149e-05, 2.1791999999999645e-05]</msg>
<status status="PASS" starttime="20201115 22:00:49.904" endtime="20201115 22:00:49.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.899" endtime="20201115 22:00:49.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.908" endtime="20201115 22:00:49.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.912" endtime="20201115 22:00:49.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.910" endtime="20201115 22:00:49.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.906" endtime="20201115 22:00:49.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.538" endtime="20201115 22:00:49.932"></status>
</kw>
<msg timestamp="20201115 22:00:49.932" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.942" endtime="20201115 22:00:49.962"></status>
</kw>
<msg timestamp="20201115 22:00:49.962" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.940" endtime="20201115 22:00:49.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.963" endtime="20201115 22:00:49.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.966" endtime="20201115 22:00:49.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.937" endtime="20201115 22:00:49.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.935" endtime="20201115 22:00:49.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.975" endtime="20201115 22:00:50.262"></status>
</kw>
<msg timestamp="20201115 22:00:50.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023081639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.974" endtime="20201115 22:00:50.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023081639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.266" endtime="20201115 22:00:50.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.274" endtime="20201115 22:00:50.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.971" endtime="20201115 22:00:50.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.969" endtime="20201115 22:00:50.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.281" level="INFO">${RESULT} = [{'time': 0.023103514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.187499999999759e-05, 'source_diff': 2.187499999999759e-05}, {'time': 0.023249069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.277" endtime="20201115 22:00:50.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.294" level="INFO">${OVERHEAD} = {'diff': [2.187499999999759e-05, 2.183300000000235e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.1833999999998355e-05, 2.188900000000063e-05, 2.186099999999802e-05, 2.186100000000149e-05, 2.190...</msg>
<status status="PASS" starttime="20201115 22:00:50.282" endtime="20201115 22:00:50.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.299" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.298" endtime="20201115 22:00:50.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.301" level="INFO">VALUE: [2.187499999999759e-05, 2.183300000000235e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.1833999999998355e-05, 2.188900000000063e-05, 2.186099999999802e-05, 2.186100000000149e-05, 2.190299999999673e-05, 2.187500000000106e-05, 2.194500000000238e-05, 2.1819999999998785e-05, 2.1805999999999215e-05, 2.187500000000106e-05, 2.19030000000002e-05, 2.19030000000002e-05, 2.187499999999759e-05, 2.188899999999716e-05, 2.188900000000063e-05, 2.184699999999845e-05, 2.187499999999759e-05, 2.184699999999845e-05, 2.186100000000149e-05, 2.1834000000001824e-05, 2.187500000000106e-05, 2.1902000000000726e-05, 2.1805999999999215e-05, 2.1902000000000726e-05, 2.188900000000063e-05, 2.1819999999998785e-05, 2.186100000000149e-05, 2.1820000000002254e-05, 2.1888000000001157e-05, 2.1848000000001394e-05, 2.1929999999999866e-05, 2.186100000000149e-05, 2.193100000000281e-05, 2.188900000000063e-05, 2.1820000000002254e-05, 2.187500000000106e-05, 2.187500000000106e-05, 2.184699999999845e-05, 2.188900000000063e-05, 2.184700000000192e-05, 2.1805999999999215e-05, 2.184700000000192e-05, 2.186099999999802e-05, 2.183299999999888e-05, 2.1819999999998785e-05, 2.19030000000002e-05]</msg>
<status status="PASS" starttime="20201115 22:00:50.300" endtime="20201115 22:00:50.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.295" endtime="20201115 22:00:50.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.304" endtime="20201115 22:00:50.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.308" endtime="20201115 22:00:50.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.306" endtime="20201115 22:00:50.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.303" endtime="20201115 22:00:50.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.933" endtime="20201115 22:00:50.329"></status>
</kw>
<msg timestamp="20201115 22:00:50.329" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.338" endtime="20201115 22:00:50.364"></status>
</kw>
<msg timestamp="20201115 22:00:50.365" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.336" endtime="20201115 22:00:50.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.366" endtime="20201115 22:00:50.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.368" endtime="20201115 22:00:50.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.334" endtime="20201115 22:00:50.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.332" endtime="20201115 22:00:50.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.377" endtime="20201115 22:00:50.663"></status>
</kw>
<msg timestamp="20201115 22:00:50.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023676944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023698819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.376" endtime="20201115 22:00:50.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023676944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023698819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.667" endtime="20201115 22:00:50.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.676" endtime="20201115 22:00:50.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.373" endtime="20201115 22:00:50.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.371" endtime="20201115 22:00:50.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.683" level="INFO">${RESULT} = [{'time': 0.023698819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.187500000000106e-05, 'source_diff': 2.187500000000106e-05}, {'time': 0.023842486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.679" endtime="20201115 22:00:50.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.696" level="INFO">${OVERHEAD} = {'diff': [2.187500000000106e-05, 2.183299999999888e-05, 2.1847999999997925e-05, 2.187499999999759e-05, 2.184699999999845e-05, 2.187499999999759e-05, 2.186099999999802e-05, 2.188899999999716e-05, 2.186...</msg>
<status status="PASS" starttime="20201115 22:00:50.684" endtime="20201115 22:00:50.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.701" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.700" endtime="20201115 22:00:50.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.703" level="INFO">VALUE: [2.187500000000106e-05, 2.183299999999888e-05, 2.1847999999997925e-05, 2.187499999999759e-05, 2.184699999999845e-05, 2.187499999999759e-05, 2.186099999999802e-05, 2.188899999999716e-05, 2.186100000000149e-05, 2.1847999999997925e-05, 2.184700000000192e-05, 2.186099999999802e-05, 2.187499999999759e-05, 2.1847999999997925e-05, 2.188900000000063e-05, 2.1862000000000964e-05, 2.183299999999888e-05, 2.1778000000000075e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.187500000000106e-05, 2.183300000000235e-05, 2.183299999999888e-05, 2.188900000000063e-05, 2.188899999999716e-05, 2.184700000000192e-05, 2.19030000000002e-05, 2.186099999999802e-05, 2.181899999999931e-05, 2.188900000000063e-05, 2.181899999999931e-05, 2.1847999999997925e-05, 2.183299999999888e-05, 2.188900000000063e-05, 2.179100000000017e-05, 2.183299999999888e-05, 2.187500000000106e-05, 2.183299999999888e-05, 2.184700000000192e-05, 2.187500000000106e-05, 2.19030000000002e-05, 2.188900000000063e-05, 2.186100000000149e-05, 2.184700000000192e-05, 2.183299999999888e-05, 2.184700000000192e-05, 2.187499999999759e-05, 2.187500000000106e-05, 2.1833999999998355e-05, 2.187500000000106e-05]</msg>
<status status="PASS" starttime="20201115 22:00:50.702" endtime="20201115 22:00:50.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.697" endtime="20201115 22:00:50.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.707" endtime="20201115 22:00:50.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.710" endtime="20201115 22:00:50.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.709" endtime="20201115 22:00:50.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.705" endtime="20201115 22:00:50.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.330" endtime="20201115 22:00:50.731"></status>
</kw>
<msg timestamp="20201115 22:00:50.731" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.740" endtime="20201115 22:00:50.761"></status>
</kw>
<msg timestamp="20201115 22:00:50.762" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.739" endtime="20201115 22:00:50.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.763" endtime="20201115 22:00:50.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.765" endtime="20201115 22:00:50.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.736" endtime="20201115 22:00:50.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.734" endtime="20201115 22:00:50.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.775" endtime="20201115 22:00:51.061"></status>
</kw>
<msg timestamp="20201115 22:00:51.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023038625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023060431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.773" endtime="20201115 22:00:51.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023038625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023060431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.065" endtime="20201115 22:00:51.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.074" endtime="20201115 22:00:51.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.770" endtime="20201115 22:00:51.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.769" endtime="20201115 22:00:51.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.080" level="INFO">${RESULT} = [{'time': 0.023060431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1805999999999215e-05, 'source_diff': 2.1805999999999215e-05}, {'time': 0.023204764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:51.077" endtime="20201115 22:00:51.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.094" level="INFO">${OVERHEAD} = {'diff': [2.1805999999999215e-05, 2.1819999999998785e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.19030000000002e-05, 2.187500000000106e-05, 2.186100000000149e-05, 2.1763999999997036e-05, 2.18...</msg>
<status status="PASS" starttime="20201115 22:00:51.081" endtime="20201115 22:00:51.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.099" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.098" endtime="20201115 22:00:51.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.101" level="INFO">VALUE: [2.1805999999999215e-05, 2.1819999999998785e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.19030000000002e-05, 2.187500000000106e-05, 2.186100000000149e-05, 2.1763999999997036e-05, 2.186100000000149e-05, 2.19030000000002e-05, 2.1833999999998355e-05, 2.186099999999802e-05, 2.188900000000063e-05, 2.19030000000002e-05, 2.183300000000235e-05, 2.181899999999931e-05, 2.188900000000063e-05, 2.184699999999845e-05, 2.181900000000278e-05, 2.187500000000106e-05, 2.180499999999974e-05, 2.183299999999888e-05, 2.183299999999888e-05, 2.186100000000149e-05, 2.1791999999999645e-05, 2.183299999999888e-05, 2.181899999999931e-05, 2.183300000000235e-05, 2.187500000000106e-05, 2.184699999999845e-05, 2.1847999999997925e-05, 2.1847999999997925e-05, 2.187499999999759e-05, 2.1848000000001394e-05, 2.1819999999998785e-05, 2.187500000000106e-05, 2.187500000000106e-05, 2.187499999999759e-05, 2.181900000000278e-05, 2.1916000000000296e-05, 2.187500000000106e-05, 2.193100000000281e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.1833999999998355e-05, 2.188900000000063e-05, 2.1847999999997925e-05, 2.187500000000106e-05, 2.188900000000063e-05, 2.183299999999888e-05]</msg>
<status status="PASS" starttime="20201115 22:00:51.100" endtime="20201115 22:00:51.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.095" endtime="20201115 22:00:51.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.105" endtime="20201115 22:00:51.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.108" endtime="20201115 22:00:51.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.107" endtime="20201115 22:00:51.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.103" endtime="20201115 22:00:51.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.732" endtime="20201115 22:00:51.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.135" endtime="20201115 22:00:51.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.135" endtime="20201115 22:00:51.130"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.132" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.141" endtime="20201115 22:00:51.163"></status>
</kw>
<msg timestamp="20201115 22:00:51.163" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.139" endtime="20201115 22:00:51.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.166" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.164" endtime="20201115 22:00:51.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.167" endtime="20201115 22:00:51.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.136" endtime="20201115 22:00:51.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.134" endtime="20201115 22:00:51.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.176" endtime="20201115 22:00:51.463"></status>
</kw>
<msg timestamp="20201115 22:00:51.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026954139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026976167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.174" endtime="20201115 22:00:51.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026954139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026976167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.467" endtime="20201115 22:00:51.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.475" endtime="20201115 22:00:51.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.172" endtime="20201115 22:00:51.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.170" endtime="20201115 22:00:51.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.482" level="INFO">${RESULT} = [{'time': 0.026976167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2028000000000325e-05, 'source_diff': 2.2028000000000325e-05}, {'time': 0.027147556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:51.479" endtime="20201115 22:00:51.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.496" level="INFO">${OVERHEAD} = {'diff': [2.2028000000000325e-05, 2.198700000000109e-05, 2.20830000000026e-05, 2.20830000000026e-05, 2.2028000000000325e-05, 2.208299999999913e-05, 2.2069999999999035e-05, 2.2028000000000325e-05, 2.20...</msg>
<status status="PASS" starttime="20201115 22:00:51.483" endtime="20201115 22:00:51.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.500" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.499" endtime="20201115 22:00:51.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.503" level="INFO">VALUE: [2.2028000000000325e-05, 2.198700000000109e-05, 2.20830000000026e-05, 2.20830000000026e-05, 2.2028000000000325e-05, 2.208299999999913e-05, 2.2069999999999035e-05, 2.2028000000000325e-05, 2.2041999999999895e-05, 2.1986000000001615e-05, 2.2069999999999035e-05, 2.197300000000152e-05, 2.211099999999827e-05, 2.202700000000085e-05, 2.206899999999956e-05, 2.1971999999998576e-05, 2.206899999999956e-05, 2.2098000000001644e-05, 2.20830000000026e-05, 2.2069999999999035e-05, 2.2069999999999035e-05, 2.204100000000042e-05, 2.20830000000026e-05, 2.205499999999999e-05, 2.20830000000026e-05, 2.2056000000002934e-05, 2.2097999999998175e-05, 2.202700000000085e-05, 2.2028000000000325e-05, 2.211100000000521e-05, 2.2097999999998175e-05, 2.2055999999999465e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.197300000000152e-05, 2.211099999999827e-05, 2.208299999999913e-05, 2.20969999999987e-05, 2.1971999999995107e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2069999999999035e-05, 2.2069999999999035e-05, 2.2083999999998605e-05, 2.2028000000000325e-05, 2.208299999999913e-05, 2.208299999999913e-05, 2.213899999999741e-05, 2.204100000000042e-05]</msg>
<status status="PASS" starttime="20201115 22:00:51.501" endtime="20201115 22:00:51.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.497" endtime="20201115 22:00:51.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.506" endtime="20201115 22:00:51.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.510" endtime="20201115 22:00:51.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.508" endtime="20201115 22:00:51.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.505" endtime="20201115 22:00:51.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.132" endtime="20201115 22:00:51.531"></status>
</kw>
<msg timestamp="20201115 22:00:51.531" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.540" endtime="20201115 22:00:51.561"></status>
</kw>
<msg timestamp="20201115 22:00:51.561" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.538" endtime="20201115 22:00:51.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.562" endtime="20201115 22:00:51.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.565" endtime="20201115 22:00:51.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.536" endtime="20201115 22:00:51.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.533" endtime="20201115 22:00:51.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.574" endtime="20201115 22:00:51.860"></status>
</kw>
<msg timestamp="20201115 22:00:51.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.572" endtime="20201115 22:00:51.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.864" endtime="20201115 22:00:51.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.872" endtime="20201115 22:00:51.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.570" endtime="20201115 22:00:51.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.568" endtime="20201115 22:00:51.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.879" level="INFO">${RESULT} = [{'time': 0.022405653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2070000000002504e-05, 'source_diff': 2.2070000000002504e-05}, {'time': 0.02257825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:51.876" endtime="20201115 22:00:51.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.893" level="INFO">${OVERHEAD} = {'diff': [2.2070000000002504e-05, 2.209700000000217e-05, 2.208299999999913e-05, 2.2055999999999465e-05, 2.2112000000001214e-05, 2.2041999999999895e-05, 2.2027999999996856e-05, 2.2041999999999895e-05, ...</msg>
<status status="PASS" starttime="20201115 22:00:51.880" endtime="20201115 22:00:51.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.903" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.902" endtime="20201115 22:00:51.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.906" level="INFO">VALUE: [2.2070000000002504e-05, 2.209700000000217e-05, 2.208299999999913e-05, 2.2055999999999465e-05, 2.2112000000001214e-05, 2.2041999999999895e-05, 2.2027999999996856e-05, 2.2041999999999895e-05, 2.208299999999913e-05, 2.2098000000001644e-05, 2.2055999999999465e-05, 2.206899999999956e-05, 2.206899999999956e-05, 2.2152000000000976e-05, 2.206899999999956e-05, 2.2097999999998175e-05, 2.20830000000026e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.211100000000174e-05, 2.205499999999999e-05, 2.2070000000002504e-05, 2.2042000000003364e-05, 2.208299999999913e-05, 2.2013999999997286e-05, 2.2098000000001644e-05, 2.2069999999999035e-05, 2.1986000000001615e-05, 2.208299999999913e-05, 2.2069999999999035e-05, 2.209700000000217e-05, 2.2028000000000325e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.216700000000002e-05, 2.2026999999997382e-05, 2.2028000000000325e-05, 2.2041999999999895e-05, 2.2098000000001644e-05, 2.205499999999999e-05, 2.2055999999999465e-05, 2.2014000000000755e-05, 2.2055999999999465e-05, 2.202700000000085e-05, 2.206899999999956e-05, 2.2041999999999895e-05, 2.208299999999913e-05, 2.201300000000128e-05, 2.2069999999999035e-05, 2.205499999999999e-05]</msg>
<status status="PASS" starttime="20201115 22:00:51.905" endtime="20201115 22:00:51.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.900" endtime="20201115 22:00:51.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.909" endtime="20201115 22:00:51.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.913" endtime="20201115 22:00:51.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.911" endtime="20201115 22:00:51.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.907" endtime="20201115 22:00:51.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.531" endtime="20201115 22:00:51.933"></status>
</kw>
<msg timestamp="20201115 22:00:51.933" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.942" endtime="20201115 22:00:51.962"></status>
</kw>
<msg timestamp="20201115 22:00:51.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.941" endtime="20201115 22:00:51.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.964" endtime="20201115 22:00:51.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.966" endtime="20201115 22:00:51.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.938" endtime="20201115 22:00:51.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.936" endtime="20201115 22:00:51.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.975" endtime="20201115 22:00:52.263"></status>
</kw>
<msg timestamp="20201115 22:00:52.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02167275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:51.974" endtime="20201115 22:00:52.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02167275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:52.267" endtime="20201115 22:00:52.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.276" endtime="20201115 22:00:52.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.971" endtime="20201115 22:00:52.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.969" endtime="20201115 22:00:52.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.283" level="INFO">${RESULT} = [{'time': 0.02167275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2041999999999895e-05, 'source_diff': 2.2041999999999895e-05}, {'time': 0.02184325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:52.279" endtime="20201115 22:00:52.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.297" level="INFO">${OVERHEAD} = {'diff': [2.2041999999999895e-05, 2.2041999999999895e-05, 2.205499999999999e-05, 2.20969999999987e-05, 2.209700000000217e-05, 2.20969999999987e-05, 2.2055999999999465e-05, 2.2138000000001407e-05, 2.20...</msg>
<status status="PASS" starttime="20201115 22:00:52.284" endtime="20201115 22:00:52.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.301" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.300" endtime="20201115 22:00:52.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.304" level="INFO">VALUE: [2.2041999999999895e-05, 2.2041999999999895e-05, 2.205499999999999e-05, 2.20969999999987e-05, 2.209700000000217e-05, 2.20969999999987e-05, 2.2055999999999465e-05, 2.2138000000001407e-05, 2.202700000000085e-05, 2.2069999999999035e-05, 2.2041999999999895e-05, 2.20969999999987e-05, 2.2014000000000755e-05, 2.206899999999956e-05, 2.2084000000002074e-05, 2.2055999999999465e-05, 2.204100000000042e-05, 2.20830000000026e-05, 2.208299999999913e-05, 2.20969999999987e-05, 2.2028000000000325e-05, 2.206899999999956e-05, 2.20969999999987e-05, 2.2055999999999465e-05, 2.212500000000131e-05, 2.2013999999997286e-05, 2.206899999999956e-05, 2.20830000000026e-05, 2.211100000000174e-05, 2.211100000000174e-05, 2.20969999999987e-05, 2.208299999999913e-05, 2.209700000000217e-05, 2.208299999999913e-05, 2.20969999999987e-05, 2.208299999999913e-05, 2.2084000000002074e-05, 2.215299999999698e-05, 2.2055999999999465e-05, 2.211099999999827e-05, 2.2013999999997286e-05, 2.215300000000045e-05, 2.206899999999956e-05, 2.212499999999784e-05, 2.2041999999999895e-05, 2.2042000000003364e-05, 2.2083999999998605e-05, 2.2056000000002934e-05, 2.2069999999999035e-05, 2.209700000000217e-05]</msg>
<status status="PASS" starttime="20201115 22:00:52.302" endtime="20201115 22:00:52.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.297" endtime="20201115 22:00:52.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.307" endtime="20201115 22:00:52.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.310" endtime="20201115 22:00:52.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.309" endtime="20201115 22:00:52.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.305" endtime="20201115 22:00:52.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.934" endtime="20201115 22:00:52.331"></status>
</kw>
<msg timestamp="20201115 22:00:52.331" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.340" endtime="20201115 22:00:52.363"></status>
</kw>
<msg timestamp="20201115 22:00:52.364" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.338" endtime="20201115 22:00:52.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.366" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.365" endtime="20201115 22:00:52.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.367" endtime="20201115 22:00:52.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.336" endtime="20201115 22:00:52.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.334" endtime="20201115 22:00:52.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.377" endtime="20201115 22:00:52.663"></status>
</kw>
<msg timestamp="20201115 22:00:52.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020910444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020932514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.375" endtime="20201115 22:00:52.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020910444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020932514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.667" endtime="20201115 22:00:52.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.676" endtime="20201115 22:00:52.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.372" endtime="20201115 22:00:52.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.371" endtime="20201115 22:00:52.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.682" level="INFO">${RESULT} = [{'time': 0.020932514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2069999999999035e-05, 'source_diff': 2.2069999999999035e-05}, {'time': 0.021105694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:52.679" endtime="20201115 22:00:52.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.696" level="INFO">${OVERHEAD} = {'diff': [2.2069999999999035e-05, 2.20830000000026e-05, 2.205499999999999e-05, 2.2028000000000325e-05, 2.2014000000000755e-05, 2.2027999999996856e-05, 2.2028000000000325e-05, 2.2069999999999035e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:00:52.683" endtime="20201115 22:00:52.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.701" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.700" endtime="20201115 22:00:52.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.703" level="INFO">VALUE: [2.2069999999999035e-05, 2.20830000000026e-05, 2.205499999999999e-05, 2.2028000000000325e-05, 2.2014000000000755e-05, 2.2027999999996856e-05, 2.2028000000000325e-05, 2.2069999999999035e-05, 2.2056000000002934e-05, 2.2083999999998605e-05, 2.211099999999827e-05, 2.211100000000174e-05, 2.208299999999913e-05, 2.2069999999999035e-05, 2.209700000000217e-05, 2.2083999999998605e-05, 2.208299999999913e-05, 2.216700000000002e-05, 2.2027999999996856e-05, 2.2084000000002074e-05, 2.204100000000042e-05, 2.209700000000217e-05, 2.206899999999956e-05, 2.20969999999987e-05, 2.2098000000001644e-05, 2.206899999999956e-05, 2.20969999999987e-05, 2.2069999999999035e-05, 2.20969999999987e-05, 2.2084000000002074e-05, 2.1986000000001615e-05, 2.2069999999999035e-05, 2.205499999999999e-05, 2.2055999999999465e-05, 2.213900000000088e-05, 2.206899999999956e-05, 2.211099999999827e-05, 2.206899999999956e-05, 2.2041999999999895e-05, 2.2028000000000325e-05, 2.2069999999999035e-05, 2.206899999999956e-05, 2.2041999999999895e-05, 2.2084000000002074e-05, 2.208299999999913e-05, 2.20830000000026e-05, 2.2041999999999895e-05, 2.2056000000002934e-05, 2.211100000000174e-05, 2.209700000000217e-05]</msg>
<status status="PASS" starttime="20201115 22:00:52.702" endtime="20201115 22:00:52.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.697" endtime="20201115 22:00:52.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.706" endtime="20201115 22:00:52.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.710" endtime="20201115 22:00:52.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.708" endtime="20201115 22:00:52.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.704" endtime="20201115 22:00:52.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.332" endtime="20201115 22:00:52.730"></status>
</kw>
<msg timestamp="20201115 22:00:52.731" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.740" endtime="20201115 22:00:52.760"></status>
</kw>
<msg timestamp="20201115 22:00:52.761" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.738" endtime="20201115 22:00:52.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.762" endtime="20201115 22:00:52.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.764" endtime="20201115 22:00:52.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.735" endtime="20201115 22:00:52.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.733" endtime="20201115 22:00:52.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.773" endtime="20201115 22:00:53.061"></status>
</kw>
<msg timestamp="20201115 22:00:53.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023351542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023373625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.772" endtime="20201115 22:00:53.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023351542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023373625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.065" endtime="20201115 22:00:53.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.074" endtime="20201115 22:00:53.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.769" endtime="20201115 22:00:53.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.767" endtime="20201115 22:00:53.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.080" level="INFO">${RESULT} = [{'time': 0.023373625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.208299999999913e-05, 'source_diff': 2.208299999999913e-05}, {'time': 0.023548431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:53.077" endtime="20201115 22:00:53.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.094" level="INFO">${OVERHEAD} = {'diff': [2.208299999999913e-05, 2.215300000000045e-05, 2.2069999999999035e-05, 2.1999999999997716e-05, 2.205499999999999e-05, 2.208299999999913e-05, 2.2097999999998175e-05, 2.2014000000000755e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:00:53.081" endtime="20201115 22:00:53.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.099" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.097" endtime="20201115 22:00:53.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.101" level="INFO">VALUE: [2.208299999999913e-05, 2.215300000000045e-05, 2.2069999999999035e-05, 2.1999999999997716e-05, 2.205499999999999e-05, 2.208299999999913e-05, 2.2097999999998175e-05, 2.2014000000000755e-05, 2.208299999999913e-05, 2.20969999999987e-05, 2.211100000000174e-05, 2.2055999999999465e-05, 2.20969999999987e-05, 2.2028000000000325e-05, 2.204100000000042e-05, 2.2083999999998605e-05, 2.2070000000002504e-05, 2.2056000000002934e-05, 2.208299999999913e-05, 2.208299999999913e-05, 2.20969999999987e-05, 2.2056000000002934e-05, 2.2028000000000325e-05, 2.206899999999956e-05, 2.2069999999999035e-05, 2.215300000000045e-05, 2.2013999999997286e-05, 2.2069999999999035e-05, 2.20969999999987e-05, 2.208299999999913e-05, 2.2070000000002504e-05, 2.2069999999999035e-05, 2.2111999999997745e-05, 2.212500000000131e-05, 2.209700000000217e-05, 2.2027999999996856e-05, 2.205499999999999e-05, 2.212500000000131e-05, 2.204100000000042e-05, 2.2083999999998605e-05, 2.2041999999999895e-05, 2.2069999999999035e-05, 2.20969999999987e-05, 2.20830000000026e-05, 2.2040999999996952e-05, 2.206899999999956e-05, 2.211100000000521e-05, 2.211099999999827e-05, 2.211099999999827e-05, 2.2055999999999465e-05]</msg>
<status status="PASS" starttime="20201115 22:00:53.100" endtime="20201115 22:00:53.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.095" endtime="20201115 22:00:53.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.104" endtime="20201115 22:00:53.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.108" endtime="20201115 22:00:53.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.106" endtime="20201115 22:00:53.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.102" endtime="20201115 22:00:53.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.731" endtime="20201115 22:00:53.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.131" endtime="20201115 22:00:53.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.130" endtime="20201115 22:00:53.129"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.131" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.140" endtime="20201115 22:00:53.163"></status>
</kw>
<msg timestamp="20201115 22:00:53.163" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.138" endtime="20201115 22:00:53.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.166" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.164" endtime="20201115 22:00:53.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.167" endtime="20201115 22:00:53.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.136" endtime="20201115 22:00:53.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.133" endtime="20201115 22:00:53.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.177" endtime="20201115 22:00:53.463"></status>
</kw>
<msg timestamp="20201115 22:00:53.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027418361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027440681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.175" endtime="20201115 22:00:53.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027418361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027440681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.467" endtime="20201115 22:00:53.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.475" endtime="20201115 22:00:53.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.172" endtime="20201115 22:00:53.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.171" endtime="20201115 22:00:53.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.483" level="INFO">${RESULT} = [{'time': 0.027440681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2320000000002754e-05, 'source_diff': 2.2320000000002754e-05}, {'time': 0.027645236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:53.479" endtime="20201115 22:00:53.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.497" level="INFO">${OVERHEAD} = {'diff': [2.2320000000002754e-05, 2.2264000000001005e-05, 2.2193999999999686e-05, 2.2277999999997106e-05, 2.2292000000000145e-05, 2.233300000000285e-05, 2.2263999999997536e-05, 2.2249999999997966e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:53.484" endtime="20201115 22:00:53.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.501" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.500" endtime="20201115 22:00:53.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.504" level="INFO">VALUE: [2.2320000000002754e-05, 2.2264000000001005e-05, 2.2193999999999686e-05, 2.2277999999997106e-05, 2.2292000000000145e-05, 2.233300000000285e-05, 2.2263999999997536e-05, 2.2249999999997966e-05, 2.2236000000001865e-05, 2.2305999999999715e-05, 2.22770000000011e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.22770000000011e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.229100000000067e-05, 2.231899999999981e-05, 2.2264000000004475e-05, 2.2235999999994926e-05, 2.22770000000011e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.236100000000546e-05, 2.229100000000067e-05, 2.2292000000000145e-05, 2.236099999999852e-05, 2.2305999999999715e-05, 2.2291999999993206e-05, 2.2278000000000575e-05, 2.230500000000024e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.230500000000024e-05, 2.2263999999994066e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.229100000000067e-05, 2.2319999999999285e-05, 2.233299999999938e-05, 2.2292000000000145e-05, 2.230500000000024e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.229100000000067e-05, 2.22770000000011e-05]</msg>
<status status="PASS" starttime="20201115 22:00:53.502" endtime="20201115 22:00:53.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.498" endtime="20201115 22:00:53.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.507" endtime="20201115 22:00:53.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.510" endtime="20201115 22:00:53.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.509" endtime="20201115 22:00:53.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.505" endtime="20201115 22:00:53.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.131" endtime="20201115 22:00:53.531"></status>
</kw>
<msg timestamp="20201115 22:00:53.531" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.540" endtime="20201115 22:00:53.560"></status>
</kw>
<msg timestamp="20201115 22:00:53.560" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.539" endtime="20201115 22:00:53.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.561" endtime="20201115 22:00:53.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.564" endtime="20201115 22:00:53.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.536" endtime="20201115 22:00:53.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.534" endtime="20201115 22:00:53.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.573" endtime="20201115 22:00:53.860"></status>
</kw>
<msg timestamp="20201115 22:00:53.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021557319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021579625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.572" endtime="20201115 22:00:53.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021557319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021579625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.864" endtime="20201115 22:00:53.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.872" endtime="20201115 22:00:53.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.569" endtime="20201115 22:00:53.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.567" endtime="20201115 22:00:53.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.879" level="INFO">${RESULT} = [{'time': 0.021579625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2306000000003184e-05, 'source_diff': 2.2306000000003184e-05}, {'time': 0.021782472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:53.875" endtime="20201115 22:00:53.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.892" level="INFO">${OVERHEAD} = {'diff': [2.2306000000003184e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2305999999999715e-05, 2.2264000000001005e-05, 2.2249999999997966e-05, 2.2278000000000575e-05, 2.2264000000001005e-05...</msg>
<status status="PASS" starttime="20201115 22:00:53.880" endtime="20201115 22:00:53.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.897" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.896" endtime="20201115 22:00:53.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.899" level="INFO">VALUE: [2.2306000000003184e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2305999999999715e-05, 2.2264000000001005e-05, 2.2249999999997966e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2263999999997536e-05, 2.231899999999981e-05, 2.2305999999999715e-05, 2.2290999999997202e-05, 2.220899999999873e-05, 2.2250000000001435e-05, 2.2236000000001865e-05, 2.2221999999998826e-05, 2.2292000000000145e-05, 2.2249999999997966e-05, 2.2249999999997966e-05, 2.2305999999999715e-05, 2.2278000000000575e-05, 2.230500000000024e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2235999999998396e-05, 2.2221999999998826e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.234699999999895e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2262999999998062e-05, 2.2236000000001865e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2305999999999715e-05, 2.2305999999999715e-05, 2.229100000000067e-05, 2.2264000000001005e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.2249999999994496e-05]</msg>
<status status="PASS" starttime="20201115 22:00:53.898" endtime="20201115 22:00:53.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.893" endtime="20201115 22:00:53.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.902" endtime="20201115 22:00:53.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.906" endtime="20201115 22:00:53.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.904" endtime="20201115 22:00:53.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.901" endtime="20201115 22:00:53.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.532" endtime="20201115 22:00:53.927"></status>
</kw>
<msg timestamp="20201115 22:00:53.927" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.936" endtime="20201115 22:00:53.956"></status>
</kw>
<msg timestamp="20201115 22:00:53.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.935" endtime="20201115 22:00:53.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.958" endtime="20201115 22:00:53.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.960" endtime="20201115 22:00:53.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.932" endtime="20201115 22:00:53.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.929" endtime="20201115 22:00:53.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.969" endtime="20201115 22:00:54.256"></status>
</kw>
<msg timestamp="20201115 22:00:54.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022859681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022881931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.968" endtime="20201115 22:00:54.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022859681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022881931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.260" endtime="20201115 22:00:54.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.269" endtime="20201115 22:00:54.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.965" endtime="20201115 22:00:54.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.964" endtime="20201115 22:00:54.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.275" level="INFO">${RESULT} = [{'time': 0.022881931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2250000000001435e-05, 'source_diff': 2.2250000000001435e-05}, {'time': 0.023080444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:54.272" endtime="20201115 22:00:54.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.289" level="INFO">${OVERHEAD} = {'diff': [2.2250000000001435e-05, 2.2276999999997632e-05, 2.2249999999997966e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.231899999999981e-05, 2.2277999999997106e-05, 2.2278000000000575e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:54.276" endtime="20201115 22:00:54.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.293" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.292" endtime="20201115 22:00:54.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.296" level="INFO">VALUE: [2.2250000000001435e-05, 2.2276999999997632e-05, 2.2249999999997966e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.231899999999981e-05, 2.2277999999997106e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.2249999999997966e-05, 2.22770000000011e-05, 2.2278000000000575e-05, 2.2333999999998855e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.2320000000002754e-05, 2.234699999999895e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.229100000000067e-05, 2.2235999999998396e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2305999999999715e-05, 2.2264000000001005e-05, 2.2277999999997106e-05, 2.234699999999895e-05, 2.2264000000001005e-05, 2.2236000000001865e-05, 2.22770000000011e-05, 2.2292000000000145e-05, 2.2250000000001435e-05, 2.229100000000067e-05, 2.2292000000000145e-05, 2.234699999999895e-05, 2.2278000000000575e-05, 2.2249999999997966e-05, 2.230500000000024e-05, 2.229100000000067e-05, 2.2264000000001005e-05, 2.22770000000011e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.2236000000001865e-05, 2.230500000000024e-05, 2.2278000000000575e-05, 2.2278000000000575e-05]</msg>
<status status="PASS" starttime="20201115 22:00:54.294" endtime="20201115 22:00:54.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.290" endtime="20201115 22:00:54.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.299" endtime="20201115 22:00:54.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.302" endtime="20201115 22:00:54.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.301" endtime="20201115 22:00:54.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.297" endtime="20201115 22:00:54.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.927" endtime="20201115 22:00:54.323"></status>
</kw>
<msg timestamp="20201115 22:00:54.324" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.333" endtime="20201115 22:00:54.353"></status>
</kw>
<msg timestamp="20201115 22:00:54.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.331" endtime="20201115 22:00:54.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.356" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.354" endtime="20201115 22:00:54.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.357" endtime="20201115 22:00:54.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.329" endtime="20201115 22:00:54.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.326" endtime="20201115 22:00:54.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.366" endtime="20201115 22:00:54.653"></status>
</kw>
<msg timestamp="20201115 22:00:54.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.365" endtime="20201115 22:00:54.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.658" endtime="20201115 22:00:54.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.666" endtime="20201115 22:00:54.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.362" endtime="20201115 22:00:54.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.360" endtime="20201115 22:00:54.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.672" level="INFO">${RESULT} = [{'time': 0.023203361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2277999999997106e-05, 'source_diff': 2.2277999999997106e-05}, {'time': 0.023403153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:54.669" endtime="20201115 22:00:54.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.686" level="INFO">${OVERHEAD} = {'diff': [2.2277999999997106e-05, 2.220899999999873e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.2250000000001435e-05, 2.2320000000002754e-05, 2.2292000000000145e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:54.673" endtime="20201115 22:00:54.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.690" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.689" endtime="20201115 22:00:54.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.693" level="INFO">VALUE: [2.2277999999997106e-05, 2.220899999999873e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.2250000000001435e-05, 2.2320000000002754e-05, 2.2292000000000145e-05, 2.2250000000001435e-05, 2.2263999999997536e-05, 2.2305999999999715e-05, 2.2235999999998396e-05, 2.2249999999997966e-05, 2.229100000000067e-05, 2.2235999999998396e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2236000000001865e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.2250000000001435e-05, 2.2235999999998396e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2319999999999285e-05, 2.226300000000153e-05, 2.2320000000002754e-05, 2.2319999999999285e-05, 2.2236000000001865e-05, 2.2236000000001865e-05, 2.230500000000024e-05, 2.2250000000001435e-05, 2.2264000000001005e-05, 2.2249999999997966e-05, 2.2305999999999715e-05, 2.230500000000024e-05, 2.2278000000000575e-05, 2.2334000000002324e-05, 2.2278000000004045e-05, 2.2305999999999715e-05, 2.2236000000001865e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.2236000000001865e-05, 2.2250000000001435e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.22770000000011e-05]</msg>
<status status="PASS" starttime="20201115 22:00:54.691" endtime="20201115 22:00:54.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.687" endtime="20201115 22:00:54.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.696" endtime="20201115 22:00:54.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.700" endtime="20201115 22:00:54.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.698" endtime="20201115 22:00:54.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.695" endtime="20201115 22:00:54.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.324" endtime="20201115 22:00:54.721"></status>
</kw>
<msg timestamp="20201115 22:00:54.721" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.730" endtime="20201115 22:00:54.751"></status>
</kw>
<msg timestamp="20201115 22:00:54.751" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.728" endtime="20201115 22:00:54.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.754" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.752" endtime="20201115 22:00:54.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.755" endtime="20201115 22:00:54.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.726" endtime="20201115 22:00:54.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.723" endtime="20201115 22:00:54.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.764" endtime="20201115 22:00:55.050"></status>
</kw>
<msg timestamp="20201115 22:00:55.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.762" endtime="20201115 22:00:55.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.054" endtime="20201115 22:00:55.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.062" endtime="20201115 22:00:55.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.760" endtime="20201115 22:00:55.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.758" endtime="20201115 22:00:55.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.069" level="INFO">${RESULT} = [{'time': 0.022522792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2264000000001005e-05, 'source_diff': 2.2264000000001005e-05}, {'time': 0.022725556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:55.066" endtime="20201115 22:00:55.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.083" level="INFO">${OVERHEAD} = {'diff': [2.2264000000001005e-05, 2.237500000000156e-05, 2.229100000000067e-05, 2.230500000000024e-05, 2.2208000000002726e-05, 2.2236000000001865e-05, 2.2278000000000575e-05, 2.2250000000001435e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:00:55.070" endtime="20201115 22:00:55.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.087" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.086" endtime="20201115 22:00:55.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.090" level="INFO">VALUE: [2.2264000000001005e-05, 2.237500000000156e-05, 2.229100000000067e-05, 2.230500000000024e-05, 2.2208000000002726e-05, 2.2236000000001865e-05, 2.2278000000000575e-05, 2.2250000000001435e-05, 2.2249999999997966e-05, 2.230500000000024e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.2263999999997536e-05, 2.2264000000001005e-05, 2.2276999999997632e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2306000000003184e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.2290999999997202e-05, 2.2249999999997966e-05, 2.2319999999999285e-05, 2.2276999999997632e-05, 2.229100000000067e-05, 2.233299999999938e-05, 2.2249999999997966e-05, 2.230500000000024e-05, 2.2319999999999285e-05, 2.2292000000000145e-05, 2.2263999999997536e-05, 2.2249999999997966e-05, 2.222300000000177e-05, 2.2305999999999715e-05, 2.2249999999997966e-05, 2.236100000000199e-05, 2.2292000000000145e-05, 2.229100000000067e-05, 2.2263999999997536e-05, 2.2249999999997966e-05, 2.219499999999916e-05, 2.2277999999997106e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.231899999999981e-05, 2.223700000000134e-05, 2.2236000000001865e-05, 2.230500000000024e-05, 2.2264000000001005e-05]</msg>
<status status="PASS" starttime="20201115 22:00:55.088" endtime="20201115 22:00:55.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.084" endtime="20201115 22:00:55.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.093" endtime="20201115 22:00:55.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.097" endtime="20201115 22:00:55.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.095" endtime="20201115 22:00:55.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.092" endtime="20201115 22:00:55.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.721" endtime="20201115 22:00:55.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.130" endtime="20201115 22:00:55.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.129" endtime="20201115 22:00:55.118"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.120" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.129" endtime="20201115 22:00:55.157"></status>
</kw>
<msg timestamp="20201115 22:00:55.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.127" endtime="20201115 22:00:55.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.160" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.159" endtime="20201115 22:00:55.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.161" endtime="20201115 22:00:55.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.125" endtime="20201115 22:00:55.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.123" endtime="20201115 22:00:55.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.171" endtime="20201115 22:00:55.457"></status>
</kw>
<msg timestamp="20201115 22:00:55.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02775675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027779222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:55.169" endtime="20201115 22:00:55.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02775675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027779222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:55.462" endtime="20201115 22:00:55.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.470" endtime="20201115 22:00:55.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.166" endtime="20201115 22:00:55.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.165" endtime="20201115 22:00:55.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.476" level="INFO">${RESULT} = [{'time': 0.027779222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2471999999999076e-05, 'source_diff': 2.2471999999999076e-05}, {'time': 0.028008514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:55.473" endtime="20201115 22:00:55.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.490" level="INFO">${OVERHEAD} = {'diff': [2.2471999999999076e-05, 2.2500000000001685e-05, 2.2485999999998646e-05, 2.2513999999997786e-05, 2.2471999999999076e-05, 2.2499999999998216e-05, 2.2528000000000825e-05, 2.2485999999998646e-05...</msg>
<status status="PASS" starttime="20201115 22:00:55.477" endtime="20201115 22:00:55.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.495" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.494" endtime="20201115 22:00:55.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.498" level="INFO">VALUE: [2.2471999999999076e-05, 2.2500000000001685e-05, 2.2485999999998646e-05, 2.2513999999997786e-05, 2.2471999999999076e-05, 2.2499999999998216e-05, 2.2528000000000825e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.2514000000001255e-05, 2.2514000000001255e-05, 2.2541999999996926e-05, 2.2514000000001255e-05, 2.2486000000002115e-05, 2.2513999999997786e-05, 2.2486000000002115e-05, 2.2528000000000825e-05, 2.2486000000002115e-05, 2.2472000000002545e-05, 2.2499999999994746e-05, 2.2458000000002976e-05, 2.2514000000001255e-05, 2.2527999999993886e-05, 2.252700000000135e-05, 2.2528000000000825e-05, 2.2514000000001255e-05, 2.244500000000288e-05, 2.2528000000000825e-05, 2.24169999999968e-05, 2.2500000000001685e-05, 2.2500000000001685e-05, 2.247299999999508e-05, 2.2472000000002545e-05, 2.2499999999994746e-05, 2.2526999999994413e-05, 2.2472000000002545e-05, 2.2542000000000395e-05, 2.2458000000002976e-05, 2.2486000000002115e-05, 2.2499999999994746e-05, 2.2500000000001685e-05, 2.2514000000001255e-05, 2.2500000000001685e-05, 2.2528000000000825e-05, 2.254100000000092e-05, 2.2513999999994316e-05, 2.2500000000001685e-05, 2.2527999999993886e-05, 2.245900000000245e-05, 2.2485999999995177e-05]</msg>
<status status="PASS" starttime="20201115 22:00:55.496" endtime="20201115 22:00:55.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.491" endtime="20201115 22:00:55.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.501" endtime="20201115 22:00:55.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.505" endtime="20201115 22:00:55.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.503" endtime="20201115 22:00:55.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.499" endtime="20201115 22:00:55.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.121" endtime="20201115 22:00:55.526"></status>
</kw>
<msg timestamp="20201115 22:00:55.526" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.535" endtime="20201115 22:00:55.559"></status>
</kw>
<msg timestamp="20201115 22:00:55.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.533" endtime="20201115 22:00:55.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.562" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.560" endtime="20201115 22:00:55.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.563" endtime="20201115 22:00:55.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.531" endtime="20201115 22:00:55.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.529" endtime="20201115 22:00:55.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.572" endtime="20201115 22:00:55.858"></status>
</kw>
<msg timestamp="20201115 22:00:55.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.570" endtime="20201115 22:00:55.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.862" endtime="20201115 22:00:55.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.870" endtime="20201115 22:00:55.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.568" endtime="20201115 22:00:55.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.566" endtime="20201115 22:00:55.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.877" level="INFO">${RESULT} = [{'time': 0.021585639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2471999999999076e-05, 'source_diff': 2.2471999999999076e-05}, {'time': 0.02181375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:55.874" endtime="20201115 22:00:55.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.891" level="INFO">${OVERHEAD} = {'diff': [2.2471999999999076e-05, 2.2457999999999506e-05, 2.244499999999941e-05, 2.2485999999998646e-05, 2.251300000000178e-05, 2.245899999999898e-05, 2.245899999999898e-05, 2.2500000000001685e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:00:55.878" endtime="20201115 22:00:55.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.896" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.895" endtime="20201115 22:00:55.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.898" level="INFO">VALUE: [2.2471999999999076e-05, 2.2457999999999506e-05, 2.244499999999941e-05, 2.2485999999998646e-05, 2.251300000000178e-05, 2.245899999999898e-05, 2.245899999999898e-05, 2.2500000000001685e-05, 2.2485999999998646e-05, 2.24030000000007e-05, 2.2457999999999506e-05, 2.2500000000001685e-05, 2.2500000000001685e-05, 2.2499999999998216e-05, 2.2513999999997786e-05, 2.2472000000002545e-05, 2.2443999999999936e-05, 2.2471999999999076e-05, 2.2542000000000395e-05, 2.2499999999998216e-05, 2.2457999999999506e-05, 2.244499999999941e-05, 2.2458000000002976e-05, 2.244500000000288e-05, 2.2486000000002115e-05, 2.2500000000001685e-05, 2.248700000000159e-05, 2.2471999999999076e-05, 2.2457999999999506e-05, 2.243099999999984e-05, 2.2500000000001685e-05, 2.2486000000002115e-05, 2.2499999999998216e-05, 2.247300000000202e-05, 2.2500000000001685e-05, 2.243099999999984e-05, 2.2430000000000366e-05, 2.2542000000000395e-05, 2.2457999999999506e-05, 2.2471999999999076e-05, 2.2513999999997786e-05, 2.2472000000002545e-05, 2.2499999999998216e-05, 2.2500000000001685e-05, 2.2444000000003406e-05, 2.2471999999995607e-05, 2.244500000000288e-05, 2.2514000000001255e-05, 2.2500000000001685e-05, 2.2471999999995607e-05]</msg>
<status status="PASS" starttime="20201115 22:00:55.897" endtime="20201115 22:00:55.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.892" endtime="20201115 22:00:55.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.902" endtime="20201115 22:00:55.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.905" endtime="20201115 22:00:55.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.903" endtime="20201115 22:00:55.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.900" endtime="20201115 22:00:55.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.526" endtime="20201115 22:00:55.926"></status>
</kw>
<msg timestamp="20201115 22:00:55.926" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.935" endtime="20201115 22:00:55.961"></status>
</kw>
<msg timestamp="20201115 22:00:55.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.933" endtime="20201115 22:00:55.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.964" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.962" endtime="20201115 22:00:55.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.965" endtime="20201115 22:00:55.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.931" endtime="20201115 22:00:55.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.929" endtime="20201115 22:00:55.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.974" endtime="20201115 22:00:56.262"></status>
</kw>
<msg timestamp="20201115 22:00:56.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023335375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023357875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.972" endtime="20201115 22:00:56.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023335375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023357875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.266" endtime="20201115 22:00:56.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.274" endtime="20201115 22:00:56.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.970" endtime="20201115 22:00:56.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.968" endtime="20201115 22:00:56.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.281" level="INFO">${RESULT} = [{'time': 0.023357875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2500000000001685e-05, 'source_diff': 2.2500000000001685e-05}, {'time': 0.023586722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:56.277" endtime="20201115 22:00:56.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.295" level="INFO">${OVERHEAD} = {'diff': [2.2500000000001685e-05, 2.2486000000002115e-05, 2.247300000000202e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.2499999999998216e-05, 2.2429999999996897e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:56.282" endtime="20201115 22:00:56.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.299" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.298" endtime="20201115 22:00:56.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.302" level="INFO">VALUE: [2.2500000000001685e-05, 2.2486000000002115e-05, 2.247300000000202e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.2499999999998216e-05, 2.2429999999996897e-05, 2.2499999999998216e-05, 2.2486000000002115e-05, 2.2457999999999506e-05, 2.2430000000000366e-05, 2.2500000000001685e-05, 2.2500000000001685e-05, 2.2528000000000825e-05, 2.2458000000002976e-05, 2.248700000000159e-05, 2.2486000000002115e-05, 2.248699999999812e-05, 2.2500000000001685e-05, 2.2443999999999936e-05, 2.244499999999941e-05, 2.2500000000001685e-05, 2.255500000000049e-05, 2.248700000000159e-05, 2.2443999999999936e-05, 2.2499999999998216e-05, 2.2486000000002115e-05, 2.2500000000001685e-05, 2.2513999999997786e-05, 2.2500000000001685e-05, 2.255500000000049e-05, 2.2514000000001255e-05, 2.2499999999998216e-05, 2.2500000000001685e-05, 2.2528000000000825e-05, 2.2500000000001685e-05, 2.2500000000001685e-05, 2.2514000000001255e-05, 2.2472000000002545e-05, 2.2500000000001685e-05, 2.2500000000001685e-05, 2.2472000000002545e-05, 2.2486000000002115e-05, 2.2499999999994746e-05, 2.2486000000002115e-05, 2.2444000000003406e-05, 2.2500000000001685e-05, 2.2458000000002976e-05, 2.2499999999994746e-05]</msg>
<status status="PASS" starttime="20201115 22:00:56.300" endtime="20201115 22:00:56.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.296" endtime="20201115 22:00:56.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.305" endtime="20201115 22:00:56.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.308" endtime="20201115 22:00:56.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.307" endtime="20201115 22:00:56.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.303" endtime="20201115 22:00:56.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.926" endtime="20201115 22:00:56.329"></status>
</kw>
<msg timestamp="20201115 22:00:56.329" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.338" endtime="20201115 22:00:56.362"></status>
</kw>
<msg timestamp="20201115 22:00:56.363" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.337" endtime="20201115 22:00:56.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.365" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.364" endtime="20201115 22:00:56.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.366" endtime="20201115 22:00:56.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.334" endtime="20201115 22:00:56.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.332" endtime="20201115 22:00:56.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.375" endtime="20201115 22:00:56.662"></status>
</kw>
<msg timestamp="20201115 22:00:56.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.374" endtime="20201115 22:00:56.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.666" endtime="20201115 22:00:56.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.674" endtime="20201115 22:00:56.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.371" endtime="20201115 22:00:56.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.370" endtime="20201115 22:00:56.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.681" level="INFO">${RESULT} = [{'time': 0.021760069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2512999999998312e-05, 'source_diff': 2.2512999999998312e-05}, {'time': 0.021990375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:56.678" endtime="20201115 22:00:56.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.695" level="INFO">${OVERHEAD} = {'diff': [2.2512999999998312e-05, 2.2471999999999076e-05, 2.241700000000027e-05, 2.2486000000002115e-05, 2.2485999999998646e-05, 2.2513999999997786e-05, 2.2500000000001685e-05, 2.2443999999999936e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:56.682" endtime="20201115 22:00:56.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.699" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.698" endtime="20201115 22:00:56.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.702" level="INFO">VALUE: [2.2512999999998312e-05, 2.2471999999999076e-05, 2.241700000000027e-05, 2.2486000000002115e-05, 2.2485999999998646e-05, 2.2513999999997786e-05, 2.2500000000001685e-05, 2.2443999999999936e-05, 2.247300000000202e-05, 2.2471999999999076e-05, 2.2485999999998646e-05, 2.2499999999998216e-05, 2.2512999999998312e-05, 2.2443999999999936e-05, 2.2514000000001255e-05, 2.248700000000159e-05, 2.2471999999999076e-05, 2.2528000000000825e-05, 2.2471999999999076e-05, 2.2500000000001685e-05, 2.2499999999998216e-05, 2.2458000000002976e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.2513999999997786e-05, 2.2499999999998216e-05, 2.2500000000001685e-05, 2.2500000000001685e-05, 2.2499999999998216e-05, 2.24169999999968e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.2526999999997882e-05, 2.2528000000000825e-05, 2.2514000000001255e-05, 2.2472000000002545e-05, 2.252700000000135e-05, 2.255500000000049e-05, 2.2499999999998216e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.2514000000001255e-05, 2.2485999999995177e-05, 2.2499999999994746e-05, 2.2444000000003406e-05, 2.2499999999994746e-05, 2.251300000000178e-05, 2.2500000000001685e-05, 2.252700000000135e-05, 2.2486000000002115e-05]</msg>
<status status="PASS" starttime="20201115 22:00:56.700" endtime="20201115 22:00:56.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.695" endtime="20201115 22:00:56.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.705" endtime="20201115 22:00:56.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.708" endtime="20201115 22:00:56.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.707" endtime="20201115 22:00:56.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.703" endtime="20201115 22:00:56.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.330" endtime="20201115 22:00:56.729"></status>
</kw>
<msg timestamp="20201115 22:00:56.729" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.738" endtime="20201115 22:00:56.765"></status>
</kw>
<msg timestamp="20201115 22:00:56.766" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.736" endtime="20201115 22:00:56.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.767" endtime="20201115 22:00:56.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.769" endtime="20201115 22:00:56.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.734" endtime="20201115 22:00:56.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.732" endtime="20201115 22:00:56.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.778" endtime="20201115 22:00:57.065"></status>
</kw>
<msg timestamp="20201115 22:00:57.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023794931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0238175, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:56.777" endtime="20201115 22:00:57.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023794931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0238175, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:57.074" endtime="20201115 22:00:57.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.082" endtime="20201115 22:00:57.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.774" endtime="20201115 22:00:57.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.772" endtime="20201115 22:00:57.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.089" level="INFO">${RESULT} = [{'time': 0.0238175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.256900000000006e-05, 'source_diff': 2.256900000000006e-05}, {'time': 0.02404825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:57.086" endtime="20201115 22:00:57.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.103" level="INFO">${OVERHEAD} = {'diff': [2.256900000000006e-05, 2.2500000000001685e-05, 2.2499999999998216e-05, 2.2471999999999076e-05, 2.2500000000001685e-05, 2.2471999999999076e-05, 2.2471999999999076e-05, 2.2499999999998216e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:57.090" endtime="20201115 22:00:57.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.107" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.106" endtime="20201115 22:00:57.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.110" level="INFO">VALUE: [2.256900000000006e-05, 2.2500000000001685e-05, 2.2499999999998216e-05, 2.2471999999999076e-05, 2.2500000000001685e-05, 2.2471999999999076e-05, 2.2471999999999076e-05, 2.2499999999998216e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.248699999999812e-05, 2.2499999999998216e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.248700000000159e-05, 2.2499999999998216e-05, 2.248700000000159e-05, 2.2499999999998216e-05, 2.2499999999998216e-05, 2.2486000000002115e-05, 2.2528000000000825e-05, 2.2514000000001255e-05, 2.2472000000002545e-05, 2.2542000000000395e-05, 2.2457999999999506e-05, 2.2443999999999936e-05, 2.2554999999997022e-05, 2.2526999999997882e-05, 2.241700000000027e-05, 2.2499999999998216e-05, 2.2499999999998216e-05, 2.2471999999999076e-05, 2.2485999999998646e-05, 2.2486000000002115e-05, 2.243099999999637e-05, 2.244500000000288e-05, 2.244499999999594e-05, 2.2499999999994746e-05, 2.2528000000000825e-05, 2.2486000000002115e-05, 2.2486000000002115e-05, 2.2472000000002545e-05, 2.2514000000001255e-05, 2.2499999999994746e-05, 2.2528000000000825e-05, 2.243100000000331e-05, 2.2500000000001685e-05, 2.2500000000001685e-05, 2.2513999999994316e-05, 2.244499999999594e-05]</msg>
<status status="PASS" starttime="20201115 22:00:57.108" endtime="20201115 22:00:57.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.104" endtime="20201115 22:00:57.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.113" endtime="20201115 22:00:57.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.116" endtime="20201115 22:00:57.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.115" endtime="20201115 22:00:57.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.111" endtime="20201115 22:00:57.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.730" endtime="20201115 22:00:57.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.119" endtime="20201115 22:00:57.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.118" endtime="20201115 22:00:57.137"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.140" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.148" endtime="20201115 22:00:57.177"></status>
</kw>
<msg timestamp="20201115 22:00:57.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.147" endtime="20201115 22:00:57.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.179" endtime="20201115 22:00:57.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.181" endtime="20201115 22:00:57.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.144" endtime="20201115 22:00:57.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.142" endtime="20201115 22:00:57.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.191" endtime="20201115 22:00:57.477"></status>
</kw>
<msg timestamp="20201115 22:00:57.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027845653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027868389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.189" endtime="20201115 22:00:57.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027845653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027868389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.481" endtime="20201115 22:00:57.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.489" endtime="20201115 22:00:57.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.186" endtime="20201115 22:00:57.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.185" endtime="20201115 22:00:57.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.496" level="INFO">${RESULT} = [{'time': 0.027868389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2735999999998896e-05, 'source_diff': 2.2735999999998896e-05}, {'time': 0.028132569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:57.493" endtime="20201115 22:00:57.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.510" level="INFO">${OVERHEAD} = {'diff': [2.2735999999998896e-05, 2.2694000000000186e-05, 2.266699999999705e-05, 2.2707999999999756e-05, 2.263900000000138e-05, 2.2721999999999326e-05, 2.2722000000002796e-05, 2.266700000000052e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:00:57.497" endtime="20201115 22:00:57.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.514" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.513" endtime="20201115 22:00:57.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.517" level="INFO">VALUE: [2.2735999999998896e-05, 2.2694000000000186e-05, 2.266699999999705e-05, 2.2707999999999756e-05, 2.263900000000138e-05, 2.2721999999999326e-05, 2.2722000000002796e-05, 2.266700000000052e-05, 2.269499999999966e-05, 2.266699999999705e-05, 2.266700000000052e-05, 2.266699999999705e-05, 2.265300000000095e-05, 2.2721999999995857e-05, 2.266700000000399e-05, 2.268099999999662e-05, 2.269500000000313e-05, 2.268100000000356e-05, 2.2708000000003226e-05, 2.2694000000003656e-05, 2.268099999999662e-05, 2.2694000000003656e-05, 2.268099999999662e-05, 2.272300000000227e-05, 2.2707999999996287e-05, 2.2666000000004516e-05, 2.268100000000356e-05, 2.2721999999995857e-05, 2.2708000000003226e-05, 2.2693999999996717e-05, 2.269499999999619e-05, 2.2721999999995857e-05, 2.262499999999834e-05, 2.27090000000027e-05, 2.2680000000004086e-05, 2.266699999999705e-05, 2.2680000000004086e-05, 2.272299999999533e-05, 2.2736000000002365e-05, 2.268099999999662e-05, 2.2708000000003226e-05, 2.2694000000003656e-05, 2.268099999999662e-05, 2.2707999999996287e-05, 2.2693999999996717e-05, 2.266699999999705e-05, 2.2707999999996287e-05, 2.2651999999998007e-05, 2.2722000000002796e-05, 2.2750000000001935e-05]</msg>
<status status="PASS" starttime="20201115 22:00:57.515" endtime="20201115 22:00:57.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.511" endtime="20201115 22:00:57.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.520" endtime="20201115 22:00:57.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.523" endtime="20201115 22:00:57.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.522" endtime="20201115 22:00:57.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.518" endtime="20201115 22:00:57.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.140" endtime="20201115 22:00:57.544"></status>
</kw>
<msg timestamp="20201115 22:00:57.545" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.554" endtime="20201115 22:00:57.578"></status>
</kw>
<msg timestamp="20201115 22:00:57.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.552" endtime="20201115 22:00:57.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.580" endtime="20201115 22:00:57.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.583" endtime="20201115 22:00:57.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.550" endtime="20201115 22:00:57.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.547" endtime="20201115 22:00:57.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.592" endtime="20201115 22:00:57.880"></status>
</kw>
<msg timestamp="20201115 22:00:57.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022588944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.591" endtime="20201115 22:00:57.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022588944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.885" endtime="20201115 22:00:57.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.893" endtime="20201115 22:00:57.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.588" endtime="20201115 22:00:57.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.586" endtime="20201115 22:00:57.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.899" level="INFO">${RESULT} = [{'time': 0.022588944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2707999999999756e-05, 'source_diff': 2.2707999999999756e-05}, {'time': 0.022851194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:57.896" endtime="20201115 22:00:57.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.913" level="INFO">${OVERHEAD} = {'diff': [2.2707999999999756e-05, 2.2693999999996717e-05, 2.268100000000009e-05, 2.263900000000138e-05, 2.2707999999999756e-05, 2.2736000000002365e-05, 2.263900000000138e-05, 2.266700000000052e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:00:57.900" endtime="20201115 22:00:57.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.918" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.916" endtime="20201115 22:00:57.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.920" level="INFO">VALUE: [2.2707999999999756e-05, 2.2693999999996717e-05, 2.268100000000009e-05, 2.263900000000138e-05, 2.2707999999999756e-05, 2.2736000000002365e-05, 2.263900000000138e-05, 2.266700000000052e-05, 2.2722000000002796e-05, 2.270899999999923e-05, 2.2707999999999756e-05, 2.2651999999998007e-05, 2.266700000000052e-05, 2.263900000000138e-05, 2.263900000000138e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.2708000000003226e-05, 2.270899999999923e-05, 2.265300000000095e-05, 2.2749999999998466e-05, 2.266700000000052e-05, 2.269499999999966e-05, 2.2707999999999756e-05, 2.2764000000001505e-05, 2.269499999999966e-05, 2.263900000000138e-05, 2.2666000000001046e-05, 2.2666000000001046e-05, 2.2722000000002796e-05, 2.2652000000001477e-05, 2.262499999999834e-05, 2.270899999999923e-05, 2.270899999999923e-05, 2.2736000000002365e-05, 2.269500000000313e-05, 2.27090000000027e-05, 2.2708000000003226e-05, 2.269500000000313e-05, 2.268099999999662e-05, 2.2680000000004086e-05, 2.2694000000003656e-05, 2.25969999999992e-05, 2.265300000000442e-05, 2.2735999999995427e-05, 2.262500000000528e-05, 2.273700000000184e-05, 2.266700000000399e-05, 2.2638000000005376e-05, 2.265299999999748e-05]</msg>
<status status="PASS" starttime="20201115 22:00:57.919" endtime="20201115 22:00:57.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.914" endtime="20201115 22:00:57.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.923" endtime="20201115 22:00:57.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.927" endtime="20201115 22:00:57.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.925" endtime="20201115 22:00:57.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.922" endtime="20201115 22:00:57.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.545" endtime="20201115 22:00:57.947"></status>
</kw>
<msg timestamp="20201115 22:00:57.948" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.957" endtime="20201115 22:00:57.981"></status>
</kw>
<msg timestamp="20201115 22:00:57.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.955" endtime="20201115 22:00:57.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.983" endtime="20201115 22:00:57.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.985" endtime="20201115 22:00:57.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.953" endtime="20201115 22:00:57.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.950" endtime="20201115 22:00:57.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.994" endtime="20201115 22:00:58.282"></status>
</kw>
<msg timestamp="20201115 22:00:58.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021379986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.993" endtime="20201115 22:00:58.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021379986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.286" endtime="20201115 22:00:58.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.294" endtime="20201115 22:00:58.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.990" endtime="20201115 22:00:58.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.988" endtime="20201115 22:00:58.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.301" level="INFO">${RESULT} = [{'time': 0.021402708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2721999999999326e-05, 'source_diff': 2.2721999999999326e-05}, {'time': 0.021665625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:58.297" endtime="20201115 22:00:58.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.314" level="INFO">${OVERHEAD} = {'diff': [2.2721999999999326e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2694000000000186e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.266700000000052e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:58.302" endtime="20201115 22:00:58.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.319" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.318" endtime="20201115 22:00:58.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.321" level="INFO">VALUE: [2.2721999999999326e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2694000000000186e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.266700000000052e-05, 2.2680000000000616e-05, 2.2611999999998245e-05, 2.272300000000227e-05, 2.2694000000000186e-05, 2.2694000000000186e-05, 2.2735999999998896e-05, 2.268100000000009e-05, 2.25969999999992e-05, 2.2694000000000186e-05, 2.2707999999999756e-05, 2.2749999999998466e-05, 2.268100000000009e-05, 2.2750000000001935e-05, 2.2721999999999326e-05, 2.272300000000227e-05, 2.266700000000052e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2762999999998562e-05, 2.2707999999999756e-05, 2.27229999999988e-05, 2.263900000000138e-05, 2.269499999999966e-05, 2.2735999999998896e-05, 2.268100000000009e-05, 2.2721999999999326e-05, 2.261100000000224e-05, 2.2707999999999756e-05, 2.2707999999996287e-05, 2.2722000000002796e-05, 2.269500000000313e-05, 2.2693999999996717e-05, 2.2680000000004086e-05, 2.268099999999662e-05, 2.2721999999995857e-05, 2.27090000000027e-05, 2.2693999999996717e-05, 2.2707999999996287e-05, 2.2722000000002796e-05, 2.268100000000356e-05]</msg>
<status status="PASS" starttime="20201115 22:00:58.320" endtime="20201115 22:00:58.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.315" endtime="20201115 22:00:58.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.325" endtime="20201115 22:00:58.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.328" endtime="20201115 22:00:58.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.326" endtime="20201115 22:00:58.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.323" endtime="20201115 22:00:58.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.948" endtime="20201115 22:00:58.349"></status>
</kw>
<msg timestamp="20201115 22:00:58.349" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.358" endtime="20201115 22:00:58.383"></status>
</kw>
<msg timestamp="20201115 22:00:58.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.357" endtime="20201115 22:00:58.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.386" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.384" endtime="20201115 22:00:58.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.387" endtime="20201115 22:00:58.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.354" endtime="20201115 22:00:58.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.352" endtime="20201115 22:00:58.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.396" endtime="20201115 22:00:58.683"></status>
</kw>
<msg timestamp="20201115 22:00:58.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021405375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021428069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.394" endtime="20201115 22:00:58.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021405375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021428069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.687" endtime="20201115 22:00:58.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.695" endtime="20201115 22:00:58.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.392" endtime="20201115 22:00:58.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.390" endtime="20201115 22:00:58.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.702" level="INFO">${RESULT} = [{'time': 0.021428069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2694000000000186e-05, 'source_diff': 2.2694000000000186e-05}, {'time': 0.021691903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:58.699" endtime="20201115 22:00:58.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.716" level="INFO">${OVERHEAD} = {'diff': [2.2694000000000186e-05, 2.270899999999923e-05, 2.270899999999923e-05, 2.27090000000027e-05, 2.268100000000009e-05, 2.269500000000313e-05, 2.2694000000000186e-05, 2.268100000000009e-05, 2.269...</msg>
<status status="PASS" starttime="20201115 22:00:58.703" endtime="20201115 22:00:58.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.721" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.719" endtime="20201115 22:00:58.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.723" level="INFO">VALUE: [2.2694000000000186e-05, 2.270899999999923e-05, 2.270899999999923e-05, 2.27090000000027e-05, 2.268100000000009e-05, 2.269500000000313e-05, 2.2694000000000186e-05, 2.268100000000009e-05, 2.2694000000000186e-05, 2.2735999999998896e-05, 2.269499999999966e-05, 2.2694000000000186e-05, 2.2707999999999756e-05, 2.2694000000000186e-05, 2.2708000000003226e-05, 2.2749999999998466e-05, 2.266700000000052e-05, 2.2694000000000186e-05, 2.2721999999999326e-05, 2.266700000000052e-05, 2.2694000000000186e-05, 2.269499999999966e-05, 2.2749999999998466e-05, 2.2694000000000186e-05, 2.269499999999966e-05, 2.2721999999999326e-05, 2.270899999999923e-05, 2.262500000000181e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.268100000000009e-05, 2.269499999999966e-05, 2.2694000000000186e-05, 2.269499999999966e-05, 2.2721999999999326e-05, 2.2777999999997606e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.27090000000027e-05, 2.269499999999619e-05, 2.2694000000003656e-05, 2.2721999999995857e-05, 2.2680000000004086e-05, 2.263899999999791e-05, 2.27090000000027e-05, 2.269500000000313e-05, 2.2707999999996287e-05, 2.269499999999619e-05, 2.2680000000004086e-05, 2.2694000000003656e-05]</msg>
<status status="PASS" starttime="20201115 22:00:58.722" endtime="20201115 22:00:58.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.717" endtime="20201115 22:00:58.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.727" endtime="20201115 22:00:58.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.730" endtime="20201115 22:00:58.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.729" endtime="20201115 22:00:58.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.725" endtime="20201115 22:00:58.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.350" endtime="20201115 22:00:58.751"></status>
</kw>
<msg timestamp="20201115 22:00:58.751" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.760" endtime="20201115 22:00:58.784"></status>
</kw>
<msg timestamp="20201115 22:00:58.785" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.758" endtime="20201115 22:00:58.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.787" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.786" endtime="20201115 22:00:58.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.788" endtime="20201115 22:00:58.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.756" endtime="20201115 22:00:58.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.754" endtime="20201115 22:00:58.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.797" endtime="20201115 22:00:59.084"></status>
</kw>
<msg timestamp="20201115 22:00:59.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021706694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.796" endtime="20201115 22:00:59.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021706694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.088" endtime="20201115 22:00:59.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.096" endtime="20201115 22:00:59.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.793" endtime="20201115 22:00:59.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.792" endtime="20201115 22:00:59.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.103" level="INFO">${RESULT} = [{'time': 0.021706694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2707999999999756e-05, 'source_diff': 2.2707999999999756e-05}, {'time': 0.021971139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:59.099" endtime="20201115 22:00:59.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.116" level="INFO">${OVERHEAD} = {'diff': [2.2707999999999756e-05, 2.269499999999966e-05, 2.2707999999999756e-05, 2.2694000000000186e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2707999999999756e-05, 2.2680000000000616e-05,...</msg>
<status status="PASS" starttime="20201115 22:00:59.104" endtime="20201115 22:00:59.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.121" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.120" endtime="20201115 22:00:59.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.123" level="INFO">VALUE: [2.2707999999999756e-05, 2.269499999999966e-05, 2.2707999999999756e-05, 2.2694000000000186e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2707999999999756e-05, 2.2680000000000616e-05, 2.2721999999999326e-05, 2.265300000000095e-05, 2.27229999999988e-05, 2.261099999999877e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2708000000003226e-05, 2.265300000000095e-05, 2.2680000000000616e-05, 2.265299999999748e-05, 2.268100000000009e-05, 2.2666000000001046e-05, 2.266700000000052e-05, 2.2694000000000186e-05, 2.2694000000000186e-05, 2.268100000000009e-05, 2.269500000000313e-05, 2.268100000000009e-05, 2.2722000000002796e-05, 2.265300000000095e-05, 2.2707999999999756e-05, 2.265299999999748e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.2693999999996717e-05, 2.2694000000000186e-05, 2.2721999999999326e-05, 2.269499999999966e-05, 2.2679999999997147e-05, 2.268099999999662e-05, 2.2597999999998675e-05, 2.265299999999748e-05, 2.2721999999995857e-05, 2.266699999999705e-05, 2.259700000000614e-05, 2.263899999999791e-05, 2.268099999999662e-05, 2.2680000000004086e-05, 2.265299999999748e-05, 2.268100000000356e-05, 2.2693999999996717e-05, 2.2680000000004086e-05]</msg>
<status status="PASS" starttime="20201115 22:00:59.122" endtime="20201115 22:00:59.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.117" endtime="20201115 22:00:59.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.127" endtime="20201115 22:00:59.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.130" endtime="20201115 22:00:59.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.129" endtime="20201115 22:00:59.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.125" endtime="20201115 22:00:59.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.752" endtime="20201115 22:00:59.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.139" endtime="20201115 22:00:59.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.138" endtime="20201115 22:00:59.152"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.154" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.163" endtime="20201115 22:00:59.187"></status>
</kw>
<msg timestamp="20201115 22:00:59.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.161" endtime="20201115 22:00:59.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.190" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.189" endtime="20201115 22:00:59.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.191" endtime="20201115 22:00:59.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.159" endtime="20201115 22:00:59.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.156" endtime="20201115 22:00:59.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.200" endtime="20201115 22:00:59.488"></status>
</kw>
<msg timestamp="20201115 22:00:59.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023220639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023243556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.199" endtime="20201115 22:00:59.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023220639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023243556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.493" endtime="20201115 22:00:59.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.501" endtime="20201115 22:00:59.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.196" endtime="20201115 22:00:59.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.194" endtime="20201115 22:00:59.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.507" level="INFO">${RESULT} = [{'time': 0.023243556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29169999999973e-05, 'source_diff': 2.29169999999973e-05}, {'time': 0.023534361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:59.504" endtime="20201115 22:00:59.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.521" level="INFO">${OVERHEAD} = {'diff': [2.29169999999973e-05, 2.288900000000163e-05, 2.2862000000001964e-05, 2.293100000000034e-05, 2.287499999999859e-05, 2.2862000000001964e-05, 2.290299999999773e-05, 2.2916000000001296e-05, 2.28...</msg>
<status status="PASS" starttime="20201115 22:00:59.508" endtime="20201115 22:00:59.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.525" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.524" endtime="20201115 22:00:59.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.528" level="INFO">VALUE: [2.29169999999973e-05, 2.288900000000163e-05, 2.2862000000001964e-05, 2.293100000000034e-05, 2.287499999999859e-05, 2.2862000000001964e-05, 2.290299999999773e-05, 2.2916000000001296e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.2916000000001296e-05, 2.29030000000012e-05, 2.284700000000292e-05, 2.288899999999816e-05, 2.29030000000012e-05, 2.287500000000206e-05, 2.287499999999859e-05, 2.290299999999773e-05, 2.291700000000077e-05, 2.288899999999816e-05, 2.294499999999991e-05, 2.291700000000077e-05, 2.288900000000163e-05, 2.2778000000001075e-05, 2.2902000000001727e-05, 2.286099999999902e-05, 2.286100000000249e-05, 2.291700000000077e-05, 2.29169999999973e-05, 2.29169999999973e-05, 2.2929999999997397e-05, 2.290299999999773e-05, 2.284699999999945e-05, 2.2971999999996107e-05, 2.291700000000424e-05, 2.2929999999997397e-05, 2.293099999999687e-05, 2.291700000000424e-05, 2.29169999999973e-05, 2.288899999999816e-05, 2.29169999999973e-05, 2.293100000000381e-05, 2.2930000000004336e-05, 2.290299999999773e-05, 2.2901999999998257e-05, 2.293100000000381e-05, 2.29169999999973e-05, 2.290299999999773e-05, 2.294500000000338e-05, 2.288899999999816e-05]</msg>
<status status="PASS" starttime="20201115 22:00:59.526" endtime="20201115 22:00:59.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.522" endtime="20201115 22:00:59.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.532" endtime="20201115 22:00:59.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.535" endtime="20201115 22:00:59.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.533" endtime="20201115 22:00:59.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.530" endtime="20201115 22:00:59.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.154" endtime="20201115 22:00:59.556"></status>
</kw>
<msg timestamp="20201115 22:00:59.556" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.565" endtime="20201115 22:00:59.594"></status>
</kw>
<msg timestamp="20201115 22:00:59.594" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.563" endtime="20201115 22:00:59.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.597" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.595" endtime="20201115 22:00:59.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.598" endtime="20201115 22:00:59.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.561" endtime="20201115 22:00:59.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.559" endtime="20201115 22:00:59.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.607" endtime="20201115 22:00:59.893"></status>
</kw>
<msg timestamp="20201115 22:00:59.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025645931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025668806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.605" endtime="20201115 22:00:59.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025645931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025668806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.897" endtime="20201115 22:00:59.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.905" endtime="20201115 22:00:59.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.603" endtime="20201115 22:00:59.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.601" endtime="20201115 22:00:59.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.912" level="INFO">${RESULT} = [{'time': 0.025668806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.287499999999859e-05, 'source_diff': 2.287499999999859e-05}, {'time': 0.025963389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:59.909" endtime="20201115 22:00:59.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.925" level="INFO">${OVERHEAD} = {'diff': [2.287499999999859e-05, 2.287499999999859e-05, 2.2806000000000215e-05, 2.288900000000163e-05, 2.287500000000206e-05, 2.286099999999902e-05, 2.2887999999998687e-05, 2.2930000000000866e-05, 2.2...</msg>
<status status="PASS" starttime="20201115 22:00:59.913" endtime="20201115 22:00:59.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.930" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.929" endtime="20201115 22:00:59.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.933" level="INFO">VALUE: [2.287499999999859e-05, 2.287499999999859e-05, 2.2806000000000215e-05, 2.288900000000163e-05, 2.287500000000206e-05, 2.286099999999902e-05, 2.2887999999998687e-05, 2.2930000000000866e-05, 2.29030000000012e-05, 2.295899999999948e-05, 2.284700000000292e-05, 2.290299999999773e-05, 2.2958000000000006e-05, 2.295899999999948e-05, 2.286099999999902e-05, 2.2848000000002394e-05, 2.2916000000001296e-05, 2.294500000000338e-05, 2.288900000000163e-05, 2.286099999999902e-05, 2.29169999999973e-05, 2.288899999999816e-05, 2.2901999999998257e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.2902000000005196e-05, 2.2944000000003906e-05, 2.293099999999687e-05, 2.29169999999973e-05, 2.288899999999816e-05, 2.29169999999973e-05, 2.287499999999859e-05, 2.2916000000004766e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.290299999999773e-05, 2.2901999999998257e-05, 2.290300000000467e-05, 2.2971999999996107e-05, 2.293099999999687e-05, 2.287499999999859e-05, 2.2929999999997397e-05, 2.290299999999773e-05, 2.29169999999973e-05, 2.293100000000381e-05, 2.286099999999902e-05, 2.2986000000002615e-05, 2.290299999999773e-05, 2.29169999999973e-05, 2.29169999999973e-05]</msg>
<status status="PASS" starttime="20201115 22:00:59.931" endtime="20201115 22:00:59.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.927" endtime="20201115 22:00:59.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.936" endtime="20201115 22:00:59.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.939" endtime="20201115 22:00:59.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.938" endtime="20201115 22:00:59.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.934" endtime="20201115 22:00:59.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.556" endtime="20201115 22:00:59.960"></status>
</kw>
<msg timestamp="20201115 22:00:59.960" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.969" endtime="20201115 22:00:59.995"></status>
</kw>
<msg timestamp="20201115 22:00:59.996" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.968" endtime="20201115 22:00:59.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.997" endtime="20201115 22:00:59.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.999" endtime="20201115 22:01:00.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.965" endtime="20201115 22:01:00.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.963" endtime="20201115 22:01:00.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.008" endtime="20201115 22:01:00.295"></status>
</kw>
<msg timestamp="20201115 22:01:00.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02301525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023038125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:00.007" endtime="20201115 22:01:00.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02301525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023038125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:00.299" endtime="20201115 22:01:00.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.307" endtime="20201115 22:01:00.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.004" endtime="20201115 22:01:00.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.002" endtime="20201115 22:01:00.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.314" level="INFO">${RESULT} = [{'time': 0.023038125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.287499999999859e-05, 'source_diff': 2.287499999999859e-05}, {'time': 0.023329736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:00.311" endtime="20201115 22:01:00.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.328" level="INFO">${OVERHEAD} = {'diff': [2.287499999999859e-05, 2.2930000000000866e-05, 2.286099999999902e-05, 2.288899999999816e-05, 2.287499999999859e-05, 2.293100000000034e-05, 2.293100000000034e-05, 2.29169999999973e-05, 2.2903...</msg>
<status status="PASS" starttime="20201115 22:01:00.315" endtime="20201115 22:01:00.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.333" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.332" endtime="20201115 22:01:00.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.335" level="INFO">VALUE: [2.287499999999859e-05, 2.2930000000000866e-05, 2.286099999999902e-05, 2.288899999999816e-05, 2.287499999999859e-05, 2.293100000000034e-05, 2.293100000000034e-05, 2.29169999999973e-05, 2.29030000000012e-05, 2.2930000000000866e-05, 2.2901999999998257e-05, 2.288900000000163e-05, 2.291700000000077e-05, 2.287500000000206e-05, 2.288900000000163e-05, 2.281900000000031e-05, 2.29030000000012e-05, 2.290299999999773e-05, 2.288900000000163e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.291700000000077e-05, 2.29030000000012e-05, 2.288899999999816e-05, 2.288900000000163e-05, 2.291700000000077e-05, 2.288900000000163e-05, 2.29030000000012e-05, 2.2944000000000436e-05, 2.287499999999859e-05, 2.2972000000003046e-05, 2.284699999999945e-05, 2.287499999999859e-05, 2.293099999999687e-05, 2.28890000000051e-05, 2.290299999999773e-05, 2.2833999999999355e-05, 2.290299999999773e-05, 2.29169999999973e-05, 2.288899999999816e-05, 2.2806000000000215e-05, 2.287500000000553e-05, 2.2901999999998257e-05, 2.284699999999945e-05, 2.293099999999687e-05, 2.28890000000051e-05, 2.287499999999859e-05, 2.2930000000004336e-05, 2.295899999999601e-05, 2.284699999999945e-05]</msg>
<status status="PASS" starttime="20201115 22:01:00.334" endtime="20201115 22:01:00.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.329" endtime="20201115 22:01:00.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.338" endtime="20201115 22:01:00.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.342" endtime="20201115 22:01:00.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.340" endtime="20201115 22:01:00.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.337" endtime="20201115 22:01:00.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.961" endtime="20201115 22:01:00.362"></status>
</kw>
<msg timestamp="20201115 22:01:00.363" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.372" endtime="20201115 22:01:00.397"></status>
</kw>
<msg timestamp="20201115 22:01:00.397" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.370" endtime="20201115 22:01:00.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.398" endtime="20201115 22:01:00.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.401" endtime="20201115 22:01:00.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.367" endtime="20201115 22:01:00.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.365" endtime="20201115 22:01:00.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.410" endtime="20201115 22:01:00.696"></status>
</kw>
<msg timestamp="20201115 22:01:00.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022719167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022742069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.408" endtime="20201115 22:01:00.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022719167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022742069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.701" endtime="20201115 22:01:00.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.709" endtime="20201115 22:01:00.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.406" endtime="20201115 22:01:00.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.404" endtime="20201115 22:01:00.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.716" level="INFO">${RESULT} = [{'time': 0.022742069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2902000000001727e-05, 'source_diff': 2.2902000000001727e-05}, {'time': 0.023033444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:00.712" endtime="20201115 22:01:00.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.729" level="INFO">${OVERHEAD} = {'diff': [2.2902000000001727e-05, 2.2916000000001296e-05, 2.287500000000206e-05, 2.29030000000012e-05, 2.294499999999991e-05, 2.29169999999973e-05, 2.288900000000163e-05, 2.287500000000206e-05, 2.2888...</msg>
<status status="PASS" starttime="20201115 22:01:00.717" endtime="20201115 22:01:00.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.734" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.733" endtime="20201115 22:01:00.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.736" level="INFO">VALUE: [2.2902000000001727e-05, 2.2916000000001296e-05, 2.287500000000206e-05, 2.29030000000012e-05, 2.294499999999991e-05, 2.29169999999973e-05, 2.288900000000163e-05, 2.287500000000206e-05, 2.288899999999816e-05, 2.291700000000077e-05, 2.2848000000002394e-05, 2.29030000000012e-05, 2.287499999999859e-05, 2.2944000000000436e-05, 2.2915999999997827e-05, 2.2958000000000006e-05, 2.29030000000012e-05, 2.2901999999998257e-05, 2.288900000000163e-05, 2.286100000000249e-05, 2.2915999999997827e-05, 2.2958000000000006e-05, 2.291700000000077e-05, 2.2915999999997827e-05, 2.2944000000000436e-05, 2.287499999999859e-05, 2.291700000000077e-05, 2.286099999999902e-05, 2.2930000000000866e-05, 2.2901999999998257e-05, 2.288899999999816e-05, 2.290300000000467e-05, 2.293099999999687e-05, 2.29169999999973e-05, 2.290300000000467e-05, 2.288899999999816e-05, 2.290299999999773e-05, 2.2929999999997397e-05, 2.288899999999816e-05, 2.29169999999973e-05, 2.287499999999859e-05, 2.288899999999816e-05, 2.28890000000051e-05, 2.2916000000004766e-05, 2.286099999999902e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.291700000000424e-05, 2.2847999999998925e-05, 2.290299999999773e-05]</msg>
<status status="PASS" starttime="20201115 22:01:00.735" endtime="20201115 22:01:00.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.730" endtime="20201115 22:01:00.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.739" endtime="20201115 22:01:00.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.743" endtime="20201115 22:01:00.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.741" endtime="20201115 22:01:00.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.738" endtime="20201115 22:01:00.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.363" endtime="20201115 22:01:00.764"></status>
</kw>
<msg timestamp="20201115 22:01:00.764" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.773" endtime="20201115 22:01:00.799"></status>
</kw>
<msg timestamp="20201115 22:01:00.800" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.771" endtime="20201115 22:01:00.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.802" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.801" endtime="20201115 22:01:00.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.803" endtime="20201115 22:01:00.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.769" endtime="20201115 22:01:00.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.766" endtime="20201115 22:01:00.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.812" endtime="20201115 22:01:01.100"></status>
</kw>
<msg timestamp="20201115 22:01:01.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023481569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023504528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.811" endtime="20201115 22:01:01.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023481569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023504528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.104" endtime="20201115 22:01:01.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.113" endtime="20201115 22:01:01.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.808" endtime="20201115 22:01:01.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.807" endtime="20201115 22:01:01.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.119" level="INFO">${RESULT} = [{'time': 0.023504528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.295899999999948e-05, 'source_diff': 2.295899999999948e-05}, {'time': 0.023793514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.116" endtime="20201115 22:01:01.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.133" level="INFO">${OVERHEAD} = {'diff': [2.295899999999948e-05, 2.291700000000077e-05, 2.288900000000163e-05, 2.291700000000077e-05, 2.2915999999997827e-05, 2.287499999999859e-05, 2.29030000000012e-05, 2.2916000000001296e-05, 2.290...</msg>
<status status="PASS" starttime="20201115 22:01:01.120" endtime="20201115 22:01:01.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.137" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.136" endtime="20201115 22:01:01.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.140" level="INFO">VALUE: [2.295899999999948e-05, 2.291700000000077e-05, 2.288900000000163e-05, 2.291700000000077e-05, 2.2915999999997827e-05, 2.287499999999859e-05, 2.29030000000012e-05, 2.2916000000001296e-05, 2.29030000000012e-05, 2.291700000000077e-05, 2.2833999999999355e-05, 2.29030000000012e-05, 2.288899999999816e-05, 2.2916000000001296e-05, 2.295900000000295e-05, 2.29030000000012e-05, 2.288900000000163e-05, 2.290299999999773e-05, 2.2930000000000866e-05, 2.295899999999948e-05, 2.2930000000000866e-05, 2.29030000000012e-05, 2.29169999999973e-05, 2.288900000000163e-05, 2.2916000000001296e-05, 2.29030000000012e-05, 2.2847999999998925e-05, 2.283299999999988e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.291700000000424e-05, 2.287500000000553e-05, 2.29169999999973e-05, 2.29169999999973e-05, 2.290299999999773e-05, 2.288899999999816e-05, 2.284699999999945e-05, 2.281900000000031e-05, 2.2915999999997827e-05, 2.2944000000003906e-05, 2.287499999999859e-05, 2.29169999999973e-05, 2.290299999999773e-05, 2.288899999999816e-05, 2.2902000000005196e-05, 2.283299999999988e-05, 2.294499999999644e-05, 2.2847999999998925e-05, 2.2958000000003476e-05, 2.293100000000381e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.139" endtime="20201115 22:01:01.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.134" endtime="20201115 22:01:01.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.143" endtime="20201115 22:01:01.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.147" endtime="20201115 22:01:01.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.145" endtime="20201115 22:01:01.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.142" endtime="20201115 22:01:01.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.764" endtime="20201115 22:01:01.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.153" endtime="20201115 22:01:01.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.152" endtime="20201115 22:01:01.168"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.170" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.179" endtime="20201115 22:01:01.211"></status>
</kw>
<msg timestamp="20201115 22:01:01.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.177" endtime="20201115 22:01:01.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.214" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.212" endtime="20201115 22:01:01.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.215" endtime="20201115 22:01:01.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.175" endtime="20201115 22:01:01.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.172" endtime="20201115 22:01:01.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.224" endtime="20201115 22:01:01.513"></status>
</kw>
<msg timestamp="20201115 22:01:01.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026814611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026837806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.223" endtime="20201115 22:01:01.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026814611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026837806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.518" endtime="20201115 22:01:01.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.530" endtime="20201115 22:01:01.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.220" endtime="20201115 22:01:01.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.218" endtime="20201115 22:01:01.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.539" level="INFO">${RESULT} = [{'time': 0.026837806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319500000000016e-05, 'source_diff': 2.319500000000016e-05}, {'time': 0.02715825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:01.534" endtime="20201115 22:01:01.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.555" level="INFO">${OVERHEAD} = {'diff': [2.319500000000016e-05, 2.311099999999927e-05, 2.3083999999999605e-05, 2.308300000000013e-05, 2.312499999999884e-05, 2.3070000000000035e-05, 2.311099999999927e-05, 2.313900000000188e-05, 2.31...</msg>
<status status="PASS" starttime="20201115 22:01:01.541" endtime="20201115 22:01:01.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.560" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.559" endtime="20201115 22:01:01.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.563" level="INFO">VALUE: [2.319500000000016e-05, 2.311099999999927e-05, 2.3083999999999605e-05, 2.308300000000013e-05, 2.312499999999884e-05, 2.3070000000000035e-05, 2.311099999999927e-05, 2.313900000000188e-05, 2.312499999999884e-05, 2.312499999999884e-05, 2.3056000000000465e-05, 2.312499999999884e-05, 2.312499999999884e-05, 2.315300000000145e-05, 2.311099999999927e-05, 2.3165999999998077e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.312500000000578e-05, 2.3056000000000465e-05, 2.3138000000005876e-05, 2.3068999999993622e-05, 2.3056000000000465e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.312499999999884e-05, 2.312499999999884e-05, 2.30969999999997e-05, 2.3111999999998745e-05, 2.3070000000000035e-05, 2.312499999999884e-05, 2.313899999999841e-05, 2.30969999999997e-05, 2.3056000000000465e-05, 2.313899999999841e-05, 2.311099999999927e-05, 2.301300000000228e-05, 2.30969999999997e-05, 2.312499999999884e-05, 2.308300000000013e-05, 2.308300000000013e-05, 2.312499999999884e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.32090000000032e-05, 2.316700000000449e-05, 2.316699999999755e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.561" endtime="20201115 22:01:01.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.556" endtime="20201115 22:01:01.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.566" endtime="20201115 22:01:01.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.570" endtime="20201115 22:01:01.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.568" endtime="20201115 22:01:01.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.564" endtime="20201115 22:01:01.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.170" endtime="20201115 22:01:01.591"></status>
</kw>
<msg timestamp="20201115 22:01:01.591" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.601" endtime="20201115 22:01:01.632"></status>
</kw>
<msg timestamp="20201115 22:01:01.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.599" endtime="20201115 22:01:01.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.634" endtime="20201115 22:01:01.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.637" endtime="20201115 22:01:01.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.596" endtime="20201115 22:01:01.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.594" endtime="20201115 22:01:01.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.647" endtime="20201115 22:01:01.934"></status>
</kw>
<msg timestamp="20201115 22:01:01.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025668972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025692069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.645" endtime="20201115 22:01:01.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025668972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025692069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.939" endtime="20201115 22:01:01.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.947" endtime="20201115 22:01:01.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.642" endtime="20201115 22:01:01.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.641" endtime="20201115 22:01:01.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.954" level="INFO">${RESULT} = [{'time': 0.025692069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30969999999997e-05, 'source_diff': 2.30969999999997e-05}, {'time': 0.026014347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:01.950" endtime="20201115 22:01:01.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.968" level="INFO">${OVERHEAD} = {'diff': [2.30969999999997e-05, 2.312499999999884e-05, 2.311099999999927e-05, 2.312499999999884e-05, 2.311099999999927e-05, 2.313900000000188e-05, 2.3151999999998507e-05, 2.312499999999884e-05, 2.3110...</msg>
<status status="PASS" starttime="20201115 22:01:01.955" endtime="20201115 22:01:01.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.973" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.971" endtime="20201115 22:01:01.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.975" level="INFO">VALUE: [2.30969999999997e-05, 2.312499999999884e-05, 2.311099999999927e-05, 2.312499999999884e-05, 2.311099999999927e-05, 2.313900000000188e-05, 2.3151999999998507e-05, 2.312499999999884e-05, 2.311099999999927e-05, 2.313899999999841e-05, 2.3056000000000465e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.3070000000000035e-05, 2.311099999999927e-05, 2.316700000000102e-05, 2.3042000000000895e-05, 2.306900000000056e-05, 2.312499999999884e-05, 2.313899999999841e-05, 2.316699999999755e-05, 2.313899999999841e-05, 2.30969999999997e-05, 2.3166000000005016e-05, 2.3070000000000035e-05, 2.312500000000578e-05, 2.30969999999997e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.311100000000621e-05, 2.311099999999927e-05, 2.313899999999841e-05, 2.306900000000056e-05, 2.312499999999884e-05, 2.3070000000000035e-05, 2.312499999999884e-05, 2.3097999999999175e-05, 2.30969999999997e-05, 2.3151999999998507e-05, 2.3070000000000035e-05, 2.311099999999927e-05, 2.312499999999884e-05, 2.312499999999884e-05, 2.313900000000535e-05, 2.3111999999998745e-05, 2.312500000000578e-05, 2.306900000000056e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.974" endtime="20201115 22:01:01.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.969" endtime="20201115 22:01:01.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.978" endtime="20201115 22:01:01.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.982" endtime="20201115 22:01:02.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.980" endtime="20201115 22:01:02.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.977" endtime="20201115 22:01:02.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.591" endtime="20201115 22:01:02.003"></status>
</kw>
<msg timestamp="20201115 22:01:02.003" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.013" endtime="20201115 22:01:02.050"></status>
</kw>
<msg timestamp="20201115 22:01:02.050" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.011" endtime="20201115 22:01:02.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.053" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.051" endtime="20201115 22:01:02.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.054" endtime="20201115 22:01:02.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.008" endtime="20201115 22:01:02.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.006" endtime="20201115 22:01:02.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.063" endtime="20201115 22:01:02.373"></status>
</kw>
<msg timestamp="20201115 22:01:02.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025349167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025372333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.062" endtime="20201115 22:01:02.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025349167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025372333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.377" endtime="20201115 22:01:02.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.385" endtime="20201115 22:01:02.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.059" endtime="20201115 22:01:02.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.057" endtime="20201115 22:01:02.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.392" level="INFO">${RESULT} = [{'time': 0.025372333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3166000000001546e-05, 'source_diff': 2.3166000000001546e-05}, {'time': 0.025692403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:02.389" endtime="20201115 22:01:02.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.406" level="INFO">${OVERHEAD} = {'diff': [2.3166000000001546e-05, 2.313899999999841e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.3097999999999175e-05, 2.3083999999999605e-05, 2.313899999999841e-05, 2.3097999999999175e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:01:02.393" endtime="20201115 22:01:02.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.411" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.410" endtime="20201115 22:01:02.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.414" level="INFO">VALUE: [2.3166000000001546e-05, 2.313899999999841e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.3097999999999175e-05, 2.3083999999999605e-05, 2.313899999999841e-05, 2.3097999999999175e-05, 2.312500000000231e-05, 2.3194000000000686e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.312500000000231e-05, 2.3097999999999175e-05, 2.3070000000000035e-05, 2.312500000000231e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.3111999999998745e-05, 2.309700000000664e-05, 2.309700000000664e-05, 2.3137999999998937e-05, 2.312500000000578e-05, 2.306900000000056e-05, 2.311100000000621e-05, 2.313899999999841e-05, 2.308300000000013e-05, 2.311099999999927e-05, 2.311100000000621e-05, 2.2999999999995246e-05, 2.311099999999927e-05, 2.3097999999999175e-05, 2.312499999999884e-05, 2.315300000000492e-05, 2.316699999999755e-05, 2.306900000000056e-05, 2.308300000000013e-05, 2.313899999999841e-05, 2.312499999999884e-05, 2.312499999999884e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.311099999999927e-05, 2.312499999999884e-05, 2.311099999999927e-05, 2.311100000000621e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.316699999999755e-05, 2.312499999999884e-05]</msg>
<status status="PASS" starttime="20201115 22:01:02.412" endtime="20201115 22:01:02.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.407" endtime="20201115 22:01:02.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.417" endtime="20201115 22:01:02.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.420" endtime="20201115 22:01:02.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.419" endtime="20201115 22:01:02.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.415" endtime="20201115 22:01:02.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.004" endtime="20201115 22:01:02.441"></status>
</kw>
<msg timestamp="20201115 22:01:02.448" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.458" endtime="20201115 22:01:02.487"></status>
</kw>
<msg timestamp="20201115 22:01:02.487" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.456" endtime="20201115 22:01:02.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.490" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.488" endtime="20201115 22:01:02.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.491" endtime="20201115 22:01:02.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.454" endtime="20201115 22:01:02.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.451" endtime="20201115 22:01:02.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.501" endtime="20201115 22:01:02.789"></status>
</kw>
<msg timestamp="20201115 22:01:02.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028978181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029001319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.499" endtime="20201115 22:01:02.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028978181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029001319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.794" endtime="20201115 22:01:02.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.802" endtime="20201115 22:01:02.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.496" endtime="20201115 22:01:02.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.494" endtime="20201115 22:01:02.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.809" level="INFO">${RESULT} = [{'time': 0.029001319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3138000000002407e-05, 'source_diff': 2.3138000000002407e-05}, {'time': 0.029326361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:02.806" endtime="20201115 22:01:02.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.823" level="INFO">${OVERHEAD} = {'diff': [2.3138000000002407e-05, 2.312499999999884e-05, 2.3083999999999605e-05, 2.3097999999999175e-05, 2.30969999999997e-05, 2.312500000000231e-05, 2.3042000000000895e-05, 2.311100000000274e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:01:02.810" endtime="20201115 22:01:02.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.828" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.827" endtime="20201115 22:01:02.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.830" level="INFO">VALUE: [2.3138000000002407e-05, 2.312499999999884e-05, 2.3083999999999605e-05, 2.3097999999999175e-05, 2.30969999999997e-05, 2.312500000000231e-05, 2.3042000000000895e-05, 2.311100000000274e-05, 2.312499999999884e-05, 2.311099999999927e-05, 2.3083999999999605e-05, 2.311099999999927e-05, 2.308300000000013e-05, 2.312499999999884e-05, 2.311099999999927e-05, 2.30969999999997e-05, 2.312499999999884e-05, 2.3083999999999605e-05, 2.312500000000578e-05, 2.320899999999626e-05, 2.311099999999927e-05, 2.312499999999884e-05, 2.312499999999884e-05, 2.313899999999841e-05, 2.313900000000535e-05, 2.3111999999998745e-05, 2.313899999999841e-05, 2.311099999999927e-05, 2.305500000000099e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.312500000000578e-05, 2.312499999999884e-05, 2.308300000000013e-05, 2.315299999999798e-05, 2.312499999999884e-05, 2.306900000000056e-05, 2.30969999999997e-05, 2.3056000000000465e-05, 2.3111999999998745e-05, 2.312499999999884e-05, 2.312500000000578e-05, 2.312500000000578e-05, 2.30969999999997e-05, 2.312499999999884e-05, 2.3056000000000465e-05, 2.312500000000578e-05, 2.313899999999841e-05, 2.3111999999998745e-05, 2.3070000000000035e-05]</msg>
<status status="PASS" starttime="20201115 22:01:02.829" endtime="20201115 22:01:02.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.824" endtime="20201115 22:01:02.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.833" endtime="20201115 22:01:02.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.838" endtime="20201115 22:01:02.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.836" endtime="20201115 22:01:02.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.832" endtime="20201115 22:01:02.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.449" endtime="20201115 22:01:02.858"></status>
</kw>
<msg timestamp="20201115 22:01:02.859" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.868" endtime="20201115 22:01:02.898"></status>
</kw>
<msg timestamp="20201115 22:01:02.899" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.866" endtime="20201115 22:01:02.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.900" endtime="20201115 22:01:02.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.903" endtime="20201115 22:01:02.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.863" endtime="20201115 22:01:02.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.861" endtime="20201115 22:01:02.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.912" endtime="20201115 22:01:03.199"></status>
</kw>
<msg timestamp="20201115 22:01:03.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023822556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023845667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.910" endtime="20201115 22:01:03.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023822556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023845667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.204" endtime="20201115 22:01:03.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.212" endtime="20201115 22:01:03.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.908" endtime="20201115 22:01:03.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.906" endtime="20201115 22:01:03.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.219" level="INFO">${RESULT} = [{'time': 0.023845667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.311099999999927e-05, 'source_diff': 2.311099999999927e-05}, {'time': 0.024170639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:03.215" endtime="20201115 22:01:03.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.233" level="INFO">${OVERHEAD} = {'diff': [2.311099999999927e-05, 2.3070000000000035e-05, 2.313900000000188e-05, 2.313899999999841e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.308300000000013e-05, 2.312500000000231e-05, 2.3181...</msg>
<status status="PASS" starttime="20201115 22:01:03.220" endtime="20201115 22:01:03.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.237" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.236" endtime="20201115 22:01:03.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.240" level="INFO">VALUE: [2.311099999999927e-05, 2.3070000000000035e-05, 2.313900000000188e-05, 2.313899999999841e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.308300000000013e-05, 2.312500000000231e-05, 2.318100000000059e-05, 2.311099999999927e-05, 2.311100000000274e-05, 2.3111999999998745e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.311099999999927e-05, 2.3151999999998507e-05, 2.3054999999997522e-05, 2.3056000000000465e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.3068999999997092e-05, 2.308300000000013e-05, 2.3056000000000465e-05, 2.306900000000056e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.3042000000000895e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.3084000000006544e-05, 2.311099999999927e-05, 2.315299999999798e-05, 2.30969999999997e-05, 2.305500000000099e-05, 2.311099999999927e-05, 2.3083999999999605e-05, 2.311099999999927e-05, 2.315299999999798e-05, 2.305500000000099e-05, 2.306900000000056e-05, 2.3056000000000465e-05, 2.30969999999997e-05, 2.30969999999997e-05, 2.3083999999999605e-05, 2.305500000000099e-05, 2.3098000000006114e-05, 2.3165999999998077e-05, 2.313899999999841e-05, 2.313899999999841e-05]</msg>
<status status="PASS" starttime="20201115 22:01:03.238" endtime="20201115 22:01:03.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.234" endtime="20201115 22:01:03.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.244" endtime="20201115 22:01:03.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.247" endtime="20201115 22:01:03.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.246" endtime="20201115 22:01:03.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.242" endtime="20201115 22:01:03.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.859" endtime="20201115 22:01:03.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.169" endtime="20201115 22:01:03.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.168" endtime="20201115 22:01:03.269"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.271" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.280" endtime="20201115 22:01:03.312"></status>
</kw>
<msg timestamp="20201115 22:01:03.312" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.279" endtime="20201115 22:01:03.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.313" endtime="20201115 22:01:03.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.316" endtime="20201115 22:01:03.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.276" endtime="20201115 22:01:03.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.274" endtime="20201115 22:01:03.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.325" endtime="20201115 22:01:03.612"></status>
</kw>
<msg timestamp="20201115 22:01:03.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02605825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026081597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:03.324" endtime="20201115 22:01:03.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02605825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026081597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:03.617" endtime="20201115 22:01:03.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.625" endtime="20201115 22:01:03.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.321" endtime="20201115 22:01:03.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.319" endtime="20201115 22:01:03.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.633" level="INFO">${RESULT} = [{'time': 0.026081597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.334699999999995e-05, 'source_diff': 2.334699999999995e-05}, {'time': 0.026433736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:03.629" endtime="20201115 22:01:03.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.647" level="INFO">${OVERHEAD} = {'diff': [2.334699999999995e-05, 2.331900000000081e-05, 2.330500000000124e-05, 2.331900000000081e-05, 2.3320000000000285e-05, 2.333300000000038e-05, 2.3278000000001575e-05, 2.3318999999997342e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:01:03.634" endtime="20201115 22:01:03.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.652" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.651" endtime="20201115 22:01:03.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.655" level="INFO">VALUE: [2.334699999999995e-05, 2.331900000000081e-05, 2.330500000000124e-05, 2.331900000000081e-05, 2.3320000000000285e-05, 2.333300000000038e-05, 2.3278000000001575e-05, 2.3318999999997342e-05, 2.3334000000003324e-05, 2.3333999999999855e-05, 2.336099999999952e-05, 2.3333999999999855e-05, 2.3249999999998966e-05, 2.331900000000081e-05, 2.333300000000038e-05, 2.3306000000000715e-05, 2.3320000000000285e-05, 2.334699999999995e-05, 2.334699999999995e-05, 2.334699999999995e-05, 2.3278000000001575e-05, 2.333300000000038e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.3250000000002435e-05, 2.330500000000124e-05, 2.3278000000001575e-05, 2.3292000000001145e-05, 2.331900000000081e-05, 2.3305999999993776e-05, 2.333300000000038e-05, 2.3332999999993442e-05, 2.3306000000000715e-05, 2.331900000000081e-05, 2.3292000000001145e-05, 2.3320000000000285e-05, 2.3332999999993442e-05, 2.3292000000001145e-05, 2.333300000000038e-05, 2.3320000000000285e-05, 2.331900000000081e-05, 2.331900000000081e-05, 2.333300000000038e-05, 2.3333999999999855e-05, 2.3291999999994206e-05, 2.3278000000001575e-05, 2.3292000000001145e-05, 2.3278000000001575e-05, 2.333300000000038e-05, 2.337499999999909e-05]</msg>
<status status="PASS" starttime="20201115 22:01:03.653" endtime="20201115 22:01:03.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.648" endtime="20201115 22:01:03.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.659" endtime="20201115 22:01:03.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.662" endtime="20201115 22:01:03.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.661" endtime="20201115 22:01:03.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.657" endtime="20201115 22:01:03.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.272" endtime="20201115 22:01:03.683"></status>
</kw>
<msg timestamp="20201115 22:01:03.683" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.693" endtime="20201115 22:01:03.723"></status>
</kw>
<msg timestamp="20201115 22:01:03.724" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.691" endtime="20201115 22:01:03.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.726" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.725" endtime="20201115 22:01:03.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.727" endtime="20201115 22:01:03.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.688" endtime="20201115 22:01:03.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.686" endtime="20201115 22:01:03.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.737" endtime="20201115 22:01:04.024"></status>
</kw>
<msg timestamp="20201115 22:01:04.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023162417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023185764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.735" endtime="20201115 22:01:04.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023162417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023185764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.029" endtime="20201115 22:01:04.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.037" endtime="20201115 22:01:04.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.733" endtime="20201115 22:01:04.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.731" endtime="20201115 22:01:04.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.044" level="INFO">${RESULT} = [{'time': 0.023185764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.334699999999995e-05, 'source_diff': 2.334699999999995e-05}, {'time': 0.023539278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:04.040" endtime="20201115 22:01:04.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.058" level="INFO">${OVERHEAD} = {'diff': [2.334699999999995e-05, 2.3306000000000715e-05, 2.331900000000081e-05, 2.3290999999998202e-05, 2.3320000000000285e-05, 2.334699999999995e-05, 2.3306000000000715e-05, 2.3306000000000715e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:04.045" endtime="20201115 22:01:04.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.063" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.062" endtime="20201115 22:01:04.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.066" level="INFO">VALUE: [2.334699999999995e-05, 2.3306000000000715e-05, 2.331900000000081e-05, 2.3290999999998202e-05, 2.3320000000000285e-05, 2.334699999999995e-05, 2.3306000000000715e-05, 2.3306000000000715e-05, 2.3304999999997772e-05, 2.333300000000038e-05, 2.3304999999997772e-05, 2.3290999999998202e-05, 2.331900000000081e-05, 2.333300000000038e-05, 2.336100000000299e-05, 2.3278000000001575e-05, 2.3276999999998632e-05, 2.331900000000081e-05, 2.333300000000038e-05, 2.330500000000124e-05, 2.333300000000038e-05, 2.331900000000081e-05, 2.333300000000038e-05, 2.340299999999823e-05, 2.3333999999999855e-05, 2.3306000000000715e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.3318999999993872e-05, 2.336099999999952e-05, 2.334699999999995e-05, 2.3292000000001145e-05, 2.3320000000000285e-05, 2.336099999999952e-05, 2.3235999999995927e-05, 2.333300000000038e-05, 2.3332999999993442e-05, 2.3278000000001575e-05, 2.331900000000081e-05, 2.3332999999993442e-05, 2.334699999999995e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.334699999999995e-05, 2.32770000000021e-05, 2.3208000000003726e-05, 2.3278000000001575e-05, 2.331900000000081e-05, 2.3235999999995927e-05, 2.333300000000038e-05]</msg>
<status status="PASS" starttime="20201115 22:01:04.064" endtime="20201115 22:01:04.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.059" endtime="20201115 22:01:04.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.069" endtime="20201115 22:01:04.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.072" endtime="20201115 22:01:04.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.071" endtime="20201115 22:01:04.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.067" endtime="20201115 22:01:04.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.684" endtime="20201115 22:01:04.093"></status>
</kw>
<msg timestamp="20201115 22:01:04.094" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.103" endtime="20201115 22:01:04.139"></status>
</kw>
<msg timestamp="20201115 22:01:04.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.101" endtime="20201115 22:01:04.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.141" endtime="20201115 22:01:04.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.144" endtime="20201115 22:01:04.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.098" endtime="20201115 22:01:04.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.096" endtime="20201115 22:01:04.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.153" endtime="20201115 22:01:04.441"></status>
</kw>
<msg timestamp="20201115 22:01:04.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024877778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024901056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.152" endtime="20201115 22:01:04.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024877778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024901056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.445" endtime="20201115 22:01:04.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.454" endtime="20201115 22:01:04.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.149" endtime="20201115 22:01:04.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.147" endtime="20201115 22:01:04.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.461" level="INFO">${RESULT} = [{'time': 0.024901056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3278000000001575e-05, 'source_diff': 2.3278000000001575e-05}, {'time': 0.025252208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:04.457" endtime="20201115 22:01:04.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.475" level="INFO">${OVERHEAD} = {'diff': [2.3278000000001575e-05, 2.336100000000299e-05, 2.334699999999995e-05, 2.338899999999866e-05, 2.336099999999952e-05, 2.3305999999997246e-05, 2.3291999999997676e-05, 2.334699999999995e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:01:04.462" endtime="20201115 22:01:04.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.480" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.479" endtime="20201115 22:01:04.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.482" level="INFO">VALUE: [2.3278000000001575e-05, 2.336100000000299e-05, 2.334699999999995e-05, 2.338899999999866e-05, 2.336099999999952e-05, 2.3305999999997246e-05, 2.3291999999997676e-05, 2.334699999999995e-05, 2.333300000000038e-05, 2.3333999999999855e-05, 2.3290999999998202e-05, 2.3277999999998106e-05, 2.330500000000124e-05, 2.3292000000001145e-05, 2.331900000000081e-05, 2.3304999999997772e-05, 2.3278000000001575e-05, 2.331900000000081e-05, 2.3306000000000715e-05, 2.330500000000124e-05, 2.329100000000167e-05, 2.3320000000000285e-05, 2.3320000000000285e-05, 2.333300000000038e-05, 2.337499999999909e-05, 2.333300000000038e-05, 2.3320000000000285e-05, 2.3278000000001575e-05, 2.333300000000038e-05, 2.3333999999999855e-05, 2.336099999999952e-05, 2.334699999999995e-05, 2.3264000000002005e-05, 2.333300000000038e-05, 2.334699999999995e-05, 2.3361999999998995e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.3304999999994302e-05, 2.3291999999994206e-05, 2.334699999999995e-05, 2.3347999999999425e-05, 2.3292000000001145e-05, 2.331900000000081e-05, 2.333300000000038e-05, 2.331900000000081e-05, 2.3333999999999855e-05, 2.333300000000038e-05, 2.329100000000167e-05, 2.333300000000038e-05]</msg>
<status status="PASS" starttime="20201115 22:01:04.481" endtime="20201115 22:01:04.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.476" endtime="20201115 22:01:04.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.486" endtime="20201115 22:01:04.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.489" endtime="20201115 22:01:04.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.488" endtime="20201115 22:01:04.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.484" endtime="20201115 22:01:04.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.094" endtime="20201115 22:01:04.510"></status>
</kw>
<msg timestamp="20201115 22:01:04.510" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.519" endtime="20201115 22:01:04.553"></status>
</kw>
<msg timestamp="20201115 22:01:04.553" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.518" endtime="20201115 22:01:04.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.554" endtime="20201115 22:01:04.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.557" endtime="20201115 22:01:04.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.515" endtime="20201115 22:01:04.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.513" endtime="20201115 22:01:04.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.566" endtime="20201115 22:01:04.853"></status>
</kw>
<msg timestamp="20201115 22:01:04.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025078125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025101444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.565" endtime="20201115 22:01:04.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025078125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025101444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.858" endtime="20201115 22:01:04.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.866" endtime="20201115 22:01:04.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.562" endtime="20201115 22:01:04.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.560" endtime="20201115 22:01:04.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.873" level="INFO">${RESULT} = [{'time': 0.025101444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.331900000000081e-05, 'source_diff': 2.331900000000081e-05}, {'time': 0.025454069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:04.870" endtime="20201115 22:01:04.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.887" level="INFO">${OVERHEAD} = {'diff': [2.331900000000081e-05, 2.331900000000081e-05, 2.3333999999999855e-05, 2.326300000000253e-05, 2.3263999999998536e-05, 2.330500000000124e-05, 2.334699999999995e-05, 2.3320000000000285e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:01:04.874" endtime="20201115 22:01:04.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.892" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.891" endtime="20201115 22:01:04.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.894" level="INFO">VALUE: [2.331900000000081e-05, 2.331900000000081e-05, 2.3333999999999855e-05, 2.326300000000253e-05, 2.3263999999998536e-05, 2.330500000000124e-05, 2.334699999999995e-05, 2.3320000000000285e-05, 2.3277999999998106e-05, 2.3276999999998632e-05, 2.3305999999997246e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.331900000000081e-05, 2.3263999999998536e-05, 2.3318999999997342e-05, 2.3290999999994733e-05, 2.3292000000001145e-05, 2.330500000000124e-05, 2.3292000000001145e-05, 2.338899999999866e-05, 2.3347999999999425e-05, 2.3320000000000285e-05, 2.338899999999866e-05, 2.330500000000124e-05, 2.3306000000000715e-05, 2.3250000000002435e-05, 2.333300000000038e-05, 2.3306000000000715e-05, 2.3306000000000715e-05, 2.3306000000000715e-05, 2.3235999999995927e-05, 2.3292000000001145e-05, 2.333300000000038e-05, 2.3292000000001145e-05, 2.3249999999995496e-05, 2.3320000000000285e-05, 2.333300000000038e-05, 2.3278000000001575e-05, 2.333300000000038e-05, 2.3333999999999855e-05, 2.333300000000038e-05, 2.3347999999999425e-05, 2.330500000000124e-05, 2.331900000000081e-05, 2.3318999999993872e-05, 2.333300000000038e-05, 2.3278000000001575e-05]</msg>
<status status="PASS" starttime="20201115 22:01:04.893" endtime="20201115 22:01:04.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.888" endtime="20201115 22:01:04.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.898" endtime="20201115 22:01:04.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.901" endtime="20201115 22:01:04.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.900" endtime="20201115 22:01:04.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.896" endtime="20201115 22:01:04.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.511" endtime="20201115 22:01:04.922"></status>
</kw>
<msg timestamp="20201115 22:01:04.922" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.932" endtime="20201115 22:01:04.964"></status>
</kw>
<msg timestamp="20201115 22:01:04.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.930" endtime="20201115 22:01:04.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.967" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.966" endtime="20201115 22:01:04.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.968" endtime="20201115 22:01:04.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.927" endtime="20201115 22:01:04.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.925" endtime="20201115 22:01:04.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.978" endtime="20201115 22:01:05.265"></status>
</kw>
<msg timestamp="20201115 22:01:05.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024938292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024961611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.976" endtime="20201115 22:01:05.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024938292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024961611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.270" endtime="20201115 22:01:05.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.278" endtime="20201115 22:01:05.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.973" endtime="20201115 22:01:05.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.972" endtime="20201115 22:01:05.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.285" level="INFO">${RESULT} = [{'time': 0.024961611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.331900000000081e-05, 'source_diff': 2.331900000000081e-05}, {'time': 0.025313681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.281" endtime="20201115 22:01:05.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.299" level="INFO">${OVERHEAD} = {'diff': [2.331900000000081e-05, 2.3333999999999855e-05, 2.331900000000081e-05, 2.336099999999952e-05, 2.3306000000000715e-05, 2.3250000000002435e-05, 2.3292000000001145e-05, 2.3320000000000285e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:05.286" endtime="20201115 22:01:05.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.304" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.303" endtime="20201115 22:01:05.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.306" level="INFO">VALUE: [2.331900000000081e-05, 2.3333999999999855e-05, 2.331900000000081e-05, 2.336099999999952e-05, 2.3306000000000715e-05, 2.3250000000002435e-05, 2.3292000000001145e-05, 2.3320000000000285e-05, 2.330500000000124e-05, 2.333300000000038e-05, 2.3306000000000715e-05, 2.336100000000299e-05, 2.331900000000081e-05, 2.331900000000081e-05, 2.333300000000038e-05, 2.3347999999999425e-05, 2.3291999999997676e-05, 2.331900000000081e-05, 2.331900000000081e-05, 2.333300000000038e-05, 2.333300000000038e-05, 2.334699999999995e-05, 2.334699999999995e-05, 2.330500000000124e-05, 2.331900000000081e-05, 2.3320000000000285e-05, 2.3264000000002005e-05, 2.3320000000000285e-05, 2.330500000000124e-05, 2.3320000000000285e-05, 2.334699999999995e-05, 2.3306000000000715e-05, 2.3292000000001145e-05, 2.3320000000000285e-05, 2.3306000000000715e-05, 2.3262999999995593e-05, 2.3278000000001575e-05, 2.331900000000081e-05, 2.3278000000001575e-05, 2.3333999999999855e-05, 2.3278000000001575e-05, 2.331900000000081e-05, 2.3250000000002435e-05, 2.3306000000000715e-05, 2.3292000000001145e-05, 2.3264000000002005e-05, 2.3306000000000715e-05, 2.3333999999999855e-05, 2.3320000000000285e-05, 2.3333999999999855e-05]</msg>
<status status="PASS" starttime="20201115 22:01:05.305" endtime="20201115 22:01:05.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.300" endtime="20201115 22:01:05.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.310" endtime="20201115 22:01:05.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.313" endtime="20201115 22:01:05.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.312" endtime="20201115 22:01:05.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.308" endtime="20201115 22:01:05.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.923" endtime="20201115 22:01:05.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.270" endtime="20201115 22:01:05.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.269" endtime="20201115 22:01:05.334"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.337" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.346" endtime="20201115 22:01:05.376"></status>
</kw>
<msg timestamp="20201115 22:01:05.376" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.344" endtime="20201115 22:01:05.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.379" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.377" endtime="20201115 22:01:05.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.380" endtime="20201115 22:01:05.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.342" endtime="20201115 22:01:05.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.339" endtime="20201115 22:01:05.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.390" endtime="20201115 22:01:05.676"></status>
</kw>
<msg timestamp="20201115 22:01:05.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025169792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025193389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.388" endtime="20201115 22:01:05.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025169792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025193389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.681" endtime="20201115 22:01:05.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.689" endtime="20201115 22:01:05.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.385" endtime="20201115 22:01:05.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.384" endtime="20201115 22:01:05.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.696" level="INFO">${RESULT} = [{'time': 0.025193389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.35970000000002e-05, 'source_diff': 2.35970000000002e-05}, {'time': 0.025579097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:05.692" endtime="20201115 22:01:05.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.710" level="INFO">${OVERHEAD} = {'diff': [2.35970000000002e-05, 2.3540999999998452e-05, 2.3527999999998356e-05, 2.3527999999998356e-05, 2.3527999999998356e-05, 2.3542000000001395e-05, 2.3526999999998882e-05, 2.3513999999998786e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:05.697" endtime="20201115 22:01:05.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.715" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.714" endtime="20201115 22:01:05.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.717" level="INFO">VALUE: [2.35970000000002e-05, 2.3540999999998452e-05, 2.3527999999998356e-05, 2.3527999999998356e-05, 2.3527999999998356e-05, 2.3542000000001395e-05, 2.3526999999998882e-05, 2.3513999999998786e-05, 2.361099999999977e-05, 2.3499999999999216e-05, 2.3500000000002685e-05, 2.3512999999999312e-05, 2.3499999999999216e-05, 2.3513999999998786e-05, 2.3570000000000535e-05, 2.3526999999998882e-05, 2.3526999999995413e-05, 2.3556000000000965e-05, 2.3486000000003115e-05, 2.352700000000235e-05, 2.3540999999994983e-05, 2.3541999999994456e-05, 2.3471999999996607e-05, 2.351300000000278e-05, 2.3485999999996177e-05, 2.356900000000106e-05, 2.3485999999996177e-05, 2.3513999999995316e-05, 2.3528000000001825e-05, 2.3499999999995747e-05, 2.3513999999995316e-05, 2.3514000000002255e-05, 2.3528000000001825e-05, 2.3528000000001825e-05, 2.3526999999995413e-05, 2.3471999999996607e-05, 2.3514000000002255e-05, 2.3528000000001825e-05, 2.3528000000001825e-05, 2.3514000000002255e-05, 2.356900000000106e-05, 2.3528000000001825e-05, 2.3598000000006614e-05, 2.351300000000278e-05, 2.356900000000106e-05, 2.3486000000003115e-05, 2.3556000000000965e-05, 2.3472000000003546e-05, 2.3486000000003115e-05, 2.3555999999994026e-05]</msg>
<status status="PASS" starttime="20201115 22:01:05.716" endtime="20201115 22:01:05.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.711" endtime="20201115 22:01:05.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.721" endtime="20201115 22:01:05.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.724" endtime="20201115 22:01:05.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.723" endtime="20201115 22:01:05.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.719" endtime="20201115 22:01:05.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.337" endtime="20201115 22:01:05.745"></status>
</kw>
<msg timestamp="20201115 22:01:05.745" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.755" endtime="20201115 22:01:05.788"></status>
</kw>
<msg timestamp="20201115 22:01:05.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.753" endtime="20201115 22:01:05.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.790" endtime="20201115 22:01:05.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.793" endtime="20201115 22:01:05.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.750" endtime="20201115 22:01:05.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.748" endtime="20201115 22:01:05.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.802" endtime="20201115 22:01:06.091"></status>
</kw>
<msg timestamp="20201115 22:01:06.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026124833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026148361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.801" endtime="20201115 22:01:06.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026124833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026148361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.096" endtime="20201115 22:01:06.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.104" endtime="20201115 22:01:06.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.798" endtime="20201115 22:01:06.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.796" endtime="20201115 22:01:06.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.111" level="INFO">${RESULT} = [{'time': 0.026148361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3527999999998356e-05, 'source_diff': 2.3527999999998356e-05}, {'time': 0.026531736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:06.108" endtime="20201115 22:01:06.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.125" level="INFO">${OVERHEAD} = {'diff': [2.3527999999998356e-05, 2.3472000000000076e-05, 2.3542000000001395e-05, 2.3584000000000105e-05, 2.3526999999998882e-05, 2.3528000000001825e-05, 2.3526999999998882e-05, 2.3556000000000965e-05...</msg>
<status status="PASS" starttime="20201115 22:01:06.112" endtime="20201115 22:01:06.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.130" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.129" endtime="20201115 22:01:06.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.132" level="INFO">VALUE: [2.3527999999998356e-05, 2.3472000000000076e-05, 2.3542000000001395e-05, 2.3584000000000105e-05, 2.3526999999998882e-05, 2.3528000000001825e-05, 2.3526999999998882e-05, 2.3556000000000965e-05, 2.3472000000000076e-05, 2.3499999999999216e-05, 2.356900000000106e-05, 2.345899999999998e-05, 2.3542000000001395e-05, 2.3570000000000535e-05, 2.3528000000001825e-05, 2.3528000000001825e-05, 2.3542000000001395e-05, 2.347300000000302e-05, 2.352700000000235e-05, 2.35970000000002e-05, 2.352700000000235e-05, 2.3584000000000105e-05, 2.3528000000001825e-05, 2.3542000000001395e-05, 2.3556000000000965e-05, 2.3568999999994122e-05, 2.3542000000001395e-05, 2.3556000000000965e-05, 2.352700000000235e-05, 2.3514000000002255e-05, 2.3542000000001395e-05, 2.3499999999995747e-05, 2.354100000000192e-05, 2.3500000000002685e-05, 2.3556000000000965e-05, 2.3556000000000965e-05, 2.355500000000149e-05, 2.3542000000001395e-05, 2.3471999999996607e-05, 2.3513999999995316e-05, 2.352700000000235e-05, 2.3528000000001825e-05, 2.354100000000192e-05, 2.354100000000192e-05, 2.3541999999994456e-05, 2.345899999999651e-05, 2.3485999999996177e-05, 2.3556000000000965e-05, 2.352700000000235e-05, 2.3471999999996607e-05]</msg>
<status status="PASS" starttime="20201115 22:01:06.131" endtime="20201115 22:01:06.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.126" endtime="20201115 22:01:06.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.135" endtime="20201115 22:01:06.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.139" endtime="20201115 22:01:06.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.138" endtime="20201115 22:01:06.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.134" endtime="20201115 22:01:06.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.746" endtime="20201115 22:01:06.160"></status>
</kw>
<msg timestamp="20201115 22:01:06.160" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.170" endtime="20201115 22:01:06.200"></status>
</kw>
<msg timestamp="20201115 22:01:06.200" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.168" endtime="20201115 22:01:06.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.203" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.201" endtime="20201115 22:01:06.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.204" endtime="20201115 22:01:06.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.166" endtime="20201115 22:01:06.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.163" endtime="20201115 22:01:06.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.214" endtime="20201115 22:01:06.501"></status>
</kw>
<msg timestamp="20201115 22:01:06.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023081472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023105028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.212" endtime="20201115 22:01:06.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023081472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023105028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.505" endtime="20201115 22:01:06.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.513" endtime="20201115 22:01:06.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.209" endtime="20201115 22:01:06.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.208" endtime="20201115 22:01:06.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.520" level="INFO">${RESULT} = [{'time': 0.023105028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3556000000000965e-05, 'source_diff': 2.3556000000000965e-05}, {'time': 0.023486278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:06.517" endtime="20201115 22:01:06.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.534" level="INFO">${OVERHEAD} = {'diff': [2.3556000000000965e-05, 2.3513999999998786e-05, 2.3499999999999216e-05, 2.3541999999997926e-05, 2.3541999999997926e-05, 2.3541999999997926e-05, 2.3527999999998356e-05, 2.3485999999999646e-05...</msg>
<status status="PASS" starttime="20201115 22:01:06.521" endtime="20201115 22:01:06.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.539" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.538" endtime="20201115 22:01:06.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.542" level="INFO">VALUE: [2.3556000000000965e-05, 2.3513999999998786e-05, 2.3499999999999216e-05, 2.3541999999997926e-05, 2.3541999999997926e-05, 2.3541999999997926e-05, 2.3527999999998356e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.3556000000000965e-05, 2.3513999999998786e-05, 2.3528000000001825e-05, 2.3540999999998452e-05, 2.3472000000000076e-05, 2.3513999999998786e-05, 2.3472000000000076e-05, 2.3500000000002685e-05, 2.3556000000000965e-05, 2.3597999999999675e-05, 2.3556000000000965e-05, 2.3499999999999216e-05, 2.3541999999997926e-05, 2.3514000000002255e-05, 2.3542000000001395e-05, 2.3513999999995316e-05, 2.3556000000000965e-05, 2.3528000000001825e-05, 2.358300000000063e-05, 2.3526999999995413e-05, 2.3570000000000535e-05, 2.3528000000001825e-05, 2.3471999999996607e-05, 2.3527999999994886e-05, 2.358300000000063e-05, 2.3429999999997897e-05, 2.3528000000001825e-05, 2.356900000000106e-05, 2.3499999999995747e-05, 2.3527999999994886e-05, 2.3542000000001395e-05, 2.3458000000003976e-05, 2.345900000000345e-05, 2.3528000000001825e-05, 2.3514000000002255e-05, 2.3527999999994886e-05, 2.358300000000063e-05, 2.3527999999994886e-05, 2.3556000000000965e-05, 2.3570000000000535e-05, 2.3528000000001825e-05]</msg>
<status status="PASS" starttime="20201115 22:01:06.540" endtime="20201115 22:01:06.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.535" endtime="20201115 22:01:06.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.545" endtime="20201115 22:01:06.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.549" endtime="20201115 22:01:06.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.547" endtime="20201115 22:01:06.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.543" endtime="20201115 22:01:06.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.161" endtime="20201115 22:01:06.570"></status>
</kw>
<msg timestamp="20201115 22:01:06.570" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.579" endtime="20201115 22:01:06.612"></status>
</kw>
<msg timestamp="20201115 22:01:06.612" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.578" endtime="20201115 22:01:06.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.613" endtime="20201115 22:01:06.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.616" endtime="20201115 22:01:06.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.575" endtime="20201115 22:01:06.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.573" endtime="20201115 22:01:06.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.625" endtime="20201115 22:01:06.913"></status>
</kw>
<msg timestamp="20201115 22:01:06.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025259708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025283208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.623" endtime="20201115 22:01:06.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025259708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025283208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.917" endtime="20201115 22:01:06.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.926" endtime="20201115 22:01:06.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.621" endtime="20201115 22:01:06.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.619" endtime="20201115 22:01:06.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.933" level="INFO">${RESULT} = [{'time': 0.025283208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3500000000002685e-05, 'source_diff': 2.3500000000002685e-05}, {'time': 0.025667431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:06.929" endtime="20201115 22:01:06.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.947" level="INFO">${OVERHEAD} = {'diff': [2.3500000000002685e-05, 2.3500000000002685e-05, 2.3542000000001395e-05, 2.3499999999999216e-05, 2.3555999999997496e-05, 2.3584000000000105e-05, 2.3527999999998356e-05, 2.3472000000000076e-05...</msg>
<status status="PASS" starttime="20201115 22:01:06.934" endtime="20201115 22:01:06.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.952" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.950" endtime="20201115 22:01:06.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.954" level="INFO">VALUE: [2.3500000000002685e-05, 2.3500000000002685e-05, 2.3542000000001395e-05, 2.3499999999999216e-05, 2.3555999999997496e-05, 2.3584000000000105e-05, 2.3527999999998356e-05, 2.3472000000000076e-05, 2.3556000000000965e-05, 2.3486000000003115e-05, 2.3540999999998452e-05, 2.352700000000235e-05, 2.3528000000001825e-05, 2.3514000000002255e-05, 2.3527999999998356e-05, 2.3541999999997926e-05, 2.3528000000001825e-05, 2.3528000000001825e-05, 2.3500000000002685e-05, 2.3514000000002255e-05, 2.3556000000000965e-05, 2.3500000000002685e-05, 2.3513999999995316e-05, 2.3500000000002685e-05, 2.3528000000001825e-05, 2.3500000000002685e-05, 2.3514000000002255e-05, 2.3499999999995747e-05, 2.3471999999996607e-05, 2.3542000000001395e-05, 2.3528000000001825e-05, 2.3499999999995747e-05, 2.3570000000000535e-05, 2.3542000000001395e-05, 2.3485999999996177e-05, 2.3542000000001395e-05, 2.3514000000002255e-05, 2.3542000000001395e-05, 2.3486000000003115e-05, 2.3500000000002685e-05, 2.3597999999999675e-05, 2.3514000000002255e-05, 2.3542000000001395e-05, 2.3528000000001825e-05, 2.3500000000002685e-05, 2.3513999999995316e-05, 2.3542000000001395e-05, 2.3542000000001395e-05, 2.3528000000001825e-05, 2.3556000000000965e-05]</msg>
<status status="PASS" starttime="20201115 22:01:06.953" endtime="20201115 22:01:06.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.948" endtime="20201115 22:01:06.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.958" endtime="20201115 22:01:06.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.962" endtime="20201115 22:01:06.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.960" endtime="20201115 22:01:06.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.956" endtime="20201115 22:01:06.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.571" endtime="20201115 22:01:06.982"></status>
</kw>
<msg timestamp="20201115 22:01:06.983" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.992" endtime="20201115 22:01:07.024"></status>
</kw>
<msg timestamp="20201115 22:01:07.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.990" endtime="20201115 22:01:07.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.026" endtime="20201115 22:01:07.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.029" endtime="20201115 22:01:07.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.988" endtime="20201115 22:01:07.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.985" endtime="20201115 22:01:07.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.038" endtime="20201115 22:01:07.326"></status>
</kw>
<msg timestamp="20201115 22:01:07.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024531417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024554958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.036" endtime="20201115 22:01:07.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024531417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024554958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.330" endtime="20201115 22:01:07.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.338" endtime="20201115 22:01:07.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.034" endtime="20201115 22:01:07.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.032" endtime="20201115 22:01:07.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.345" level="INFO">${RESULT} = [{'time': 0.024554958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.354100000000192e-05, 'source_diff': 2.354100000000192e-05}, {'time': 0.024937708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.342" endtime="20201115 22:01:07.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.359" level="INFO">${OVERHEAD} = {'diff': [2.354100000000192e-05, 2.3526999999998882e-05, 2.3485999999999646e-05, 2.3527999999998356e-05, 2.3499999999999216e-05, 2.3528000000001825e-05, 2.352700000000235e-05, 2.3514000000002255e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:07.346" endtime="20201115 22:01:07.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.364" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.363" endtime="20201115 22:01:07.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.367" level="INFO">VALUE: [2.354100000000192e-05, 2.3526999999998882e-05, 2.3485999999999646e-05, 2.3527999999998356e-05, 2.3499999999999216e-05, 2.3528000000001825e-05, 2.352700000000235e-05, 2.3514000000002255e-05, 2.3540999999998452e-05, 2.348699999999912e-05, 2.355500000000149e-05, 2.3458000000000506e-05, 2.3514000000002255e-05, 2.3513999999998786e-05, 2.3500000000002685e-05, 2.3514000000002255e-05, 2.3499999999999216e-05, 2.356900000000106e-05, 2.3514000000002255e-05, 2.354100000000192e-05, 2.352700000000235e-05, 2.3471999999996607e-05, 2.3540999999994983e-05, 2.3513999999995316e-05, 2.3540999999994983e-05, 2.3514000000002255e-05, 2.3499999999995747e-05, 2.3542000000001395e-05, 2.356900000000106e-05, 2.3556000000000965e-05, 2.3528000000001825e-05, 2.354100000000192e-05, 2.356900000000106e-05, 2.3542000000001395e-05, 2.3555999999994026e-05, 2.3540999999994983e-05, 2.3527999999994886e-05, 2.354100000000192e-05, 2.3458000000003976e-05, 2.348699999999565e-05, 2.3514000000002255e-05, 2.3542000000001395e-05, 2.35970000000002e-05, 2.355500000000149e-05, 2.3528000000001825e-05, 2.3499999999995747e-05, 2.3514000000002255e-05, 2.351300000000278e-05, 2.3542000000001395e-05, 2.3597999999999675e-05]</msg>
<status status="PASS" starttime="20201115 22:01:07.365" endtime="20201115 22:01:07.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.360" endtime="20201115 22:01:07.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.370" endtime="20201115 22:01:07.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.374" endtime="20201115 22:01:07.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.372" endtime="20201115 22:01:07.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.369" endtime="20201115 22:01:07.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.983" endtime="20201115 22:01:07.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.336" endtime="20201115 22:01:07.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.335" endtime="20201115 22:01:07.395"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.397" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.407" endtime="20201115 22:01:07.440"></status>
</kw>
<msg timestamp="20201115 22:01:07.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.405" endtime="20201115 22:01:07.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.443" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.442" endtime="20201115 22:01:07.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.444" endtime="20201115 22:01:07.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.402" endtime="20201115 22:01:07.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.400" endtime="20201115 22:01:07.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.454" endtime="20201115 22:01:07.742"></status>
</kw>
<msg timestamp="20201115 22:01:07.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024305528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.452" endtime="20201115 22:01:07.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024305528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.746" endtime="20201115 22:01:07.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.755" endtime="20201115 22:01:07.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.449" endtime="20201115 22:01:07.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.448" endtime="20201115 22:01:07.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.762" level="INFO">${RESULT} = [{'time': 0.024305528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3735999999999896e-05, 'source_diff': 2.3735999999999896e-05}, {'time': 0.024718264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:07.758" endtime="20201115 22:01:07.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.776" level="INFO">${OVERHEAD} = {'diff': [2.3735999999999896e-05, 2.3763999999999036e-05, 2.3722000000000326e-05, 2.3708000000000756e-05, 2.3750000000002935e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.3749999999999466e-05...</msg>
<status status="PASS" starttime="20201115 22:01:07.763" endtime="20201115 22:01:07.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.781" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.780" endtime="20201115 22:01:07.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.784" level="INFO">VALUE: [2.3735999999999896e-05, 2.3763999999999036e-05, 2.3722000000000326e-05, 2.3708000000000756e-05, 2.3750000000002935e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.3749999999999466e-05, 2.369500000000066e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.370900000000023e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.369500000000066e-05, 2.368099999999762e-05, 2.3764000000002505e-05, 2.3722000000003796e-05, 2.3750000000002935e-05, 2.3736000000003366e-05, 2.3749999999995997e-05, 2.3749999999995997e-05, 2.3736000000003366e-05, 2.37369999999959e-05, 2.3721999999996857e-05, 2.3735999999996427e-05, 2.3749999999995997e-05, 2.3707999999997287e-05, 2.3749999999995997e-05, 2.3721999999996857e-05, 2.368100000000456e-05, 2.3764000000002505e-05, 2.366699999999805e-05, 2.3722000000003796e-05, 2.3722000000003796e-05, 2.3750000000002935e-05, 2.3750000000002935e-05, 2.3750000000002935e-05, 2.3735999999996427e-05, 2.373700000000284e-05, 2.3735999999996427e-05, 2.3708000000004226e-05, 2.3694000000004656e-05, 2.372300000000327e-05, 2.369500000000413e-05, 2.3736000000003366e-05, 2.3722000000003796e-05, 2.3749999999995997e-05, 2.3722000000003796e-05, 2.3722000000003796e-05]</msg>
<status status="PASS" starttime="20201115 22:01:07.782" endtime="20201115 22:01:07.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.777" endtime="20201115 22:01:07.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.788" endtime="20201115 22:01:07.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.791" endtime="20201115 22:01:07.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.790" endtime="20201115 22:01:07.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.786" endtime="20201115 22:01:07.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.398" endtime="20201115 22:01:07.812"></status>
</kw>
<msg timestamp="20201115 22:01:07.813" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.822" endtime="20201115 22:01:07.857"></status>
</kw>
<msg timestamp="20201115 22:01:07.857" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.820" endtime="20201115 22:01:07.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.859" endtime="20201115 22:01:07.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.861" endtime="20201115 22:01:07.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.817" endtime="20201115 22:01:07.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.815" endtime="20201115 22:01:07.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.871" endtime="20201115 22:01:08.157"></status>
</kw>
<msg timestamp="20201115 22:01:08.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02367375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0236975, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:07.869" endtime="20201115 22:01:08.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02367375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0236975, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:08.161" endtime="20201115 22:01:08.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.170" endtime="20201115 22:01:08.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.866" endtime="20201115 22:01:08.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.864" endtime="20201115 22:01:08.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.177" level="INFO">${RESULT} = [{'time': 0.0236975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3749999999999466e-05, 'source_diff': 2.3749999999999466e-05}, {'time': 0.024111444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:08.173" endtime="20201115 22:01:08.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.191" level="INFO">${OVERHEAD} = {'diff': [2.3749999999999466e-05, 2.3762999999999562e-05, 2.3763999999999036e-05, 2.370900000000023e-05, 2.370900000000023e-05, 2.3735999999999896e-05, 2.3762999999999562e-05, 2.3790999999998702e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:08.178" endtime="20201115 22:01:08.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.196" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:08.195" endtime="20201115 22:01:08.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.198" level="INFO">VALUE: [2.3749999999999466e-05, 2.3762999999999562e-05, 2.3763999999999036e-05, 2.370900000000023e-05, 2.370900000000023e-05, 2.3735999999999896e-05, 2.3762999999999562e-05, 2.3790999999998702e-05, 2.3763999999999036e-05, 2.373700000000284e-05, 2.3735999999999896e-05, 2.373699999999937e-05, 2.3722000000000326e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.3790999999998702e-05, 2.3735999999999896e-05, 2.3777999999998606e-05, 2.3791999999998176e-05, 2.3749999999995997e-05, 2.3750000000002935e-05, 2.3763999999995566e-05, 2.3735999999996427e-05, 2.3735999999996427e-05, 2.3764000000002505e-05, 2.3708000000004226e-05, 2.3721999999996857e-05, 2.3763999999995566e-05, 2.3679999999998147e-05, 2.3693999999997717e-05, 2.3749999999995997e-05, 2.3750000000002935e-05, 2.383300000000088e-05, 2.3722000000003796e-05, 2.365299999999848e-05, 2.372300000000327e-05, 2.3736000000003366e-05, 2.366700000000499e-05, 2.362499999999934e-05, 2.3736000000003366e-05, 2.3749999999995997e-05, 2.3665999999998577e-05, 2.3763999999995566e-05, 2.3735999999996427e-05, 2.3750000000002935e-05, 2.3764000000002505e-05, 2.3763999999995566e-05, 2.3806000000001215e-05, 2.3750000000002935e-05, 2.372300000000327e-05]</msg>
<status status="PASS" starttime="20201115 22:01:08.197" endtime="20201115 22:01:08.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.192" endtime="20201115 22:01:08.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.202" endtime="20201115 22:01:08.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.205" endtime="20201115 22:01:08.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.204" endtime="20201115 22:01:08.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.200" endtime="20201115 22:01:08.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.813" endtime="20201115 22:01:08.226"></status>
</kw>
<msg timestamp="20201115 22:01:08.226" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.235" endtime="20201115 22:01:08.270"></status>
</kw>
<msg timestamp="20201115 22:01:08.270" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.234" endtime="20201115 22:01:08.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.273" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.271" endtime="20201115 22:01:08.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.274" endtime="20201115 22:01:08.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.231" endtime="20201115 22:01:08.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.229" endtime="20201115 22:01:08.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.283" endtime="20201115 22:01:08.571"></status>
</kw>
<msg timestamp="20201115 22:01:08.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.282" endtime="20201115 22:01:08.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.575" endtime="20201115 22:01:08.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.583" endtime="20201115 22:01:08.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.279" endtime="20201115 22:01:08.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.277" endtime="20201115 22:01:08.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.591" level="INFO">${RESULT} = [{'time': 0.021902306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.373699999999937e-05, 'source_diff': 2.373699999999937e-05}, {'time': 0.02231725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:08.587" endtime="20201115 22:01:08.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.605" level="INFO">${OVERHEAD} = {'diff': [2.373699999999937e-05, 2.3763999999999036e-05, 2.3722000000000326e-05, 2.373699999999937e-05, 2.383300000000088e-05, 2.3735999999999896e-05, 2.3735999999999896e-05, 2.3708000000000756e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:08.592" endtime="20201115 22:01:08.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.610" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:08.609" endtime="20201115 22:01:08.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.612" level="INFO">VALUE: [2.373699999999937e-05, 2.3763999999999036e-05, 2.3722000000000326e-05, 2.373699999999937e-05, 2.383300000000088e-05, 2.3735999999999896e-05, 2.3735999999999896e-05, 2.3708000000000756e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.373699999999937e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.3722000000000326e-05, 2.3735999999999896e-05, 2.3694000000001186e-05, 2.3735999999999896e-05, 2.3749999999999466e-05, 2.369499999999719e-05, 2.3763999999999036e-05, 2.3735999999999896e-05, 2.3693999999997717e-05, 2.3749999999999466e-05, 2.3735999999996427e-05, 2.3735999999996427e-05, 2.369500000000413e-05, 2.3749999999995997e-05, 2.3763999999995566e-05, 2.3708000000004226e-05, 2.3735999999996427e-05, 2.3722000000003796e-05, 2.3693999999997717e-05, 2.372300000000327e-05, 2.372299999999633e-05, 2.37090000000037e-05, 2.3708000000004226e-05, 2.3708000000004226e-05, 2.3750000000002935e-05, 2.3721999999996857e-05, 2.37090000000037e-05, 2.3722000000003796e-05, 2.3694000000004656e-05, 2.3722000000003796e-05, 2.365299999999848e-05, 2.370899999999676e-05, 2.369500000000413e-05, 2.372300000000327e-05, 2.3707999999997287e-05, 2.3764000000002505e-05, 2.3736000000003366e-05]</msg>
<status status="PASS" starttime="20201115 22:01:08.611" endtime="20201115 22:01:08.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.606" endtime="20201115 22:01:08.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.616" endtime="20201115 22:01:08.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.619" endtime="20201115 22:01:08.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.618" endtime="20201115 22:01:08.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.614" endtime="20201115 22:01:08.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.227" endtime="20201115 22:01:08.640"></status>
</kw>
<msg timestamp="20201115 22:01:08.640" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.650" endtime="20201115 22:01:08.686"></status>
</kw>
<msg timestamp="20201115 22:01:08.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.648" endtime="20201115 22:01:08.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.688" endtime="20201115 22:01:08.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.691" endtime="20201115 22:01:08.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.645" endtime="20201115 22:01:08.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.643" endtime="20201115 22:01:08.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.700" endtime="20201115 22:01:08.988"></status>
</kw>
<msg timestamp="20201115 22:01:08.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024746917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024770653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.699" endtime="20201115 22:01:08.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024746917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024770653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.992" endtime="20201115 22:01:09.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.001" endtime="20201115 22:01:09.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.696" endtime="20201115 22:01:09.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.694" endtime="20201115 22:01:09.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.008" level="INFO">${RESULT} = [{'time': 0.024770653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3735999999999896e-05, 'source_diff': 2.3735999999999896e-05}, {'time': 0.025186014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:09.005" endtime="20201115 22:01:09.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.022" level="INFO">${OVERHEAD} = {'diff': [2.3735999999999896e-05, 2.362499999999934e-05, 2.3708000000000756e-05, 2.3749999999999466e-05, 2.3679999999998147e-05, 2.37229999999998e-05, 2.3735999999999896e-05, 2.368100000000109e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:09.009" endtime="20201115 22:01:09.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.027" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.026" endtime="20201115 22:01:09.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.030" level="INFO">VALUE: [2.3735999999999896e-05, 2.362499999999934e-05, 2.3708000000000756e-05, 2.3749999999999466e-05, 2.3679999999998147e-05, 2.37229999999998e-05, 2.3735999999999896e-05, 2.368100000000109e-05, 2.3611999999999245e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.3749999999999466e-05, 2.370900000000023e-05, 2.3707999999997287e-05, 2.3763000000003032e-05, 2.368100000000456e-05, 2.3736000000003366e-05, 2.37090000000037e-05, 2.3693999999997717e-05, 2.3764000000002505e-05, 2.3750000000002935e-05, 2.3708000000004226e-05, 2.3708000000004226e-05, 2.3749999999995997e-05, 2.3721999999996857e-05, 2.3722000000003796e-05, 2.380500000000174e-05, 2.363899999999891e-05, 2.3749999999995997e-05, 2.3722000000003796e-05, 2.3735999999996427e-05, 2.368100000000456e-05, 2.3735999999996427e-05, 2.3722000000003796e-05, 2.3764000000002505e-05, 2.3764000000002505e-05, 2.3749999999995997e-05, 2.372299999999633e-05, 2.3721999999996857e-05, 2.3750000000002935e-05, 2.3763999999995566e-05, 2.3722000000003796e-05, 2.363899999999891e-05, 2.3750000000002935e-05, 2.372299999999633e-05, 2.3749999999995997e-05, 2.3750000000002935e-05]</msg>
<status status="PASS" starttime="20201115 22:01:09.028" endtime="20201115 22:01:09.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.023" endtime="20201115 22:01:09.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.033" endtime="20201115 22:01:09.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.036" endtime="20201115 22:01:09.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.035" endtime="20201115 22:01:09.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.031" endtime="20201115 22:01:09.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.641" endtime="20201115 22:01:09.057"></status>
</kw>
<msg timestamp="20201115 22:01:09.058" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.067" endtime="20201115 22:01:09.103"></status>
</kw>
<msg timestamp="20201115 22:01:09.104" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.065" endtime="20201115 22:01:09.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.105" endtime="20201115 22:01:09.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.107" endtime="20201115 22:01:09.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.063" endtime="20201115 22:01:09.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.060" endtime="20201115 22:01:09.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.117" endtime="20201115 22:01:09.406"></status>
</kw>
<msg timestamp="20201115 22:01:09.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024623681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024647417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.115" endtime="20201115 22:01:09.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024623681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024647417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.410" endtime="20201115 22:01:09.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.419" endtime="20201115 22:01:09.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.113" endtime="20201115 22:01:09.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.111" endtime="20201115 22:01:09.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.426" level="INFO">${RESULT} = [{'time': 0.024647417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3735999999999896e-05, 'source_diff': 2.3735999999999896e-05}, {'time': 0.02506075, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:09.422" endtime="20201115 22:01:09.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.440" level="INFO">${OVERHEAD} = {'diff': [2.3735999999999896e-05, 2.3694000000001186e-05, 2.373699999999937e-05, 2.369500000000066e-05, 2.3722000000000326e-05, 2.3735999999999896e-05, 2.3764000000002505e-05, 2.3749999999999466e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:09.427" endtime="20201115 22:01:09.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.444" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.443" endtime="20201115 22:01:09.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.447" level="INFO">VALUE: [2.3735999999999896e-05, 2.3694000000001186e-05, 2.373699999999937e-05, 2.369500000000066e-05, 2.3722000000000326e-05, 2.3735999999999896e-05, 2.3764000000002505e-05, 2.3749999999999466e-05, 2.3804999999998272e-05, 2.381900000000131e-05, 2.3749999999999466e-05, 2.3776999999999132e-05, 2.3750000000002935e-05, 2.3735999999999896e-05, 2.3750000000002935e-05, 2.3750000000002935e-05, 2.3722000000003796e-05, 2.3763999999995566e-05, 2.3750000000002935e-05, 2.3735999999996427e-05, 2.3749999999995997e-05, 2.3764000000002505e-05, 2.3750000000002935e-05, 2.3750000000002935e-05, 2.3736000000003366e-05, 2.3750000000002935e-05, 2.3778000000002075e-05, 2.3735999999996427e-05, 2.3735999999996427e-05, 2.3722000000003796e-05, 2.3735999999996427e-05, 2.3776999999995663e-05, 2.3749999999995997e-05, 2.365299999999848e-05, 2.3749999999995997e-05, 2.3736000000003366e-05, 2.3708000000004226e-05, 2.3680000000005086e-05, 2.3749999999995997e-05, 2.3722000000003796e-05, 2.37770000000026e-05, 2.3736000000003366e-05, 2.3763999999995566e-05, 2.372299999999633e-05, 2.3736000000003366e-05, 2.3735999999996427e-05, 2.3707999999997287e-05, 2.3736000000003366e-05, 2.3749999999995997e-05, 2.3778000000002075e-05]</msg>
<status status="PASS" starttime="20201115 22:01:09.445" endtime="20201115 22:01:09.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.441" endtime="20201115 22:01:09.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.450" endtime="20201115 22:01:09.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.454" endtime="20201115 22:01:09.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.452" endtime="20201115 22:01:09.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.449" endtime="20201115 22:01:09.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.058" endtime="20201115 22:01:09.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.396" endtime="20201115 22:01:09.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.395" endtime="20201115 22:01:09.475"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.477" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.487" endtime="20201115 22:01:09.521"></status>
</kw>
<msg timestamp="20201115 22:01:09.522" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.485" endtime="20201115 22:01:09.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.523" endtime="20201115 22:01:09.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.526" endtime="20201115 22:01:09.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.482" endtime="20201115 22:01:09.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.480" endtime="20201115 22:01:09.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.535" endtime="20201115 22:01:09.823"></status>
</kw>
<msg timestamp="20201115 22:01:09.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024223486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024247431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.534" endtime="20201115 22:01:09.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024223486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024247431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.827" endtime="20201115 22:01:09.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.836" endtime="20201115 22:01:09.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.531" endtime="20201115 22:01:09.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.529" endtime="20201115 22:01:09.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.843" level="INFO">${RESULT} = [{'time': 0.024247431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.394500000000091e-05, 'source_diff': 2.394500000000091e-05}, {'time': 0.024691389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:09.839" endtime="20201115 22:01:09.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.856" level="INFO">${OVERHEAD} = {'diff': [2.394500000000091e-05, 2.393100000000134e-05, 2.3943999999997967e-05, 2.395900000000048e-05, 2.3972000000000576e-05, 2.3930000000001866e-05, 2.3944000000001436e-05, 2.395900000000048e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:09.844" endtime="20201115 22:01:09.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.861" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.860" endtime="20201115 22:01:09.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.864" level="INFO">VALUE: [2.394500000000091e-05, 2.393100000000134e-05, 2.3943999999997967e-05, 2.395900000000048e-05, 2.3972000000000576e-05, 2.3930000000001866e-05, 2.3944000000001436e-05, 2.395900000000048e-05, 2.387499999999959e-05, 2.3957999999997537e-05, 2.397300000000005e-05, 2.3958000000001006e-05, 2.3986000000000146e-05, 2.391700000000177e-05, 2.393099999999787e-05, 2.3986000000000146e-05, 2.394499999999744e-05, 2.3943999999997967e-05, 2.39169999999983e-05, 2.3929999999998397e-05, 2.397300000000352e-05, 2.4000000000003185e-05, 2.3943999999997967e-05, 2.394499999999744e-05, 2.398700000000309e-05, 2.3943999999997967e-05, 2.3957999999997537e-05, 2.395900000000395e-05, 2.3958000000004476e-05, 2.3943999999997967e-05, 2.3944000000004906e-05, 2.3943999999997967e-05, 2.393100000000481e-05, 2.3957999999997537e-05, 2.39169999999983e-05, 2.395900000000395e-05, 2.3971999999997107e-05, 2.387499999999959e-05, 2.3944000000004906e-05, 2.4014000000002755e-05, 2.3958000000004476e-05, 2.3958000000004476e-05, 2.3957999999997537e-05, 2.3999999999996247e-05, 2.395900000000395e-05, 2.4013999999995816e-05, 2.3957999999997537e-05, 2.394500000000438e-05, 2.3943999999997967e-05, 2.3986000000003616e-05]</msg>
<status status="PASS" starttime="20201115 22:01:09.863" endtime="20201115 22:01:09.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.857" endtime="20201115 22:01:09.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.867" endtime="20201115 22:01:09.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.871" endtime="20201115 22:01:09.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.869" endtime="20201115 22:01:09.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.866" endtime="20201115 22:01:09.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.478" endtime="20201115 22:01:09.892"></status>
</kw>
<msg timestamp="20201115 22:01:09.892" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.901" endtime="20201115 22:01:09.938"></status>
</kw>
<msg timestamp="20201115 22:01:09.938" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.900" endtime="20201115 22:01:09.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.941" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.940" endtime="20201115 22:01:09.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.943" endtime="20201115 22:01:09.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.897" endtime="20201115 22:01:09.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.895" endtime="20201115 22:01:09.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.952" endtime="20201115 22:01:10.240"></status>
</kw>
<msg timestamp="20201115 22:01:10.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024050153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.951" endtime="20201115 22:01:10.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024050153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.244" endtime="20201115 22:01:10.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.252" endtime="20201115 22:01:10.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.948" endtime="20201115 22:01:10.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.946" endtime="20201115 22:01:10.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.259" level="INFO">${RESULT} = [{'time': 0.024074111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3957999999997537e-05, 'source_diff': 2.3957999999997537e-05}, {'time': 0.024518833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:10.256" endtime="20201115 22:01:10.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.273" level="INFO">${OVERHEAD} = {'diff': [2.3957999999997537e-05, 2.3915999999998827e-05, 2.3916000000002297e-05, 2.3972000000000576e-05, 2.39169999999983e-05, 2.395900000000048e-05, 2.3986000000000146e-05, 2.388899999999916e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:10.260" endtime="20201115 22:01:10.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.278" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.277" endtime="20201115 22:01:10.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.281" level="INFO">VALUE: [2.3957999999997537e-05, 2.3915999999998827e-05, 2.3916000000002297e-05, 2.3972000000000576e-05, 2.39169999999983e-05, 2.395900000000048e-05, 2.3986000000000146e-05, 2.388899999999916e-05, 2.3957999999997537e-05, 2.393100000000134e-05, 2.3943999999997967e-05, 2.393100000000134e-05, 2.393099999999787e-05, 2.3972000000000576e-05, 2.395900000000048e-05, 2.394499999999744e-05, 2.388900000000263e-05, 2.3958000000004476e-05, 2.39169999999983e-05, 2.393099999999787e-05, 2.387499999999959e-05, 2.394499999999744e-05, 2.3971999999997107e-05, 2.3929999999998397e-05, 2.3930000000005336e-05, 2.397300000000352e-05, 2.4028000000002325e-05, 2.3915999999998827e-05, 2.395899999999701e-05, 2.3916000000005766e-05, 2.3958000000004476e-05, 2.393099999999787e-05, 2.3915999999998827e-05, 2.3901999999999257e-05, 2.393100000000481e-05, 2.390299999999873e-05, 2.387499999999959e-05, 2.3943999999997967e-05, 2.3929999999998397e-05, 2.3861999999999495e-05, 2.3972000000004046e-05, 2.3915999999998827e-05, 2.393100000000481e-05, 2.393099999999787e-05, 2.398700000000309e-05, 2.3972000000004046e-05, 2.3943999999997967e-05, 2.3929999999998397e-05, 2.3929999999998397e-05, 2.3957999999997537e-05]</msg>
<status status="PASS" starttime="20201115 22:01:10.279" endtime="20201115 22:01:10.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.274" endtime="20201115 22:01:10.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.284" endtime="20201115 22:01:10.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.288" endtime="20201115 22:01:10.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.286" endtime="20201115 22:01:10.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.282" endtime="20201115 22:01:10.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.893" endtime="20201115 22:01:10.309"></status>
</kw>
<msg timestamp="20201115 22:01:10.309" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.319" endtime="20201115 22:01:10.355"></status>
</kw>
<msg timestamp="20201115 22:01:10.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.317" endtime="20201115 22:01:10.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.356" endtime="20201115 22:01:10.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.359" endtime="20201115 22:01:10.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.314" endtime="20201115 22:01:10.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.312" endtime="20201115 22:01:10.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.368" endtime="20201115 22:01:10.657"></status>
</kw>
<msg timestamp="20201115 22:01:10.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024283736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024307681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.367" endtime="20201115 22:01:10.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024283736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024307681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.661" endtime="20201115 22:01:10.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.669" endtime="20201115 22:01:10.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.364" endtime="20201115 22:01:10.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.362" endtime="20201115 22:01:10.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.676" level="INFO">${RESULT} = [{'time': 0.024307681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.394500000000091e-05, 'source_diff': 2.394500000000091e-05}, {'time': 0.024753056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:10.673" endtime="20201115 22:01:10.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.690" level="INFO">${OVERHEAD} = {'diff': [2.394500000000091e-05, 2.394499999999744e-05, 2.3972000000000576e-05, 2.393100000000134e-05, 2.3972000000000576e-05, 2.394500000000091e-05, 2.393100000000134e-05, 2.3986000000000146e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 22:01:10.677" endtime="20201115 22:01:10.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.695" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.694" endtime="20201115 22:01:10.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.697" level="INFO">VALUE: [2.394500000000091e-05, 2.394499999999744e-05, 2.3972000000000576e-05, 2.393100000000134e-05, 2.3972000000000576e-05, 2.394500000000091e-05, 2.393100000000134e-05, 2.3986000000000146e-05, 2.394500000000091e-05, 2.393099999999787e-05, 2.393100000000134e-05, 2.3972000000000576e-05, 2.393100000000134e-05, 2.3943999999997967e-05, 2.3944000000001436e-05, 2.3887999999999687e-05, 2.394499999999744e-05, 2.4000000000003185e-05, 2.4028000000002325e-05, 2.393100000000481e-05, 2.394499999999744e-05, 2.393100000000481e-05, 2.394500000000438e-05, 2.3929999999998397e-05, 2.3972000000004046e-05, 2.390299999999873e-05, 2.394499999999744e-05, 2.3971999999997107e-05, 2.395900000000395e-05, 2.3957999999997537e-05, 2.3971999999997107e-05, 2.3957999999997537e-05, 2.395899999999701e-05, 2.3915999999998827e-05, 2.3930000000005336e-05, 2.3971999999997107e-05, 2.3930000000005336e-05, 2.3929999999998397e-05, 2.3944000000004906e-05, 2.3972000000004046e-05, 2.3972000000004046e-05, 2.3958000000004476e-05, 2.3915999999998827e-05, 2.394500000000438e-05, 2.393099999999787e-05, 2.3985999999996677e-05, 2.3944000000004906e-05, 2.395900000000395e-05, 2.3929999999998397e-05, 2.390299999999873e-05]</msg>
<status status="PASS" starttime="20201115 22:01:10.696" endtime="20201115 22:01:10.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.691" endtime="20201115 22:01:10.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.701" endtime="20201115 22:01:10.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.704" endtime="20201115 22:01:10.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.702" endtime="20201115 22:01:10.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.699" endtime="20201115 22:01:10.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.309" endtime="20201115 22:01:10.725"></status>
</kw>
<msg timestamp="20201115 22:01:10.725" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.736" endtime="20201115 22:01:10.772"></status>
</kw>
<msg timestamp="20201115 22:01:10.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.734" endtime="20201115 22:01:10.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.775" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.774" endtime="20201115 22:01:10.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.776" endtime="20201115 22:01:10.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.731" endtime="20201115 22:01:10.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.728" endtime="20201115 22:01:10.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.786" endtime="20201115 22:01:11.074"></status>
</kw>
<msg timestamp="20201115 22:01:11.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.784" endtime="20201115 22:01:11.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024592083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.078" endtime="20201115 22:01:11.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.086" endtime="20201115 22:01:11.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.782" endtime="20201115 22:01:11.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.780" endtime="20201115 22:01:11.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.093" level="INFO">${RESULT} = [{'time': 0.024616069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3986000000000146e-05, 'source_diff': 2.3986000000000146e-05}, {'time': 0.025066194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:11.090" endtime="20201115 22:01:11.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.107" level="INFO">${OVERHEAD} = {'diff': [2.3986000000000146e-05, 2.3958000000001006e-05, 2.3986000000000146e-05, 2.3915999999998827e-05, 2.393100000000134e-05, 2.3944000000001436e-05, 2.3930000000001866e-05, 2.394500000000091e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:11.094" endtime="20201115 22:01:11.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.112" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.111" endtime="20201115 22:01:11.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.115" level="INFO">VALUE: [2.3986000000000146e-05, 2.3958000000001006e-05, 2.3986000000000146e-05, 2.3915999999998827e-05, 2.393100000000134e-05, 2.3944000000001436e-05, 2.3930000000001866e-05, 2.394500000000091e-05, 2.394500000000091e-05, 2.3972000000000576e-05, 2.388900000000263e-05, 2.393099999999787e-05, 2.3986000000000146e-05, 2.3958000000001006e-05, 2.3986000000000146e-05, 2.3971999999997107e-05, 2.3985999999996677e-05, 2.3958000000004476e-05, 2.3958000000004476e-05, 2.3957999999997537e-05, 2.3929999999998397e-05, 2.393099999999787e-05, 2.3971999999997107e-05, 2.393099999999787e-05, 2.3957999999997537e-05, 2.3929999999998397e-05, 2.3943999999997967e-05, 2.3958000000004476e-05, 2.3901999999999257e-05, 2.3958000000004476e-05, 2.3999999999996247e-05, 2.3985999999996677e-05, 2.394499999999744e-05, 2.3972000000004046e-05, 2.3971999999997107e-05, 2.3944000000004906e-05, 2.3958000000004476e-05, 2.39169999999983e-05, 2.390299999999873e-05, 2.395900000000395e-05, 2.3971999999997107e-05, 2.3929999999998397e-05, 2.394499999999744e-05, 2.393099999999787e-05, 2.3929999999998397e-05, 2.393099999999787e-05, 2.3943999999997967e-05, 2.394500000000438e-05, 2.3943999999997967e-05, 2.394500000000438e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.113" endtime="20201115 22:01:11.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.108" endtime="20201115 22:01:11.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.119" endtime="20201115 22:01:11.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.122" endtime="20201115 22:01:11.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.120" endtime="20201115 22:01:11.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.117" endtime="20201115 22:01:11.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.726" endtime="20201115 22:01:11.143"></status>
</kw>
<msg timestamp="20201115 22:01:11.143" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.152" endtime="20201115 22:01:11.189"></status>
</kw>
<msg timestamp="20201115 22:01:11.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.151" endtime="20201115 22:01:11.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.190" endtime="20201115 22:01:11.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.193" endtime="20201115 22:01:11.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.148" endtime="20201115 22:01:11.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.146" endtime="20201115 22:01:11.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.202" endtime="20201115 22:01:11.490"></status>
</kw>
<msg timestamp="20201115 22:01:11.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023972694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023996667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.201" endtime="20201115 22:01:11.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023972694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023996667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.494" endtime="20201115 22:01:11.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.502" endtime="20201115 22:01:11.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.198" endtime="20201115 22:01:11.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.196" endtime="20201115 22:01:11.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.509" level="INFO">${RESULT} = [{'time': 0.023996667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.397300000000005e-05, 'source_diff': 2.397300000000005e-05}, {'time': 0.024444111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.506" endtime="20201115 22:01:11.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.523" level="INFO">${OVERHEAD} = {'diff': [2.397300000000005e-05, 2.3958000000001006e-05, 2.393100000000134e-05, 2.3943999999997967e-05, 2.3929999999998397e-05, 2.3943999999997967e-05, 2.3986000000000146e-05, 2.3958000000001006e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:11.510" endtime="20201115 22:01:11.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.528" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.527" endtime="20201115 22:01:11.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.531" level="INFO">VALUE: [2.397300000000005e-05, 2.3958000000001006e-05, 2.393100000000134e-05, 2.3943999999997967e-05, 2.3929999999998397e-05, 2.3943999999997967e-05, 2.3986000000000146e-05, 2.3958000000001006e-05, 2.3944000000001436e-05, 2.393100000000134e-05, 2.393100000000134e-05, 2.3929999999998397e-05, 2.3957999999997537e-05, 2.395900000000048e-05, 2.395900000000048e-05, 2.394500000000091e-05, 2.391700000000177e-05, 2.3943999999997967e-05, 2.394499999999744e-05, 2.393100000000481e-05, 2.39169999999983e-05, 2.394499999999744e-05, 2.393100000000481e-05, 2.395900000000395e-05, 2.394499999999744e-05, 2.394499999999744e-05, 2.397300000000352e-05, 2.3929999999998397e-05, 2.393099999999787e-05, 2.388899999999916e-05, 2.394500000000438e-05, 2.3943999999997967e-05, 2.3929999999998397e-05, 2.393100000000481e-05, 2.387499999999959e-05, 2.3943999999997967e-05, 2.3901999999999257e-05, 2.3944000000004906e-05, 2.3958000000004476e-05, 2.393100000000481e-05, 2.386100000000002e-05, 2.3971999999997107e-05, 2.39169999999983e-05, 2.3915999999998827e-05, 2.394499999999744e-05, 2.3957999999997537e-05, 2.39169999999983e-05, 2.3944000000004906e-05, 2.390299999999873e-05, 2.395899999999701e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.529" endtime="20201115 22:01:11.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.524" endtime="20201115 22:01:11.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.534" endtime="20201115 22:01:11.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.538" endtime="20201115 22:01:11.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.536" endtime="20201115 22:01:11.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.533" endtime="20201115 22:01:11.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.144" endtime="20201115 22:01:11.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.476" endtime="20201115 22:01:11.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.475" endtime="20201115 22:01:11.559"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.562" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.571" endtime="20201115 22:01:11.605"></status>
</kw>
<msg timestamp="20201115 22:01:11.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.569" endtime="20201115 22:01:11.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.608" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.607" endtime="20201115 22:01:11.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.609" endtime="20201115 22:01:11.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.567" endtime="20201115 22:01:11.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.564" endtime="20201115 22:01:11.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.619" endtime="20201115 22:01:11.906"></status>
</kw>
<msg timestamp="20201115 22:01:11.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025118528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025142681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.617" endtime="20201115 22:01:11.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025118528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025142681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.910" endtime="20201115 22:01:11.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.919" endtime="20201115 22:01:11.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.615" endtime="20201115 22:01:11.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.613" endtime="20201115 22:01:11.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.926" level="INFO">${RESULT} = [{'time': 0.025142681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415299999999898e-05, 'source_diff': 2.415299999999898e-05}, {'time': 0.025619806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.922" endtime="20201115 22:01:11.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.940" level="INFO">${OVERHEAD} = {'diff': [2.415299999999898e-05, 2.415299999999898e-05, 2.412499999999984e-05, 2.4068999999998092e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.4222000000000826e-05, 2.416699999999855e-05, 2.41...</msg>
<status status="PASS" starttime="20201115 22:01:11.927" endtime="20201115 22:01:11.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.944" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.943" endtime="20201115 22:01:11.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.947" level="INFO">VALUE: [2.415299999999898e-05, 2.415299999999898e-05, 2.412499999999984e-05, 2.4068999999998092e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.4222000000000826e-05, 2.416699999999855e-05, 2.412500000000331e-05, 2.408300000000113e-05, 2.418100000000159e-05, 2.415300000000245e-05, 2.4165999999999077e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4193999999998217e-05, 2.416699999999855e-05, 2.40970000000007e-05, 2.4137999999999937e-05, 2.412499999999984e-05, 2.408300000000113e-05, 2.412499999999984e-05, 2.412500000000678e-05, 2.418100000000506e-05, 2.416699999999855e-05, 2.411100000000027e-05, 2.416700000000549e-05, 2.418099999999812e-05, 2.4151999999999507e-05, 2.415299999999898e-05, 2.411100000000027e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.4137999999999937e-05, 2.416699999999855e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.411100000000027e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.4165999999999077e-05, 2.413899999999941e-05, 2.416700000000549e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.418099999999812e-05, 2.415300000000592e-05, 2.4194000000005156e-05, 2.418100000000506e-05, 2.415300000000592e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.945" endtime="20201115 22:01:11.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.941" endtime="20201115 22:01:11.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.951" endtime="20201115 22:01:11.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.954" endtime="20201115 22:01:11.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.953" endtime="20201115 22:01:11.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.949" endtime="20201115 22:01:11.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.562" endtime="20201115 22:01:11.975"></status>
</kw>
<msg timestamp="20201115 22:01:11.975" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.985" endtime="20201115 22:01:12.028"></status>
</kw>
<msg timestamp="20201115 22:01:12.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.983" endtime="20201115 22:01:12.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.031" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.029" endtime="20201115 22:01:12.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.032" endtime="20201115 22:01:12.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.980" endtime="20201115 22:01:12.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.978" endtime="20201115 22:01:12.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.041" endtime="20201115 22:01:12.329"></status>
</kw>
<msg timestamp="20201115 22:01:12.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025633542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025657694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.040" endtime="20201115 22:01:12.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025633542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025657694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.333" endtime="20201115 22:01:12.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.341" endtime="20201115 22:01:12.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.037" endtime="20201115 22:01:12.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.035" endtime="20201115 22:01:12.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.348" level="INFO">${RESULT} = [{'time': 0.025657694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4152000000002977e-05, 'source_diff': 2.4152000000002977e-05}, {'time': 0.026134194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:12.345" endtime="20201115 22:01:12.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.362" level="INFO">${OVERHEAD} = {'diff': [2.4152000000002977e-05, 2.4151999999999507e-05, 2.4111999999999745e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.4179999999998647e-05, 2.415299999999898e-05, 2.4137999999999937e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:12.349" endtime="20201115 22:01:12.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.368" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.366" endtime="20201115 22:01:12.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.370" level="INFO">VALUE: [2.4152000000002977e-05, 2.4151999999999507e-05, 2.4111999999999745e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.4179999999998647e-05, 2.415299999999898e-05, 2.4137999999999937e-05, 2.4180000000002116e-05, 2.415300000000245e-05, 2.4194000000001686e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.413899999999941e-05, 2.413900000000635e-05, 2.413899999999941e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.415300000000592e-05, 2.4152000000006446e-05, 2.4151999999999507e-05, 2.418099999999812e-05, 2.4250000000003435e-05, 2.4165999999999077e-05, 2.413899999999941e-05, 2.416699999999855e-05, 2.418099999999812e-05, 2.418100000000506e-05, 2.4236000000003866e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.416700000000549e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4193999999998217e-05, 2.40970000000007e-05, 2.4221999999997357e-05, 2.4084000000000605e-05, 2.4165999999999077e-05, 2.416699999999855e-05, 2.4137999999999937e-05, 2.4151999999999507e-05, 2.411100000000027e-05, 2.4165999999999077e-05, 2.411100000000027e-05, 2.4165999999999077e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.416700000000549e-05, 2.4151999999999507e-05]</msg>
<status status="PASS" starttime="20201115 22:01:12.369" endtime="20201115 22:01:12.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.364" endtime="20201115 22:01:12.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.373" endtime="20201115 22:01:12.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.377" endtime="20201115 22:01:12.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.375" endtime="20201115 22:01:12.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.372" endtime="20201115 22:01:12.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.976" endtime="20201115 22:01:12.398"></status>
</kw>
<msg timestamp="20201115 22:01:12.398" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.407" endtime="20201115 22:01:12.445"></status>
</kw>
<msg timestamp="20201115 22:01:12.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.406" endtime="20201115 22:01:12.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.446" endtime="20201115 22:01:12.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.449" endtime="20201115 22:01:12.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.403" endtime="20201115 22:01:12.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.401" endtime="20201115 22:01:12.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.458" endtime="20201115 22:01:12.746"></status>
</kw>
<msg timestamp="20201115 22:01:12.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025097056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025121194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.457" endtime="20201115 22:01:12.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025097056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025121194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.751" endtime="20201115 22:01:12.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.759" endtime="20201115 22:01:12.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.454" endtime="20201115 22:01:12.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.452" endtime="20201115 22:01:12.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.767" level="INFO">${RESULT} = [{'time': 0.025121194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4137999999999937e-05, 'source_diff': 2.4137999999999937e-05}, {'time': 0.025601056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:12.763" endtime="20201115 22:01:12.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.831" level="INFO">${OVERHEAD} = {'diff': [2.4137999999999937e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.4166000000002547e-05, 2.413899999999941e-05, 2.4165999999999077e-05, 2.415299999999898e-05, 2.4...</msg>
<status status="PASS" starttime="20201115 22:01:12.773" endtime="20201115 22:01:12.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.836" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.835" endtime="20201115 22:01:12.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.838" level="INFO">VALUE: [2.4137999999999937e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.4166000000002547e-05, 2.413899999999941e-05, 2.4165999999999077e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.418100000000159e-05, 2.418099999999812e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.406900000000156e-05, 2.415299999999898e-05, 2.4166000000006016e-05, 2.4151999999999507e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4165999999999077e-05, 2.40970000000007e-05, 2.4137999999999937e-05, 2.416699999999855e-05, 2.406900000000156e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.40970000000007e-05, 2.416699999999855e-05, 2.412499999999984e-05, 2.419500000000463e-05, 2.413899999999941e-05, 2.415299999999898e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.4151999999999507e-05, 2.412499999999984e-05, 2.4165999999999077e-05, 2.4070000000001035e-05, 2.413900000000635e-05, 2.40970000000007e-05, 2.4193999999998217e-05, 2.419499999999769e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.419499999999769e-05]</msg>
<status status="PASS" starttime="20201115 22:01:12.837" endtime="20201115 22:01:12.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.832" endtime="20201115 22:01:12.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.842" endtime="20201115 22:01:12.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.845" endtime="20201115 22:01:12.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.844" endtime="20201115 22:01:12.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.840" endtime="20201115 22:01:12.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.399" endtime="20201115 22:01:12.866"></status>
</kw>
<msg timestamp="20201115 22:01:12.866" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.876" endtime="20201115 22:01:12.912"></status>
</kw>
<msg timestamp="20201115 22:01:12.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.875" endtime="20201115 22:01:12.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.915" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.914" endtime="20201115 22:01:12.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.917" endtime="20201115 22:01:12.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.871" endtime="20201115 22:01:12.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.869" endtime="20201115 22:01:12.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.926" endtime="20201115 22:01:13.213"></status>
</kw>
<msg timestamp="20201115 22:01:13.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024197972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024222097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.925" endtime="20201115 22:01:13.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024197972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024222097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.217" endtime="20201115 22:01:13.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.226" endtime="20201115 22:01:13.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.922" endtime="20201115 22:01:13.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.920" endtime="20201115 22:01:13.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.233" level="INFO">${RESULT} = [{'time': 0.024222097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.412499999999984e-05, 'source_diff': 2.412499999999984e-05}, {'time': 0.024698361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:13.230" endtime="20201115 22:01:13.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.247" level="INFO">${OVERHEAD} = {'diff': [2.412499999999984e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.418100000000159e-05, 2.420900000000073e-05, 2.418100000000159e-05, 2.412499999999984e-05, 2.4124...</msg>
<status status="PASS" starttime="20201115 22:01:13.234" endtime="20201115 22:01:13.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.252" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.251" endtime="20201115 22:01:13.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.255" level="INFO">VALUE: [2.412499999999984e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.418100000000159e-05, 2.420900000000073e-05, 2.418100000000159e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.415299999999898e-05, 2.415300000000245e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.413900000000288e-05, 2.415299999999898e-05, 2.4236000000003866e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4165999999999077e-05, 2.4151999999999507e-05, 2.413899999999941e-05, 2.4193999999998217e-05, 2.4222000000004296e-05, 2.4235999999996927e-05, 2.419499999999769e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4151999999999507e-05, 2.412499999999984e-05, 2.4179999999998647e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.40970000000007e-05, 2.413899999999941e-05, 2.4194000000005156e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.418099999999812e-05, 2.4111999999999745e-05, 2.413899999999941e-05, 2.4235999999996927e-05, 2.413899999999941e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.415299999999898e-05, 2.40970000000007e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.4179999999998647e-05]</msg>
<status status="PASS" starttime="20201115 22:01:13.253" endtime="20201115 22:01:13.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.248" endtime="20201115 22:01:13.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.258" endtime="20201115 22:01:13.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.261" endtime="20201115 22:01:13.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.260" endtime="20201115 22:01:13.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.256" endtime="20201115 22:01:13.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.867" endtime="20201115 22:01:13.282"></status>
</kw>
<msg timestamp="20201115 22:01:13.282" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.293" endtime="20201115 22:01:13.329"></status>
</kw>
<msg timestamp="20201115 22:01:13.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.291" endtime="20201115 22:01:13.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.332" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.331" endtime="20201115 22:01:13.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.333" endtime="20201115 22:01:13.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.287" endtime="20201115 22:01:13.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.285" endtime="20201115 22:01:13.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.343" endtime="20201115 22:01:13.628"></status>
</kw>
<msg timestamp="20201115 22:01:13.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024815681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024839819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.341" endtime="20201115 22:01:13.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024815681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024839819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.632" endtime="20201115 22:01:13.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.641" endtime="20201115 22:01:13.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.338" endtime="20201115 22:01:13.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.336" endtime="20201115 22:01:13.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.648" level="INFO">${RESULT} = [{'time': 0.024839819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4137999999999937e-05, 'source_diff': 2.4137999999999937e-05}, {'time': 0.025320778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:13.644" endtime="20201115 22:01:13.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.662" level="INFO">${OVERHEAD} = {'diff': [2.4137999999999937e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.4208000000001256e-05, 2.413899999999941e-05, 2.41...</msg>
<status status="PASS" starttime="20201115 22:01:13.649" endtime="20201115 22:01:13.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.667" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.666" endtime="20201115 22:01:13.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.669" level="INFO">VALUE: [2.4137999999999937e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.4208000000001256e-05, 2.413899999999941e-05, 2.415299999999898e-05, 2.418100000000159e-05, 2.418099999999812e-05, 2.4208000000001256e-05, 2.413899999999941e-05, 2.413900000000288e-05, 2.411100000000027e-05, 2.416699999999855e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.40970000000007e-05, 2.4166000000006016e-05, 2.4151999999999507e-05, 2.4068999999994622e-05, 2.418100000000506e-05, 2.416699999999855e-05, 2.4082999999994192e-05, 2.415299999999898e-05, 2.418100000000506e-05, 2.412499999999984e-05, 2.413900000000635e-05, 2.419499999999769e-05, 2.415299999999898e-05, 2.412499999999984e-05, 2.4166000000006016e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.416700000000549e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.4193999999998217e-05, 2.413899999999941e-05, 2.411100000000027e-05, 2.419499999999769e-05, 2.416699999999855e-05, 2.4151999999999507e-05]</msg>
<status status="PASS" starttime="20201115 22:01:13.668" endtime="20201115 22:01:13.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.663" endtime="20201115 22:01:13.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.673" endtime="20201115 22:01:13.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.676" endtime="20201115 22:01:13.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.675" endtime="20201115 22:01:13.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.671" endtime="20201115 22:01:13.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.283" endtime="20201115 22:01:13.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.560" endtime="20201115 22:01:13.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.560" endtime="20201115 22:01:13.698"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.700" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.709" endtime="20201115 22:01:13.750"></status>
</kw>
<msg timestamp="20201115 22:01:13.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.707" endtime="20201115 22:01:13.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.751" endtime="20201115 22:01:13.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.754" endtime="20201115 22:01:13.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.705" endtime="20201115 22:01:13.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.702" endtime="20201115 22:01:13.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.764" endtime="20201115 22:01:14.050"></status>
</kw>
<msg timestamp="20201115 22:01:14.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026977319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027001625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.762" endtime="20201115 22:01:14.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026977319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027001625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.054" endtime="20201115 22:01:14.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.062" endtime="20201115 22:01:14.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.760" endtime="20201115 22:01:14.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.758" endtime="20201115 22:01:14.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.070" level="INFO">${RESULT} = [{'time': 0.027001625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4306000000001715e-05, 'source_diff': 2.4306000000001715e-05}, {'time': 0.027513917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:14.066" endtime="20201115 22:01:14.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.084" level="INFO">${OVERHEAD} = {'diff': [2.4306000000001715e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.438899999999966e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.433300000000138e-05, 2.437...</msg>
<status status="PASS" starttime="20201115 22:01:14.071" endtime="20201115 22:01:14.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.089" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.088" endtime="20201115 22:01:14.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.091" level="INFO">VALUE: [2.4306000000001715e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.438899999999966e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.433300000000138e-05, 2.437500000000009e-05, 2.4346999999994012e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.4429999999998897e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.4306000000001715e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.4320000000001285e-05, 2.437500000000009e-05, 2.4318999999994872e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.4361999999999995e-05, 2.4319999999994346e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.433300000000138e-05, 2.4346999999994012e-05, 2.4361999999999995e-05, 2.44169999999988e-05, 2.4346999999994012e-05, 2.4320000000001285e-05, 2.437500000000009e-05, 2.443099999999837e-05, 2.4348000000000425e-05, 2.438899999999966e-05, 2.437500000000009e-05, 2.443099999999837e-05, 2.440299999999923e-05, 2.4334000000000855e-05, 2.434700000000095e-05, 2.431900000000181e-05, 2.4415999999999327e-05]</msg>
<status status="PASS" starttime="20201115 22:01:14.090" endtime="20201115 22:01:14.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.085" endtime="20201115 22:01:14.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.094" endtime="20201115 22:01:14.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.098" endtime="20201115 22:01:14.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.096" endtime="20201115 22:01:14.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.093" endtime="20201115 22:01:14.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.700" endtime="20201115 22:01:14.119"></status>
</kw>
<msg timestamp="20201115 22:01:14.119" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.128" endtime="20201115 22:01:14.168"></status>
</kw>
<msg timestamp="20201115 22:01:14.168" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.127" endtime="20201115 22:01:14.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.169" endtime="20201115 22:01:14.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.173" endtime="20201115 22:01:14.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.124" endtime="20201115 22:01:14.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.122" endtime="20201115 22:01:14.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.182" endtime="20201115 22:01:14.468"></status>
</kw>
<msg timestamp="20201115 22:01:14.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.181" endtime="20201115 22:01:14.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.472" endtime="20201115 22:01:14.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.480" endtime="20201115 22:01:14.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.178" endtime="20201115 22:01:14.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.176" endtime="20201115 22:01:14.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.487" level="INFO">${RESULT} = [{'time': 0.022296778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.437500000000009e-05, 'source_diff': 2.437500000000009e-05}, {'time': 0.022807069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:14.484" endtime="20201115 22:01:14.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.502" level="INFO">${OVERHEAD} = {'diff': [2.437500000000009e-05, 2.4332999999997912e-05, 2.4429999999998897e-05, 2.4346999999997482e-05, 2.4306000000001715e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.437499999999662e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:14.488" endtime="20201115 22:01:14.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.507" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.506" endtime="20201115 22:01:14.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.510" level="INFO">VALUE: [2.437500000000009e-05, 2.4332999999997912e-05, 2.4429999999998897e-05, 2.4346999999997482e-05, 2.4306000000001715e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.437499999999662e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.431900000000181e-05, 2.4334000000000855e-05, 2.4332999999997912e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.437500000000009e-05, 2.4277999999999106e-05, 2.444500000000141e-05, 2.436100000000052e-05, 2.438899999999966e-05, 2.4306000000001715e-05, 2.434700000000095e-05, 2.438899999999966e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.433300000000138e-05, 2.438899999999966e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.4278000000002575e-05, 2.4306000000001715e-05, 2.434700000000095e-05, 2.4348000000000425e-05, 2.433300000000138e-05, 2.43890000000066e-05, 2.4348000000000425e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.437500000000009e-05, 2.440299999999923e-05, 2.443099999999837e-05, 2.437500000000009e-05, 2.4334000000000855e-05, 2.437500000000009e-05, 2.437500000000009e-05]</msg>
<status status="PASS" starttime="20201115 22:01:14.508" endtime="20201115 22:01:14.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.503" endtime="20201115 22:01:14.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.513" endtime="20201115 22:01:14.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.516" endtime="20201115 22:01:14.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.515" endtime="20201115 22:01:14.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.511" endtime="20201115 22:01:14.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.120" endtime="20201115 22:01:14.537"></status>
</kw>
<msg timestamp="20201115 22:01:14.537" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.547" endtime="20201115 22:01:14.589"></status>
</kw>
<msg timestamp="20201115 22:01:14.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.545" endtime="20201115 22:01:14.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.591" endtime="20201115 22:01:14.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.594" endtime="20201115 22:01:14.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.542" endtime="20201115 22:01:14.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.540" endtime="20201115 22:01:14.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.604" endtime="20201115 22:01:14.891"></status>
</kw>
<msg timestamp="20201115 22:01:14.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025945125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025969417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.602" endtime="20201115 22:01:14.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025945125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025969417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.895" endtime="20201115 22:01:14.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.903" endtime="20201115 22:01:14.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.600" endtime="20201115 22:01:14.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.598" endtime="20201115 22:01:14.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.910" level="INFO">${RESULT} = [{'time': 0.025969417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4292000000002145e-05, 'source_diff': 2.4292000000002145e-05}, {'time': 0.0264775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:14.907" endtime="20201115 22:01:14.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.924" level="INFO">${OVERHEAD} = {'diff': [2.4292000000002145e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.4416000000002797e-05, 2.4304999999998772e-05, 2.440299999999923e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.4...</msg>
<status status="PASS" starttime="20201115 22:01:14.911" endtime="20201115 22:01:14.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.929" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.928" endtime="20201115 22:01:14.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.932" level="INFO">VALUE: [2.4292000000002145e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.4416000000002797e-05, 2.4304999999998772e-05, 2.440299999999923e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.4388000000000187e-05, 2.438899999999966e-05, 2.438899999999966e-05, 2.4292000000002145e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.44169999999988e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.4443999999998467e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.4388000000000187e-05, 2.4305999999994776e-05, 2.4361999999999995e-05, 2.437500000000009e-05, 2.4348000000000425e-05, 2.4346999999994012e-05, 2.434700000000095e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.441700000000574e-05, 2.4401999999999757e-05, 2.4278000000002575e-05, 2.436100000000052e-05, 2.4443999999998467e-05, 2.4361999999999995e-05, 2.440299999999923e-05, 2.4320000000001285e-05, 2.433300000000138e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.4305999999994776e-05, 2.437500000000009e-05, 2.431900000000181e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.438899999999966e-05, 2.4348000000000425e-05, 2.436100000000052e-05, 2.438899999999966e-05]</msg>
<status status="PASS" starttime="20201115 22:01:14.930" endtime="20201115 22:01:14.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.925" endtime="20201115 22:01:14.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.935" endtime="20201115 22:01:14.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.938" endtime="20201115 22:01:14.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.937" endtime="20201115 22:01:14.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.933" endtime="20201115 22:01:14.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.538" endtime="20201115 22:01:14.960"></status>
</kw>
<msg timestamp="20201115 22:01:14.960" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.969" endtime="20201115 22:01:15.011"></status>
</kw>
<msg timestamp="20201115 22:01:15.012" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.968" endtime="20201115 22:01:15.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.013" endtime="20201115 22:01:15.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.015" endtime="20201115 22:01:15.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.965" endtime="20201115 22:01:15.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.963" endtime="20201115 22:01:15.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.026" endtime="20201115 22:01:15.312"></status>
</kw>
<msg timestamp="20201115 22:01:15.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025773014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025797361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.024" endtime="20201115 22:01:15.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025773014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025797361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.316" endtime="20201115 22:01:15.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.325" endtime="20201115 22:01:15.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.021" endtime="20201115 22:01:15.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.020" endtime="20201115 22:01:15.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.332" level="INFO">${RESULT} = [{'time': 0.025797361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.434700000000095e-05, 'source_diff': 2.434700000000095e-05}, {'time': 0.026309875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:15.328" endtime="20201115 22:01:15.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.346" level="INFO">${OVERHEAD} = {'diff': [2.434700000000095e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.433300000000138e-05, 2.4346999999997482e-05, 2.437...</msg>
<status status="PASS" starttime="20201115 22:01:15.333" endtime="20201115 22:01:15.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.351" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.350" endtime="20201115 22:01:15.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.353" level="INFO">VALUE: [2.434700000000095e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.433300000000138e-05, 2.4346999999997482e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.4334000000000855e-05, 2.437500000000009e-05, 2.4361999999999995e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.4361999999999995e-05, 2.436100000000052e-05, 2.4360999999993582e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.4361999999999995e-05, 2.434700000000095e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.4306000000001715e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.440299999999923e-05, 2.437500000000009e-05, 2.4360999999993582e-05, 2.436100000000052e-05, 2.438899999999966e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.4360999999993582e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.4346999999994012e-05, 2.437500000000009e-05]</msg>
<status status="PASS" starttime="20201115 22:01:15.352" endtime="20201115 22:01:15.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.347" endtime="20201115 22:01:15.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.357" endtime="20201115 22:01:15.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.361" endtime="20201115 22:01:15.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.359" endtime="20201115 22:01:15.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.355" endtime="20201115 22:01:15.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.961" endtime="20201115 22:01:15.381"></status>
</kw>
<msg timestamp="20201115 22:01:15.382" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.391" endtime="20201115 22:01:15.434"></status>
</kw>
<msg timestamp="20201115 22:01:15.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.389" endtime="20201115 22:01:15.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.437" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.436" endtime="20201115 22:01:15.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.438" endtime="20201115 22:01:15.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.387" endtime="20201115 22:01:15.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.384" endtime="20201115 22:01:15.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.449" endtime="20201115 22:01:15.736"></status>
</kw>
<msg timestamp="20201115 22:01:15.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025639514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025663889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.447" endtime="20201115 22:01:15.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025639514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025663889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.740" endtime="20201115 22:01:15.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.748" endtime="20201115 22:01:15.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.444" endtime="20201115 22:01:15.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.442" endtime="20201115 22:01:15.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.755" level="INFO">${RESULT} = [{'time': 0.025663889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.437500000000009e-05, 'source_diff': 2.437500000000009e-05}, {'time': 0.026174278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:15.752" endtime="20201115 22:01:15.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.769" level="INFO">${OVERHEAD} = {'diff': [2.437500000000009e-05, 2.436099999999705e-05, 2.436100000000052e-05, 2.4306000000001715e-05, 2.4306000000001715e-05, 2.434700000000095e-05, 2.4320000000001285e-05, 2.433300000000138e-05, 2.4...</msg>
<status status="PASS" starttime="20201115 22:01:15.756" endtime="20201115 22:01:15.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.774" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.773" endtime="20201115 22:01:15.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.776" level="INFO">VALUE: [2.437500000000009e-05, 2.436099999999705e-05, 2.436100000000052e-05, 2.4306000000001715e-05, 2.4306000000001715e-05, 2.434700000000095e-05, 2.4320000000001285e-05, 2.433300000000138e-05, 2.4346999999997482e-05, 2.437500000000009e-05, 2.431900000000181e-05, 2.437500000000009e-05, 2.4304999999995303e-05, 2.42770000000031e-05, 2.4360999999993582e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.434700000000095e-05, 2.437500000000009e-05, 2.433300000000138e-05, 2.4332999999994442e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.4306000000001715e-05, 2.4348000000000425e-05, 2.437500000000009e-05, 2.4320000000001285e-05, 2.434700000000095e-05, 2.4277999999995636e-05, 2.433300000000138e-05, 2.4332999999994442e-05, 2.429100000000267e-05, 2.4346999999994012e-05, 2.433300000000138e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.4319999999994346e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.4292000000002145e-05, 2.4361999999999995e-05, 2.4360999999993582e-05, 2.437500000000009e-05, 2.431900000000181e-05, 2.4361999999999995e-05, 2.4292000000002145e-05, 2.438899999999966e-05, 2.4374999999993152e-05]</msg>
<status status="PASS" starttime="20201115 22:01:15.775" endtime="20201115 22:01:15.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.770" endtime="20201115 22:01:15.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.780" endtime="20201115 22:01:15.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.784" endtime="20201115 22:01:15.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.782" endtime="20201115 22:01:15.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.779" endtime="20201115 22:01:15.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.382" endtime="20201115 22:01:15.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.699" endtime="20201115 22:01:15.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.698" endtime="20201115 22:01:15.805"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.808" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.818" endtime="20201115 22:01:15.861"></status>
</kw>
<msg timestamp="20201115 22:01:15.862" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.816" endtime="20201115 22:01:15.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.863" endtime="20201115 22:01:15.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.865" endtime="20201115 22:01:15.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.813" endtime="20201115 22:01:15.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.811" endtime="20201115 22:01:15.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.875" endtime="20201115 22:01:16.161"></status>
</kw>
<msg timestamp="20201115 22:01:16.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029445806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029470333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.873" endtime="20201115 22:01:16.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029445806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029470333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.165" endtime="20201115 22:01:16.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.173" endtime="20201115 22:01:16.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.871" endtime="20201115 22:01:16.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.869" endtime="20201115 22:01:16.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.181" level="INFO">${RESULT} = [{'time': 0.029470333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4526999999999882e-05, 'source_diff': 2.4526999999999882e-05}, {'time': 0.030013667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:16.177" endtime="20201115 22:01:16.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.196" level="INFO">${OVERHEAD} = {'diff': [2.4526999999999882e-05, 2.4513999999999786e-05, 2.4514000000003255e-05, 2.4584000000001105e-05, 2.4542000000002395e-05, 2.4499999999996747e-05, 2.4526999999996413e-05, 2.4541999999995456e-05...</msg>
<status status="PASS" starttime="20201115 22:01:16.182" endtime="20201115 22:01:16.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.201" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.199" endtime="20201115 22:01:16.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.204" level="INFO">VALUE: [2.4526999999999882e-05, 2.4513999999999786e-05, 2.4514000000003255e-05, 2.4584000000001105e-05, 2.4542000000002395e-05, 2.4499999999996747e-05, 2.4526999999996413e-05, 2.4541999999995456e-05, 2.4570000000001535e-05, 2.455500000000249e-05, 2.4499999999996747e-05, 2.4514000000003255e-05, 2.4582999999994692e-05, 2.455500000000249e-05, 2.4513999999996317e-05, 2.4485999999997177e-05, 2.4569999999994596e-05, 2.4528000000002825e-05, 2.458300000000163e-05, 2.4570000000001535e-05, 2.4570000000001535e-05, 2.4570000000001535e-05, 2.4568999999995123e-05, 2.4541999999995456e-05, 2.4513000000003782e-05, 2.4570000000001535e-05, 2.4457999999998037e-05, 2.4541999999995456e-05, 2.4528000000002825e-05, 2.4528000000002825e-05, 2.4570000000001535e-05, 2.4542000000002395e-05, 2.458300000000163e-05, 2.4570000000001535e-05, 2.4528000000002825e-05, 2.4570000000001535e-05, 2.4513999999996317e-05, 2.4568999999995123e-05, 2.454100000000292e-05, 2.4555999999995026e-05, 2.4527999999995886e-05, 2.456900000000206e-05, 2.4528000000002825e-05, 2.4556000000001965e-05, 2.4556000000001965e-05, 2.4513999999996317e-05, 2.4540999999995983e-05, 2.4555999999995026e-05, 2.4514000000003255e-05, 2.4568999999995123e-05]</msg>
<status status="PASS" starttime="20201115 22:01:16.202" endtime="20201115 22:01:16.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.197" endtime="20201115 22:01:16.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.207" endtime="20201115 22:01:16.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.210" endtime="20201115 22:01:16.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.209" endtime="20201115 22:01:16.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.205" endtime="20201115 22:01:16.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.809" endtime="20201115 22:01:16.231"></status>
</kw>
<msg timestamp="20201115 22:01:16.232" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.241" endtime="20201115 22:01:16.283"></status>
</kw>
<msg timestamp="20201115 22:01:16.283" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.239" endtime="20201115 22:01:16.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.286" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.284" endtime="20201115 22:01:16.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.287" endtime="20201115 22:01:16.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.236" endtime="20201115 22:01:16.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.234" endtime="20201115 22:01:16.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.297" endtime="20201115 22:01:16.584"></status>
</kw>
<msg timestamp="20201115 22:01:16.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024866889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024891444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.296" endtime="20201115 22:01:16.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024866889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024891444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.588" endtime="20201115 22:01:16.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.596" endtime="20201115 22:01:16.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.293" endtime="20201115 22:01:16.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.291" endtime="20201115 22:01:16.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.603" level="INFO">${RESULT} = [{'time': 0.024891444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4554999999999022e-05, 'source_diff': 2.4554999999999022e-05}, {'time': 0.025434569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:16.600" endtime="20201115 22:01:16.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.617" level="INFO">${OVERHEAD} = {'diff': [2.4554999999999022e-05, 2.4513000000000312e-05, 2.4541999999998926e-05, 2.4513999999999786e-05, 2.4568999999998592e-05, 2.4584000000001105e-05, 2.4582999999998162e-05, 2.4568999999998592e-05...</msg>
<status status="PASS" starttime="20201115 22:01:16.604" endtime="20201115 22:01:16.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.622" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.621" endtime="20201115 22:01:16.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.625" level="INFO">VALUE: [2.4554999999999022e-05, 2.4513000000000312e-05, 2.4541999999998926e-05, 2.4513999999999786e-05, 2.4568999999998592e-05, 2.4584000000001105e-05, 2.4582999999998162e-05, 2.4568999999998592e-05, 2.4554999999999022e-05, 2.4569999999998066e-05, 2.4584000000001105e-05, 2.45970000000012e-05, 2.458300000000163e-05, 2.458300000000163e-05, 2.4499999999996747e-05, 2.4570000000001535e-05, 2.458300000000163e-05, 2.4556000000001965e-05, 2.4582999999994692e-05, 2.45970000000012e-05, 2.4570000000001535e-05, 2.4569999999994596e-05, 2.458300000000163e-05, 2.4555999999995026e-05, 2.455500000000249e-05, 2.4582999999994692e-05, 2.4610999999993832e-05, 2.4584000000001105e-05, 2.462500000000034e-05, 2.45970000000012e-05, 2.4556000000001965e-05, 2.462500000000034e-05, 2.4583999999994166e-05, 2.456900000000206e-05, 2.4556000000001965e-05, 2.4582999999994692e-05, 2.458300000000163e-05, 2.45970000000012e-05, 2.4514000000003255e-05, 2.4582999999994692e-05, 2.462500000000034e-05, 2.462500000000034e-05, 2.4584000000001105e-05, 2.4612000000000245e-05, 2.454100000000292e-05, 2.455500000000249e-05, 2.4527999999995886e-05, 2.462500000000034e-05, 2.4569999999994596e-05, 2.4570000000001535e-05]</msg>
<status status="PASS" starttime="20201115 22:01:16.624" endtime="20201115 22:01:16.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.619" endtime="20201115 22:01:16.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.628" endtime="20201115 22:01:16.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.632" endtime="20201115 22:01:16.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.630" endtime="20201115 22:01:16.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.627" endtime="20201115 22:01:16.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.232" endtime="20201115 22:01:16.653"></status>
</kw>
<msg timestamp="20201115 22:01:16.653" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.662" endtime="20201115 22:01:16.706"></status>
</kw>
<msg timestamp="20201115 22:01:16.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.661" endtime="20201115 22:01:16.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.709" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.707" endtime="20201115 22:01:16.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.710" endtime="20201115 22:01:16.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.658" endtime="20201115 22:01:16.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.656" endtime="20201115 22:01:16.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.720" endtime="20201115 22:01:17.006"></status>
</kw>
<msg timestamp="20201115 22:01:17.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025424514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025449069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.719" endtime="20201115 22:01:17.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025424514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025449069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.010" endtime="20201115 22:01:17.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.018" endtime="20201115 22:01:17.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.716" endtime="20201115 22:01:17.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.714" endtime="20201115 22:01:17.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.026" level="INFO">${RESULT} = [{'time': 0.025449069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.455500000000249e-05, 'source_diff': 2.455500000000249e-05}, {'time': 0.025988375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.022" endtime="20201115 22:01:17.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.040" level="INFO">${OVERHEAD} = {'diff': [2.455500000000249e-05, 2.4513999999999786e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.4541999999998926e-05, 2.4526999999999882e-05, 2.45970000000012e-05, 2.4540999999999452e-05, 2.45...</msg>
<status status="PASS" starttime="20201115 22:01:17.027" endtime="20201115 22:01:17.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.045" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.044" endtime="20201115 22:01:17.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.047" level="INFO">VALUE: [2.455500000000249e-05, 2.4513999999999786e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.4541999999998926e-05, 2.4526999999999882e-05, 2.45970000000012e-05, 2.4540999999999452e-05, 2.4582999999998162e-05, 2.456900000000206e-05, 2.4486000000000646e-05, 2.4554999999995553e-05, 2.4570000000001535e-05, 2.4528000000002825e-05, 2.452700000000335e-05, 2.456900000000206e-05, 2.4598000000000675e-05, 2.4554999999995553e-05, 2.4597999999993736e-05, 2.45970000000012e-05, 2.45970000000012e-05, 2.4584000000001105e-05, 2.4583999999994166e-05, 2.4569999999994596e-05, 2.4582999999994692e-05, 2.4556000000001965e-05, 2.4583999999994166e-05, 2.4555999999995026e-05, 2.4556000000001965e-05, 2.4570000000001535e-05, 2.4568999999995123e-05, 2.4582999999994692e-05, 2.4542000000002395e-05, 2.45970000000012e-05, 2.458300000000163e-05, 2.4554999999995553e-05, 2.4527999999995886e-05, 2.4471999999997607e-05, 2.458300000000163e-05, 2.4556000000001965e-05, 2.452700000000335e-05, 2.4542000000002395e-05, 2.4514000000003255e-05, 2.4541999999995456e-05, 2.454100000000292e-05, 2.458300000000163e-05, 2.45970000000012e-05, 2.4555999999995026e-05, 2.4527999999995886e-05, 2.4584000000001105e-05]</msg>
<status status="PASS" starttime="20201115 22:01:17.046" endtime="20201115 22:01:17.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.041" endtime="20201115 22:01:17.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.051" endtime="20201115 22:01:17.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.054" endtime="20201115 22:01:17.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.053" endtime="20201115 22:01:17.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.049" endtime="20201115 22:01:17.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.654" endtime="20201115 22:01:17.075"></status>
</kw>
<msg timestamp="20201115 22:01:17.075" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.085" endtime="20201115 22:01:17.127"></status>
</kw>
<msg timestamp="20201115 22:01:17.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.083" endtime="20201115 22:01:17.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.130" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.129" endtime="20201115 22:01:17.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.131" endtime="20201115 22:01:17.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.080" endtime="20201115 22:01:17.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.078" endtime="20201115 22:01:17.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.142" endtime="20201115 22:01:17.427"></status>
</kw>
<msg timestamp="20201115 22:01:17.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02510525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025129833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:17.140" endtime="20201115 22:01:17.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02510525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025129833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:17.431" endtime="20201115 22:01:17.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.440" endtime="20201115 22:01:17.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.137" endtime="20201115 22:01:17.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.135" endtime="20201115 22:01:17.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.447" level="INFO">${RESULT} = [{'time': 0.025129833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458300000000163e-05, 'source_diff': 2.458300000000163e-05}, {'time': 0.025675069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.444" endtime="20201115 22:01:17.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.461" level="INFO">${OVERHEAD} = {'diff': [2.458300000000163e-05, 2.4499999999996747e-05, 2.4527999999999356e-05, 2.4568999999998592e-05, 2.4555999999998496e-05, 2.4568999999998592e-05, 2.462500000000034e-05, 2.4570000000001535e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:17.448" endtime="20201115 22:01:17.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.466" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.465" endtime="20201115 22:01:17.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.468" level="INFO">VALUE: [2.458300000000163e-05, 2.4499999999996747e-05, 2.4527999999999356e-05, 2.4568999999998592e-05, 2.4555999999998496e-05, 2.4568999999998592e-05, 2.462500000000034e-05, 2.4570000000001535e-05, 2.4541999999998926e-05, 2.452700000000335e-05, 2.4582999999998162e-05, 2.4540999999999452e-05, 2.4527999999995886e-05, 2.4514000000003255e-05, 2.4569999999994596e-05, 2.4584000000001105e-05, 2.458300000000163e-05, 2.4570000000001535e-05, 2.4499999999996747e-05, 2.456900000000206e-05, 2.4540999999995983e-05, 2.4556000000001965e-05, 2.4584000000001105e-05, 2.4485999999997177e-05, 2.4569999999994596e-05, 2.458300000000163e-05, 2.461100000000077e-05, 2.4540999999995983e-05, 2.458300000000163e-05, 2.4556000000001965e-05, 2.454100000000292e-05, 2.4528000000002825e-05, 2.4554999999995553e-05, 2.4556000000001965e-05, 2.458300000000163e-05, 2.456900000000206e-05, 2.465299999999948e-05, 2.4542000000002395e-05, 2.463899999999991e-05, 2.4540999999995983e-05, 2.4584000000001105e-05, 2.458300000000163e-05, 2.4612000000000245e-05, 2.45970000000012e-05, 2.4512999999996843e-05, 2.455500000000249e-05, 2.4556000000001965e-05, 2.456900000000206e-05, 2.461100000000077e-05, 2.454100000000292e-05]</msg>
<status status="PASS" starttime="20201115 22:01:17.467" endtime="20201115 22:01:17.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.462" endtime="20201115 22:01:17.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.472" endtime="20201115 22:01:17.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.475" endtime="20201115 22:01:17.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.474" endtime="20201115 22:01:17.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.470" endtime="20201115 22:01:17.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.076" endtime="20201115 22:01:17.496"></status>
</kw>
<msg timestamp="20201115 22:01:17.496" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.506" endtime="20201115 22:01:17.549"></status>
</kw>
<msg timestamp="20201115 22:01:17.549" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.504" endtime="20201115 22:01:17.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.552" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.550" endtime="20201115 22:01:17.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.553" endtime="20201115 22:01:17.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.501" endtime="20201115 22:01:17.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.499" endtime="20201115 22:01:17.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.563" endtime="20201115 22:01:17.850"></status>
</kw>
<msg timestamp="20201115 22:01:17.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026125569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026150125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.562" endtime="20201115 22:01:17.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026125569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026150125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.859" endtime="20201115 22:01:17.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.867" endtime="20201115 22:01:17.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.559" endtime="20201115 22:01:17.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.557" endtime="20201115 22:01:17.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.874" level="INFO">${RESULT} = [{'time': 0.026150125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4555999999998496e-05, 'source_diff': 2.4555999999998496e-05}, {'time': 0.026695653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:17.870" endtime="20201115 22:01:17.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.889" level="INFO">${OVERHEAD} = {'diff': [2.4555999999998496e-05, 2.4527999999999356e-05, 2.4584000000001105e-05, 2.4556000000001965e-05, 2.458300000000163e-05, 2.4584000000001105e-05, 2.4541999999998926e-05, 2.4596999999997732e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:17.875" endtime="20201115 22:01:17.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.894" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.893" endtime="20201115 22:01:17.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.896" level="INFO">VALUE: [2.4555999999998496e-05, 2.4527999999999356e-05, 2.4584000000001105e-05, 2.4556000000001965e-05, 2.458300000000163e-05, 2.4584000000001105e-05, 2.4541999999998926e-05, 2.4596999999997732e-05, 2.4527999999999356e-05, 2.462500000000034e-05, 2.454100000000292e-05, 2.45970000000012e-05, 2.462500000000034e-05, 2.458300000000163e-05, 2.4568999999995123e-05, 2.456900000000206e-05, 2.4514000000003255e-05, 2.4612000000000245e-05, 2.4541999999995456e-05, 2.456900000000206e-05, 2.461100000000077e-05, 2.4514000000003255e-05, 2.456900000000206e-05, 2.4570000000001535e-05, 2.458300000000163e-05, 2.4554999999995553e-05, 2.4514000000003255e-05, 2.4514000000003255e-05, 2.4555999999995026e-05, 2.4596999999994262e-05, 2.4514000000003255e-05, 2.4528000000002825e-05, 2.4598000000000675e-05, 2.4583999999994166e-05, 2.4597999999993736e-05, 2.4556000000001965e-05, 2.4499999999996747e-05, 2.4500000000003685e-05, 2.4570000000001535e-05, 2.4596999999994262e-05, 2.4556000000001965e-05, 2.455500000000249e-05, 2.452700000000335e-05, 2.4582999999994692e-05, 2.456900000000206e-05, 2.461100000000077e-05, 2.4556000000001965e-05, 2.4542000000002395e-05, 2.455500000000249e-05, 2.4528000000002825e-05]</msg>
<status status="PASS" starttime="20201115 22:01:17.895" endtime="20201115 22:01:17.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.890" endtime="20201115 22:01:17.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.900" endtime="20201115 22:01:17.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.903" endtime="20201115 22:01:17.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.902" endtime="20201115 22:01:17.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.898" endtime="20201115 22:01:17.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.497" endtime="20201115 22:01:17.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.807" endtime="20201115 22:01:17.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.806" endtime="20201115 22:01:17.924"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.927" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.936" endtime="20201115 22:01:17.976"></status>
</kw>
<msg timestamp="20201115 22:01:17.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.934" endtime="20201115 22:01:17.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.978" endtime="20201115 22:01:17.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.981" endtime="20201115 22:01:17.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.932" endtime="20201115 22:01:17.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.930" endtime="20201115 22:01:17.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.991" endtime="20201115 22:01:18.278"></status>
</kw>
<msg timestamp="20201115 22:01:18.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025219597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025244347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.989" endtime="20201115 22:01:18.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025219597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025244347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.282" endtime="20201115 22:01:18.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.290" endtime="20201115 22:01:18.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.987" endtime="20201115 22:01:18.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.985" endtime="20201115 22:01:18.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.297" level="INFO">${RESULT} = [{'time': 0.025244347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4750000000000466e-05, 'source_diff': 2.4750000000000466e-05}, {'time': 0.025821083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:18.294" endtime="20201115 22:01:18.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.312" level="INFO">${OVERHEAD} = {'diff': [2.4750000000000466e-05, 2.479100000000317e-05, 2.4778000000003075e-05, 2.4805999999998746e-05, 2.4750000000000466e-05, 2.4777999999999606e-05, 2.4777000000000132e-05, 2.4777999999999606e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:18.298" endtime="20201115 22:01:18.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.316" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.315" endtime="20201115 22:01:18.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.319" level="INFO">VALUE: [2.4750000000000466e-05, 2.479100000000317e-05, 2.4778000000003075e-05, 2.4805999999998746e-05, 2.4750000000000466e-05, 2.4777999999999606e-05, 2.4777000000000132e-05, 2.4777999999999606e-05, 2.4777000000000132e-05, 2.4778000000003075e-05, 2.4777999999999606e-05, 2.4778000000003075e-05, 2.4776999999996663e-05, 2.4792000000002645e-05, 2.4749999999996997e-05, 2.4763999999996567e-05, 2.4750000000003936e-05, 2.4764000000003505e-05, 2.4791999999995706e-05, 2.469499999999819e-05, 2.4790999999996233e-05, 2.4707999999998287e-05, 2.4750000000003936e-05, 2.4792000000002645e-05, 2.4820000000001785e-05, 2.4792000000002645e-05, 2.4778000000003075e-05, 2.4722000000004796e-05, 2.47369999999969e-05, 2.4792000000002645e-05, 2.4792000000002645e-05, 2.4764000000003505e-05, 2.4792000000002645e-05, 2.4792000000002645e-05, 2.4792000000002645e-05, 2.4806000000002215e-05, 2.4694000000005656e-05, 2.4778000000003075e-05, 2.4763999999996567e-05, 2.4735999999997427e-05, 2.4762999999997093e-05, 2.469499999999819e-05, 2.4792000000002645e-05, 2.4778000000003075e-05, 2.4777999999996136e-05, 2.4735999999997427e-05, 2.4762999999997093e-05, 2.4777000000003602e-05, 2.4790999999996233e-05, 2.4749999999996997e-05]</msg>
<status status="PASS" starttime="20201115 22:01:18.317" endtime="20201115 22:01:18.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.312" endtime="20201115 22:01:18.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.322" endtime="20201115 22:01:18.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.326" endtime="20201115 22:01:18.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.324" endtime="20201115 22:01:18.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.320" endtime="20201115 22:01:18.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.927" endtime="20201115 22:01:18.347"></status>
</kw>
<msg timestamp="20201115 22:01:18.347" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.356" endtime="20201115 22:01:18.398"></status>
</kw>
<msg timestamp="20201115 22:01:18.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.354" endtime="20201115 22:01:18.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.401" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.400" endtime="20201115 22:01:18.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.402" endtime="20201115 22:01:18.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.352" endtime="20201115 22:01:18.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.350" endtime="20201115 22:01:18.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.413" endtime="20201115 22:01:18.699"></status>
</kw>
<msg timestamp="20201115 22:01:18.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024835, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:18.411" endtime="20201115 22:01:18.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024835, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:18.703" endtime="20201115 22:01:18.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.711" endtime="20201115 22:01:18.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.409" endtime="20201115 22:01:18.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.407" endtime="20201115 22:01:18.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.718" level="INFO">${RESULT} = [{'time': 0.024835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4791999999999176e-05, 'source_diff': 2.4791999999999176e-05}, {'time': 0.025412028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:18.715" endtime="20201115 22:01:18.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.732" level="INFO">${OVERHEAD} = {'diff': [2.4791999999999176e-05, 2.4750000000000466e-05, 2.4750000000000466e-05, 2.4778000000003075e-05, 2.4708000000001756e-05, 2.4777999999999606e-05, 2.4818999999998842e-05, 2.4764000000000036e-05...</msg>
<status status="PASS" starttime="20201115 22:01:18.719" endtime="20201115 22:01:18.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.737" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.736" endtime="20201115 22:01:18.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.740" level="INFO">VALUE: [2.4791999999999176e-05, 2.4750000000000466e-05, 2.4750000000000466e-05, 2.4778000000003075e-05, 2.4708000000001756e-05, 2.4777999999999606e-05, 2.4818999999998842e-05, 2.4764000000000036e-05, 2.4790999999999702e-05, 2.4750000000000466e-05, 2.481900000000231e-05, 2.4820000000001785e-05, 2.4805999999995276e-05, 2.4805999999995276e-05, 2.4736000000004366e-05, 2.4804999999995803e-05, 2.4792000000002645e-05, 2.4721999999997857e-05, 2.479100000000317e-05, 2.4763999999996567e-05, 2.4777999999996136e-05, 2.4791999999995706e-05, 2.4736000000004366e-05, 2.4721999999997857e-05, 2.4791999999995706e-05, 2.4750000000003936e-05, 2.4736000000004366e-05, 2.4778000000003075e-05, 2.4721999999997857e-05, 2.4721999999997857e-05, 2.4792000000002645e-05, 2.4778000000003075e-05, 2.4792000000002645e-05, 2.4790999999996233e-05, 2.4806000000002215e-05, 2.4750000000003936e-05, 2.4777999999996136e-05, 2.4778000000003075e-05, 2.4764000000003505e-05, 2.4791999999995706e-05, 2.480500000000274e-05, 2.4764000000003505e-05, 2.4791999999995706e-05, 2.4750000000003936e-05, 2.4764000000003505e-05, 2.4763999999996567e-05, 2.479100000000317e-05, 2.479100000000317e-05, 2.4792000000002645e-05, 2.4722000000004796e-05]</msg>
<status status="PASS" starttime="20201115 22:01:18.738" endtime="20201115 22:01:18.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.733" endtime="20201115 22:01:18.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.743" endtime="20201115 22:01:18.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.746" endtime="20201115 22:01:18.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.745" endtime="20201115 22:01:18.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.741" endtime="20201115 22:01:18.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.347" endtime="20201115 22:01:18.767"></status>
</kw>
<msg timestamp="20201115 22:01:18.767" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.777" endtime="20201115 22:01:18.821"></status>
</kw>
<msg timestamp="20201115 22:01:18.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.775" endtime="20201115 22:01:18.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.824" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.822" endtime="20201115 22:01:18.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.825" endtime="20201115 22:01:18.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.773" endtime="20201115 22:01:18.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.770" endtime="20201115 22:01:18.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.835" endtime="20201115 22:01:19.121"></status>
</kw>
<msg timestamp="20201115 22:01:19.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026140292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026165097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.834" endtime="20201115 22:01:19.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026140292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026165097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.126" endtime="20201115 22:01:19.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.134" endtime="20201115 22:01:19.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.831" endtime="20201115 22:01:19.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.829" endtime="20201115 22:01:19.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.142" level="INFO">${RESULT} = [{'time': 0.026165097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4804999999999272e-05, 'source_diff': 2.4804999999999272e-05}, {'time': 0.026738806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:19.138" endtime="20201115 22:01:19.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.156" level="INFO">${OVERHEAD} = {'diff': [2.4804999999999272e-05, 2.4791999999999176e-05, 2.47230000000008e-05, 2.4791999999999176e-05, 2.4721999999997857e-05, 2.4722000000001326e-05, 2.4834000000001355e-05, 2.4750000000000466e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:19.143" endtime="20201115 22:01:19.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.161" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.160" endtime="20201115 22:01:19.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.164" level="INFO">VALUE: [2.4804999999999272e-05, 2.4791999999999176e-05, 2.47230000000008e-05, 2.4791999999999176e-05, 2.4721999999997857e-05, 2.4722000000001326e-05, 2.4834000000001355e-05, 2.4750000000000466e-05, 2.4777999999999606e-05, 2.479100000000317e-05, 2.4764000000003505e-05, 2.4790999999996233e-05, 2.4777000000003602e-05, 2.4778000000003075e-05, 2.4749999999996997e-05, 2.4749999999996997e-05, 2.4750000000003936e-05, 2.4764000000003505e-05, 2.4792000000002645e-05, 2.4777000000003602e-05, 2.4791999999995706e-05, 2.4833999999994416e-05, 2.4750000000003936e-05, 2.4776999999996663e-05, 2.4749999999996997e-05, 2.4764000000003505e-05, 2.4778000000003075e-05, 2.4764000000003505e-05, 2.4790999999996233e-05, 2.4736000000004366e-05, 2.4762999999997093e-05, 2.4750000000003936e-05, 2.4820000000001785e-05, 2.4735999999997427e-05, 2.4792000000002645e-05, 2.4778000000003075e-05, 2.4721999999997857e-05, 2.463899999999991e-05, 2.4722000000004796e-05, 2.4750000000003936e-05, 2.4764000000003505e-05, 2.4694000000005656e-05, 2.4818999999995373e-05, 2.4792000000002645e-05, 2.4764000000003505e-05, 2.4763999999996567e-05, 2.4790999999996233e-05, 2.4792000000002645e-05, 2.480500000000274e-05, 2.4778000000003075e-05]</msg>
<status status="PASS" starttime="20201115 22:01:19.162" endtime="20201115 22:01:19.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.157" endtime="20201115 22:01:19.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.167" endtime="20201115 22:01:19.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.171" endtime="20201115 22:01:19.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.169" endtime="20201115 22:01:19.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.165" endtime="20201115 22:01:19.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.768" endtime="20201115 22:01:19.192"></status>
</kw>
<msg timestamp="20201115 22:01:19.192" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.201" endtime="20201115 22:01:19.242"></status>
</kw>
<msg timestamp="20201115 22:01:19.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.200" endtime="20201115 22:01:19.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.244" endtime="20201115 22:01:19.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.246" endtime="20201115 22:01:19.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.197" endtime="20201115 22:01:19.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.195" endtime="20201115 22:01:19.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.257" endtime="20201115 22:01:19.543"></status>
</kw>
<msg timestamp="20201115 22:01:19.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023259764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.255" endtime="20201115 22:01:19.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023259764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.547" endtime="20201115 22:01:19.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.556" endtime="20201115 22:01:19.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.253" endtime="20201115 22:01:19.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.251" endtime="20201115 22:01:19.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.563" level="INFO">${RESULT} = [{'time': 0.023284542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4777999999999606e-05, 'source_diff': 2.4777999999999606e-05}, {'time': 0.023859514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:19.559" endtime="20201115 22:01:19.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.578" level="INFO">${OVERHEAD} = {'diff': [2.4777999999999606e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.4777000000000132e-05, 2.4764000000000036e-05...</msg>
<status status="PASS" starttime="20201115 22:01:19.564" endtime="20201115 22:01:19.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.583" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.582" endtime="20201115 22:01:19.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.585" level="INFO">VALUE: [2.4777999999999606e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.4777000000000132e-05, 2.4764000000000036e-05, 2.4806000000002215e-05, 2.4722000000001326e-05, 2.4721999999997857e-05, 2.4735999999997427e-05, 2.4736000000000896e-05, 2.4736000000000896e-05, 2.4777999999996136e-05, 2.4791999999995706e-05, 2.4721999999997857e-05, 2.4749999999996997e-05, 2.4750000000003936e-05, 2.4763999999996567e-05, 2.4736000000004366e-05, 2.4776999999996663e-05, 2.4778000000003075e-05, 2.4778000000003075e-05, 2.4792000000002645e-05, 2.4750000000003936e-05, 2.4750000000003936e-05, 2.4749999999996997e-05, 2.4778000000003075e-05, 2.4750000000003936e-05, 2.4764000000003505e-05, 2.4778000000003075e-05, 2.4818999999995373e-05, 2.4791999999995706e-05, 2.4763999999996567e-05, 2.486100000000102e-05, 2.480500000000274e-05, 2.4777999999996136e-05, 2.479100000000317e-05, 2.4763999999996567e-05, 2.4736000000004366e-05, 2.4777000000003602e-05, 2.479100000000317e-05, 2.4749999999996997e-05, 2.4804999999995803e-05, 2.479100000000317e-05, 2.466699999999905e-05, 2.4792000000002645e-05, 2.4791999999995706e-05, 2.4749999999996997e-05]</msg>
<status status="PASS" starttime="20201115 22:01:19.584" endtime="20201115 22:01:19.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.579" endtime="20201115 22:01:19.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.589" endtime="20201115 22:01:19.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.593" endtime="20201115 22:01:19.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.591" endtime="20201115 22:01:19.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.587" endtime="20201115 22:01:19.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.193" endtime="20201115 22:01:19.614"></status>
</kw>
<msg timestamp="20201115 22:01:19.614" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.623" endtime="20201115 22:01:19.664"></status>
</kw>
<msg timestamp="20201115 22:01:19.664" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.621" endtime="20201115 22:01:19.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.665" endtime="20201115 22:01:19.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.668" endtime="20201115 22:01:19.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.619" endtime="20201115 22:01:19.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.616" endtime="20201115 22:01:19.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.678" endtime="20201115 22:01:19.966"></status>
</kw>
<msg timestamp="20201115 22:01:19.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023706639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023731417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.677" endtime="20201115 22:01:19.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023706639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023731417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.970" endtime="20201115 22:01:19.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.979" endtime="20201115 22:01:19.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.674" endtime="20201115 22:01:19.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.672" endtime="20201115 22:01:19.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.986" level="INFO">${RESULT} = [{'time': 0.023731417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4777999999999606e-05, 'source_diff': 2.4777999999999606e-05}, {'time': 0.024307528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:19.982" endtime="20201115 22:01:19.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.000" level="INFO">${OVERHEAD} = {'diff': [2.4777999999999606e-05, 2.4833999999997886e-05, 2.4804999999999272e-05, 2.4764000000000036e-05, 2.4790999999999702e-05, 2.4791999999999176e-05, 2.4722000000001326e-05, 2.4764000000000036e-05...</msg>
<status status="PASS" starttime="20201115 22:01:19.987" endtime="20201115 22:01:20.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.005" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.004" endtime="20201115 22:01:20.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.007" level="INFO">VALUE: [2.4777999999999606e-05, 2.4833999999997886e-05, 2.4804999999999272e-05, 2.4764000000000036e-05, 2.4790999999999702e-05, 2.4791999999999176e-05, 2.4722000000001326e-05, 2.4764000000000036e-05, 2.4777999999999606e-05, 2.4750000000000466e-05, 2.4818999999998842e-05, 2.4764000000000036e-05, 2.4778000000003075e-05, 2.4722000000001326e-05, 2.4750000000003936e-05, 2.4778000000003075e-05, 2.4860999999994082e-05, 2.4749999999996997e-05, 2.4777000000003602e-05, 2.4790999999996233e-05, 2.4777999999996136e-05, 2.4791999999995706e-05, 2.4790999999996233e-05, 2.4735999999997427e-05, 2.4762999999997093e-05, 2.4764000000003505e-05, 2.4778000000003075e-05, 2.4778000000003075e-05, 2.4762999999997093e-05, 2.4736000000004366e-05, 2.4707999999998287e-05, 2.47090000000047e-05, 2.4735999999997427e-05, 2.4735999999997427e-05, 2.4777999999996136e-05, 2.4707999999998287e-05, 2.4791999999995706e-05, 2.4764000000003505e-05, 2.4763999999996567e-05, 2.480500000000274e-05, 2.4792000000002645e-05, 2.4790999999996233e-05, 2.4792000000002645e-05, 2.4778000000003075e-05, 2.472300000000427e-05, 2.4736000000004366e-05, 2.4792000000002645e-05, 2.4791999999995706e-05, 2.4750000000003936e-05, 2.4776999999996663e-05]</msg>
<status status="PASS" starttime="20201115 22:01:20.006" endtime="20201115 22:01:20.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.001" endtime="20201115 22:01:20.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.011" endtime="20201115 22:01:20.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.015" endtime="20201115 22:01:20.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.013" endtime="20201115 22:01:20.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.009" endtime="20201115 22:01:20.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.614" endtime="20201115 22:01:20.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.926" endtime="20201115 22:01:20.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.925" endtime="20201115 22:01:20.036"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.038" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.048" endtime="20201115 22:01:20.091"></status>
</kw>
<msg timestamp="20201115 22:01:20.092" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.046" endtime="20201115 22:01:20.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.094" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.093" endtime="20201115 22:01:20.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.095" endtime="20201115 22:01:20.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.043" endtime="20201115 22:01:20.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.041" endtime="20201115 22:01:20.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.105" endtime="20201115 22:01:20.393"></status>
</kw>
<msg timestamp="20201115 22:01:20.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023879778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023904792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.103" endtime="20201115 22:01:20.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023879778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023904792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.397" endtime="20201115 22:01:20.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.405" endtime="20201115 22:01:20.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.100" endtime="20201115 22:01:20.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.099" endtime="20201115 22:01:20.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.412" level="INFO">${RESULT} = [{'time': 0.023904792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5014000000000286e-05, 'source_diff': 2.5014000000000286e-05}, {'time': 0.024516097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:20.409" endtime="20201115 22:01:20.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.426" level="INFO">${OVERHEAD} = {'diff': [2.5014000000000286e-05, 2.4943999999998967e-05, 2.4957999999998537e-05, 2.5014000000000286e-05, 2.497300000000105e-05, 2.4985999999997677e-05, 2.4986000000001146e-05, 2.4943999999998967e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:20.413" endtime="20201115 22:01:20.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.431" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.430" endtime="20201115 22:01:20.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.434" level="INFO">VALUE: [2.5014000000000286e-05, 2.4943999999998967e-05, 2.4957999999998537e-05, 2.5014000000000286e-05, 2.497300000000105e-05, 2.4985999999997677e-05, 2.4986000000001146e-05, 2.4943999999998967e-05, 2.4958000000002006e-05, 2.4944000000002436e-05, 2.497299999999758e-05, 2.490299999999973e-05, 2.5000000000000716e-05, 2.4999999999997247e-05, 2.4985999999997677e-05, 2.4957999999998537e-05, 2.494499999999844e-05, 2.4999999999997247e-05, 2.4985999999997677e-05, 2.4929999999999397e-05, 2.4999999999997247e-05, 2.5042000000002895e-05, 2.5056000000002465e-05, 2.4971999999998107e-05, 2.4986000000004616e-05, 2.4958000000005476e-05, 2.495900000000495e-05, 2.495899999999801e-05, 2.4971999999998107e-05, 2.497300000000452e-05, 2.495899999999801e-05, 2.5012999999997343e-05, 2.5014000000003755e-05, 2.5000000000004186e-05, 2.4986000000004616e-05, 2.4957999999998537e-05, 2.495900000000495e-05, 2.4972000000005046e-05, 2.4999999999997247e-05, 2.5014000000003755e-05, 2.497299999999758e-05, 2.495900000000495e-05, 2.4915999999999827e-05, 2.4971999999998107e-05, 2.4999999999997247e-05, 2.49169999999993e-05, 2.4957999999998537e-05, 2.5013999999996817e-05, 2.493099999999887e-05, 2.5000000000004186e-05]</msg>
<status status="PASS" starttime="20201115 22:01:20.432" endtime="20201115 22:01:20.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.427" endtime="20201115 22:01:20.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.438" endtime="20201115 22:01:20.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.441" endtime="20201115 22:01:20.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.440" endtime="20201115 22:01:20.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.436" endtime="20201115 22:01:20.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.039" endtime="20201115 22:01:20.462"></status>
</kw>
<msg timestamp="20201115 22:01:20.462" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.471" endtime="20201115 22:01:20.517"></status>
</kw>
<msg timestamp="20201115 22:01:20.518" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.470" endtime="20201115 22:01:20.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.520" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.519" endtime="20201115 22:01:20.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.521" endtime="20201115 22:01:20.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.467" endtime="20201115 22:01:20.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.465" endtime="20201115 22:01:20.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.532" endtime="20201115 22:01:20.819"></status>
</kw>
<msg timestamp="20201115 22:01:20.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024383431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024408403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.530" endtime="20201115 22:01:20.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024383431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024408403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.823" endtime="20201115 22:01:20.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.831" endtime="20201115 22:01:20.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.528" endtime="20201115 22:01:20.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.526" endtime="20201115 22:01:20.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.838" level="INFO">${RESULT} = [{'time': 0.024408403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4971999999998107e-05, 'source_diff': 2.4971999999998107e-05}, {'time': 0.025014486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:20.835" endtime="20201115 22:01:20.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.853" level="INFO">${OVERHEAD} = {'diff': [2.4971999999998107e-05, 2.5014000000000286e-05, 2.4986000000001146e-05, 2.4972000000001576e-05, 2.4999999999997247e-05, 2.4986000000001146e-05, 2.4971999999998107e-05, 2.4944000000002436e-05...</msg>
<status status="PASS" starttime="20201115 22:01:20.839" endtime="20201115 22:01:20.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.858" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.857" endtime="20201115 22:01:20.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.860" level="INFO">VALUE: [2.4971999999998107e-05, 2.5014000000000286e-05, 2.4986000000001146e-05, 2.4972000000001576e-05, 2.4999999999997247e-05, 2.4986000000001146e-05, 2.4971999999998107e-05, 2.4944000000002436e-05, 2.494499999999844e-05, 2.4971999999998107e-05, 2.49169999999993e-05, 2.4985999999997677e-05, 2.5014000000003755e-05, 2.49169999999993e-05, 2.4985999999997677e-05, 2.4957999999998537e-05, 2.4999999999997247e-05, 2.4943999999998967e-05, 2.4999999999997247e-05, 2.4971999999998107e-05, 2.4971999999998107e-05, 2.5042000000002895e-05, 2.493099999999887e-05, 2.4915999999999827e-05, 2.5013999999996817e-05, 2.49169999999993e-05, 2.495899999999801e-05, 2.5042000000002895e-05, 2.4985999999997677e-05, 2.5000000000004186e-05, 2.4986000000004616e-05, 2.4999999999997247e-05, 2.4986000000004616e-05, 2.4915999999999827e-05, 2.495899999999801e-05, 2.5027999999996386e-05, 2.4999999999997247e-05, 2.4985999999997677e-05, 2.5000000000004186e-05, 2.495900000000495e-05, 2.4985999999997677e-05, 2.5013999999996817e-05, 2.5000000000004186e-05, 2.4985999999997677e-05, 2.4986000000004616e-05, 2.5028000000003325e-05, 2.4985999999997677e-05, 2.4915999999999827e-05, 2.494499999999844e-05, 2.5028000000003325e-05]</msg>
<status status="PASS" starttime="20201115 22:01:20.859" endtime="20201115 22:01:20.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.854" endtime="20201115 22:01:20.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.864" endtime="20201115 22:01:20.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.867" endtime="20201115 22:01:20.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.866" endtime="20201115 22:01:20.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.862" endtime="20201115 22:01:20.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.463" endtime="20201115 22:01:20.888"></status>
</kw>
<msg timestamp="20201115 22:01:20.889" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.899" endtime="20201115 22:01:20.944"></status>
</kw>
<msg timestamp="20201115 22:01:20.944" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.897" endtime="20201115 22:01:20.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.946" endtime="20201115 22:01:20.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.948" endtime="20201115 22:01:20.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.894" endtime="20201115 22:01:20.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.892" endtime="20201115 22:01:20.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.959" endtime="20201115 22:01:21.246"></status>
</kw>
<msg timestamp="20201115 22:01:21.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:20.957" endtime="20201115 22:01:21.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:21.250" endtime="20201115 22:01:21.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.258" endtime="20201115 22:01:21.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.954" endtime="20201115 22:01:21.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.952" endtime="20201115 22:01:21.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.266" level="INFO">${RESULT} = [{'time': 0.025359986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4986000000001146e-05, 'source_diff': 2.4986000000001146e-05}, {'time': 0.025969764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:21.262" endtime="20201115 22:01:21.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.281" level="INFO">${OVERHEAD} = {'diff': [2.4986000000001146e-05, 2.4985999999997677e-05, 2.5014000000000286e-05, 2.4985999999997677e-05, 2.4985999999997677e-05, 2.495900000000148e-05, 2.5041999999999426e-05, 2.4972000000001576e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:21.267" endtime="20201115 22:01:21.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.286" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.284" endtime="20201115 22:01:21.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.288" level="INFO">VALUE: [2.4986000000001146e-05, 2.4985999999997677e-05, 2.5014000000000286e-05, 2.4985999999997677e-05, 2.4985999999997677e-05, 2.495900000000148e-05, 2.5041999999999426e-05, 2.4972000000001576e-05, 2.5027999999999856e-05, 2.4958000000002006e-05, 2.495899999999801e-05, 2.4999999999997247e-05, 2.495900000000495e-05, 2.495900000000495e-05, 2.498700000000409e-05, 2.493099999999887e-05, 2.491700000000624e-05, 2.4971999999998107e-05, 2.4972000000005046e-05, 2.4999999999997247e-05, 2.49169999999993e-05, 2.4971999999998107e-05, 2.4971999999998107e-05, 2.494499999999844e-05, 2.5014000000003755e-05, 2.4943999999998967e-05, 2.498699999999715e-05, 2.4999999999997247e-05, 2.5014000000003755e-05, 2.4943999999998967e-05, 2.4971999999998107e-05, 2.4985999999997677e-05, 2.495899999999801e-05, 2.4957999999998537e-05, 2.5000000000004186e-05, 2.4999999999997247e-05, 2.4985999999997677e-05, 2.4999999999997247e-05, 2.5000000000004186e-05, 2.5056000000002465e-05, 2.4986000000004616e-05, 2.4971999999998107e-05, 2.4944000000005906e-05, 2.4986000000004616e-05, 2.4957999999998537e-05, 2.4915999999999827e-05, 2.4929999999999397e-05, 2.4972000000005046e-05, 2.5014000000003755e-05, 2.4985999999997677e-05]</msg>
<status status="PASS" starttime="20201115 22:01:21.287" endtime="20201115 22:01:21.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.282" endtime="20201115 22:01:21.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.292" endtime="20201115 22:01:21.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.295" endtime="20201115 22:01:21.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.294" endtime="20201115 22:01:21.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.290" endtime="20201115 22:01:21.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.889" endtime="20201115 22:01:21.316"></status>
</kw>
<msg timestamp="20201115 22:01:21.316" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.325" endtime="20201115 22:01:21.372"></status>
</kw>
<msg timestamp="20201115 22:01:21.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.324" endtime="20201115 22:01:21.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.373" endtime="20201115 22:01:21.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.376" endtime="20201115 22:01:21.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.321" endtime="20201115 22:01:21.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.319" endtime="20201115 22:01:21.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.387" endtime="20201115 22:01:21.673"></status>
</kw>
<msg timestamp="20201115 22:01:21.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024463833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024488833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.385" endtime="20201115 22:01:21.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024463833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024488833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.677" endtime="20201115 22:01:21.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.686" endtime="20201115 22:01:21.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.382" endtime="20201115 22:01:21.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.380" endtime="20201115 22:01:21.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.693" level="INFO">${RESULT} = [{'time': 0.024488833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000000716e-05, 'source_diff': 2.5000000000000716e-05}, {'time': 0.0250955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.690" endtime="20201115 22:01:21.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.707" level="INFO">${OVERHEAD} = {'diff': [2.5000000000000716e-05, 2.5000000000000716e-05, 2.4986000000001146e-05, 2.497300000000105e-05, 2.5000000000000716e-05, 2.49169999999993e-05, 2.5027999999999856e-05, 2.4915999999999827e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:21.694" endtime="20201115 22:01:21.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.712" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.711" endtime="20201115 22:01:21.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.715" level="INFO">VALUE: [2.5000000000000716e-05, 2.5000000000000716e-05, 2.4986000000001146e-05, 2.497300000000105e-05, 2.5000000000000716e-05, 2.49169999999993e-05, 2.5027999999999856e-05, 2.4915999999999827e-05, 2.4943999999998967e-05, 2.5027999999999856e-05, 2.4986000000001146e-05, 2.5000000000000716e-05, 2.4985999999997677e-05, 2.5013999999996817e-05, 2.4985999999997677e-05, 2.4943999999998967e-05, 2.5000000000004186e-05, 2.494500000000538e-05, 2.5000000000004186e-05, 2.4986000000004616e-05, 2.4999999999997247e-05, 2.4985999999997677e-05, 2.5013999999996817e-05, 2.4902000000000257e-05, 2.4971999999998107e-05, 2.4972000000005046e-05, 2.498700000000409e-05, 2.4985999999997677e-05, 2.4999999999997247e-05, 2.4986000000004616e-05, 2.5013999999996817e-05, 2.4985999999997677e-05, 2.4971999999998107e-05, 2.5082999999995192e-05, 2.4971999999998107e-05, 2.497299999999758e-05, 2.4971999999998107e-05, 2.5014000000003755e-05, 2.4957999999998537e-05, 2.5013000000004282e-05, 2.5000000000004186e-05, 2.4971999999998107e-05, 2.490299999999973e-05, 2.495900000000495e-05, 2.4971999999998107e-05, 2.4943999999998967e-05, 2.490299999999973e-05, 2.497299999999758e-05, 2.4972000000005046e-05, 2.495900000000495e-05]</msg>
<status status="PASS" starttime="20201115 22:01:21.713" endtime="20201115 22:01:21.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.708" endtime="20201115 22:01:21.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.718" endtime="20201115 22:01:21.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.722" endtime="20201115 22:01:21.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.720" endtime="20201115 22:01:21.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.716" endtime="20201115 22:01:21.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.317" endtime="20201115 22:01:21.742"></status>
</kw>
<msg timestamp="20201115 22:01:21.743" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.752" endtime="20201115 22:01:21.799"></status>
</kw>
<msg timestamp="20201115 22:01:21.799" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.750" endtime="20201115 22:01:21.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.800" endtime="20201115 22:01:21.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.803" endtime="20201115 22:01:21.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.748" endtime="20201115 22:01:21.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.745" endtime="20201115 22:01:21.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.813" endtime="20201115 22:01:22.098"></status>
</kw>
<msg timestamp="20201115 22:01:22.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025157819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025182806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.811" endtime="20201115 22:01:22.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025157819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025182806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.102" endtime="20201115 22:01:22.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.111" endtime="20201115 22:01:22.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.809" endtime="20201115 22:01:22.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.807" endtime="20201115 22:01:22.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.118" level="INFO">${RESULT} = [{'time': 0.025182806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.498699999999715e-05, 'source_diff': 2.498699999999715e-05}, {'time': 0.025788194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.114" endtime="20201115 22:01:22.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.132" level="INFO">${OVERHEAD} = {'diff': [2.498699999999715e-05, 2.5027000000000382e-05, 2.5027999999999856e-05, 2.5040999999999952e-05, 2.5014000000000286e-05, 2.4971999999998107e-05, 2.4972000000001576e-05, 2.5013999999996817e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:22.119" endtime="20201115 22:01:22.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.137" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.136" endtime="20201115 22:01:22.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.140" level="INFO">VALUE: [2.498699999999715e-05, 2.5027000000000382e-05, 2.5027999999999856e-05, 2.5040999999999952e-05, 2.5014000000000286e-05, 2.4971999999998107e-05, 2.4972000000001576e-05, 2.5013999999996817e-05, 2.4972000000001576e-05, 2.5042000000002895e-05, 2.5000000000000716e-05, 2.495900000000495e-05, 2.4985999999997677e-05, 2.5041999999995956e-05, 2.495900000000495e-05, 2.5013999999996817e-05, 2.4986000000004616e-05, 2.498700000000409e-05, 2.4999999999997247e-05, 2.5028000000003325e-05, 2.5040999999996483e-05, 2.4999999999997247e-05, 2.4943999999998967e-05, 2.5014000000003755e-05, 2.4999999999997247e-05, 2.4985999999997677e-05, 2.4915999999999827e-05, 2.4985999999997677e-05, 2.5014000000003755e-05, 2.4972000000005046e-05, 2.4957999999998537e-05, 2.4985999999997677e-05, 2.4999999999997247e-05, 2.4986000000004616e-05, 2.5014000000003755e-05, 2.4985999999997677e-05, 2.5000000000004186e-05, 2.5014000000003755e-05, 2.4999999999997247e-05, 2.490299999999973e-05, 2.4971999999998107e-05, 2.4943999999998967e-05, 2.5014000000003755e-05, 2.4971999999998107e-05, 2.4957999999998537e-05, 2.5028000000003325e-05, 2.5014000000003755e-05, 2.5000000000004186e-05, 2.5013999999996817e-05, 2.4999999999997247e-05]</msg>
<status status="PASS" starttime="20201115 22:01:22.138" endtime="20201115 22:01:22.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.133" endtime="20201115 22:01:22.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.143" endtime="20201115 22:01:22.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.146" endtime="20201115 22:01:22.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.145" endtime="20201115 22:01:22.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.141" endtime="20201115 22:01:22.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.743" endtime="20201115 22:01:22.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.037" endtime="20201115 22:01:22.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.036" endtime="20201115 22:01:22.168"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.170" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.179" endtime="20201115 22:01:22.227"></status>
</kw>
<msg timestamp="20201115 22:01:22.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.177" endtime="20201115 22:01:22.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.229" endtime="20201115 22:01:22.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.231" endtime="20201115 22:01:22.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.175" endtime="20201115 22:01:22.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.173" endtime="20201115 22:01:22.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.241" endtime="20201115 22:01:22.527"></status>
</kw>
<msg timestamp="20201115 22:01:22.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027342403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0273675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:22.240" endtime="20201115 22:01:22.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027342403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0273675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:22.531" endtime="20201115 22:01:22.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.540" endtime="20201115 22:01:22.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.237" endtime="20201115 22:01:22.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.235" endtime="20201115 22:01:22.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.547" level="INFO">${RESULT} = [{'time': 0.0273675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5096999999998232e-05, 'source_diff': 2.5096999999998232e-05}, {'time': 0.028008597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.543" endtime="20201115 22:01:22.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.561" level="INFO">${OVERHEAD} = {'diff': [2.5096999999998232e-05, 2.5166000000000077e-05, 2.519500000000216e-05, 2.5179999999999647e-05, 2.519500000000216e-05, 2.5250000000000966e-05, 2.5193999999999217e-05, 2.5207999999998787e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:22.548" endtime="20201115 22:01:22.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.566" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.565" endtime="20201115 22:01:22.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.568" level="INFO">VALUE: [2.5096999999998232e-05, 2.5166000000000077e-05, 2.519500000000216e-05, 2.5179999999999647e-05, 2.519500000000216e-05, 2.5250000000000966e-05, 2.5193999999999217e-05, 2.5207999999998787e-05, 2.5166000000000077e-05, 2.519500000000563e-05, 2.5208000000005726e-05, 2.519500000000563e-05, 2.512500000000084e-05, 2.519499999999869e-05, 2.5194000000006156e-05, 2.516699999999955e-05, 2.520899999999826e-05, 2.5208000000005726e-05, 2.5208000000005726e-05, 2.5179999999999647e-05, 2.5222000000005296e-05, 2.5235999999997927e-05, 2.515299999999998e-05, 2.518099999999912e-05, 2.518099999999912e-05, 2.519499999999869e-05, 2.5207999999998787e-05, 2.5166000000000077e-05, 2.5138000000000937e-05, 2.5221999999998357e-05, 2.518099999999912e-05, 2.518099999999912e-05, 2.520899999999826e-05, 2.520899999999826e-05, 2.5166000000000077e-05, 2.513900000000041e-05, 2.5179999999999647e-05, 2.5193999999999217e-05, 2.512500000000084e-05, 2.512500000000084e-05, 2.5207999999998787e-05, 2.5166000000000077e-05, 2.5208000000005726e-05, 2.519499999999869e-05, 2.5222000000005296e-05, 2.5166000000000077e-05, 2.5180000000006586e-05, 2.5179999999999647e-05, 2.516699999999955e-05, 2.515299999999998e-05]</msg>
<status status="PASS" starttime="20201115 22:01:22.567" endtime="20201115 22:01:22.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.562" endtime="20201115 22:01:22.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.572" endtime="20201115 22:01:22.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.575" endtime="20201115 22:01:22.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.574" endtime="20201115 22:01:22.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.570" endtime="20201115 22:01:22.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.170" endtime="20201115 22:01:22.596"></status>
</kw>
<msg timestamp="20201115 22:01:22.596" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.605" endtime="20201115 22:01:22.654"></status>
</kw>
<msg timestamp="20201115 22:01:22.654" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.604" endtime="20201115 22:01:22.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.655" endtime="20201115 22:01:22.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.658" endtime="20201115 22:01:22.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.601" endtime="20201115 22:01:22.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.599" endtime="20201115 22:01:22.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.669" endtime="20201115 22:01:22.955"></status>
</kw>
<msg timestamp="20201115 22:01:22.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025634458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025659639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.667" endtime="20201115 22:01:22.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025634458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025659639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.960" endtime="20201115 22:01:22.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.968" endtime="20201115 22:01:22.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.664" endtime="20201115 22:01:22.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.663" endtime="20201115 22:01:22.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.975" level="INFO">${RESULT} = [{'time': 0.025659639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.518100000000259e-05, 'source_diff': 2.518100000000259e-05}, {'time': 0.026304028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.972" endtime="20201115 22:01:22.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.990" level="INFO">${OVERHEAD} = {'diff': [2.518100000000259e-05, 2.512500000000084e-05, 2.5207999999998787e-05, 2.516699999999955e-05, 2.5208000000002256e-05, 2.518099999999912e-05, 2.5207999999998787e-05, 2.519499999999869e-05, 2.5...</msg>
<status status="PASS" starttime="20201115 22:01:22.976" endtime="20201115 22:01:22.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.995" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.994" endtime="20201115 22:01:22.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.998" level="INFO">VALUE: [2.518100000000259e-05, 2.512500000000084e-05, 2.5207999999998787e-05, 2.516699999999955e-05, 2.5208000000002256e-05, 2.518099999999912e-05, 2.5207999999998787e-05, 2.519499999999869e-05, 2.511100000000127e-05, 2.5207999999998787e-05, 2.512500000000084e-05, 2.5166000000000077e-05, 2.5221999999998357e-05, 2.518099999999912e-05, 2.515299999999998e-05, 2.5193999999999217e-05, 2.515299999999998e-05, 2.5180000000006586e-05, 2.519499999999869e-05, 2.515299999999998e-05, 2.5152000000000507e-05, 2.512500000000084e-05, 2.518099999999912e-05, 2.515299999999998e-05, 2.5193999999999217e-05, 2.5207999999998787e-05, 2.518099999999912e-05, 2.515299999999998e-05, 2.520899999999826e-05, 2.5221999999998357e-05, 2.515299999999998e-05, 2.512500000000084e-05, 2.516700000000649e-05, 2.5084000000001605e-05, 2.5208000000005726e-05, 2.513900000000041e-05, 2.518099999999912e-05, 2.513900000000041e-05, 2.515299999999998e-05, 2.511100000000127e-05, 2.512500000000084e-05, 2.515299999999998e-05, 2.513900000000041e-05, 2.513900000000041e-05, 2.5179999999999647e-05, 2.5207999999998787e-05, 2.515299999999998e-05, 2.511100000000127e-05, 2.5193999999999217e-05, 2.50970000000017e-05]</msg>
<status status="PASS" starttime="20201115 22:01:22.996" endtime="20201115 22:01:22.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.991" endtime="20201115 22:01:22.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.001" endtime="20201115 22:01:23.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.004" endtime="20201115 22:01:23.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.003" endtime="20201115 22:01:23.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.999" endtime="20201115 22:01:23.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.597" endtime="20201115 22:01:23.025"></status>
</kw>
<msg timestamp="20201115 22:01:23.025" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.041" endtime="20201115 22:01:23.085"></status>
</kw>
<msg timestamp="20201115 22:01:23.086" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.040" endtime="20201115 22:01:23.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.087" endtime="20201115 22:01:23.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.090" endtime="20201115 22:01:23.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.037" endtime="20201115 22:01:23.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.028" endtime="20201115 22:01:23.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.100" endtime="20201115 22:01:23.386"></status>
</kw>
<msg timestamp="20201115 22:01:23.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028441889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028467014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.099" endtime="20201115 22:01:23.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028441889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028467014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.391" endtime="20201115 22:01:23.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.399" endtime="20201115 22:01:23.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.096" endtime="20201115 22:01:23.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.094" endtime="20201115 22:01:23.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.406" level="INFO">${RESULT} = [{'time': 0.028467014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.512499999999737e-05, 'source_diff': 2.512499999999737e-05}, {'time': 0.029110722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:23.402" endtime="20201115 22:01:23.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.420" level="INFO">${OVERHEAD} = {'diff': [2.512499999999737e-05, 2.5179999999999647e-05, 2.518100000000259e-05, 2.5236000000001396e-05, 2.5291999999999676e-05, 2.5236000000004866e-05, 2.516699999999955e-05, 2.5179999999999647e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:23.407" endtime="20201115 22:01:23.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.425" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.424" endtime="20201115 22:01:23.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.427" level="INFO">VALUE: [2.512499999999737e-05, 2.5179999999999647e-05, 2.518100000000259e-05, 2.5236000000001396e-05, 2.5291999999999676e-05, 2.5236000000004866e-05, 2.516699999999955e-05, 2.5179999999999647e-05, 2.518099999999912e-05, 2.5235999999997927e-05, 2.5180000000006586e-05, 2.5249999999997497e-05, 2.5208000000005726e-05, 2.5193999999999217e-05, 2.519499999999869e-05, 2.518099999999912e-05, 2.5193999999999217e-05, 2.520899999999826e-05, 2.5179999999999647e-05, 2.520899999999826e-05, 2.5179999999999647e-05, 2.513900000000041e-05, 2.5207999999998787e-05, 2.513900000000041e-05, 2.5221999999998357e-05, 2.5193999999999217e-05, 2.5194000000006156e-05, 2.5193999999999217e-05, 2.5208000000005726e-05, 2.5179999999999647e-05, 2.518099999999912e-05, 2.516699999999955e-05, 2.5207999999998787e-05, 2.5179999999999647e-05, 2.5166000000000077e-05, 2.515299999999998e-05, 2.519499999999869e-05, 2.5235999999997927e-05, 2.519499999999869e-05, 2.5207999999998787e-05, 2.5207999999998787e-05, 2.520899999999826e-05, 2.519500000000563e-05, 2.512500000000084e-05, 2.5152000000000507e-05, 2.518100000000606e-05, 2.5193999999999217e-05, 2.5110999999994332e-05, 2.5250000000004436e-05, 2.520899999999826e-05]</msg>
<status status="PASS" starttime="20201115 22:01:23.426" endtime="20201115 22:01:23.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.421" endtime="20201115 22:01:23.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.431" endtime="20201115 22:01:23.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.434" endtime="20201115 22:01:23.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.433" endtime="20201115 22:01:23.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.429" endtime="20201115 22:01:23.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.026" endtime="20201115 22:01:23.455"></status>
</kw>
<msg timestamp="20201115 22:01:23.456" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.465" endtime="20201115 22:01:23.513"></status>
</kw>
<msg timestamp="20201115 22:01:23.513" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.463" endtime="20201115 22:01:23.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.516" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.514" endtime="20201115 22:01:23.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.517" endtime="20201115 22:01:23.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.461" endtime="20201115 22:01:23.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.458" endtime="20201115 22:01:23.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.527" endtime="20201115 22:01:23.814"></status>
</kw>
<msg timestamp="20201115 22:01:23.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025304167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025329319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.526" endtime="20201115 22:01:23.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025304167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025329319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.819" endtime="20201115 22:01:23.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.827" endtime="20201115 22:01:23.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.523" endtime="20201115 22:01:23.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.521" endtime="20201115 22:01:23.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.834" level="INFO">${RESULT} = [{'time': 0.025329319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5152000000000507e-05, 'source_diff': 2.5152000000000507e-05}, {'time': 0.025968972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:23.830" endtime="20201115 22:01:23.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.848" level="INFO">${OVERHEAD} = {'diff': [2.5152000000000507e-05, 2.5179999999999647e-05, 2.520899999999826e-05, 2.5166000000000077e-05, 2.519499999999869e-05, 2.518099999999912e-05, 2.5097999999997705e-05, 2.5166000000000077e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:23.835" endtime="20201115 22:01:23.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.853" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.852" endtime="20201115 22:01:23.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.855" level="INFO">VALUE: [2.5152000000000507e-05, 2.5179999999999647e-05, 2.520899999999826e-05, 2.5166000000000077e-05, 2.519499999999869e-05, 2.518099999999912e-05, 2.5097999999997705e-05, 2.5166000000000077e-05, 2.5222000000001826e-05, 2.5207999999998787e-05, 2.513900000000041e-05, 2.5221999999998357e-05, 2.513900000000041e-05, 2.515299999999998e-05, 2.515299999999998e-05, 2.5166000000000077e-05, 2.5110999999994332e-05, 2.518099999999912e-05, 2.5193999999999217e-05, 2.5193999999999217e-05, 2.516699999999955e-05, 2.513900000000041e-05, 2.519499999999869e-05, 2.5221999999998357e-05, 2.5249999999997497e-05, 2.516699999999955e-05, 2.5179999999999647e-05, 2.5193999999999217e-05, 2.519499999999869e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.519499999999869e-05, 2.5222000000005296e-05, 2.5194000000006156e-05, 2.515299999999998e-05, 2.515299999999998e-05, 2.50970000000017e-05, 2.513900000000041e-05, 2.518099999999912e-05, 2.515299999999998e-05, 2.518099999999912e-05, 2.518099999999912e-05, 2.513900000000041e-05, 2.5207999999998787e-05, 2.5222000000005296e-05, 2.518099999999912e-05, 2.5235999999997927e-05, 2.518099999999912e-05, 2.5179999999999647e-05, 2.5222000000005296e-05]</msg>
<status status="PASS" starttime="20201115 22:01:23.854" endtime="20201115 22:01:23.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.849" endtime="20201115 22:01:23.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.860" endtime="20201115 22:01:23.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.863" endtime="20201115 22:01:23.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.862" endtime="20201115 22:01:23.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.858" endtime="20201115 22:01:23.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.456" endtime="20201115 22:01:23.884"></status>
</kw>
<msg timestamp="20201115 22:01:23.884" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.894" endtime="20201115 22:01:23.940"></status>
</kw>
<msg timestamp="20201115 22:01:23.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.892" endtime="20201115 22:01:23.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.943" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.941" endtime="20201115 22:01:23.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.944" endtime="20201115 22:01:23.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.889" endtime="20201115 22:01:23.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.887" endtime="20201115 22:01:23.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.955" endtime="20201115 22:01:24.241"></status>
</kw>
<msg timestamp="20201115 22:01:24.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023786931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023812153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.953" endtime="20201115 22:01:24.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023786931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023812153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.245" endtime="20201115 22:01:24.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.253" endtime="20201115 22:01:24.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.950" endtime="20201115 22:01:24.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.949" endtime="20201115 22:01:24.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.260" level="INFO">${RESULT} = [{'time': 0.023812153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5221999999998357e-05, 'source_diff': 2.5221999999998357e-05}, {'time': 0.024455444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:24.257" endtime="20201115 22:01:24.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.274" level="INFO">${OVERHEAD} = {'diff': [2.5221999999998357e-05, 2.5207999999998787e-05, 2.516699999999955e-05, 2.512500000000084e-05, 2.516699999999955e-05, 2.5194000000002686e-05, 2.519499999999869e-05, 2.5221999999998357e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:24.261" endtime="20201115 22:01:24.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.279" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.278" endtime="20201115 22:01:24.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.282" level="INFO">VALUE: [2.5221999999998357e-05, 2.5207999999998787e-05, 2.516699999999955e-05, 2.512500000000084e-05, 2.516699999999955e-05, 2.5194000000002686e-05, 2.519499999999869e-05, 2.5221999999998357e-05, 2.512500000000084e-05, 2.518100000000259e-05, 2.518099999999912e-05, 2.515299999999998e-05, 2.5152000000000507e-05, 2.5110999999994332e-05, 2.5193999999999217e-05, 2.512500000000084e-05, 2.5082999999995192e-05, 2.518099999999912e-05, 2.5152000000000507e-05, 2.5179999999999647e-05, 2.512500000000084e-05, 2.5208000000005726e-05, 2.5193999999999217e-05, 2.5179999999999647e-05, 2.512500000000084e-05, 2.5152000000000507e-05, 2.5221999999998357e-05, 2.5193999999999217e-05, 2.52369999999974e-05, 2.5193999999999217e-05, 2.520899999999826e-05, 2.5207999999998787e-05, 2.5166000000000077e-05, 2.516699999999955e-05, 2.516699999999955e-05, 2.5179999999999647e-05, 2.512500000000084e-05, 2.5207999999998787e-05, 2.513900000000041e-05, 2.5193999999999217e-05, 2.5193999999999217e-05, 2.519499999999869e-05, 2.5179999999999647e-05, 2.5207999999998787e-05, 2.518099999999912e-05, 2.519499999999869e-05, 2.52090000000052e-05, 2.519499999999869e-05, 2.520899999999826e-05, 2.5222000000005296e-05]</msg>
<status status="PASS" starttime="20201115 22:01:24.280" endtime="20201115 22:01:24.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.275" endtime="20201115 22:01:24.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.285" endtime="20201115 22:01:24.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.289" endtime="20201115 22:01:24.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.287" endtime="20201115 22:01:24.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.284" endtime="20201115 22:01:24.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.885" endtime="20201115 22:01:24.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.169" endtime="20201115 22:01:24.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.168" endtime="20201115 22:01:24.310"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.313" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.322" endtime="20201115 22:01:24.367"></status>
</kw>
<msg timestamp="20201115 22:01:24.368" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.320" endtime="20201115 22:01:24.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.369" endtime="20201115 22:01:24.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.371" endtime="20201115 22:01:24.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.317" endtime="20201115 22:01:24.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.315" endtime="20201115 22:01:24.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.381" endtime="20201115 22:01:24.667"></status>
</kw>
<msg timestamp="20201115 22:01:24.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024863736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024889125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.379" endtime="20201115 22:01:24.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024863736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024889125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.672" endtime="20201115 22:01:24.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.680" endtime="20201115 22:01:24.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.377" endtime="20201115 22:01:24.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.375" endtime="20201115 22:01:24.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.687" level="INFO">${RESULT} = [{'time': 0.024889125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.538900000000066e-05, 'source_diff': 2.538900000000066e-05}, {'time': 0.025564222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.683" endtime="20201115 22:01:24.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.702" level="INFO">${OVERHEAD} = {'diff': [2.538900000000066e-05, 2.5416000000000327e-05, 2.54169999999998e-05, 2.5416000000000327e-05, 2.5318999999999342e-05, 2.5305999999999246e-05, 2.540300000000023e-05, 2.5416000000000327e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:24.688" endtime="20201115 22:01:24.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.707" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.706" endtime="20201115 22:01:24.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.710" level="INFO">VALUE: [2.538900000000066e-05, 2.5416000000000327e-05, 2.54169999999998e-05, 2.5416000000000327e-05, 2.5318999999999342e-05, 2.5305999999999246e-05, 2.540300000000023e-05, 2.5416000000000327e-05, 2.537499999999762e-05, 2.5443999999999467e-05, 2.538900000000066e-05, 2.540300000000023e-05, 2.5402000000000757e-05, 2.54169999999998e-05, 2.5471999999998607e-05, 2.536100000000152e-05, 2.536100000000152e-05, 2.543099999999937e-05, 2.536100000000152e-05, 2.529100000000367e-05, 2.5361999999994056e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.544499999999894e-05, 2.5443999999999467e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.534700000000195e-05, 2.5348000000001425e-05, 2.540300000000023e-05, 2.537500000000109e-05, 2.54169999999998e-05, 2.5374999999994152e-05, 2.540300000000023e-05, 2.54169999999998e-05, 2.537500000000109e-05, 2.541599999999339e-05, 2.5334000000001855e-05, 2.537500000000109e-05, 2.538900000000066e-05, 2.5429999999999897e-05, 2.538900000000066e-05, 2.5416000000000327e-05, 2.540300000000023e-05, 2.5374999999994152e-05, 2.5429999999999897e-05, 2.534700000000195e-05, 2.5429999999999897e-05, 2.540300000000023e-05]</msg>
<status status="PASS" starttime="20201115 22:01:24.708" endtime="20201115 22:01:24.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.703" endtime="20201115 22:01:24.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.713" endtime="20201115 22:01:24.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.717" endtime="20201115 22:01:24.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.715" endtime="20201115 22:01:24.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.712" endtime="20201115 22:01:24.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.313" endtime="20201115 22:01:24.738"></status>
</kw>
<msg timestamp="20201115 22:01:24.738" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.747" endtime="20201115 22:01:24.794"></status>
</kw>
<msg timestamp="20201115 22:01:24.794" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.746" endtime="20201115 22:01:24.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.797" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.795" endtime="20201115 22:01:24.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.798" endtime="20201115 22:01:24.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.743" endtime="20201115 22:01:24.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.741" endtime="20201115 22:01:24.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.808" endtime="20201115 22:01:25.095"></status>
</kw>
<msg timestamp="20201115 22:01:25.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024105403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.807" endtime="20201115 22:01:25.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024105403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.099" endtime="20201115 22:01:25.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.108" endtime="20201115 22:01:25.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.804" endtime="20201115 22:01:25.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.802" endtime="20201115 22:01:25.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.115" level="INFO">${RESULT} = [{'time': 0.024130778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.537499999999762e-05, 'source_diff': 2.537499999999762e-05}, {'time': 0.024803917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.111" endtime="20201115 22:01:25.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.129" level="INFO">${OVERHEAD} = {'diff': [2.537499999999762e-05, 2.540300000000023e-05, 2.536100000000152e-05, 2.537500000000109e-05, 2.54169999999998e-05, 2.537500000000109e-05, 2.538900000000066e-05, 2.5346999999998482e-05, 2.5417...</msg>
<status status="PASS" starttime="20201115 22:01:25.116" endtime="20201115 22:01:25.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.134" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.133" endtime="20201115 22:01:25.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.136" level="INFO">VALUE: [2.537499999999762e-05, 2.540300000000023e-05, 2.536100000000152e-05, 2.537500000000109e-05, 2.54169999999998e-05, 2.537500000000109e-05, 2.538900000000066e-05, 2.5346999999998482e-05, 2.541700000000327e-05, 2.543099999999937e-05, 2.543100000000284e-05, 2.540300000000023e-05, 2.544500000000588e-05, 2.537500000000109e-05, 2.5457999999999037e-05, 2.533300000000238e-05, 2.5416000000000327e-05, 2.5360999999994582e-05, 2.5360999999994582e-05, 2.545899999999851e-05, 2.5402000000000757e-05, 2.540300000000023e-05, 2.5388999999993722e-05, 2.534700000000195e-05, 2.540300000000023e-05, 2.537500000000109e-05, 2.5429999999999897e-05, 2.540300000000023e-05, 2.5360999999994582e-05, 2.538900000000066e-05, 2.5346999999995012e-05, 2.537500000000109e-05, 2.537500000000109e-05, 2.54169999999998e-05, 2.545899999999851e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.543099999999937e-05, 2.5360999999994582e-05, 2.540300000000023e-05, 2.536100000000152e-05, 2.537500000000109e-05, 2.5348000000001425e-05, 2.537500000000109e-05, 2.5374999999994152e-05, 2.543099999999937e-05, 2.5318999999995873e-05, 2.54169999999998e-05, 2.54169999999998e-05, 2.5346999999995012e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.135" endtime="20201115 22:01:25.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.130" endtime="20201115 22:01:25.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.140" endtime="20201115 22:01:25.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.143" endtime="20201115 22:01:25.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.142" endtime="20201115 22:01:25.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.138" endtime="20201115 22:01:25.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.738" endtime="20201115 22:01:25.164"></status>
</kw>
<msg timestamp="20201115 22:01:25.164" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.174" endtime="20201115 22:01:25.220"></status>
</kw>
<msg timestamp="20201115 22:01:25.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.172" endtime="20201115 22:01:25.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.223" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.222" endtime="20201115 22:01:25.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.224" endtime="20201115 22:01:25.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.169" endtime="20201115 22:01:25.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.167" endtime="20201115 22:01:25.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.235" endtime="20201115 22:01:25.521"></status>
</kw>
<msg timestamp="20201115 22:01:25.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024722278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024747694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.233" endtime="20201115 22:01:25.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024722278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024747694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.525" endtime="20201115 22:01:25.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.533" endtime="20201115 22:01:25.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.230" endtime="20201115 22:01:25.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.229" endtime="20201115 22:01:25.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.540" level="INFO">${RESULT} = [{'time': 0.024747694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5416000000000327e-05, 'source_diff': 2.5416000000000327e-05}, {'time': 0.025421514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:25.537" endtime="20201115 22:01:25.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.555" level="INFO">${OVERHEAD} = {'diff': [2.5416000000000327e-05, 2.543099999999937e-05, 2.538899999999719e-05, 2.537500000000109e-05, 2.5416000000000327e-05, 2.5333999999998386e-05, 2.544499999999894e-05, 2.5388000000001187e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:25.542" endtime="20201115 22:01:25.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.559" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.558" endtime="20201115 22:01:25.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.562" level="INFO">VALUE: [2.5416000000000327e-05, 2.543099999999937e-05, 2.538899999999719e-05, 2.537500000000109e-05, 2.5416000000000327e-05, 2.5333999999998386e-05, 2.544499999999894e-05, 2.5388000000001187e-05, 2.54169999999998e-05, 2.5304999999999772e-05, 2.5374999999994152e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.536100000000152e-05, 2.540300000000023e-05, 2.54169999999998e-05, 2.543099999999937e-05, 2.54169999999998e-05, 2.537500000000109e-05, 2.537500000000109e-05, 2.537500000000109e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.5306000000002715e-05, 2.5388999999993722e-05, 2.5457999999999037e-05, 2.534700000000195e-05, 2.5374999999994152e-05, 2.536100000000152e-05, 2.5374999999994152e-05, 2.5334000000001855e-05, 2.5362000000000995e-05, 2.54169999999998e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.533300000000238e-05, 2.5416000000000327e-05, 2.540300000000023e-05, 2.5402000000000757e-05, 2.5388000000001187e-05, 2.5416000000000327e-05, 2.54169999999998e-05, 2.537500000000109e-05, 2.543099999999937e-05, 2.5416000000000327e-05, 2.54169999999998e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.561" endtime="20201115 22:01:25.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.556" endtime="20201115 22:01:25.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.565" endtime="20201115 22:01:25.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.569" endtime="20201115 22:01:25.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.567" endtime="20201115 22:01:25.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.564" endtime="20201115 22:01:25.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.165" endtime="20201115 22:01:25.590"></status>
</kw>
<msg timestamp="20201115 22:01:25.590" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.599" endtime="20201115 22:01:25.648"></status>
</kw>
<msg timestamp="20201115 22:01:25.648" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.598" endtime="20201115 22:01:25.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.651" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.650" endtime="20201115 22:01:25.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.652" endtime="20201115 22:01:25.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.595" endtime="20201115 22:01:25.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.593" endtime="20201115 22:01:25.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.662" endtime="20201115 22:01:25.949"></status>
</kw>
<msg timestamp="20201115 22:01:25.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026128472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026153875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.661" endtime="20201115 22:01:25.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026128472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026153875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.953" endtime="20201115 22:01:25.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.962" endtime="20201115 22:01:25.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.658" endtime="20201115 22:01:25.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.656" endtime="20201115 22:01:25.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.970" level="INFO">${RESULT} = [{'time': 0.026153875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.540300000000023e-05, 'source_diff': 2.540300000000023e-05}, {'time': 0.026826958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.966" endtime="20201115 22:01:25.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.984" level="INFO">${OVERHEAD} = {'diff': [2.540300000000023e-05, 2.538900000000066e-05, 2.5443999999999467e-05, 2.536100000000152e-05, 2.5429999999999897e-05, 2.54169999999998e-05, 2.540300000000023e-05, 2.5360999999998052e-05, 2.54...</msg>
<status status="PASS" starttime="20201115 22:01:25.971" endtime="20201115 22:01:25.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.989" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.988" endtime="20201115 22:01:25.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.991" level="INFO">VALUE: [2.540300000000023e-05, 2.538900000000066e-05, 2.5443999999999467e-05, 2.536100000000152e-05, 2.5429999999999897e-05, 2.54169999999998e-05, 2.540300000000023e-05, 2.5360999999998052e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.536100000000152e-05, 2.5388000000001187e-05, 2.537500000000109e-05, 2.5361999999994056e-05, 2.5429999999999897e-05, 2.5360999999994582e-05, 2.540300000000023e-05, 2.5347999999994486e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.54169999999998e-05, 2.5319999999995346e-05, 2.545899999999851e-05, 2.5416000000000327e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.5402000000000757e-05, 2.537500000000109e-05, 2.540300000000023e-05, 2.544499999999894e-05, 2.534700000000195e-05, 2.537500000000109e-05, 2.5416000000000327e-05, 2.544499999999894e-05, 2.537500000000109e-05, 2.5416000000000327e-05, 2.534700000000195e-05, 2.538900000000066e-05, 2.544499999999894e-05, 2.5388000000001187e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.54169999999998e-05, 2.537500000000109e-05, 2.537500000000109e-05, 2.5402000000000757e-05, 2.537500000000109e-05, 2.534700000000195e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.990" endtime="20201115 22:01:25.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.985" endtime="20201115 22:01:25.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.995" endtime="20201115 22:01:25.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.998" endtime="20201115 22:01:26.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.997" endtime="20201115 22:01:26.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.993" endtime="20201115 22:01:26.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.591" endtime="20201115 22:01:26.019"></status>
</kw>
<msg timestamp="20201115 22:01:26.020" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.029" endtime="20201115 22:01:26.074"></status>
</kw>
<msg timestamp="20201115 22:01:26.075" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.027" endtime="20201115 22:01:26.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.076" endtime="20201115 22:01:26.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.079" endtime="20201115 22:01:26.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.024" endtime="20201115 22:01:26.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.022" endtime="20201115 22:01:26.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.089" endtime="20201115 22:01:26.376"></status>
</kw>
<msg timestamp="20201115 22:01:26.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023614472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.087" endtime="20201115 22:01:26.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023614472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.380" endtime="20201115 22:01:26.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.389" endtime="20201115 22:01:26.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.085" endtime="20201115 22:01:26.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.083" endtime="20201115 22:01:26.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.396" level="INFO">${RESULT} = [{'time': 0.023614472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5443999999999467e-05, 'source_diff': 2.5443999999999467e-05}, {'time': 0.024287569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:26.392" endtime="20201115 22:01:26.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.411" level="INFO">${OVERHEAD} = {'diff': [2.5443999999999467e-05, 2.537499999999762e-05, 2.5291999999999676e-05, 2.5416000000000327e-05, 2.54169999999998e-05, 2.5429999999999897e-05, 2.538900000000066e-05, 2.536100000000152e-05, 2.5...</msg>
<status status="PASS" starttime="20201115 22:01:26.397" endtime="20201115 22:01:26.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.416" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.415" endtime="20201115 22:01:26.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.418" level="INFO">VALUE: [2.5443999999999467e-05, 2.537499999999762e-05, 2.5291999999999676e-05, 2.5416000000000327e-05, 2.54169999999998e-05, 2.5429999999999897e-05, 2.538900000000066e-05, 2.536100000000152e-05, 2.541700000000327e-05, 2.5320000000002285e-05, 2.537500000000109e-05, 2.538900000000066e-05, 2.541700000000674e-05, 2.5416000000000327e-05, 2.544500000000588e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.5402000000000757e-05, 2.5429999999999897e-05, 2.534700000000195e-05, 2.5402000000000757e-05, 2.536100000000152e-05, 2.534700000000195e-05, 2.540300000000023e-05, 2.54169999999998e-05, 2.5457999999999037e-05, 2.537500000000109e-05, 2.5292000000003145e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.536100000000152e-05, 2.540300000000023e-05, 2.545900000000545e-05, 2.54169999999998e-05, 2.536100000000152e-05, 2.543100000000631e-05, 2.54169999999998e-05, 2.54169999999998e-05, 2.536100000000152e-05, 2.5388999999993722e-05, 2.536100000000152e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.534700000000195e-05, 2.5485999999998177e-05, 2.534700000000195e-05, 2.5402000000000757e-05, 2.536100000000152e-05, 2.540300000000023e-05]</msg>
<status status="PASS" starttime="20201115 22:01:26.417" endtime="20201115 22:01:26.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.412" endtime="20201115 22:01:26.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.421" endtime="20201115 22:01:26.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.425" endtime="20201115 22:01:26.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.423" endtime="20201115 22:01:26.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.420" endtime="20201115 22:01:26.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.020" endtime="20201115 22:01:26.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.312" endtime="20201115 22:01:26.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.311" endtime="20201115 22:01:26.446"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.449" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.458" endtime="20201115 22:01:26.507"></status>
</kw>
<msg timestamp="20201115 22:01:26.507" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.456" endtime="20201115 22:01:26.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.510" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.508" endtime="20201115 22:01:26.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.511" endtime="20201115 22:01:26.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.454" endtime="20201115 22:01:26.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.451" endtime="20201115 22:01:26.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.521" endtime="20201115 22:01:26.807"></status>
</kw>
<msg timestamp="20201115 22:01:26.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024113597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024139208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.519" endtime="20201115 22:01:26.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024113597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024139208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.812" endtime="20201115 22:01:26.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.820" endtime="20201115 22:01:26.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.517" endtime="20201115 22:01:26.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.515" endtime="20201115 22:01:26.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.827" level="INFO">${RESULT} = [{'time': 0.024139208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5610999999998302e-05, 'source_diff': 2.5610999999998302e-05}, {'time': 0.024848792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:26.823" endtime="20201115 22:01:26.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.841" level="INFO">${OVERHEAD} = {'diff': [2.5610999999998302e-05, 2.5528000000000356e-05, 2.5582999999999162e-05, 2.5596999999998732e-05, 2.5610999999998302e-05, 2.5624999999997872e-05, 2.5555000000000022e-05, 2.5610999999998302e-05...</msg>
<status status="PASS" starttime="20201115 22:01:26.828" endtime="20201115 22:01:26.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.846" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.845" endtime="20201115 22:01:26.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.849" level="INFO">VALUE: [2.5610999999998302e-05, 2.5528000000000356e-05, 2.5582999999999162e-05, 2.5596999999998732e-05, 2.5610999999998302e-05, 2.5624999999997872e-05, 2.5555000000000022e-05, 2.5610999999998302e-05, 2.556900000000306e-05, 2.5612000000001245e-05, 2.5555000000000022e-05, 2.5638999999993972e-05, 2.562500000000134e-05, 2.563900000000091e-05, 2.562500000000134e-05, 2.5597999999994736e-05, 2.5610999999994832e-05, 2.5624999999994402e-05, 2.5555999999996026e-05, 2.562500000000134e-05, 2.562500000000134e-05, 2.55970000000022e-05, 2.561100000000177e-05, 2.561100000000177e-05, 2.565300000000048e-05, 2.563900000000091e-05, 2.5596999999995262e-05, 2.562500000000134e-05, 2.5582999999995693e-05, 2.561100000000177e-05, 2.555500000000349e-05, 2.5638999999993972e-05, 2.5596999999995262e-05, 2.562500000000134e-05, 2.561100000000177e-05, 2.563900000000091e-05, 2.55970000000022e-05, 2.562500000000134e-05, 2.5598000000001675e-05, 2.562500000000134e-05, 2.561100000000177e-05, 2.5570000000002535e-05, 2.563900000000091e-05, 2.5624999999994402e-05, 2.5556000000002965e-05, 2.563900000000091e-05, 2.5693999999999717e-05, 2.5556000000002965e-05, 2.5527999999996887e-05, 2.5584000000002105e-05]</msg>
<status status="PASS" starttime="20201115 22:01:26.847" endtime="20201115 22:01:26.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.842" endtime="20201115 22:01:26.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.852" endtime="20201115 22:01:26.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.855" endtime="20201115 22:01:26.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.854" endtime="20201115 22:01:26.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.850" endtime="20201115 22:01:26.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.449" endtime="20201115 22:01:26.876"></status>
</kw>
<msg timestamp="20201115 22:01:26.876" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.886" endtime="20201115 22:01:26.938"></status>
</kw>
<msg timestamp="20201115 22:01:26.939" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.884" endtime="20201115 22:01:26.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.942" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.940" endtime="20201115 22:01:26.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.943" endtime="20201115 22:01:26.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.881" endtime="20201115 22:01:26.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.879" endtime="20201115 22:01:26.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.953" endtime="20201115 22:01:27.240"></status>
</kw>
<msg timestamp="20201115 22:01:27.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025875917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025901458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.952" endtime="20201115 22:01:27.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025875917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025901458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.244" endtime="20201115 22:01:27.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.253" endtime="20201115 22:01:27.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.949" endtime="20201115 22:01:27.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.947" endtime="20201115 22:01:27.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.260" level="INFO">${RESULT} = [{'time': 0.025901458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5541000000000452e-05, 'source_diff': 2.5541000000000452e-05}, {'time': 0.026611819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:27.256" endtime="20201115 22:01:27.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.274" level="INFO">${OVERHEAD} = {'diff': [2.5541000000000452e-05, 2.5582999999999162e-05, 2.5598000000001675e-05, 2.5596999999998732e-05, 2.5568999999999592e-05, 2.561100000000177e-05, 2.5555000000000022e-05, 2.5598000000001675e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:27.261" endtime="20201115 22:01:27.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.278" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.277" endtime="20201115 22:01:27.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.281" level="INFO">VALUE: [2.5541000000000452e-05, 2.5582999999999162e-05, 2.5598000000001675e-05, 2.5596999999998732e-05, 2.5568999999999592e-05, 2.561100000000177e-05, 2.5555000000000022e-05, 2.5598000000001675e-05, 2.5569999999995596e-05, 2.5584000000002105e-05, 2.5610999999994832e-05, 2.554100000000392e-05, 2.562500000000134e-05, 2.558300000000263e-05, 2.5638999999993972e-05, 2.5598000000001675e-05, 2.558300000000263e-05, 2.562500000000134e-05, 2.55970000000022e-05, 2.568099999999962e-05, 2.563900000000091e-05, 2.5582999999995693e-05, 2.563900000000091e-05, 2.5596999999995262e-05, 2.5584000000002105e-05, 2.5612000000001245e-05, 2.561100000000177e-05, 2.5569999999995596e-05, 2.561100000000177e-05, 2.555500000000349e-05, 2.5610999999994832e-05, 2.562500000000134e-05, 2.565300000000048e-05, 2.5527000000004352e-05, 2.562500000000134e-05, 2.561100000000177e-05, 2.566700000000005e-05, 2.5556000000002965e-05, 2.5638999999993972e-05, 2.5596999999995262e-05, 2.562500000000134e-05, 2.562500000000134e-05, 2.562500000000134e-05, 2.5542000000003395e-05, 2.5596999999995262e-05, 2.561100000000177e-05, 2.561100000000177e-05, 2.562500000000134e-05, 2.562500000000134e-05, 2.5598000000001675e-05]</msg>
<status status="PASS" starttime="20201115 22:01:27.279" endtime="20201115 22:01:27.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.275" endtime="20201115 22:01:27.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.284" endtime="20201115 22:01:27.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.288" endtime="20201115 22:01:27.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.286" endtime="20201115 22:01:27.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.282" endtime="20201115 22:01:27.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.877" endtime="20201115 22:01:27.309"></status>
</kw>
<msg timestamp="20201115 22:01:27.309" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.319" endtime="20201115 22:01:27.370"></status>
</kw>
<msg timestamp="20201115 22:01:27.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.317" endtime="20201115 22:01:27.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.371" endtime="20201115 22:01:27.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.374" endtime="20201115 22:01:27.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.314" endtime="20201115 22:01:27.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.312" endtime="20201115 22:01:27.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.384" endtime="20201115 22:01:27.689"></status>
</kw>
<msg timestamp="20201115 22:01:27.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025535653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025561208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.383" endtime="20201115 22:01:27.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025535653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025561208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.699" endtime="20201115 22:01:27.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.713" endtime="20201115 22:01:27.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.380" endtime="20201115 22:01:27.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.378" endtime="20201115 22:01:27.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.720" level="INFO">${RESULT} = [{'time': 0.025561208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5555000000000022e-05, 'source_diff': 2.5555000000000022e-05}, {'time': 0.026268917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:27.717" endtime="20201115 22:01:27.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.734" level="INFO">${OVERHEAD} = {'diff': [2.5555000000000022e-05, 2.5583999999998636e-05, 2.563900000000091e-05, 2.5598000000001675e-05, 2.561100000000177e-05, 2.5584000000002105e-05, 2.5583999999998636e-05, 2.561100000000177e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:27.721" endtime="20201115 22:01:27.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.739" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.738" endtime="20201115 22:01:27.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.742" level="INFO">VALUE: [2.5555000000000022e-05, 2.5583999999998636e-05, 2.563900000000091e-05, 2.5598000000001675e-05, 2.561100000000177e-05, 2.5584000000002105e-05, 2.5583999999998636e-05, 2.561100000000177e-05, 2.5612000000001245e-05, 2.5568999999996123e-05, 2.562500000000134e-05, 2.5554999999996553e-05, 2.5555999999996026e-05, 2.5556000000002965e-05, 2.5612000000001245e-05, 2.561100000000177e-05, 2.5570000000002535e-05, 2.5555999999996026e-05, 2.562500000000134e-05, 2.5556000000002965e-05, 2.5514000000004255e-05, 2.556900000000306e-05, 2.5582999999995693e-05, 2.558300000000263e-05, 2.55970000000022e-05, 2.5583999999995166e-05, 2.565300000000048e-05, 2.5584000000002105e-05, 2.5570000000002535e-05, 2.5499999999997747e-05, 2.55970000000022e-05, 2.5596999999995262e-05, 2.55970000000022e-05, 2.562500000000134e-05, 2.562500000000134e-05, 2.562500000000134e-05, 2.556900000000306e-05, 2.55970000000022e-05, 2.5596999999995262e-05, 2.558300000000263e-05, 2.5612000000001245e-05, 2.5582999999995693e-05, 2.5556000000002965e-05, 2.55970000000022e-05, 2.562500000000134e-05, 2.5680000000000147e-05, 2.5582999999995693e-05, 2.5584000000002105e-05, 2.565300000000048e-05, 2.569499999999919e-05]</msg>
<status status="PASS" starttime="20201115 22:01:27.740" endtime="20201115 22:01:27.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.735" endtime="20201115 22:01:27.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.745" endtime="20201115 22:01:27.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.749" endtime="20201115 22:01:27.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.747" endtime="20201115 22:01:27.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.743" endtime="20201115 22:01:27.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.309" endtime="20201115 22:01:27.770"></status>
</kw>
<msg timestamp="20201115 22:01:27.770" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.779" endtime="20201115 22:01:27.828"></status>
</kw>
<msg timestamp="20201115 22:01:27.828" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.778" endtime="20201115 22:01:27.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.831" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.829" endtime="20201115 22:01:27.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.832" endtime="20201115 22:01:27.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.775" endtime="20201115 22:01:27.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.773" endtime="20201115 22:01:27.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.842" endtime="20201115 22:01:28.127"></status>
</kw>
<msg timestamp="20201115 22:01:28.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021774944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.841" endtime="20201115 22:01:28.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021774944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.131" endtime="20201115 22:01:28.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.140" endtime="20201115 22:01:28.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.838" endtime="20201115 22:01:28.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.836" endtime="20201115 22:01:28.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.147" level="INFO">${RESULT} = [{'time': 0.021774944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.562500000000134e-05, 'source_diff': 2.562500000000134e-05}, {'time': 0.02248275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:28.143" endtime="20201115 22:01:28.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.162" level="INFO">${OVERHEAD} = {'diff': [2.562500000000134e-05, 2.563900000000091e-05, 2.5569999999999066e-05, 2.5598000000001675e-05, 2.5584000000002105e-05, 2.565300000000048e-05, 2.561100000000177e-05, 2.561100000000177e-05, 2.5...</msg>
<status status="PASS" starttime="20201115 22:01:28.148" endtime="20201115 22:01:28.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.167" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.166" endtime="20201115 22:01:28.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.170" level="INFO">VALUE: [2.562500000000134e-05, 2.563900000000091e-05, 2.5569999999999066e-05, 2.5598000000001675e-05, 2.5584000000002105e-05, 2.565300000000048e-05, 2.561100000000177e-05, 2.561100000000177e-05, 2.5514000000000786e-05, 2.5568999999999592e-05, 2.5598000000001675e-05, 2.5528000000000356e-05, 2.5624999999997872e-05, 2.561100000000177e-05, 2.556900000000306e-05, 2.562500000000134e-05, 2.5555999999996026e-05, 2.5612000000001245e-05, 2.5584000000002105e-05, 2.55970000000022e-05, 2.5554999999996553e-05, 2.561100000000177e-05, 2.561100000000177e-05, 2.555500000000349e-05, 2.5570000000002535e-05, 2.5568999999996123e-05, 2.5554999999996553e-05, 2.5596999999995262e-05, 2.5597999999994736e-05, 2.5624999999994402e-05, 2.561100000000177e-05, 2.55970000000022e-05, 2.5513999999997317e-05, 2.5610999999994832e-05, 2.5610999999994832e-05, 2.562500000000134e-05, 2.5582999999995693e-05, 2.566700000000005e-05, 2.565199999999407e-05, 2.5570000000002535e-05, 2.561100000000177e-05, 2.5514000000004255e-05, 2.5541999999996456e-05, 2.5610999999994832e-05, 2.5638000000001437e-05, 2.55970000000022e-05, 2.554100000000392e-05, 2.5584000000002105e-05, 2.561100000000177e-05, 2.5555999999996026e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.168" endtime="20201115 22:01:28.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.163" endtime="20201115 22:01:28.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.173" endtime="20201115 22:01:28.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.177" endtime="20201115 22:01:28.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.175" endtime="20201115 22:01:28.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.172" endtime="20201115 22:01:28.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.771" endtime="20201115 22:01:28.198"></status>
</kw>
<msg timestamp="20201115 22:01:28.198" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.207" endtime="20201115 22:01:28.259"></status>
</kw>
<msg timestamp="20201115 22:01:28.260" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.206" endtime="20201115 22:01:28.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.262" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.261" endtime="20201115 22:01:28.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.264" endtime="20201115 22:01:28.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.203" endtime="20201115 22:01:28.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.201" endtime="20201115 22:01:28.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.274" endtime="20201115 22:01:28.560"></status>
</kw>
<msg timestamp="20201115 22:01:28.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025564639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02559025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:28.272" endtime="20201115 22:01:28.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025564639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02559025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:28.564" endtime="20201115 22:01:28.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.572" endtime="20201115 22:01:28.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.270" endtime="20201115 22:01:28.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.268" endtime="20201115 22:01:28.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.579" level="INFO">${RESULT} = [{'time': 0.02559025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5610999999998302e-05, 'source_diff': 2.5610999999998302e-05}, {'time': 0.026299319, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:28.576" endtime="20201115 22:01:28.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.593" level="INFO">${OVERHEAD} = {'diff': [2.5610999999998302e-05, 2.558300000000263e-05, 2.5652000000001007e-05, 2.5610999999998302e-05, 2.5541999999999926e-05, 2.558300000000263e-05, 2.562500000000134e-05, 2.561100000000177e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:28.580" endtime="20201115 22:01:28.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.598" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.597" endtime="20201115 22:01:28.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.601" level="INFO">VALUE: [2.5610999999998302e-05, 2.558300000000263e-05, 2.5652000000001007e-05, 2.5610999999998302e-05, 2.5541999999999926e-05, 2.558300000000263e-05, 2.562500000000134e-05, 2.561100000000177e-05, 2.562500000000134e-05, 2.562500000000134e-05, 2.558300000000263e-05, 2.562500000000134e-05, 2.5584000000002105e-05, 2.563900000000091e-05, 2.562500000000134e-05, 2.5598000000001675e-05, 2.562500000000134e-05, 2.562500000000134e-05, 2.561100000000177e-05, 2.5624999999994402e-05, 2.562500000000134e-05, 2.561100000000177e-05, 2.562500000000134e-05, 2.562500000000134e-05, 2.561100000000177e-05, 2.566700000000005e-05, 2.5610999999994832e-05, 2.565300000000048e-05, 2.554100000000392e-05, 2.5598000000001675e-05, 2.563900000000091e-05, 2.568099999999962e-05, 2.562500000000134e-05, 2.5680000000000147e-05, 2.565300000000048e-05, 2.55970000000022e-05, 2.562500000000134e-05, 2.5542000000003395e-05, 2.5624999999994402e-05, 2.55970000000022e-05, 2.5568999999996123e-05, 2.562500000000134e-05, 2.5598000000001675e-05, 2.5638000000001437e-05, 2.5582999999995693e-05, 2.562500000000134e-05, 2.5555999999996026e-05, 2.562500000000134e-05, 2.561100000000177e-05, 2.5554999999996553e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.599" endtime="20201115 22:01:28.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.594" endtime="20201115 22:01:28.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.605" endtime="20201115 22:01:28.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.608" endtime="20201115 22:01:28.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.607" endtime="20201115 22:01:28.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.603" endtime="20201115 22:01:28.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.199" endtime="20201115 22:01:28.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.448" endtime="20201115 22:01:28.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.447" endtime="20201115 22:01:28.630"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.632" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.641" endtime="20201115 22:01:28.693"></status>
</kw>
<msg timestamp="20201115 22:01:28.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.639" endtime="20201115 22:01:28.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.695" endtime="20201115 22:01:28.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.697" endtime="20201115 22:01:28.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.637" endtime="20201115 22:01:28.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.635" endtime="20201115 22:01:28.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.707" endtime="20201115 22:01:28.993"></status>
</kw>
<msg timestamp="20201115 22:01:28.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026233444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026259333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.705" endtime="20201115 22:01:28.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026233444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026259333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.997" endtime="20201115 22:01:29.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.006" endtime="20201115 22:01:29.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.702" endtime="20201115 22:01:29.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.701" endtime="20201115 22:01:29.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.014" level="INFO">${RESULT} = [{'time': 0.026259333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.588899999999769e-05, 'source_diff': 2.588899999999769e-05}, {'time': 0.027000514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:29.010" endtime="20201115 22:01:29.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.028" level="INFO">${OVERHEAD} = {'diff': [2.588899999999769e-05, 2.5832999999999412e-05, 2.583300000000288e-05, 2.5777999999997137e-05, 2.5846999999998982e-05, 2.5860999999998552e-05, 2.5847999999998456e-05, 2.581900000000331e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:29.015" endtime="20201115 22:01:29.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.033" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.032" endtime="20201115 22:01:29.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.036" level="INFO">VALUE: [2.588899999999769e-05, 2.5832999999999412e-05, 2.583300000000288e-05, 2.5777999999997137e-05, 2.5846999999998982e-05, 2.5860999999998552e-05, 2.5847999999998456e-05, 2.581900000000331e-05, 2.5820000000002785e-05, 2.5722000000005796e-05, 2.5735999999998427e-05, 2.5735999999998427e-05, 2.5832999999995943e-05, 2.583300000000288e-05, 2.5806000000003215e-05, 2.584700000000245e-05, 2.5778000000004075e-05, 2.5777999999997137e-05, 2.5846999999995512e-05, 2.5832999999995943e-05, 2.5778000000004075e-05, 2.5762999999998093e-05, 2.5777999999997137e-05, 2.5749999999997997e-05, 2.5764000000004506e-05, 2.5763999999997567e-05, 2.5848000000001925e-05, 2.5777999999997137e-05, 2.587500000000159e-05, 2.5791999999996706e-05, 2.5806000000003215e-05, 2.5778000000004075e-05, 2.5791000000004172e-05, 2.586100000000202e-05, 2.5806000000003215e-05, 2.5792000000003645e-05, 2.5806000000003215e-05, 2.5805999999996276e-05, 2.5834000000002355e-05, 2.5818999999996373e-05, 2.5805999999996276e-05, 2.5834000000002355e-05, 2.5806000000003215e-05, 2.5874999999994652e-05, 2.5846999999995512e-05, 2.5735999999998427e-05, 2.5790999999997233e-05, 2.5846999999995512e-05, 2.5834000000002355e-05, 2.5806000000003215e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.034" endtime="20201115 22:01:29.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.029" endtime="20201115 22:01:29.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.039" endtime="20201115 22:01:29.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.043" endtime="20201115 22:01:29.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.041" endtime="20201115 22:01:29.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.038" endtime="20201115 22:01:29.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.632" endtime="20201115 22:01:29.064"></status>
</kw>
<msg timestamp="20201115 22:01:29.064" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.073" endtime="20201115 22:01:29.124"></status>
</kw>
<msg timestamp="20201115 22:01:29.125" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.072" endtime="20201115 22:01:29.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.127" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.126" endtime="20201115 22:01:29.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.129" endtime="20201115 22:01:29.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.069" endtime="20201115 22:01:29.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.067" endtime="20201115 22:01:29.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.139" endtime="20201115 22:01:29.425"></status>
</kw>
<msg timestamp="20201115 22:01:29.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023693208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023719028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.137" endtime="20201115 22:01:29.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023693208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023719028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.429" endtime="20201115 22:01:29.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.438" endtime="20201115 22:01:29.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.135" endtime="20201115 22:01:29.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.133" endtime="20201115 22:01:29.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.445" level="INFO">${RESULT} = [{'time': 0.023719028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5819999999999316e-05, 'source_diff': 2.5819999999999316e-05}, {'time': 0.024459764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:29.441" endtime="20201115 22:01:29.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.459" level="INFO">${OVERHEAD} = {'diff': [2.5819999999999316e-05, 2.5805999999999746e-05, 2.5778000000000606e-05, 2.5834000000002355e-05, 2.5833999999998886e-05, 2.5819999999999316e-05, 2.5833999999998886e-05, 2.5805999999999746e-05...</msg>
<status status="PASS" starttime="20201115 22:01:29.446" endtime="20201115 22:01:29.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.464" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.463" endtime="20201115 22:01:29.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.466" level="INFO">VALUE: [2.5819999999999316e-05, 2.5805999999999746e-05, 2.5778000000000606e-05, 2.5834000000002355e-05, 2.5833999999998886e-05, 2.5819999999999316e-05, 2.5833999999998886e-05, 2.5805999999999746e-05, 2.5846999999998982e-05, 2.5833999999998886e-05, 2.5862000000001495e-05, 2.584700000000245e-05, 2.588900000000116e-05, 2.5820000000002785e-05, 2.5763999999997567e-05, 2.583300000000288e-05, 2.5846999999995512e-05, 2.580500000000374e-05, 2.5820000000002785e-05, 2.5777999999997137e-05, 2.5834000000002355e-05, 2.5862000000001495e-05, 2.5791999999996706e-05, 2.583300000000288e-05, 2.5778000000004075e-05, 2.5832999999995943e-05, 2.5778000000004075e-05, 2.5777000000004602e-05, 2.5777999999997137e-05, 2.587500000000159e-05, 2.5848000000001925e-05, 2.588900000000116e-05, 2.5777999999997137e-05, 2.5764000000004506e-05, 2.5791000000004172e-05, 2.587500000000159e-05, 2.581900000000331e-05, 2.5791999999996706e-05, 2.5777999999997137e-05, 2.5778000000004075e-05, 2.583300000000288e-05, 2.584700000000245e-05, 2.5820000000002785e-05, 2.5818999999996373e-05, 2.5790999999997233e-05, 2.5791999999996706e-05, 2.5820000000002785e-05, 2.5804999999996803e-05, 2.5820000000002785e-05, 2.5820000000002785e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.465" endtime="20201115 22:01:29.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.460" endtime="20201115 22:01:29.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.470" endtime="20201115 22:01:29.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.473" endtime="20201115 22:01:29.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.472" endtime="20201115 22:01:29.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.468" endtime="20201115 22:01:29.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.065" endtime="20201115 22:01:29.494"></status>
</kw>
<msg timestamp="20201115 22:01:29.494" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.503" endtime="20201115 22:01:29.556"></status>
</kw>
<msg timestamp="20201115 22:01:29.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.502" endtime="20201115 22:01:29.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.558" endtime="20201115 22:01:29.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.560" endtime="20201115 22:01:29.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.499" endtime="20201115 22:01:29.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.497" endtime="20201115 22:01:29.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.571" endtime="20201115 22:01:29.856"></status>
</kw>
<msg timestamp="20201115 22:01:29.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025490222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025516028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.569" endtime="20201115 22:01:29.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025490222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025516028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.860" endtime="20201115 22:01:29.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.868" endtime="20201115 22:01:29.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.566" endtime="20201115 22:01:29.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.565" endtime="20201115 22:01:29.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.876" level="INFO">${RESULT} = [{'time': 0.025516028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5805999999999746e-05, 'source_diff': 2.5805999999999746e-05}, {'time': 0.026259056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:29.872" endtime="20201115 22:01:29.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.891" level="INFO">${OVERHEAD} = {'diff': [2.5805999999999746e-05, 2.5805999999999746e-05, 2.5833999999998886e-05, 2.5818999999999842e-05, 2.5792000000000176e-05, 2.5818999999999842e-05, 2.5832999999999412e-05, 2.5778000000000606e-05...</msg>
<status status="PASS" starttime="20201115 22:01:29.877" endtime="20201115 22:01:29.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.896" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.895" endtime="20201115 22:01:29.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.898" level="INFO">VALUE: [2.5805999999999746e-05, 2.5805999999999746e-05, 2.5833999999998886e-05, 2.5818999999999842e-05, 2.5792000000000176e-05, 2.5818999999999842e-05, 2.5832999999999412e-05, 2.5778000000000606e-05, 2.584700000000245e-05, 2.5832999999995943e-05, 2.5818999999996373e-05, 2.5778000000004075e-05, 2.5791999999996706e-05, 2.5818999999996373e-05, 2.583300000000288e-05, 2.5776999999997663e-05, 2.5806000000003215e-05, 2.5846999999995512e-05, 2.5832999999995943e-05, 2.5819999999995846e-05, 2.586100000000202e-05, 2.5792000000003645e-05, 2.5790999999997233e-05, 2.5777999999997137e-05, 2.5820000000002785e-05, 2.583300000000288e-05, 2.5749999999997997e-05, 2.5763999999997567e-05, 2.5846999999995512e-05, 2.580500000000374e-05, 2.5750000000004936e-05, 2.5805999999996276e-05, 2.5791999999996706e-05, 2.5763999999997567e-05, 2.5804999999996803e-05, 2.5818999999996373e-05, 2.586100000000202e-05, 2.5792000000003645e-05, 2.584700000000245e-05, 2.583300000000288e-05, 2.5818999999996373e-05, 2.572299999999833e-05, 2.584700000000245e-05, 2.5832999999995943e-05, 2.5791999999996706e-05, 2.583300000000288e-05, 2.5792000000003645e-05, 2.586100000000202e-05, 2.5764000000004506e-05, 2.581900000000331e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.897" endtime="20201115 22:01:29.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.892" endtime="20201115 22:01:29.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.902" endtime="20201115 22:01:29.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.905" endtime="20201115 22:01:29.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.904" endtime="20201115 22:01:29.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.900" endtime="20201115 22:01:29.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.495" endtime="20201115 22:01:29.926"></status>
</kw>
<msg timestamp="20201115 22:01:29.926" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.936" endtime="20201115 22:01:29.989"></status>
</kw>
<msg timestamp="20201115 22:01:29.989" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.934" endtime="20201115 22:01:29.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.990" endtime="20201115 22:01:29.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.993" endtime="20201115 22:01:29.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.931" endtime="20201115 22:01:29.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.929" endtime="20201115 22:01:29.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.003" endtime="20201115 22:01:30.290"></status>
</kw>
<msg timestamp="20201115 22:01:30.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02548875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025514486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:30.002" endtime="20201115 22:01:30.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02548875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025514486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:30.294" endtime="20201115 22:01:30.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.303" endtime="20201115 22:01:30.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.999" endtime="20201115 22:01:30.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.997" endtime="20201115 22:01:30.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.310" level="INFO">${RESULT} = [{'time': 0.025514486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5735999999998427e-05, 'source_diff': 2.5735999999998427e-05}, {'time': 0.026253472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:30.307" endtime="20201115 22:01:30.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.324" level="INFO">${OVERHEAD} = {'diff': [2.5735999999998427e-05, 2.5832999999999412e-05, 2.5750000000001466e-05, 2.5818999999999842e-05, 2.5833999999998886e-05, 2.5805000000000272e-05, 2.5819999999999316e-05, 2.5764000000001036e-05...</msg>
<status status="PASS" starttime="20201115 22:01:30.311" endtime="20201115 22:01:30.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.329" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.328" endtime="20201115 22:01:30.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.332" level="INFO">VALUE: [2.5735999999998427e-05, 2.5832999999999412e-05, 2.5750000000001466e-05, 2.5818999999999842e-05, 2.5833999999998886e-05, 2.5805000000000272e-05, 2.5819999999999316e-05, 2.5764000000001036e-05, 2.583300000000288e-05, 2.57369999999979e-05, 2.5862000000001495e-05, 2.5777999999997137e-05, 2.5778000000004075e-05, 2.5860999999995082e-05, 2.5750000000004936e-05, 2.5834000000002355e-05, 2.5832999999995943e-05, 2.583300000000288e-05, 2.5777000000004602e-05, 2.5764000000004506e-05, 2.5762999999998093e-05, 2.5804999999996803e-05, 2.5806000000003215e-05, 2.583300000000288e-05, 2.5791000000004172e-05, 2.581900000000331e-05, 2.5806000000003215e-05, 2.5805999999996276e-05, 2.581900000000331e-05, 2.5804999999996803e-05, 2.5777999999997137e-05, 2.586100000000202e-05, 2.581900000000331e-05, 2.581900000000331e-05, 2.5749999999997997e-05, 2.580500000000374e-05, 2.583300000000288e-05, 2.583300000000288e-05, 2.581900000000331e-05, 2.5834000000002355e-05, 2.5820000000002785e-05, 2.5820000000002785e-05, 2.5778000000004075e-05, 2.584700000000245e-05, 2.5764000000004506e-05, 2.5805999999996276e-05, 2.5834000000002355e-05, 2.5721999999998857e-05, 2.5778000000004075e-05, 2.5790999999997233e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.330" endtime="20201115 22:01:30.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.325" endtime="20201115 22:01:30.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.335" endtime="20201115 22:01:30.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.340" endtime="20201115 22:01:30.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.337" endtime="20201115 22:01:30.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.333" endtime="20201115 22:01:30.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.927" endtime="20201115 22:01:30.361"></status>
</kw>
<msg timestamp="20201115 22:01:30.361" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.371" endtime="20201115 22:01:30.425"></status>
</kw>
<msg timestamp="20201115 22:01:30.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.369" endtime="20201115 22:01:30.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.427" endtime="20201115 22:01:30.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.429" endtime="20201115 22:01:30.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.366" endtime="20201115 22:01:30.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.364" endtime="20201115 22:01:30.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.440" endtime="20201115 22:01:30.726"></status>
</kw>
<msg timestamp="20201115 22:01:30.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.438" endtime="20201115 22:01:30.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.731" endtime="20201115 22:01:30.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.739" endtime="20201115 22:01:30.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.435" endtime="20201115 22:01:30.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.434" endtime="20201115 22:01:30.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.746" level="INFO">${RESULT} = [{'time': 0.022670181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5820000000002785e-05, 'source_diff': 2.5820000000002785e-05}, {'time': 0.023413611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:30.743" endtime="20201115 22:01:30.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.761" level="INFO">${OVERHEAD} = {'diff': [2.5820000000002785e-05, 2.5832999999999412e-05, 2.5819999999999316e-05, 2.5819999999999316e-05, 2.5848000000001925e-05, 2.5833999999998886e-05, 2.5764000000001036e-05, 2.5806000000003215e-05...</msg>
<status status="PASS" starttime="20201115 22:01:30.748" endtime="20201115 22:01:30.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.765" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.764" endtime="20201115 22:01:30.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.768" level="INFO">VALUE: [2.5820000000002785e-05, 2.5832999999999412e-05, 2.5819999999999316e-05, 2.5819999999999316e-05, 2.5848000000001925e-05, 2.5833999999998886e-05, 2.5764000000001036e-05, 2.5806000000003215e-05, 2.5750000000001466e-05, 2.5778000000000606e-05, 2.5805000000000272e-05, 2.5834000000002355e-05, 2.5832999999995943e-05, 2.5847999999994986e-05, 2.5804999999996803e-05, 2.5749999999997997e-05, 2.590300000000073e-05, 2.5832999999995943e-05, 2.5791999999996706e-05, 2.5834000000002355e-05, 2.5805999999996276e-05, 2.5778000000004075e-05, 2.5848000000001925e-05, 2.5791000000004172e-05, 2.581900000000331e-05, 2.5818999999996373e-05, 2.5804999999996803e-05, 2.5778000000004075e-05, 2.5777999999997137e-05, 2.5805999999996276e-05, 2.5750000000004936e-05, 2.5820000000002785e-05, 2.5819999999995846e-05, 2.5862000000001495e-05, 2.5778000000004075e-05, 2.5834000000002355e-05, 2.5832999999995943e-05, 2.583300000000288e-05, 2.580500000000374e-05, 2.5834000000002355e-05, 2.586100000000202e-05, 2.5846999999995512e-05, 2.580500000000374e-05, 2.5791999999996706e-05, 2.5834000000002355e-05, 2.5792000000003645e-05, 2.583300000000288e-05, 2.584700000000245e-05, 2.581900000000331e-05, 2.5764000000004506e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.767" endtime="20201115 22:01:30.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.762" endtime="20201115 22:01:30.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.771" endtime="20201115 22:01:30.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.775" endtime="20201115 22:01:30.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.773" endtime="20201115 22:01:30.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.770" endtime="20201115 22:01:30.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.362" endtime="20201115 22:01:30.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.631" endtime="20201115 22:01:30.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.630" endtime="20201115 22:01:30.796"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.798" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.808" endtime="20201115 22:01:30.858"></status>
</kw>
<msg timestamp="20201115 22:01:30.859" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.806" endtime="20201115 22:01:30.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.861" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.860" endtime="20201115 22:01:30.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.862" endtime="20201115 22:01:30.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.803" endtime="20201115 22:01:30.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.801" endtime="20201115 22:01:30.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.872" endtime="20201115 22:01:31.159"></status>
</kw>
<msg timestamp="20201115 22:01:31.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025015069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025041069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.871" endtime="20201115 22:01:31.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025015069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025041069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.163" endtime="20201115 22:01:31.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.172" endtime="20201115 22:01:31.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.868" endtime="20201115 22:01:31.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.866" endtime="20201115 22:01:31.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.179" level="INFO">${RESULT} = [{'time': 0.025041069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5999999999998247e-05, 'source_diff': 2.5999999999998247e-05}, {'time': 0.025819903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:31.175" endtime="20201115 22:01:31.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.193" level="INFO">${OVERHEAD} = {'diff': [2.5999999999998247e-05, 2.590300000000073e-05, 2.6028000000000856e-05, 2.593099999999987e-05, 2.5999999999998247e-05, 2.5999999999998247e-05, 2.6042000000000426e-05, 2.6013999999997817e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:31.180" endtime="20201115 22:01:31.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.198" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.196" endtime="20201115 22:01:31.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.200" level="INFO">VALUE: [2.5999999999998247e-05, 2.590300000000073e-05, 2.6028000000000856e-05, 2.593099999999987e-05, 2.5999999999998247e-05, 2.5999999999998247e-05, 2.6042000000000426e-05, 2.6013999999997817e-05, 2.5986000000002146e-05, 2.5971999999999107e-05, 2.6068999999996623e-05, 2.6028000000004325e-05, 2.6027999999997387e-05, 2.6068999999996623e-05, 2.5985999999998677e-05, 2.6027999999997387e-05, 2.5957999999999537e-05, 2.6042000000003895e-05, 2.6000000000005186e-05, 2.6042000000003895e-05, 2.5999999999998247e-05, 2.5999999999998247e-05, 2.605500000000399e-05, 2.6055999999996526e-05, 2.6040999999997483e-05, 2.611100000000227e-05, 2.6026999999997913e-05, 2.6014000000004756e-05, 2.6028000000004325e-05, 2.5985999999998677e-05, 2.6028000000004325e-05, 2.5957999999999537e-05, 2.5971999999999107e-05, 2.6027999999997387e-05, 2.5999999999998247e-05, 2.605500000000399e-05, 2.5971999999999107e-05, 2.6000000000005186e-05, 2.6040999999997483e-05, 2.6027000000004852e-05, 2.6042000000003895e-05, 2.6000000000005186e-05, 2.5985999999998677e-05, 2.6028000000004325e-05, 2.597299999999858e-05, 2.5985999999998677e-05, 2.6000000000005186e-05, 2.6042000000003895e-05, 2.6027999999997387e-05, 2.6026999999997913e-05]</msg>
<status status="PASS" starttime="20201115 22:01:31.199" endtime="20201115 22:01:31.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.194" endtime="20201115 22:01:31.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.203" endtime="20201115 22:01:31.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.207" endtime="20201115 22:01:31.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.205" endtime="20201115 22:01:31.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.202" endtime="20201115 22:01:31.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.799" endtime="20201115 22:01:31.228"></status>
</kw>
<msg timestamp="20201115 22:01:31.228" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.238" endtime="20201115 22:01:31.290"></status>
</kw>
<msg timestamp="20201115 22:01:31.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.236" endtime="20201115 22:01:31.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.293" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.292" endtime="20201115 22:01:31.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.294" endtime="20201115 22:01:31.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.233" endtime="20201115 22:01:31.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.231" endtime="20201115 22:01:31.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.305" endtime="20201115 22:01:31.590"></status>
</kw>
<msg timestamp="20201115 22:01:31.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024941514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024967542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.303" endtime="20201115 22:01:31.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024941514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024967542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.594" endtime="20201115 22:01:31.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.603" endtime="20201115 22:01:31.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.300" endtime="20201115 22:01:31.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.298" endtime="20201115 22:01:31.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.610" level="INFO">${RESULT} = [{'time': 0.024967542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6027999999997387e-05, 'source_diff': 2.6027999999997387e-05}, {'time': 0.025745708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:31.606" endtime="20201115 22:01:31.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.625" level="INFO">${OVERHEAD} = {'diff': [2.6027999999997387e-05, 2.5957999999999537e-05, 2.5985999999998677e-05, 2.6000000000001716e-05, 2.6042000000000426e-05, 2.6055000000000522e-05, 2.5986000000002146e-05, 2.6028000000000856e-05...</msg>
<status status="PASS" starttime="20201115 22:01:31.611" endtime="20201115 22:01:31.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.630" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.629" endtime="20201115 22:01:31.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.632" level="INFO">VALUE: [2.6027999999997387e-05, 2.5957999999999537e-05, 2.5985999999998677e-05, 2.6000000000001716e-05, 2.6042000000000426e-05, 2.6055000000000522e-05, 2.5986000000002146e-05, 2.6028000000000856e-05, 2.6042000000000426e-05, 2.6042000000003895e-05, 2.6027999999997387e-05, 2.5971999999999107e-05, 2.6027999999997387e-05, 2.588900000000116e-05, 2.597299999999858e-05, 2.6028000000004325e-05, 2.597299999999858e-05, 2.60970000000027e-05, 2.6026999999997913e-05, 2.5985999999998677e-05, 2.6041999999996956e-05, 2.6042000000003895e-05, 2.608300000000313e-05, 2.5943999999999967e-05, 2.6027999999997387e-05, 2.5971999999999107e-05, 2.6027999999997387e-05, 2.6013999999997817e-05, 2.6014000000004756e-05, 2.6028000000004325e-05, 2.6041000000004422e-05, 2.6054999999997053e-05, 2.597300000000552e-05, 2.595899999999901e-05, 2.6040999999997483e-05, 2.6041999999996956e-05, 2.5957999999999537e-05, 2.5985999999998677e-05, 2.6040999999997483e-05, 2.597299999999858e-05, 2.6027999999997387e-05, 2.597299999999858e-05, 2.5957999999999537e-05, 2.595899999999901e-05, 2.6027000000004852e-05, 2.6013999999997817e-05, 2.6014000000004756e-05, 2.6027999999997387e-05, 2.5985999999998677e-05, 2.5999999999998247e-05]</msg>
<status status="PASS" starttime="20201115 22:01:31.631" endtime="20201115 22:01:31.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.626" endtime="20201115 22:01:31.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.636" endtime="20201115 22:01:31.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.639" endtime="20201115 22:01:31.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.638" endtime="20201115 22:01:31.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.634" endtime="20201115 22:01:31.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.229" endtime="20201115 22:01:31.660"></status>
</kw>
<msg timestamp="20201115 22:01:31.660" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.670" endtime="20201115 22:01:31.722"></status>
</kw>
<msg timestamp="20201115 22:01:31.723" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.669" endtime="20201115 22:01:31.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.725" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.724" endtime="20201115 22:01:31.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.726" endtime="20201115 22:01:31.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.666" endtime="20201115 22:01:31.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.663" endtime="20201115 22:01:31.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.737" endtime="20201115 22:01:32.044"></status>
</kw>
<msg timestamp="20201115 22:01:32.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024761986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024787986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.735" endtime="20201115 22:01:32.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024761986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024787986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.052" endtime="20201115 22:01:32.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.061" endtime="20201115 22:01:32.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.733" endtime="20201115 22:01:32.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.731" endtime="20201115 22:01:32.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.068" level="INFO">${RESULT} = [{'time': 0.024787986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6000000000001716e-05, 'source_diff': 2.6000000000001716e-05}, {'time': 0.025562903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:32.064" endtime="20201115 22:01:32.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.082" level="INFO">${OVERHEAD} = {'diff': [2.6000000000001716e-05, 2.6042000000000426e-05, 2.5999999999998247e-05, 2.6069000000000092e-05, 2.6041000000000952e-05, 2.6042000000000426e-05, 2.6055000000000522e-05, 2.6055000000000522e-05...</msg>
<status status="PASS" starttime="20201115 22:01:32.069" endtime="20201115 22:01:32.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.087" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.086" endtime="20201115 22:01:32.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.090" level="INFO">VALUE: [2.6000000000001716e-05, 2.6042000000000426e-05, 2.5999999999998247e-05, 2.6069000000000092e-05, 2.6041000000000952e-05, 2.6042000000000426e-05, 2.6055000000000522e-05, 2.6055000000000522e-05, 2.6042000000000426e-05, 2.60970000000027e-05, 2.6055999999996526e-05, 2.6054999999997053e-05, 2.6055999999996526e-05, 2.6014000000004756e-05, 2.6027999999997387e-05, 2.6082999999996193e-05, 2.5985999999998677e-05, 2.6028000000004325e-05, 2.5957999999999537e-05, 2.6013999999997817e-05, 2.5971999999999107e-05, 2.6026999999997913e-05, 2.6013999999997817e-05, 2.60970000000027e-05, 2.6012999999998343e-05, 2.6070000000003035e-05, 2.6013999999997817e-05, 2.6056000000003465e-05, 2.6040999999997483e-05, 2.5957999999999537e-05, 2.5999999999998247e-05, 2.5986000000005616e-05, 2.6013999999997817e-05, 2.6013999999997817e-05, 2.6056000000003465e-05, 2.5985999999998677e-05, 2.6082999999996193e-05, 2.5999999999998247e-05, 2.6027000000004852e-05, 2.6040999999997483e-05, 2.5985999999998677e-05, 2.6068999999996623e-05, 2.6027000000004852e-05, 2.6027999999997387e-05, 2.6041999999996956e-05, 2.5999999999998247e-05, 2.605500000000399e-05, 2.6027999999997387e-05, 2.6027999999997387e-05, 2.6014000000004756e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.088" endtime="20201115 22:01:32.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.083" endtime="20201115 22:01:32.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.093" endtime="20201115 22:01:32.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.097" endtime="20201115 22:01:32.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.095" endtime="20201115 22:01:32.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.091" endtime="20201115 22:01:32.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.661" endtime="20201115 22:01:32.118"></status>
</kw>
<msg timestamp="20201115 22:01:32.118" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.127" endtime="20201115 22:01:32.179"></status>
</kw>
<msg timestamp="20201115 22:01:32.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.126" endtime="20201115 22:01:32.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.182" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.180" endtime="20201115 22:01:32.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.183" endtime="20201115 22:01:32.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.123" endtime="20201115 22:01:32.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.121" endtime="20201115 22:01:32.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.193" endtime="20201115 22:01:32.480"></status>
</kw>
<msg timestamp="20201115 22:01:32.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024274417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024300472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.192" endtime="20201115 22:01:32.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024274417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024300472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.484" endtime="20201115 22:01:32.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.493" endtime="20201115 22:01:32.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.189" endtime="20201115 22:01:32.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.187" endtime="20201115 22:01:32.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.500" level="INFO">${RESULT} = [{'time': 0.024300472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6055000000000522e-05, 'source_diff': 2.6055000000000522e-05}, {'time': 0.025074306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:32.496" endtime="20201115 22:01:32.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.514" level="INFO">${OVERHEAD} = {'diff': [2.6055000000000522e-05, 2.6000000000001716e-05, 2.611100000000227e-05, 2.6027000000001382e-05, 2.6028000000000856e-05, 2.5999999999998247e-05, 2.595899999999901e-05, 2.6041000000000952e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:32.501" endtime="20201115 22:01:32.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.519" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.518" endtime="20201115 22:01:32.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.521" level="INFO">VALUE: [2.6055000000000522e-05, 2.6000000000001716e-05, 2.611100000000227e-05, 2.6027000000001382e-05, 2.6028000000000856e-05, 2.5999999999998247e-05, 2.595899999999901e-05, 2.6041000000000952e-05, 2.6028000000000856e-05, 2.6056000000003465e-05, 2.5985999999998677e-05, 2.6070000000003035e-05, 2.5971999999999107e-05, 2.594499999999944e-05, 2.6014000000004756e-05, 2.6014000000004756e-05, 2.60970000000027e-05, 2.5999999999998247e-05, 2.593099999999987e-05, 2.5971999999999107e-05, 2.5971999999999107e-05, 2.5999999999998247e-05, 2.6013999999997817e-05, 2.60970000000027e-05, 2.6026999999997913e-05, 2.5999999999998247e-05, 2.6070000000003035e-05, 2.5985999999998677e-05, 2.6027999999997387e-05, 2.5985999999998677e-05, 2.6027999999997387e-05, 2.5999999999998247e-05, 2.5971999999999107e-05, 2.5971999999999107e-05, 2.6027999999997387e-05, 2.5971999999999107e-05, 2.6013999999997817e-05, 2.6000000000005186e-05, 2.6054999999997053e-05, 2.6041999999996956e-05, 2.6000000000005186e-05, 2.6041999999996956e-05, 2.6054999999997053e-05, 2.598699999999815e-05, 2.6000000000005186e-05, 2.5957999999999537e-05, 2.59170000000003e-05, 2.6040999999997483e-05, 2.598699999999815e-05, 2.6056000000003465e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.520" endtime="20201115 22:01:32.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.515" endtime="20201115 22:01:32.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.525" endtime="20201115 22:01:32.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.529" endtime="20201115 22:01:32.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.527" endtime="20201115 22:01:32.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.523" endtime="20201115 22:01:32.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.119" endtime="20201115 22:01:32.550"></status>
</kw>
<msg timestamp="20201115 22:01:32.550" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.559" endtime="20201115 22:01:32.612"></status>
</kw>
<msg timestamp="20201115 22:01:32.612" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.557" endtime="20201115 22:01:32.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.613" endtime="20201115 22:01:32.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.616" endtime="20201115 22:01:32.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.555" endtime="20201115 22:01:32.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.552" endtime="20201115 22:01:32.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.626" endtime="20201115 22:01:32.911"></status>
</kw>
<msg timestamp="20201115 22:01:32.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024623889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.625" endtime="20201115 22:01:32.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024597889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024623889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.916" endtime="20201115 22:01:32.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.924" endtime="20201115 22:01:32.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.622" endtime="20201115 22:01:32.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.620" endtime="20201115 22:01:32.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.931" level="INFO">${RESULT} = [{'time': 0.024623889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5999999999998247e-05, 'source_diff': 2.5999999999998247e-05}, {'time': 0.025396778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:32.928" endtime="20201115 22:01:32.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.945" level="INFO">${OVERHEAD} = {'diff': [2.5999999999998247e-05, 2.6041999999996956e-05, 2.6069000000000092e-05, 2.5986000000002146e-05, 2.6028000000000856e-05, 2.6013999999997817e-05, 2.6000000000001716e-05, 2.6014000000001286e-05...</msg>
<status status="PASS" starttime="20201115 22:01:32.932" endtime="20201115 22:01:32.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.950" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.949" endtime="20201115 22:01:32.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.953" level="INFO">VALUE: [2.5999999999998247e-05, 2.6041999999996956e-05, 2.6069000000000092e-05, 2.5986000000002146e-05, 2.6028000000000856e-05, 2.6013999999997817e-05, 2.6000000000001716e-05, 2.6014000000001286e-05, 2.6042000000000426e-05, 2.6013999999997817e-05, 2.5985999999998677e-05, 2.6041999999996956e-05, 2.6013999999997817e-05, 2.5985999999998677e-05, 2.5985999999998677e-05, 2.6042000000003895e-05, 2.594499999999944e-05, 2.5999999999998247e-05, 2.5985999999998677e-05, 2.6013999999997817e-05, 2.5985999999998677e-05, 2.6027999999997387e-05, 2.6013999999997817e-05, 2.5985999999998677e-05, 2.5985999999998677e-05, 2.5957999999999537e-05, 2.6013999999997817e-05, 2.6014000000004756e-05, 2.6027999999997387e-05, 2.5999999999998247e-05, 2.6027999999997387e-05, 2.5985999999998677e-05, 2.5971999999999107e-05, 2.6027999999997387e-05, 2.5916000000000827e-05, 2.6026999999997913e-05, 2.5943999999999967e-05, 2.6041999999996956e-05, 2.6013999999997817e-05, 2.6041000000004422e-05, 2.6014000000004756e-05, 2.5999999999998247e-05, 2.6056000000003465e-05, 2.5957999999999537e-05, 2.6027999999997387e-05, 2.5986000000005616e-05, 2.6013999999997817e-05, 2.5999999999998247e-05, 2.5971999999999107e-05, 2.6040999999990544e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.951" endtime="20201115 22:01:32.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.946" endtime="20201115 22:01:32.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.956" endtime="20201115 22:01:32.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.960" endtime="20201115 22:01:32.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.959" endtime="20201115 22:01:32.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.955" endtime="20201115 22:01:32.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.550" endtime="20201115 22:01:32.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.797" endtime="20201115 22:01:32.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.796" endtime="20201115 22:01:32.981"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.984" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.993" endtime="20201115 22:01:33.048"></status>
</kw>
<msg timestamp="20201115 22:01:33.048" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.991" endtime="20201115 22:01:33.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.051" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.049" endtime="20201115 22:01:33.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.052" endtime="20201115 22:01:33.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.989" endtime="20201115 22:01:33.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.986" endtime="20201115 22:01:33.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.061" endtime="20201115 22:01:33.348"></status>
</kw>
<msg timestamp="20201115 22:01:33.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025276681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025302903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.060" endtime="20201115 22:01:33.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025276681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025302903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.352" endtime="20201115 22:01:33.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.360" endtime="20201115 22:01:33.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.057" endtime="20201115 22:01:33.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.055" endtime="20201115 22:01:33.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.368" level="INFO">${RESULT} = [{'time': 0.025302903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6222000000002826e-05, 'source_diff': 2.6222000000002826e-05}, {'time': 0.026112361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:33.364" endtime="20201115 22:01:33.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.383" level="INFO">${OVERHEAD} = {'diff': [2.6222000000002826e-05, 2.6194000000000217e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6194000000000217e-05, 2.616700000000055e-05, 2.6165999999997608e-05, 2.6235999999998927e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:33.369" endtime="20201115 22:01:33.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.388" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.386" endtime="20201115 22:01:33.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.391" level="INFO">VALUE: [2.6222000000002826e-05, 2.6194000000000217e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6194000000000217e-05, 2.616700000000055e-05, 2.6165999999997608e-05, 2.6235999999998927e-05, 2.620899999999926e-05, 2.6250000000005436e-05, 2.6180000000000647e-05, 2.6222000000006296e-05, 2.620899999999926e-05, 2.623700000000534e-05, 2.619499999999969e-05, 2.6263999999998067e-05, 2.6263999999998067e-05, 2.6221999999999357e-05, 2.622299999999883e-05, 2.6180000000000647e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6276999999998163e-05, 2.6180000000000647e-05, 2.6235999999998927e-05, 2.6236000000005866e-05, 2.6263999999998067e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.6263999999998067e-05, 2.6249999999998497e-05, 2.6194000000000217e-05, 2.612500000000184e-05, 2.6236000000005866e-05, 2.6221999999999357e-05, 2.6194000000000217e-05, 2.6236000000005866e-05, 2.6250000000005436e-05, 2.6207999999999787e-05, 2.6236000000005866e-05, 2.622299999999883e-05, 2.6221999999999357e-05, 2.622299999999883e-05, 2.6249999999991558e-05, 2.6194000000007156e-05, 2.6138999999994472e-05, 2.6263999999998067e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.389" endtime="20201115 22:01:33.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.384" endtime="20201115 22:01:33.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.394" endtime="20201115 22:01:33.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.397" endtime="20201115 22:01:33.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.396" endtime="20201115 22:01:33.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.392" endtime="20201115 22:01:33.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.984" endtime="20201115 22:01:33.418"></status>
</kw>
<msg timestamp="20201115 22:01:33.419" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.428" endtime="20201115 22:01:33.484"></status>
</kw>
<msg timestamp="20201115 22:01:33.485" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.426" endtime="20201115 22:01:33.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.487" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.486" endtime="20201115 22:01:33.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.488" endtime="20201115 22:01:33.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.423" endtime="20201115 22:01:33.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.421" endtime="20201115 22:01:33.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.499" endtime="20201115 22:01:33.784"></status>
</kw>
<msg timestamp="20201115 22:01:33.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024978167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025004403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.497" endtime="20201115 22:01:33.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024978167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025004403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.789" endtime="20201115 22:01:33.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.797" endtime="20201115 22:01:33.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.494" endtime="20201115 22:01:33.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.493" endtime="20201115 22:01:33.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.804" level="INFO">${RESULT} = [{'time': 0.025004403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6236000000002396e-05, 'source_diff': 2.6236000000002396e-05}, {'time': 0.025812986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:33.801" endtime="20201115 22:01:33.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.818" level="INFO">${OVERHEAD} = {'diff': [2.6236000000002396e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.6180000000000647e-05, 2.6292000000000676e-05, 2.62369999999984e-05, 2.6235999999998927e-05, 2.619499999999969e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:33.805" endtime="20201115 22:01:33.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.823" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.822" endtime="20201115 22:01:33.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.826" level="INFO">VALUE: [2.6236000000002396e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.6180000000000647e-05, 2.6292000000000676e-05, 2.62369999999984e-05, 2.6235999999998927e-05, 2.619499999999969e-05, 2.6207999999999787e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.622299999999883e-05, 2.6277999999997637e-05, 2.622299999999883e-05, 2.6263999999998067e-05, 2.6250000000005436e-05, 2.6264000000005006e-05, 2.6207999999999787e-05, 2.6207999999999787e-05, 2.6222000000006296e-05, 2.6180000000000647e-05, 2.6235999999998927e-05, 2.6236000000005866e-05, 2.6194000000000217e-05, 2.6221999999999357e-05, 2.6194000000000217e-05, 2.620899999999926e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6236000000005866e-05, 2.6263999999998067e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.620899999999926e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.615199999999457e-05, 2.620899999999926e-05, 2.6235999999998927e-05, 2.6166000000001077e-05, 2.6179999999993708e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.6250000000005436e-05, 2.620899999999926e-05, 2.6263999999998067e-05, 2.6249999999991558e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.825" endtime="20201115 22:01:33.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.820" endtime="20201115 22:01:33.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.829" endtime="20201115 22:01:33.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.833" endtime="20201115 22:01:33.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.831" endtime="20201115 22:01:33.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.828" endtime="20201115 22:01:33.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.419" endtime="20201115 22:01:33.854"></status>
</kw>
<msg timestamp="20201115 22:01:33.854" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.863" endtime="20201115 22:01:33.917"></status>
</kw>
<msg timestamp="20201115 22:01:33.917" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.862" endtime="20201115 22:01:33.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.920" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.919" endtime="20201115 22:01:33.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.921" endtime="20201115 22:01:33.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.859" endtime="20201115 22:01:33.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.857" endtime="20201115 22:01:33.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.932" endtime="20201115 22:01:34.219"></status>
</kw>
<msg timestamp="20201115 22:01:34.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.930" endtime="20201115 22:01:34.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.223" endtime="20201115 22:01:34.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.231" endtime="20201115 22:01:34.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.927" endtime="20201115 22:01:34.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.925" endtime="20201115 22:01:34.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.239" level="INFO">${RESULT} = [{'time': 0.021705931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.619499999999969e-05, 'source_diff': 2.619499999999969e-05}, {'time': 0.022518153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:34.235" endtime="20201115 22:01:34.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.253" level="INFO">${OVERHEAD} = {'diff': [2.619499999999969e-05, 2.6235999999998927e-05, 2.618100000000012e-05, 2.6207999999999787e-05, 2.6207999999999787e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6207999999999787e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:34.240" endtime="20201115 22:01:34.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.258" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.257" endtime="20201115 22:01:34.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.261" level="INFO">VALUE: [2.619499999999969e-05, 2.6235999999998927e-05, 2.618100000000012e-05, 2.6207999999999787e-05, 2.6207999999999787e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6207999999999787e-05, 2.62230000000023e-05, 2.619499999999969e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6179999999993708e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.6194000000000217e-05, 2.619499999999969e-05, 2.6291999999997206e-05, 2.6235999999998927e-05, 2.6194000000000217e-05, 2.619499999999969e-05, 2.618100000000012e-05, 2.6236000000005866e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.620899999999926e-05, 2.6207999999999787e-05, 2.6291999999997206e-05, 2.6179999999993708e-05, 2.6263999999998067e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.619499999999969e-05, 2.6235999999998927e-05, 2.616700000000055e-05, 2.618100000000012e-05, 2.6249999999998497e-05, 2.6276999999998163e-05, 2.6180000000000647e-05, 2.6236000000005866e-05, 2.6235999999998927e-05, 2.6277999999997637e-05, 2.6235999999998927e-05, 2.6194000000000217e-05, 2.6235999999998927e-05, 2.6180000000000647e-05, 2.6235999999998927e-05, 2.6278000000004575e-05, 2.616700000000055e-05]</msg>
<status status="PASS" starttime="20201115 22:01:34.259" endtime="20201115 22:01:34.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.254" endtime="20201115 22:01:34.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.264" endtime="20201115 22:01:34.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.268" endtime="20201115 22:01:34.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.266" endtime="20201115 22:01:34.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.262" endtime="20201115 22:01:34.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.854" endtime="20201115 22:01:34.289"></status>
</kw>
<msg timestamp="20201115 22:01:34.289" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.298" endtime="20201115 22:01:34.354"></status>
</kw>
<msg timestamp="20201115 22:01:34.354" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.296" endtime="20201115 22:01:34.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.357" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.355" endtime="20201115 22:01:34.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.358" endtime="20201115 22:01:34.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.294" endtime="20201115 22:01:34.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.291" endtime="20201115 22:01:34.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.369" endtime="20201115 22:01:34.654"></status>
</kw>
<msg timestamp="20201115 22:01:34.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023955778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023982028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.367" endtime="20201115 22:01:34.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023955778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023982028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.658" endtime="20201115 22:01:34.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.667" endtime="20201115 22:01:34.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.364" endtime="20201115 22:01:34.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.362" endtime="20201115 22:01:34.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.674" level="INFO">${RESULT} = [{'time': 0.023982028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999998497e-05, 'source_diff': 2.6249999999998497e-05}, {'time': 0.024792486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:34.671" endtime="20201115 22:01:34.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.689" level="INFO">${OVERHEAD} = {'diff': [2.6249999999998497e-05, 2.6235999999998927e-05, 2.613900000000141e-05, 2.6250000000001966e-05, 2.6249999999998497e-05, 2.6264000000001536e-05, 2.622299999999883e-05, 2.6250000000001966e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:34.675" endtime="20201115 22:01:34.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.693" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.692" endtime="20201115 22:01:34.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.696" level="INFO">VALUE: [2.6249999999998497e-05, 2.6235999999998927e-05, 2.613900000000141e-05, 2.6250000000001966e-05, 2.6249999999998497e-05, 2.6264000000001536e-05, 2.622299999999883e-05, 2.6250000000001966e-05, 2.6250000000001966e-05, 2.616700000000055e-05, 2.6193999999993278e-05, 2.6250000000005436e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.6180000000000647e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.618100000000012e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.6305999999996776e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.62369999999984e-05, 2.6264000000005006e-05, 2.623700000000534e-05, 2.6221999999999357e-05, 2.6278000000004575e-05, 2.6235999999998927e-05, 2.6194000000000217e-05, 2.6236000000005866e-05, 2.6221999999999357e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.619499999999969e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6291000000004672e-05, 2.6250000000005436e-05, 2.618100000000012e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.62369999999984e-05]</msg>
<status status="PASS" starttime="20201115 22:01:34.694" endtime="20201115 22:01:34.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.690" endtime="20201115 22:01:34.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.699" endtime="20201115 22:01:34.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.703" endtime="20201115 22:01:34.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.701" endtime="20201115 22:01:34.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.697" endtime="20201115 22:01:34.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.289" endtime="20201115 22:01:34.724"></status>
</kw>
<msg timestamp="20201115 22:01:34.724" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.733" endtime="20201115 22:01:34.790"></status>
</kw>
<msg timestamp="20201115 22:01:34.791" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.731" endtime="20201115 22:01:34.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.793" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.792" endtime="20201115 22:01:34.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.794" endtime="20201115 22:01:34.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.729" endtime="20201115 22:01:34.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.726" endtime="20201115 22:01:34.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.805" endtime="20201115 22:01:35.091"></status>
</kw>
<msg timestamp="20201115 22:01:35.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025975139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026001389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.803" endtime="20201115 22:01:35.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025975139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026001389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.096" endtime="20201115 22:01:35.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.105" endtime="20201115 22:01:35.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.801" endtime="20201115 22:01:35.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.799" endtime="20201115 22:01:35.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.112" level="INFO">${RESULT} = [{'time': 0.026001389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999998497e-05, 'source_diff': 2.6249999999998497e-05}, {'time': 0.026814056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:35.109" endtime="20201115 22:01:35.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.128" level="INFO">${OVERHEAD} = {'diff': [2.6249999999998497e-05, 2.62369999999984e-05, 2.6263999999998067e-05, 2.6221999999999357e-05, 2.6180000000000647e-05, 2.6194000000000217e-05, 2.6250000000001966e-05, 2.618100000000012e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:01:35.113" endtime="20201115 22:01:35.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.132" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.131" endtime="20201115 22:01:35.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.135" level="INFO">VALUE: [2.6249999999998497e-05, 2.62369999999984e-05, 2.6263999999998067e-05, 2.6221999999999357e-05, 2.6180000000000647e-05, 2.6194000000000217e-05, 2.6250000000001966e-05, 2.618100000000012e-05, 2.6194000000000217e-05, 2.612500000000184e-05, 2.6180000000000647e-05, 2.620899999999926e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.6180000000000647e-05, 2.6194000000000217e-05, 2.6207999999999787e-05, 2.6180000000000647e-05, 2.6235999999998927e-05, 2.613900000000141e-05, 2.619499999999969e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.6277999999997637e-05, 2.6194000000000217e-05, 2.6263999999998067e-05, 2.6221999999999357e-05, 2.6194000000000217e-05, 2.6249999999998497e-05, 2.616700000000055e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.62369999999984e-05, 2.622299999999883e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.6264000000005006e-05, 2.6249999999998497e-05, 2.620899999999926e-05, 2.6306000000003715e-05, 2.6306000000003715e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.618100000000012e-05, 2.62369999999984e-05, 2.6235999999998927e-05, 2.6263999999998067e-05]</msg>
<status status="PASS" starttime="20201115 22:01:35.134" endtime="20201115 22:01:35.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.129" endtime="20201115 22:01:35.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.138" endtime="20201115 22:01:35.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.142" endtime="20201115 22:01:35.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.140" endtime="20201115 22:01:35.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.137" endtime="20201115 22:01:35.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.724" endtime="20201115 22:01:35.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.983" endtime="20201115 22:01:35.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.982" endtime="20201115 22:01:35.163"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.165" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.175" endtime="20201115 22:01:35.234"></status>
</kw>
<msg timestamp="20201115 22:01:35.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.173" endtime="20201115 22:01:35.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.236" endtime="20201115 22:01:35.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.238" endtime="20201115 22:01:35.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.171" endtime="20201115 22:01:35.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.168" endtime="20201115 22:01:35.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.248" endtime="20201115 22:01:35.534"></status>
</kw>
<msg timestamp="20201115 22:01:35.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028925583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028951958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.246" endtime="20201115 22:01:35.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028925583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028951958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.538" endtime="20201115 22:01:35.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.547" endtime="20201115 22:01:35.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.244" endtime="20201115 22:01:35.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.242" endtime="20201115 22:01:35.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.554" level="INFO">${RESULT} = [{'time': 0.028951958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6374999999998622e-05, 'source_diff': 2.6374999999998622e-05}, {'time': 0.029794153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:35.550" endtime="20201115 22:01:35.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.568" level="INFO">${OVERHEAD} = {'diff': [2.6374999999998622e-05, 2.6471999999999607e-05, 2.6444000000000467e-05, 2.6471999999999607e-05, 2.643100000000037e-05, 2.6444000000000467e-05, 2.6471999999999607e-05, 2.6471999999999607e-05,...</msg>
<status status="PASS" starttime="20201115 22:01:35.555" endtime="20201115 22:01:35.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.573" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.572" endtime="20201115 22:01:35.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.575" level="INFO">VALUE: [2.6374999999998622e-05, 2.6471999999999607e-05, 2.6444000000000467e-05, 2.6471999999999607e-05, 2.643100000000037e-05, 2.6444000000000467e-05, 2.6471999999999607e-05, 2.6471999999999607e-05, 2.645899999999951e-05, 2.6430000000000897e-05, 2.638900000000166e-05, 2.643100000000037e-05, 2.6485999999999177e-05, 2.6430000000000897e-05, 2.6485999999999177e-05, 2.640300000000123e-05, 2.643100000000037e-05, 2.638900000000166e-05, 2.64170000000008e-05, 2.6444000000000467e-05, 2.638900000000166e-05, 2.6430000000000897e-05, 2.6444000000000467e-05, 2.6471999999999607e-05, 2.640300000000123e-05, 2.644499999999994e-05, 2.640300000000123e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.642999999999396e-05, 2.643100000000037e-05, 2.6388000000002187e-05, 2.6444000000000467e-05, 2.6430000000000897e-05, 2.643100000000037e-05, 2.6402999999994292e-05, 2.642999999999396e-05, 2.6374999999995152e-05, 2.6458000000000037e-05, 2.6416000000001327e-05, 2.643100000000731e-05, 2.64170000000008e-05, 2.640300000000817e-05, 2.6471999999999607e-05, 2.638900000000166e-05, 2.637500000000903e-05, 2.6458000000006976e-05, 2.6444000000000467e-05, 2.643100000000731e-05, 2.6374999999995152e-05]</msg>
<status status="PASS" starttime="20201115 22:01:35.574" endtime="20201115 22:01:35.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.569" endtime="20201115 22:01:35.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.578" endtime="20201115 22:01:35.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.582" endtime="20201115 22:01:35.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.580" endtime="20201115 22:01:35.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.577" endtime="20201115 22:01:35.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.166" endtime="20201115 22:01:35.603"></status>
</kw>
<msg timestamp="20201115 22:01:35.603" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.612" endtime="20201115 22:01:35.670"></status>
</kw>
<msg timestamp="20201115 22:01:35.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.611" endtime="20201115 22:01:35.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.672" endtime="20201115 22:01:35.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.675" endtime="20201115 22:01:35.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.608" endtime="20201115 22:01:35.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.606" endtime="20201115 22:01:35.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.685" endtime="20201115 22:01:35.970"></status>
</kw>
<msg timestamp="20201115 22:01:35.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025957403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025983778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.684" endtime="20201115 22:01:35.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025957403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025983778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.975" endtime="20201115 22:01:35.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.983" endtime="20201115 22:01:35.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.681" endtime="20201115 22:01:35.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.679" endtime="20201115 22:01:35.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.990" level="INFO">${RESULT} = [{'time': 0.025983778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6374999999998622e-05, 'source_diff': 2.6374999999998622e-05}, {'time': 0.026830208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:35.986" endtime="20201115 22:01:35.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.004" level="INFO">${OVERHEAD} = {'diff': [2.6374999999998622e-05, 2.6444000000000467e-05, 2.640299999999776e-05, 2.6401999999998288e-05, 2.6458000000000037e-05, 2.6471999999999607e-05, 2.637500000000209e-05, 2.6458000000000037e-05, ...</msg>
<status status="PASS" starttime="20201115 22:01:35.991" endtime="20201115 22:01:36.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.009" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.008" endtime="20201115 22:01:36.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.011" level="INFO">VALUE: [2.6374999999998622e-05, 2.6444000000000467e-05, 2.640299999999776e-05, 2.6401999999998288e-05, 2.6458000000000037e-05, 2.6471999999999607e-05, 2.637500000000209e-05, 2.6458000000000037e-05, 2.645899999999951e-05, 2.638900000000166e-05, 2.6458000000000037e-05, 2.644499999999994e-05, 2.6416000000001327e-05, 2.6430000000000897e-05, 2.6430000000000897e-05, 2.644499999999994e-05, 2.644499999999994e-05, 2.647299999999908e-05, 2.645899999999951e-05, 2.6458000000000037e-05, 2.6444000000000467e-05, 2.643100000000037e-05, 2.641599999999439e-05, 2.643100000000037e-05, 2.6458000000000037e-05, 2.64170000000008e-05, 2.643100000000037e-05, 2.638900000000166e-05, 2.645899999999951e-05, 2.6444000000000467e-05, 2.645899999999951e-05, 2.6444000000000467e-05, 2.6346999999996012e-05, 2.6471999999999607e-05, 2.6374999999995152e-05, 2.645899999999951e-05, 2.6458000000000037e-05, 2.6471999999999607e-05, 2.644499999999994e-05, 2.6444000000000467e-05, 2.645899999999951e-05, 2.645899999999951e-05, 2.645899999999951e-05, 2.6458000000000037e-05, 2.6444000000000467e-05, 2.642999999999396e-05, 2.638900000000166e-05, 2.6388999999987783e-05, 2.6457999999993098e-05, 2.645900000000645e-05]</msg>
<status status="PASS" starttime="20201115 22:01:36.010" endtime="20201115 22:01:36.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.005" endtime="20201115 22:01:36.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.015" endtime="20201115 22:01:36.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.018" endtime="20201115 22:01:36.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.017" endtime="20201115 22:01:36.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.013" endtime="20201115 22:01:36.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.604" endtime="20201115 22:01:36.039"></status>
</kw>
<msg timestamp="20201115 22:01:36.040" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.049" endtime="20201115 22:01:36.108"></status>
</kw>
<msg timestamp="20201115 22:01:36.109" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.048" endtime="20201115 22:01:36.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.111" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.110" endtime="20201115 22:01:36.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.113" endtime="20201115 22:01:36.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.045" endtime="20201115 22:01:36.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.042" endtime="20201115 22:01:36.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.125" endtime="20201115 22:01:36.434"></status>
</kw>
<msg timestamp="20201115 22:01:36.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026423444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026449875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.123" endtime="20201115 22:01:36.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026423444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026449875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.438" endtime="20201115 22:01:36.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.446" endtime="20201115 22:01:36.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.120" endtime="20201115 22:01:36.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.117" endtime="20201115 22:01:36.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.453" level="INFO">${RESULT} = [{'time': 0.026449875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.643100000000037e-05, 'source_diff': 2.643100000000037e-05}, {'time': 0.027296681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:36.450" endtime="20201115 22:01:36.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.467" level="INFO">${OVERHEAD} = {'diff': [2.643100000000037e-05, 2.645899999999951e-05, 2.6458000000000037e-05, 2.644499999999994e-05, 2.6430000000000897e-05, 2.6444000000000467e-05, 2.640300000000123e-05, 2.6388999999994722e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:36.454" endtime="20201115 22:01:36.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.472" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.471" endtime="20201115 22:01:36.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.475" level="INFO">VALUE: [2.643100000000037e-05, 2.645899999999951e-05, 2.6458000000000037e-05, 2.644499999999994e-05, 2.6430000000000897e-05, 2.6444000000000467e-05, 2.640300000000123e-05, 2.6388999999994722e-05, 2.6443999999993528e-05, 2.640300000000123e-05, 2.6471999999999607e-05, 2.6458000000000037e-05, 2.6444000000000467e-05, 2.6458000000000037e-05, 2.6485999999999177e-05, 2.6444000000000467e-05, 2.640300000000123e-05, 2.6360999999995582e-05, 2.6458000000000037e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.644499999999994e-05, 2.6388999999994722e-05, 2.6430000000000897e-05, 2.638900000000166e-05, 2.6458000000000037e-05, 2.64170000000008e-05, 2.6430000000000897e-05, 2.6458000000000037e-05, 2.643100000000037e-05, 2.637500000000209e-05, 2.642999999999396e-05, 2.644499999999994e-05, 2.644499999999994e-05, 2.645900000000645e-05, 2.64170000000008e-05, 2.644499999999994e-05, 2.644499999999994e-05, 2.6388999999994722e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.6458000000000037e-05, 2.643100000000731e-05, 2.644499999999994e-05, 2.6402999999994292e-05, 2.6471999999999607e-05, 2.6402999999994292e-05, 2.6444000000000467e-05, 2.647299999999908e-05]</msg>
<status status="PASS" starttime="20201115 22:01:36.473" endtime="20201115 22:01:36.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.468" endtime="20201115 22:01:36.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.478" endtime="20201115 22:01:36.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.482" endtime="20201115 22:01:36.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.480" endtime="20201115 22:01:36.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.476" endtime="20201115 22:01:36.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.040" endtime="20201115 22:01:36.503"></status>
</kw>
<msg timestamp="20201115 22:01:36.503" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.512" endtime="20201115 22:01:36.574"></status>
</kw>
<msg timestamp="20201115 22:01:36.575" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.511" endtime="20201115 22:01:36.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.576" endtime="20201115 22:01:36.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.578" endtime="20201115 22:01:36.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.508" endtime="20201115 22:01:36.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.506" endtime="20201115 22:01:36.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.589" endtime="20201115 22:01:36.875"></status>
</kw>
<msg timestamp="20201115 22:01:36.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025270014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025296403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.587" endtime="20201115 22:01:36.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025270014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025296403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.880" endtime="20201115 22:01:36.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.888" endtime="20201115 22:01:36.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.584" endtime="20201115 22:01:36.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.582" endtime="20201115 22:01:36.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.895" level="INFO">${RESULT} = [{'time': 0.025296403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.638899999999819e-05, 'source_diff': 2.638899999999819e-05}, {'time': 0.026138444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:36.891" endtime="20201115 22:01:36.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.910" level="INFO">${OVERHEAD} = {'diff': [2.638899999999819e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.643100000000037e-05, 2.638900000000166e-05, 2.64...</msg>
<status status="PASS" starttime="20201115 22:01:36.896" endtime="20201115 22:01:36.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.915" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.914" endtime="20201115 22:01:36.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.917" level="INFO">VALUE: [2.638899999999819e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.643100000000037e-05, 2.638900000000166e-05, 2.643100000000037e-05, 2.644499999999994e-05, 2.637500000000209e-05, 2.6430000000000897e-05, 2.6471999999999607e-05, 2.6402000000001757e-05, 2.645900000000645e-05, 2.644499999999994e-05, 2.6444000000000467e-05, 2.636100000000252e-05, 2.637500000000209e-05, 2.638900000000166e-05, 2.6514000000005256e-05, 2.644499999999994e-05, 2.6471999999999607e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.644499999999994e-05, 2.6499999999998747e-05, 2.645899999999951e-05, 2.640300000000123e-05, 2.645899999999951e-05, 2.6444000000000467e-05, 2.6458000000000037e-05, 2.645899999999951e-05, 2.6444000000000467e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.64170000000008e-05, 2.6471999999999607e-05, 2.645899999999951e-05, 2.643100000000037e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.645899999999951e-05, 2.642999999999396e-05, 2.6430999999993432e-05, 2.647299999999908e-05, 2.642999999999396e-05, 2.644499999999994e-05, 2.6514000000005256e-05]</msg>
<status status="PASS" starttime="20201115 22:01:36.916" endtime="20201115 22:01:36.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.911" endtime="20201115 22:01:36.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.921" endtime="20201115 22:01:36.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.925" endtime="20201115 22:01:36.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.923" endtime="20201115 22:01:36.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.919" endtime="20201115 22:01:36.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.504" endtime="20201115 22:01:36.946"></status>
</kw>
<msg timestamp="20201115 22:01:36.946" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.955" endtime="20201115 22:01:37.013"></status>
</kw>
<msg timestamp="20201115 22:01:37.013" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.953" endtime="20201115 22:01:37.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.016" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.014" endtime="20201115 22:01:37.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.017" endtime="20201115 22:01:37.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.951" endtime="20201115 22:01:37.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.949" endtime="20201115 22:01:37.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.027" endtime="20201115 22:01:37.314"></status>
</kw>
<msg timestamp="20201115 22:01:37.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024445208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024471625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.026" endtime="20201115 22:01:37.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024445208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024471625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.319" endtime="20201115 22:01:37.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.327" endtime="20201115 22:01:37.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.023" endtime="20201115 22:01:37.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.021" endtime="20201115 22:01:37.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:37.334" level="INFO">${RESULT} = [{'time': 0.024471625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.64170000000008e-05, 'source_diff': 2.64170000000008e-05}, {'time': 0.025314722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:37.331" endtime="20201115 22:01:37.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:37.348" level="INFO">${OVERHEAD} = {'diff': [2.64170000000008e-05, 2.6430000000000897e-05, 2.6444000000000467e-05, 2.6500000000002216e-05, 2.6429999999997428e-05, 2.647299999999908e-05, 2.644499999999994e-05, 2.6471999999999607e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:01:37.335" endtime="20201115 22:01:37.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.353" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:37.352" endtime="20201115 22:01:37.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.355" level="INFO">VALUE: [2.64170000000008e-05, 2.6430000000000897e-05, 2.6444000000000467e-05, 2.6500000000002216e-05, 2.6429999999997428e-05, 2.647299999999908e-05, 2.644499999999994e-05, 2.6471999999999607e-05, 2.6499999999998747e-05, 2.6458000000000037e-05, 2.644499999999994e-05, 2.6416999999993862e-05, 2.6362000000001995e-05, 2.645899999999951e-05, 2.6458000000000037e-05, 2.644499999999994e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.6416999999993862e-05, 2.638900000000166e-05, 2.644499999999994e-05, 2.643100000000037e-05, 2.6444000000000467e-05, 2.6430000000000897e-05, 2.638900000000166e-05, 2.644499999999994e-05, 2.643100000000037e-05, 2.6471999999999607e-05, 2.637500000000209e-05, 2.6471999999999607e-05, 2.6444000000000467e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.645899999999951e-05, 2.6500000000005686e-05, 2.647299999999908e-05, 2.6430999999993432e-05, 2.643100000000037e-05, 2.6471999999999607e-05, 2.640300000000123e-05, 2.643100000000037e-05, 2.6430000000000897e-05, 2.64170000000008e-05, 2.6485999999999177e-05, 2.6458000000000037e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.6444000000000467e-05, 2.6458000000006976e-05]</msg>
<status status="PASS" starttime="20201115 22:01:37.354" endtime="20201115 22:01:37.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.349" endtime="20201115 22:01:37.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.359" endtime="20201115 22:01:37.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.363" endtime="20201115 22:01:37.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.361" endtime="20201115 22:01:37.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.358" endtime="20201115 22:01:37.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.946" endtime="20201115 22:01:37.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.164" endtime="20201115 22:01:37.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.164" endtime="20201115 22:01:37.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.177" endtime="20201115 22:01:37.384"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.393" endtime="20201115 22:01:37.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.392" endtime="20201115 22:01:37.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.390" endtime="20201115 22:01:37.414"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:45.100" endtime="20201115 22:01:37.414" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:47.092" endtime="20201115 22:01:37.421"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 21:59:45.024" endtime="20201115 22:01:37.443"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
